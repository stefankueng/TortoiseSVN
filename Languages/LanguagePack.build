<?xml version="1.0"?>
<!--
============================================================ 
 $Date$
 $Author$
 $Rev$
============================================================ 

NAnt build script for the TortoiseSVN language pack installers

-->

<project name="LanguagePack" default="all" basepath=".">
	<description>
		Builds the Language pack installers
	</description>
	
	<target name="clean">
		<description>
			Removes all previously built language pack installers.
		</description>
		<delete>
			<fileset>
				<include name="..\bin\Tortoise*.dll" />
				<include name="..\bin\LanguagePack*.exe" />
			</fileset>
		</delete>
	</target>
	
	<target name="all">
		<description>
			Builds the installers.
		</description>
		<loadfile file="Languages.txt" property="languagelines" />
		<!-- the next line is split in two because we need the newline in the string -->
		<foreach item="String" in="${languagelines}" delim="
" property="langline">
			<call target="doit" unless="${string::starts-with(langline, '#') or string::get-length(langline)==0}"/>
		</foreach>
	</target>
	
	<target name="doit">
		<property name="platformfolder" value="${configuration}${bindirextension}" />

		<property name="ResTextFileName" value="..\bin\release${bindirextension}\bin\restext.exe" />
		<property name="ResTextFileName" value="..\bin\release\bin\restext.exe" if="${crosscompile == 'yes'}" />

		<regex 
			pattern="^(?'langISO'[A-z_]+);[ \t]+(?'langCC'\d+);[ \t]+(?'langhelpfile'\d+);[ \t]+(?'langUI'.+);[ \t]+(?'langweb'.+);[ \t]+(?'langnative'.+)" 
			input="${langline}"
		/>
		<echo message="Building ${langUI} dlls and installer" />
		<!-- create the dlls -->
		<exec program="${ResTextFileName}">
			<arg value="apply" />
			<arg value="..\bin\${platformfolder}\bin\TortoiseProcLang.dll" />
			<arg value="..\bin\TortoiseProc${langCC}.dll" />
			<arg value="Tortoise_${langISO}.po" />
		</exec>
		<exec program="${ResTextFileName}">
			<arg value="apply" />
			<arg value="..\bin\${platformfolder}\bin\TortoiseMergeLang.dll" />
			<arg value="..\bin\TortoiseMerge${langCC}.dll" />
			<arg value="Tortoise_${langISO}.po" />
		</exec>
		<exec program="${ResTextFileName}">
			<arg value="apply" />
			<arg value="..\bin\${platformfolder}\bin\TortoiseBlameLang.dll" />
			<arg value="..\bin\TortoiseBlame${langCC}.dll" />
			<arg value="Tortoise_${langISO}.po" />
		</exec>
		<exec program="${ResTextFileName}">
			<arg value="apply" />
			<arg value="..\bin\${platformfolder}\bin\TortoiseIDiffLang.dll" />
			<arg value="..\bin\TortoiseIDiff${langCC}.dll" />
			<arg value="Tortoise_${langISO}.po" />
		</exec>
		<!-- create the files for the installer -->
		<echo file="product.nsh">!define PRODUCT_NAME "TortoiseSVN ${langnative}"</echo>
		<echo file="product.nsh" append="true">!define CountryCode "${langISO}"</echo>
		<echo file="product.nsh" append="true">!define CountryID "${langCC}"</echo>
		<echo file="product.nsh" append="true">!define InstLang "${langUI}"</echo>
		<echo file="product.nsh" append="true" if="${langhelpfile == '1'}">!define LangHelp</echo>
		<echo file="product.nsh" append="true" if="${devrelease != '-dev'}">!define HelpFatal</echo>
		<echo file="product.nsh" append="true">!include "FindTSVN${platform}.nsh"</echo>
		<!-- create the mo files -->
		<exec program="msgfmt" if="${file::exists('..\ext\Subversion\Subversion\po\${langISO}.po')}" failonerror="false" >
			<arg value="..\ext\Subversion\Subversion\po\${langISO}.po" />
			<arg value="-o" />
			<arg value="subversion.mo" />
			<arg value="-f" />
		</exec>
		<echo file="product.nsh" append="true" if="${file::exists('subversion.mo')}">!define MoFile "subversion.mo"</echo>
		<if test="${environment::variable-exists('MajorVersion')}">
			<loadfile file="LanguagePack.in" property="versionnsifile">
				<filterchain>
					<replacetokens begintoken="$" endtoken="$">
						<token key="MajorVersion" value="${environment::get-variable('MajorVersion')}" />
						<token key="MinorVersion" value="${environment::get-variable('MinorVersion')}" />
						<token key="MicroVersion" value="${environment::get-variable('Microversion')}" />
						<token key="WCREV" value="${environment::get-variable('WCREV')}" />
						<token key="DEVRELEASE" value="${devrelease}" />
						<token key="PLATFORM" value="${platform}" />
					</replacetokens>
				</filterchain>
			</loadfile>
			<echo file="LanguagePack.nsi" message="${versionnsifile}" />
		</if>
		<copy file="LanguagePack.in" tofile="LanguagePack.nsi" failonerror="false" unless="${environment::variable-exists('MajorVersion')}"/>
		
		<exec program="MakeNSIS">
			<arg value="/V1" />
			<arg value="LanguagePack.nsi" />
		</exec>
		<delete file="..\bin\TortoiseProc${langCC}.dll" failonerror="false" />
		<delete file="..\bin\TortoiseMerge${langCC}.dll" failonerror="false" />
		<delete file="..\bin\TortoiseBlame${langCC}.dll" failonerror="false" />
		<delete file="..\bin\TortoiseIDiff${langCC}.dll" failonerror="false" />
		<delete file="subversion.mo" failonerror="false" />
	</target>
</project>















