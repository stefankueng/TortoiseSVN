# Translation of the TortoiseSVN manuals
# Copyright (C) 2004-2012 the TortoiseSVN team
# 
# This file is distributed under the same license as TortoiseSVN
# 
# Last commit by:
# $Author$
# $Date$
# $Rev$
# 
# Authors:
# Translators:
# Skender Mustafi <1mail2me@gmail.com>, 2013
msgid ""
msgstr ""
"Project-Id-Version: TortoiseSVN\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 1900-01-01 00:00+0000\n"
"PO-Revision-Date: 2014-02-22 16:20+0000\n"
"Last-Translator: Lübbe TortoiseSVN <luebbe.tortoisesvn@gmail.com>\n"
"Language-Team: Albanian (http://www.transifex.com/projects/p/tortoisesvn/language/sq/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sq\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#. (title)
#. (secondary)
msgid "TortoiseSVN"
msgstr "TortoiseSVN"

#. (subtitle)
msgid "A Subversion client for Windows"
msgstr "Klient për Nënversione për Windows"

#. (edition)
msgid "First"
msgstr "Së pari"

#. (firstname)
msgid "Stefan"
msgstr "Stefan"

#. (surname)
msgid "Küng"
msgstr "Küng"

#. (firstname)
msgid "Lübbe"
msgstr "Lübbe"

#. (surname)
msgid "Onken"
msgstr "Onken"

#. (firstname)
msgid "Simon"
msgstr "Simon"

#. (surname)
msgid "Large"
msgstr "Large"

#. (title)
msgid "Preface"
msgstr "Parathënie"

#. (primary)
msgid "version control"
msgstr "kontrolli i versionit"

#. (para)
msgid ""
"Version control is the art of managing changes to information. It has long "
"been a critical tool for programmers, who typically spend their time making "
"small changes to software and then undoing or checking some of those changes"
" the next day. Imagine a team of such developers working concurrently - and "
"perhaps even simultaneously on the very same files! - and you can see why a "
"good system is needed to <emphasis>manage the potential chaos</emphasis>."
msgstr "Kontrolli i versionit është arti i menaxhimit të ndryshimeve të informacioneve. Për një kohë të gjatë ka qenë mjet kritik për programuesit, të cilët zakonisht kalonin kohën e tyre duke bërë ndryshime të vogla në softuer dhe pastaj përsëri zhbënin ose kontrollonin këto ndryshime ditën tjetër. Paramendoni një ekip të tillë programuesish duke punuar tani - madje edhe njëkohësisht në skedat e njëjta! -  dhe mund të shihni përse ka nevojë për një sistem të mirë për të <emphasis>menaxhuar kaosin e mundshëm</emphasis>."

#. (title)
msgid "What is TortoiseSVN?"
msgstr "Çka është TortoiseSVN?"

#. (para)
msgid ""
"TortoiseSVN is a free open-source Windows client for the <firstterm>Apache™ "
"Subversion®</firstterm> version control system. That is, TortoiseSVN manages"
" files and directories over time. Files are stored in a central "
"<firstterm>repository</firstterm>. The repository is much like an ordinary "
"file server, except that it remembers every change ever made to your files "
"and directories. This allows you to recover older versions of your files and"
" examine the history of how and when your data changed, and who changed it. "
"This is why many people think of Subversion and version control systems in "
"general as a sort of <quote>time machine</quote>."
msgstr ""

#. (para)
msgid ""
"Some version control systems are also software configuration management "
"(SCM) systems. These systems are specifically tailored to manage trees of "
"source code, and have many features that are specific to software "
"development - such as natively understanding programming languages, or "
"supplying tools for building software. Subversion, however, is not one of "
"these systems; it is a general system that can be used to manage "
"<emphasis>any</emphasis> collection of files, including source code."
msgstr "Disa sisteme të kontrollimit të versioneve janë gjithashtu edhe sisteme për menaxhimin e konfigurimeve (CMS).  Këto sisteme në mënyrë specifike janë të përshtatura për të menaxhuar trungjet e burimeve të kodeve, dhe kanë shumë karakteristika të cilat janë specifike për zhvillimin e softuerëve - siç janë të kuptuarit e gjuhëve të programimit, ose furnizimi me mjete për ndërtimin e softuerëve. Sidoqoftë, Subversion nuk është një sistem i tillë; është një sistem i përgjithshëm i cili mund të shfrytëzohet për të menaxhuar <emphasis>çdo</emphasis> përmbledhje skedash, duke përfshirë edhe burimet e kodeve."

#. (title)
msgid "TortoiseSVN's Features"
msgstr "Karakteristikat e TortoiseSVN"

#. (para)
msgid ""
"What makes TortoiseSVN such a good Subversion client? Here's a short list of"
" features."
msgstr "Çka e bën TortoiseSVN klient të mirë të nën-versioneve? Ja një listë të shkurtë të karakteristikave."

#. (term)
msgid "Shell integration"
msgstr ""

#. (primary)
msgid "Windows shell"
msgstr "Windows shell"

#. (primary)
msgid "explorer"
msgstr "eksplorues"

#. (para)
msgid ""
"TortoiseSVN integrates seamlessly into the Windows shell (i.e. the "
"explorer). This means you can keep working with the tools you're already "
"familiar with. And you do not have to change into a different application "
"each time you need the functions of version control."
msgstr ""

#. (para)
msgid ""
"And you are not limited to using the Windows Explorer; TortoiseSVN's context"
" menus work in many other file managers, and also in the File/Open dialog "
"which is common to most standard Windows applications. You should, however, "
"bear in mind that TortoiseSVN is intentionally developed as an extension for"
" the Windows Explorer. Thus it is possible that in other applications the "
"integration is not as complete and e.g. the icon overlays may not be shown."
msgstr "Nuk jeni të kufizuar të shfrytëzoni Windows Explorer; Menytë kontekstuale të TortoiseSVN funksionojnë në shumë menaxhues tjerë skedash, dhe në dialog Skeda/Hape i cili është i zakonshëm në shumicën e aplikacioneve standarde të Windows-it. Ju duhet të keni ndërmend që TortoiseSVN i zhvilluar qëllimisht si një shtesë për Windows Explorer. Kështu që është e mundur që në aplikacionet tjera integrimi nuk është aq i kompletuar dhe p.sh mbulesat e ikonave mund të mos shfaqen."

#. (term)
msgid "Icon overlays"
msgstr "Mbulesat e ikonave"

#. (para)
msgid ""
"The status of every versioned file and folder is indicated by small overlay "
"icons. That way you can see right away what the status of your working copy "
"is."
msgstr ""

#. (term)
msgid "Graphical User Interface"
msgstr ""

#. (para)
msgid ""
"When you list the changes to a file or folder, you can click on a revision "
"to see the comments for that commit. You can also see a list of changed "
"files - just double click on a file to see exactly what changed."
msgstr ""

#. (para)
msgid ""
"The commit dialog lists all the items that will be included in a commit, and"
" each item has a checkbox so you can choose which items you want to include."
" Unversioned files can also be listed, in case you forgot to add that new "
"file."
msgstr ""

#. (term)
msgid "Easy access to Subversion commands"
msgstr "Qasje e lehtë tek komandat e Subversion"

#. (para)
msgid ""
"All Subversion commands are available from the explorer context menu. "
"TortoiseSVN adds its own submenu there."
msgstr ""

#. (para)
msgid ""
"Since TortoiseSVN is a Subversion client, we would also like to show you "
"some of the features of Subversion itself:"
msgstr ""

#. (term)
msgid "Directory versioning"
msgstr ""

#. (para)
msgid ""
"CVS only tracks the history of individual files, but Subversion implements a"
" <quote>virtual</quote> versioned filesystem that tracks changes to whole "
"directory trees over time. Files <emphasis>and</emphasis> directories are "
"versioned. As a result, there are real client-side <command>move</command> "
"and <command>copy</command> commands that operate on files and directories."
msgstr ""

#. (term)
msgid "Atomic commits"
msgstr "Parashtrimet atomike"

#. (para)
msgid ""
"A commit either goes into the repository completely, or not at all. This "
"allows developers to construct and commit changes as logical chunks."
msgstr ""

#. (term)
msgid "Versioned metadata"
msgstr ""

#. (para)
msgid ""
"Each file and directory has an invisible set of <quote>properties</quote> "
"attached. You can invent and store any arbitrary key/value pairs you wish. "
"Properties are versioned over time, just like file contents."
msgstr ""

#. (term)
msgid "Choice of network layers"
msgstr ""

#. (para)
msgid ""
"Subversion has an abstracted notion of repository access, making it easy for"
" people to implement new network mechanisms. Subversion's "
"<quote>advanced</quote> network server is a module for the Apache web "
"server, which speaks a variant of HTTP called WebDAV/DeltaV. This gives "
"Subversion a big advantage in stability and interoperability, and provides "
"various key features for free: authentication, authorization, wire "
"compression, and repository browsing, for example. A smaller, standalone "
"Subversion server process is also available. This server speaks a custom "
"protocol which can be easily tunneled over ssh."
msgstr ""

#. (term)
msgid "Consistent data handling"
msgstr ""

#. (para)
msgid ""
"Subversion expresses file differences using a binary differencing algorithm,"
" which works identically on both text (human-readable) and binary (human-"
"unreadable) files. Both types of files are stored equally compressed in the "
"repository, and differences are transmitted in both directions across the "
"network."
msgstr ""

#. (term)
msgid "Efficient branching and tagging"
msgstr ""

#. (para)
msgid ""
"The cost of branching and tagging need not be proportional to the project "
"size. Subversion creates branches and tags by simply copying the project, "
"using a mechanism similar to a hard-link. Thus these operations take only a "
"very small, constant amount of time, and very little space in the "
"repository."
msgstr ""

#. (title)
msgid "License"
msgstr "Licenca"

#. (para)
msgid ""
"TortoiseSVN is an Open Source project developed under the GNU General Public"
" License (GPL). It is free to download and free to use, either personally or"
" commercially, on any number of PCs."
msgstr "TortoiseSVN është me kod të hapur në licencën GNU Licencën e Përgjithshme Publike (GPL). Është falas për shkarkim dhe përdorim si për individë ashtu edhe për biznese, në çfarëdo numri të kompjuterëve personal."

#. (para)
msgid ""
"Although most people just download the installer, you also have full read "
"access to the source code of this program. You can browse it on this link "
"<ulink "
"url=\"http://code.google.com/p/tortoisesvn/source/browse/\"><citetitle>http://code.google.com/p/tortoisesvn/source/browse/</citetitle></ulink>."
" The current development line is located under <filename>/trunk/</filename>,"
" and the released versions are located under <filename>/tags/</filename>."
msgstr "Edhe pse shumë njerëz shkarkojnë vetëm instaluesin, ju gjithashtu keni qasje të plotë për lexim të kodit të programit. Ju mund të e shfletoni atë në këtë nyje <ulink url=\"http://code.google.com/p/tortoisesvn/source/browse/\"><citetitle>http://code.google.com/p/tortoisesvn/source/browse/</citetitle></ulink>. Vija momentale e zhvillimit gjendet tek <filename>/trunk/</filename>, dhe versionet e fundit gjenden tek <filename>/tags/</filename>."

#. (title)
msgid "Development"
msgstr "Zhvillim"

#. (para)
msgid ""
"Both TortoiseSVN and Subversion are developed by a community of people who "
"are working on those projects. They come from different countries all over "
"the world, working together to create great software."
msgstr ""

#. (title)
msgid "TortoiseSVN's History"
msgstr "Historia e TortoiseSVN"

#. (para)
msgid ""
"In 2002, Tim Kemp found that Subversion was a very good version control "
"system, but it lacked a good GUI client. The idea for a Subversion client as"
" a Windows shell integration was inspired by the similar client for CVS "
"named TortoiseCVS. Tim studied the source code of TortoiseCVS and used it as"
" a base for TortoiseSVN. He then started the project, registered the domain "
"<literal>tortoisesvn.org</literal> and put the source code online."
msgstr ""

#. (para)
msgid ""
"Around that time, Stefan Küng was looking for a good and free version "
"control system and found Subversion and the source for TortoiseSVN. Since "
"TortoiseSVN was still not ready for use, he joined the project and started "
"programming. He soon rewrote most of the existing code and started adding "
"commands and features, up to a point where nothing of the original code "
"remained."
msgstr ""

#. (para)
msgid ""
"As Subversion became more stable it attracted more and more users who also "
"started using TortoiseSVN as their Subversion client. The user base grew "
"quickly (and is still growing every day). That's when Lübbe Onken offered to"
" help out with some nice icons and a logo for TortoiseSVN. He now takes care"
" of the website and manages the many translations."
msgstr ""

#. (title)
msgid "Acknowledgments"
msgstr "Mirënjohjet"

#. (term)
msgid "Tim Kemp"
msgstr "Tim Kemp"

#. (para)
msgid "for starting the TortoiseSVN project"
msgstr "për të startuar TortoiseSVN projektin"

#. (term)
msgid "Stefan Küng"
msgstr "Stefan Küng"

#. (para)
msgid ""
"for the hard work to get TortoiseSVN to what it is now, and his leadership "
"of the project"
msgstr ""

#. (term)
msgid "Lübbe Onken"
msgstr "Lübbe Onken"

#. (para)
msgid ""
"for the beautiful icons, logo, bug hunting, translating and managing the "
"translations"
msgstr ""

#. (term)
msgid "Simon Large"
msgstr "Simon Large"

#. (para)
msgid "for maintaining the documentation"
msgstr "për të mirëmbajtur dokumentimin"

#. (term)
msgid "Stefan Fuhrmann"
msgstr "Stefan Fuhrmann"

#. (para)
msgid "for the log cache and revision graph"
msgstr ""

#. (term)
msgid "The Subversion Book"
msgstr "Libri i Nën-versioneve"

#. (para)
msgid ""
"for the great introduction to Subversion and its chapter 2 which we copied "
"here"
msgstr ""

#. (term)
msgid "The Tigris Style project"
msgstr ""

#. (para)
msgid "for some of the styles which are reused in this documentation"
msgstr "për disa nga stilet që janë ri-shfrytëzuar në këtë dokumentim"

#. (term)
msgid "Our Contributors"
msgstr "Kontribuesit Tonë"

#. (para)
msgid ""
"for the patches, bug reports and new ideas, and for helping others by "
"answering questions on our mailing list"
msgstr ""

#. (term)
msgid "Our Donators"
msgstr "Dhuruesit Tonë"

#. (para)
msgid "for many hours of joy with the music they sent us"
msgstr ""

#. (title)
msgid "Reading Guide"
msgstr ""

#. (para)
msgid ""
"This book is written for computer-literate folk who want to use Subversion "
"to manage their data, but prefer to use a GUI client rather than a command "
"line client. TortoiseSVN is a windows shell extension and it is assumed that"
" the user is familiar with the windows explorer and how to use it."
msgstr ""

#. (para)
msgid ""
"This <xref linkend=\"tsvn-preface\"/> explains what TortoiseSVN is, a little"
" about the TortoiseSVN project and the community of people who work on it, "
"and the licensing conditions for using it and distributing it."
msgstr ""

#. (para)
msgid ""
"The <xref linkend=\"tsvn-quick-start\"/> explains how to install TortoiseSVN"
" on your PC, and how to start using it straight away."
msgstr ""

#. (para)
msgid ""
"In <xref linkend=\"tsvn-basics\"/> we give a short introduction to the "
"<emphasis>Subversion</emphasis> revision control system which underlies "
"TortoiseSVN. This is borrowed from the documentation for the Subversion "
"project and explains the different approaches to version control, and how "
"Subversion works."
msgstr ""

#. (para)
msgid ""
"The chapter on <xref linkend=\"tsvn-repository\"/> explains how to set up a "
"local repository, which is useful for testing Subversion and TortoiseSVN "
"using a single PC. It also explains a bit about repository administration "
"which is also relevant to repositories located on a server. There is also a "
"section here on how to setup a server if you need one."
msgstr ""

#. (para)
msgid ""
"The <xref linkend=\"tsvn-dug\"/> is the most important section as it "
"explains all the main features of TortoiseSVN and how to use them. It takes "
"the form of a tutorial, starting with checking out a working copy, modifying"
" it, committing your changes, etc. It then progresses to more advanced "
"topics."
msgstr ""

#. (para)
msgid ""
"<xref linkend=\"tsvn-subwcrev\"/> is a separate program included with "
"TortoiseSVN which can extract the information from your working copy and "
"write it into a file. This is useful for including build information in your"
" projects."
msgstr ""

#. (para)
msgid ""
"The <xref linkend=\"tsvn-howto\"/> section answers some common questions "
"about performing tasks which are not explicitly covered elsewhere."
msgstr "Seksioni <xref linkend=\"tsvn-howto\"/> u përgjigjet disa pyetjeve të rëndomta, rreth realizimit të veprimeve, të cilat nuk mbulohen në mënyrë eksplicite në ndonjë vend tjetër."

#. (para)
msgid ""
"The section on <xref linkend=\"tsvn-automation\"/> shows how the TortoiseSVN"
" GUI dialogs can be called from the command line. This is useful for "
"scripting where you still need user interaction."
msgstr ""

#. (para)
msgid ""
"The <xref linkend=\"tsvn-cli\"/> give a correlation between TortoiseSVN "
"commands and their equivalents in the Subversion command line client "
"<literal>svn.exe</literal>."
msgstr ""

#. (title)
msgid "Terminology used in this document"
msgstr "Terminologjia e shfrytëzuar në këtë dokument"

#. (para)
msgid ""
"To make reading the docs easier, the names of all the screens and Menus from"
" TortoiseSVN are marked up in a different font. The <guilabel>Log "
"Dialog</guilabel> for instance."
msgstr ""

#. (para)
msgid ""
"A menu choice is indicated with an arrow. "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Show "
"Log</guimenuitem></menuchoice> means: select <emphasis>Show Log</emphasis> "
"from the <emphasis>TortoiseSVN</emphasis> context menu."
msgstr ""

#. (para)
msgid ""
"Where a local context menu appears within one of the TortoiseSVN dialogs, it"
" is shown like this: <menuchoice><guimenu>Context "
"Menu</guimenu><guimenuitem>Save As ...</guimenuitem></menuchoice>"
msgstr ""

#. (para)
msgid ""
"User Interface Buttons are indicated like this: Press "
"<guibutton>OK</guibutton> to continue."
msgstr ""

#. (para)
msgid ""
"User Actions are indicated using a bold font. <keycap>Alt+A</keycap>: press "
"the <keycap>Alt</keycap>-Key on your keyboard and while holding it down "
"press the <keycap>A</keycap>-Key as well. <action>Right drag</action>: press"
" the right mouse button and while holding it down <emphasis>drag</emphasis> "
"the items to the new location."
msgstr ""

#. (para)
msgid ""
"System output and keyboard input is indicated with a "
"<literal>different</literal> font as well."
msgstr ""

#. (para)
msgid "Important notes are marked with an icon."
msgstr "Shënimet e rëndësishme kanë ikona."

#. (para)
msgid "Tips that make your life easier."
msgstr "Truqe që u bëjnë jetën më të lehtë."

#. (para)
msgid "Places where you have to be careful what you are doing."
msgstr ""

#. (para)
msgid ""
"Where extreme care has to be taken. Data corruption or other nasty things "
"may occur if these warnings are ignored."
msgstr ""

#. (title)
msgid "Getting Started"
msgstr "Hapi i Parë"

#. (para)
msgid ""
"This section is aimed at people who would like to find out what TortoiseSVN "
"is all about and give it a test drive. It explains how to install "
"TortoiseSVN and set up a local repository, and it walks you through the most"
" commonly used operations."
msgstr ""

#. (title)
msgid "Installing TortoiseSVN"
msgstr "Instalimi i TortoiseSVN"

#. (title)
msgid "System requirements"
msgstr "Kërkesat nga Sistemi"

#. (para)
msgid ""
"TortoiseSVN runs on Windows XP with service pack 3 or higher and is "
"available in both 32-bit and 64-bit flavours. The installer for 64-bit "
"Windows also includes the 32-bit extension parts. Which means you don't need"
" to install the 32-bit version separately to get the TortoiseSVN context "
"menu and overlays in 32-bit applications."
msgstr "TortoiseSVN vepron në Windows XP me service pack 3 ose më të lartë dhe gjendet si në 32-bit ashtu edhe në 64-bit. Instaluesi për 64-bit Windows gjithashtu përfshinë dhe shtesat për 32-bit. Kjo nënkupton faktin që ju nuk keni nevojë të instaloni versionin 32-bit për të pasur qasje në menynë kontekstuale të TortoiseSVN."

#. (para)
msgid ""
"If you're using Windows XP, you <emphasis>must</emphasis> have at least the "
"service pack 3 installed. It won't work if you haven't installed that SP "
"yet!"
msgstr "Nëse shfrytëzoni Windows XP, duhet të keni të instaluar <emphasis>patjerët</emphasis> të paktën Service Pack 3. Nuk do të funksionojë nëse akoma nuk e keni të instaluar këtë  SP!"

#. (para)
msgid ""
"Support for Windows 98, Windows ME and Windows NT4 was dropped in version "
"1.2.0, and Windows 2000 and XP up to SP2 support was dropped in 1.7.0. You "
"can still download and install older versions if you need them."
msgstr ""

#. (title)
msgid "Installation"
msgstr "Instalimi"

#. (primary)
msgid "install"
msgstr "instalo"

#. (para)
msgid ""
"TortoiseSVN comes with an easy to use installer. Double click on the "
"installer file and follow the instructions. The installer will take care of "
"the rest. Don't forget to reboot after installation."
msgstr ""

#. (para)
msgid "You need Administrator privileges to install TortoiseSVN."
msgstr "U duhen privilegjet e administruesit për të instaluar  TortoiseSVN."

#. (para)
msgid ""
"Language packs are available which translate the TortoiseSVN user interface "
"into many different languages. Please check <xref linkend=\"tsvn-lang\"/> "
"for more information on how to install these."
msgstr ""

#. (para)
msgid ""
"If you encounter any problems during or after installing TortoiseSVN please "
"refer to our online FAQ at <ulink "
"url=\"http://tortoisesvn.net/faq.html\"><citetitle>http://tortoisesvn.net/faq.html</citetitle></ulink>."
msgstr ""

#. (title)
msgid "Basic Concepts"
msgstr "Konceptet Bazë"

#. (para)
msgid ""
"Before we get stuck into working with some real files, it is important to "
"get an overview of how Subversion works and the terms that are used."
msgstr ""

#. (term)
#. (title)
#. (title)
#. (title)
msgid "The Repository"
msgstr ""

#. (para)
msgid ""
"Subversion uses a central database which contains all your version-"
"controlled files with their complete history. This database is referred to "
"as the <emphasis>repository</emphasis>. The repository normally lives on a "
"file server running the Subversion server program, which supplies content to"
" Subversion clients (like TortoiseSVN) on request. If you only back up one "
"thing, back up your repository as it is the definitive master copy of all "
"your data."
msgstr ""

#. (term)
#. (glossterm)
msgid "Working Copy"
msgstr "Kopje Funksionale"

#. (para)
msgid ""
"This is where you do the real work. Every developer has his own working "
"copy, sometimes known as a sandbox, on his local PC. You can pull down the "
"latest version from the repository, work on it locally without affecting "
"anyone else, then when you are happy with the changes you made commit them "
"back to the repository."
msgstr ""

#. (para)
msgid ""
"A Subversion working copy does not contain the history of the project, but "
"it does keep a copy of the files as they exist in the repository before you "
"started making changes. This means that it is easy to check exactly what "
"changes you have made."
msgstr ""

#. (title)
#. (title)
msgid "The TortoiseSVN menu for unversioned folders"
msgstr ""

#. (para)
msgid ""
"You also need to know where to find TortoiseSVN because there is not much to"
" see from the Start Menu. This is because TortoiseSVN is a Shell extension, "
"so first of all, start Windows Explorer. Right click on a folder in Explorer"
" and you should see some new entries in the context menu like this: "
"<placeholder-1/>"
msgstr ""

#. (title)
msgid "Go for a Test Drive"
msgstr ""

#. (para)
msgid ""
"This section shows you how to try out some of the most commonly used "
"features on a small test repository. Naturally it doesn't explain everything"
" - this is just the Quick Start Guide after all. Once you are up and running"
" you should take the time to read the rest of this user guide, which takes "
"you through things in much more detail. It also explains more about setting "
"up a proper Subversion server."
msgstr ""

#. (title)
msgid "Creating a Repository"
msgstr ""

#. (para)
msgid ""
"For a real project you will have a repository set up somewhere safe and a "
"Subversion server to control it. For the purposes of this tutorial we are "
"going to use Subversion's local repository feature which allows direct "
"access to a repository created on your hard drive without needing a server "
"at all."
msgstr ""

#. (para)
msgid ""
"First create a new empty directory on your PC. It can go anywhere, but in "
"this tutorial we are going to call it <filename>C:\\svn_repos</filename>. "
"Now right click on the new folder and from the context menu choose "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Create Repository "
"here...</guimenuitem></menuchoice>. The repository is then created inside "
"the folder, ready for you to use. We will also create the default internal "
"folder structure by clicking the <guibutton>Create folder "
"structure</guibutton> button."
msgstr ""

#. (para)
msgid ""
"The local repository feature is very useful for test and evaluation but "
"unless you are working as a sole developer on one PC you should always use a"
" proper Subversion server. It is tempting in a small company to avoid the "
"work of setting up a server and just access your repository on a network "
"share. Don't ever do that. You will lose data. Read <xref linkend=\"tsvn-"
"repository-local-share\"/> to find out why this is a bad idea, and how to "
"set up a server."
msgstr ""

#. (title)
msgid "Importing a Project"
msgstr "Duke importuar projektin"

#. (title)
#. (title)
msgid "The Import dialog"
msgstr "Dialogu importues"

#. (para)
msgid ""
"Now we have a repository, but it is completely empty at the moment. Let's "
"assume I have a set of files in <filename>C:\\Projects\\Widget1</filename> "
"that I would like to add. Navigate to the <filename>Widget1</filename> "
"folder in Explorer and right click on it. Now select "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Import...</guimenuitem></menuchoice>"
" which brings up a dialog <placeholder-1/> A Subversion repository is "
"referred to by URL, which allows us to specify a repository anywhere on the "
"Internet. In this case we need to point to our own local repository which "
"has a URL of <filename>file:///c:/svn_repos/trunk</filename>, and to which "
"we add our own project name <filename>Widget1</filename>. Note that there "
"are 3 slashes after <filename>file:</filename> and that forward slashes are "
"used throughout."
msgstr ""

#. (para)
msgid ""
"The other important feature of this dialog is the <guilabel>Import "
"Message</guilabel> box which allows you to enter a message describing what "
"you are doing. When you come to look through your project history, these "
"commit messages are a valuable guide to what changes have been made and why."
" In this case we can say something simple like <quote>Import the Widget1 "
"project</quote>. Click on <guibutton>OK</guibutton> and the folder is added "
"to your repository."
msgstr ""

#. (title)
msgid "Checking out a Working Copy"
msgstr "Duke kontrolluar kopjen funksionale"

#. (para)
msgid ""
"Now that we have a project in our repository, we need to create a working "
"copy to use for day-to-day work. Note that the act of importing a folder "
"does not automatically turn that folder into a working copy. The Subversion "
"term for creating a fresh working copy is <literal>Checkout</literal>. We "
"are going to checkout the Widget1 folder of our repository into a "
"development folder on the PC called "
"<filename>C:\\Projects\\Widget1-Dev</filename>. Create that folder, then "
"right click on it and select "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Checkout...</guimenuitem></menuchoice>."
" Enter the URL to checkout, in this case "
"<filename>file:///c:/svn_repos/trunk/Widget1</filename> and click on "
"<guibutton>OK</guibutton>. Our development folder is then populated with "
"files from the repository."
msgstr ""

#. (para)
#. (para)
msgid ""
"In the default setting, the checkout menu item is not located in the "
"TortoiseSVN submenu but is shown at the top explorer menu. TortoiseSVN "
"commands that are not in the submenu have <literal>SVN</literal> prepended: "
"<menuchoice><guimenuitem>SVN Checkout...</guimenuitem></menuchoice>"
msgstr ""

#. (para)
msgid ""
"You will notice that the appearance of this folder is different from our "
"original folder. Every file has a green check mark in the bottom left "
"corner. These are TortoiseSVN's status icons which are only present in a "
"working copy. The green state indicates that the file is unchanged from the "
"version in the repository."
msgstr ""

#. (title)
msgid "Making Changes"
msgstr "Duke bërë ndryshime"

#. (para)
msgid ""
"Time to get to work. In the <filename>Widget1-Dev</filename> we start "
"editing files - let's say we make changes to <filename>Widget1.c</filename> "
"and <filename>ReadMe.txt</filename>. Notice that the icon overlays on these "
"files have now changed to red, indicating that changes have been made "
"locally."
msgstr ""

#. (title)
msgid "File Difference Viewer"
msgstr ""

#. (para)
msgid ""
"But what are the changes? Right click on one of the changed files and select"
" "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Diff</guimenuitem></menuchoice>."
" TortoiseSVN's file compare tool starts, showing you exactly which lines "
"have changed. <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"OK, so we are happy with the changes, let's update the repository. This "
"action is referred to as a <literal>Commit</literal> of the changes. Right "
"click on the <filename>Widget1-Dev</filename> folder and select "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Commit</guimenuitem></menuchoice>."
" The commit dialog lists the changed files, each with a checkbox. You might "
"want to choose only a subset of those files, but in this case we are going "
"to commit the changes to both files. Enter up a message to describe what the"
" change is all about and click on <guibutton>OK</guibutton>. The progress "
"dialog shows the files being uploaded to the repository and you're done."
msgstr ""

#. (title)
msgid "Adding More Files"
msgstr "Duke shtuar më shumë skeda"

#. (para)
msgid ""
"As the project develops you will need to add new files - let's say you add "
"some new features in <filename>Extras.c</filename> and add a reference in "
"the existing <filename>Makefile</filename>. Right click on the folder and "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Add</guimenuitem></menuchoice>."
" The Add dialog now shows you all unversioned files and you can select which"
" ones you want to add. Another way of adding files would be to right click "
"on the file itself and select "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Add</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"Now when you go to commit the folder, the new file shows up as "
"<emphasis>Added</emphasis> and the existing file as "
"<emphasis>Modified</emphasis>. Note that you can double click on the "
"modified file to check exactly what changes were made."
msgstr ""

#. (title)
msgid "Viewing the Project History"
msgstr ""

#. (title)
msgid "The Log Dialog"
msgstr ""

#. (para)
msgid ""
"One of the most useful features of TortoiseSVN is the Log dialog. This shows"
" you a list of all the commits you made to a file or folder, and shows those"
" detailed commit messages that you entered ;-) <placeholder-1/> OK, so I "
"cheated a little here and used a screenshot from the TortoiseSVN repository."
msgstr ""

#. (para)
msgid ""
"The top pane shows a list of revisions committed along with the start of the"
" commit message. If you select one of these revisions, the middle pane will "
"show the full log message for that revision and the bottom pane will show a "
"list of changed files and folders."
msgstr ""

#. (para)
msgid ""
"Each of these panes has a context menu which provides you with lots more "
"ways of using the information. In the bottom pane you can <action>double "
"click</action> on a file to see exactly what changes were made in that "
"revision. Read <xref linkend=\"tsvn-dug-showlog\"/> to get the full story."
msgstr ""

#. (title)
msgid "Undoing Changes"
msgstr "Duke rikthyer ndryshimet"

#. (para)
msgid ""
"One feature of all revision control systems is that they let you undo "
"changes that you made previously. As you would expect, TortoiseSVN makes "
"this easy to access."
msgstr ""

#. (para)
msgid ""
"If you want to get rid of changes that you have not yet committed and reset "
"your file to the way it was before you started editing, "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Revert</guimenuitem></menuchoice>"
" is your friend. This discards your changes (to the Recycle bin, just in "
"case) and reverts to the committed version you started with. If you want to "
"get rid of just some of the changes, you can use TortoiseMerge to view the "
"differences and selectively revert changed lines."
msgstr ""

#. (para)
msgid ""
"If you want to undo the effects of a particular revision, start with the Log"
" dialog and find the offending revision. Select <menuchoice><guimenu>Context"
" Menu</guimenu><guimenuitem>Revert changes from this "
"revision</guimenuitem></menuchoice> and those changes will be undone."
msgstr ""

#. (title)
msgid "Moving On ..."
msgstr "Duke lëvizur në..."

#. (para)
msgid ""
"This guide has given you a very quick tour of some of TortoiseSVN's most "
"important and useful features, but of course there is far more that we "
"haven't covered. We strongly recommend that you take the time to read the "
"rest of this manual, especially <xref linkend=\"tsvn-dug\"/> which gives you"
" a lot more detail on day-to-day operations."
msgstr ""

#. (para)
msgid ""
"We have taken a lot of trouble to make sure that it is both informative and "
"easy to read, but we recognise that there is a lot of it! Take your time and"
" don't be afraid to try things out on a test repository as you go along. The"
" best way to learn is by using it."
msgstr ""

#. (title)
msgid "Basic Version-Control Concepts"
msgstr ""

#. (primary)
msgid "Subversion book"
msgstr ""

#. (para)
msgid ""
"This chapter is a slightly modified version of the same chapter in the "
"Subversion book. An online version of the Subversion book is available here:"
" <ulink url=\"http://svnbook.red-bean.com/\"><citetitle>http://svnbook.red-"
"bean.com/</citetitle></ulink>."
msgstr ""

#. (para)
msgid ""
"This chapter is a short, casual introduction to Subversion. If you're new to"
" version control, this chapter is definitely for you. We begin with a "
"discussion of general version control concepts, work our way into the "
"specific ideas behind Subversion, and show some simple examples of "
"Subversion in use."
msgstr ""

#. (para)
msgid ""
"Even though the examples in this chapter show people sharing collections of "
"program source code, keep in mind that Subversion can manage any sort of "
"file collection - it's not limited to helping computer programmers."
msgstr ""

#. (primary)
#. (primary)
msgid "repository"
msgstr ""

#. (para)
msgid ""
"Subversion is a centralized system for sharing information. At its core is a"
" <firstterm>repository</firstterm>, which is a central store of data. The "
"repository stores information in the form of a <firstterm>filesystem "
"tree</firstterm> - a typical hierarchy of files and directories. Any number "
"of <firstterm>clients</firstterm> connect to the repository, and then read "
"or write to these files. By writing data, a client makes the information "
"available to others; by reading data, the client receives information from "
"others."
msgstr ""

#. (title)
msgid "A Typical Client/Server System"
msgstr ""

#. (para)
msgid ""
"So why is this interesting? So far, this sounds like the definition of a "
"typical file server. And indeed, the repository <emphasis>is</emphasis> a "
"kind of file server, but it's not your usual breed. What makes the "
"Subversion repository special is that <emphasis>it remembers every "
"change</emphasis> ever written to it: every change to every file, and even "
"changes to the directory tree itself, such as the addition, deletion, and "
"rearrangement of files and directories."
msgstr ""

#. (para)
msgid ""
"When a client reads data from the repository, it normally sees only the "
"latest version of the filesystem tree. But the client also has the ability "
"to view <emphasis>previous</emphasis> states of the filesystem. For example,"
" a client can ask historical questions like, <quote>what did this directory "
"contain last Wednesday?</quote>, or <quote>who was the last person to change"
" this file, and what changes did they make?</quote> These are the sorts of "
"questions that are at the heart of any <firstterm>version control "
"system</firstterm>: systems that are designed to record and track changes to"
" data over time."
msgstr ""

#. (title)
msgid "Versioning Models"
msgstr ""

#. (para)
msgid ""
"All version control systems have to solve the same fundamental problem: how "
"will the system allow users to share information, but prevent them from "
"accidentally stepping on each other's feet? It's all too easy for users to "
"accidentally overwrite each other's changes in the repository."
msgstr ""

#. (title)
msgid "The Problem of File-Sharing"
msgstr ""

#. (para)
msgid ""
"Consider this scenario: suppose we have two co-workers, Harry and Sally. "
"They each decide to edit the same repository file at the same time. If Harry"
" saves his changes to the repository first, then it's possible that (a few "
"moments later) Sally could accidentally overwrite them with her own new "
"version of the file. While Harry's version of the file won't be lost forever"
" (because the system remembers every change), any changes Harry made "
"<emphasis>won't</emphasis> be present in Sally's newer version of the file, "
"because she never saw Harry's changes to begin with. Harry's work is still "
"effectively lost - or at least missing from the latest version of the file -"
" and probably by accident. This is definitely a situation we want to avoid!"
msgstr ""

#. (title)
msgid "The Problem to Avoid"
msgstr "Problemi për tu shmangur"

#. (title)
#. (title)
msgid "The Lock-Modify-Unlock Solution"
msgstr ""

#. (para)
msgid ""
"Many version control systems use a <firstterm>lock-modify-unlock</firstterm>"
" model to address this problem, which is a very simple solution. In such a "
"system, the repository allows only one person to change a file at a time. "
"First Harry must <emphasis>lock</emphasis> the file before he can begin "
"making changes to it. Locking a file is a lot like borrowing a book from the"
" library; if Harry has locked a file, then Sally cannot make any changes to "
"it. If she tries to lock the file, the repository will deny the request. All"
" she can do is read the file, and wait for Harry to finish his changes and "
"release his lock. After Harry unlocks the file, his turn is over, and now "
"Sally can take her turn by locking and editing."
msgstr ""

#. (para)
msgid ""
"The problem with the lock-modify-unlock model is that it's a bit "
"restrictive, and often becomes a roadblock for users:"
msgstr ""

#. (para)
msgid ""
"<emphasis>Locking may cause administrative problems.</emphasis> Sometimes "
"Harry will lock a file and then forget about it. Meanwhile, because Sally is"
" still waiting to edit the file, her hands are tied. And then Harry goes on "
"vacation. Now Sally has to get an administrator to release Harry's lock. The"
" situation ends up causing a lot of unnecessary delay and wasted time."
msgstr ""

#. (para)
msgid ""
"<emphasis>Locking may cause unnecessary serialization.</emphasis> What if "
"Harry is editing the beginning of a text file, and Sally simply wants to "
"edit the end of the same file? These changes don't overlap at all. They "
"could easily edit the file simultaneously, and no great harm would come, "
"assuming the changes were properly merged together. There's no need for them"
" to take turns in this situation."
msgstr ""

#. (para)
msgid ""
"<emphasis>Locking may create a false sense of security.</emphasis> Pretend "
"that Harry locks and edits file A, while Sally simultaneously locks and "
"edits file B. But suppose that A and B depend on one another, and the "
"changes made to each are semantically incompatible. Suddenly A and B don't "
"work together anymore. The locking system was powerless to prevent the "
"problem - yet it somehow provided a sense of false security. It's easy for "
"Harry and Sally to imagine that by locking files, each is beginning a safe, "
"insulated task, and thus inhibits them from discussing their incompatible "
"changes early on."
msgstr ""

#. (title)
#. (title)
msgid "The Copy-Modify-Merge Solution"
msgstr ""

#. (para)
msgid ""
"Subversion, CVS, and other version control systems use a <firstterm>copy-"
"modify-merge</firstterm> model as an alternative to locking. In this model, "
"each user's client reads the repository and creates a personal "
"<firstterm>working copy</firstterm> of the file or project. Users then work "
"in parallel, modifying their private copies. Finally, the private copies are"
" merged together into a new, final version. The version control system often"
" assists with the merging, but ultimately a human being is responsible for "
"making it happen correctly."
msgstr ""

#. (para)
msgid ""
"Here's an example. Say that Harry and Sally each create working copies of "
"the same project, copied from the repository. They work concurrently, and "
"make changes to the same file <filename>A</filename> within their copies. "
"Sally saves her changes to the repository first. When Harry attempts to save"
" his changes later, the repository informs him that his file A is <firstterm"
">out-of-date</firstterm>. In other words, that file A in the repository has "
"somehow changed since he last copied it. So Harry asks his client to "
"<firstterm>merge</firstterm> any new changes from the repository into his "
"working copy of file A. Chances are that Sally's changes don't overlap with "
"his own; so once he has both sets of changes integrated, he saves his "
"working copy back to the repository."
msgstr ""

#. (title)
msgid "...Copy-Modify-Merge Continued"
msgstr ""

#. (primary)
#. (primary)
msgid "conflict"
msgstr "konflikt"

#. (para)
msgid ""
"But what if Sally's changes <emphasis>do</emphasis> overlap with Harry's "
"changes? What then? This situation is called a "
"<firstterm>conflict</firstterm>, and it's usually not much of a problem. "
"When Harry asks his client to merge the latest repository changes into his "
"working copy, his copy of file A is somehow flagged as being in a state of "
"conflict: he'll be able to see both sets of conflicting changes, and "
"manually choose between them. Note that software can't automatically resolve"
" conflicts; only humans are capable of understanding and making the "
"necessary intelligent choices. Once Harry has manually resolved the "
"overlapping changes (perhaps by discussing the conflict with Sally!), he can"
" safely save the merged file back to the repository."
msgstr ""

#. (para)
msgid ""
"The copy-modify-merge model may sound a bit chaotic, but in practice, it "
"runs extremely smoothly. Users can work in parallel, never waiting for one "
"another. When they work on the same files, it turns out that most of their "
"concurrent changes don't overlap at all; conflicts are infrequent. And the "
"amount of time it takes to resolve conflicts is far less than the time lost "
"by a locking system."
msgstr ""

#. (para)
msgid ""
"In the end, it all comes down to one critical factor: user communication. "
"When users communicate poorly, both syntactic and semantic conflicts "
"increase. No system can force users to communicate perfectly, and no system "
"can detect semantic conflicts. So there's no point in being lulled into a "
"false promise that a locking system will somehow prevent conflicts; in "
"practice, locking seems to inhibit productivity more than anything else."
msgstr ""

#. (para)
msgid ""
"There is one common situation where the lock-modify-unlock model comes out "
"better, and that is where you have unmergeable files. For example if your "
"repository contains some graphic images, and two people change the image at "
"the same time, there is no way for those changes to be merged together. "
"Either Harry or Sally will lose their changes."
msgstr ""

#. (title)
msgid "What does Subversion Do?"
msgstr ""

#. (para)
msgid ""
"Subversion uses the copy-modify-merge solution by default, and in many cases"
" this is all you will ever need. However, as of Version 1.2, Subversion also"
" supports file locking, so if you have unmergeable files, or if you are "
"simply forced into a locking policy by management, Subversion will still "
"provide the features you need."
msgstr ""

#. (title)
msgid "Subversion in Action"
msgstr "Subversion në Veprim"

#. (title)
msgid "Working Copies"
msgstr "Kopje Funksionale"

#. (primary)
msgid "working copy"
msgstr "kopje funksionale"

#. (para)
msgid ""
"You've already read about working copies; now we'll demonstrate how the "
"Subversion client creates and uses them."
msgstr ""

#. (para)
msgid ""
"A Subversion working copy is an ordinary directory tree on your local "
"system, containing a collection of files. You can edit these files however "
"you wish, and if they're source code files, you can compile your program "
"from them in the usual way. Your working copy is your own private work area:"
" Subversion will never incorporate other people's changes, nor make your own"
" changes available to others, until you explicitly tell it to do so."
msgstr ""

#. (para)
msgid ""
"After you've made some changes to the files in your working copy and "
"verified that they work properly, Subversion provides you with commands to "
"<emphasis>publish</emphasis> your changes to the other people working with "
"you on your project (by writing to the repository). If other people publish "
"their own changes, Subversion provides you with commands to merge those "
"changes into your working directory (by reading from the repository)."
msgstr ""

#. (para)
msgid ""
"A working copy also contains some extra files, created and maintained by "
"Subversion, to help it carry out these commands. In particular, your working"
" copy contains a subdirectory named <filename>.svn</filename>, also known as"
" the working copy <firstterm>administrative directory</firstterm>. The files"
" in this administrative directory help Subversion recognize which files "
"contain unpublished changes, and which files are out-of-date with respect to"
" others' work. Prior to 1.7 Subversion maintained <filename>.svn</filename> "
"administrative subdirectories in every versioned directory of your working "
"copy. Subversion 1.7 takes a completely different approach and each working "
"copy now has only one administrative subdirectory which is an immediate "
"child of the root of that working copy."
msgstr ""

#. (para)
msgid ""
"A typical Subversion repository often holds the files (or source code) for "
"several projects; usually, each project is a subdirectory in the "
"repository's filesystem tree. In this arrangement, a user's working copy "
"will usually correspond to a particular subtree of the repository."
msgstr ""

#. (para)
msgid ""
"For example, suppose you have a repository that contains two software "
"projects."
msgstr ""

#. (title)
msgid "The Repository's Filesystem"
msgstr ""

#. (para)
msgid ""
"In other words, the repository's root directory has two subdirectories: "
"<filename>paint</filename> and <filename>calc</filename>."
msgstr ""

#. (para)
msgid ""
"To get a working copy, you must <firstterm>check out</firstterm> some "
"subtree of the repository. (The term <emphasis>check out</emphasis> may "
"sound like it has something to do with locking or reserving resources, but "
"it doesn't; it simply creates a private copy of the project for you.)"
msgstr ""

#. (para)
msgid ""
"Suppose you make changes to <filename>button.c</filename>. Since the "
"<filename>.svn</filename> directory remembers the file's modification date "
"and original contents, Subversion can tell that you've changed the file. "
"However, Subversion does not make your changes public until you explicitly "
"tell it to. The act of publishing your changes is more commonly known as "
"<firstterm>committing</firstterm> (or <firstterm>checking in</firstterm>) "
"changes to the repository."
msgstr ""

#. (para)
msgid ""
"To publish your changes to others, you can use Subversion's "
"<command>commit</command> command."
msgstr ""

#. (para)
msgid ""
"Now your changes to <filename>button.c</filename> have been committed to the"
" repository; if another user checks out a working copy of "
"<filename>/calc</filename>, they will see your changes in the latest version"
" of the file."
msgstr ""

#. (para)
msgid ""
"Suppose you have a collaborator, Sally, who checked out a working copy of "
"<filename>/calc</filename> at the same time you did. When you commit your "
"change to <filename>button.c</filename>, Sally's working copy is left "
"unchanged; Subversion only modifies working copies at the user's request."
msgstr ""

#. (para)
msgid ""
"To bring her project up to date, Sally can ask Subversion to "
"<firstterm>update</firstterm> her working copy, by using the Subversion "
"<command>update</command> command. This will incorporate your changes into "
"her working copy, as well as any others that have been committed since she "
"checked it out."
msgstr ""

#. (para)
msgid ""
"Note that Sally didn't need to specify which files to update; Subversion "
"uses the information in the <filename>.svn</filename> directory, and further"
" information in the repository, to decide which files need to be brought up "
"to date."
msgstr ""

#. (title)
msgid "Repository URLs"
msgstr ""

#. (para)
msgid ""
"Subversion repositories can be accessed through many different methods - on "
"local disk, or through various network protocols. A repository location, "
"however, is always a URL. The URL schema indicates the access method:"
msgstr ""

#. (title)
msgid "Repository Access URLs"
msgstr ""

#. (entry)
msgid "Schema"
msgstr "Skemë"

#. (entry)
msgid "Access Method"
msgstr "Metoda e Qasjes"

#. (literal)
msgid "file://"
msgstr "file://"

#. (entry)
msgid "Direct repository access on local or network drive."
msgstr ""

#. (literal)
#. (literal)
msgid "http://"
msgstr "http://"

#. (entry)
msgid "Access via WebDAV protocol to Subversion-aware Apache server."
msgstr ""

#. (literal)
msgid "https://"
msgstr "https://"

#. (entry)
msgid "Same as <placeholder-1/>, but with SSL encryption."
msgstr ""

#. (literal)
msgid "svn://"
msgstr "svn://"

#. (literal)
#. (literal)
msgid "svnserve"
msgstr "svnserve"

#. (entry)
msgid ""
"Unauthenticated TCP/IP access via custom protocol to a <placeholder-1/> "
"server."
msgstr ""

#. (literal)
msgid "svn+ssh://"
msgstr "svn+ssh://"

#. (entry)
msgid ""
"authenticated, encrypted TCP/IP access via custom protocol to a "
"<placeholder-1/> server."
msgstr ""

#. (para)
msgid ""
"For the most part, Subversion's URLs use the standard syntax, allowing for "
"server names and port numbers to be specified as part of the URL. The "
"<literal>file://</literal> access method is normally used for local access, "
"although it can be used with UNC paths to a networked host. The URL "
"therefore takes the form <systemitem "
"class=\"url\">file://hostname/path/to/repos</systemitem>. For the local "
"machine, the <literal>hostname</literal> portion of the URL is required to "
"be either absent or <literal>localhost</literal>. For this reason, local "
"paths normally appear with three slashes, <systemitem "
"class=\"url\">file:///path/to/repos</systemitem>."
msgstr ""

#. (para)
msgid ""
"Also, users of the <literal>file://</literal> scheme on Windows platforms "
"will need to use an unofficially <quote>standard</quote> syntax for "
"accessing repositories that are on the same machine, but on a different "
"drive than the client's current working drive. Either of the two following "
"URL path syntaxes will work where <literal>X</literal> is the drive on which"
" the repository resides:"
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"file:///X:/path/to/repos\n"
"...\n"
"file:///X|/path/to/repos\n"
"...\n"
msgstr "\nfile:///X:/path/to/repos\n...\nfile:///X|/path/to/repos\n...\n"

#. (para)
msgid ""
"Note that a URL uses ordinary slashes even though the native (non-URL) form "
"of a path on Windows uses backslashes."
msgstr ""

#. (para)
msgid ""
"You can safely access a FSFS repository via a network share, but you "
"<emphasis>cannot</emphasis> access a BDB repository in this way."
msgstr ""

#. (para)
msgid ""
"Do not create or access a Berkeley DB repository on a network share. It "
"<emphasis>cannot</emphasis> exist on a remote filesystem. Not even if you "
"have the network drive mapped to a drive letter. If you attempt to use "
"Berkeley DB on a network share, the results are unpredictable - you may see "
"mysterious errors right away, or it may be months before you discover that "
"your repository database is subtly corrupted."
msgstr ""

#. (title)
msgid "Revisions"
msgstr "Rivlerësimet"

#. (primary)
#. (primary)
msgid "revision"
msgstr "rivlerësimi"

#. (para)
msgid ""
"A <command>svn commit</command> operation can publish changes to any number "
"of files and directories as a single atomic transaction. In your working "
"copy, you can change files' contents, create, delete, rename and copy files "
"and directories, and then commit the complete set of changes as a unit."
msgstr ""

#. (para)
msgid ""
"In the repository, each commit is treated as an atomic transaction: either "
"all the commits changes take place, or none of them take place. Subversion "
"retains this atomicity in the face of program crashes, system crashes, "
"network problems, and other users' actions."
msgstr ""

#. (para)
msgid ""
"Each time the repository accepts a commit, this creates a new state of the "
"filesystem tree, called a <firstterm>revision</firstterm>. Each revision is "
"assigned a unique natural number, one greater than the number of the "
"previous revision. The initial revision of a freshly created repository is "
"numbered zero, and consists of nothing but an empty root directory."
msgstr ""

#. (para)
msgid ""
"A nice way to visualize the repository is as a series of trees. Imagine an "
"array of revision numbers, starting at 0, stretching from left to right. "
"Each revision number has a filesystem tree hanging below it, and each tree "
"is a <quote>snapshot</quote> of the way the repository looked after each "
"commit."
msgstr ""

#. (title)
msgid "Global Revision Numbers"
msgstr ""

#. (para)
msgid ""
"Unlike those of many other version control systems, Subversion's revision "
"numbers apply to <emphasis>entire trees</emphasis>, not individual files. "
"Each revision number selects an entire tree, a particular state of the "
"repository after some committed change. Another way to think about it is "
"that revision N represents the state of the repository filesystem after the "
"Nth commit. When a Subversion user talks about ``revision 5 of "
"<filename>foo.c</filename>'', they really mean ``<filename>foo.c</filename> "
"as it appears in revision 5.'' Notice that in general, revisions N and M of "
"a file do <emphasis>not</emphasis> necessarily differ!"
msgstr ""

#. (para)
msgid ""
"It's important to note that working copies do not always correspond to any "
"single revision in the repository; they may contain files from several "
"different revisions. For example, suppose you check out a working copy from "
"a repository whose most recent revision is 4:"
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"calc/Makefile:4\n"
"     integer.c:4\n"
"     button.c:4\n"
msgstr "\ncalc/Makefile:4\n     integer.c:4\n     button.c:4\n"

#. (para)
msgid ""
"At the moment, this working directory corresponds exactly to revision 4 in "
"the repository. However, suppose you make a change to "
"<filename>button.c</filename>, and commit that change. Assuming no other "
"commits have taken place, your commit will create revision 5 of the "
"repository, and your working copy will now look like this:"
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"calc/Makefile:4\n"
"     integer.c:4\n"
"     button.c:5\n"
msgstr "\ncalc/Makefile:4\n     integer.c:4\n     button.c:5\n"

#. (para)
msgid ""
"Suppose that, at this point, Sally commits a change to "
"<filename>integer.c</filename>, creating revision 6. If you use <command>svn"
" update</command> to bring your working copy up to date, then it will look "
"like this:"
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"calc/Makefile:6\n"
"     integer.c:6\n"
"     button.c:6\n"
msgstr "\ncalc/Makefile:6\n     integer.c:6\n     button.c:6\n"

#. (para)
msgid ""
"Sally's changes to <filename>integer.c</filename> will appear in your "
"working copy, and your change will still be present in "
"<filename>button.c</filename>. In this example, the text of "
"<filename>Makefile</filename> is identical in revisions 4, 5, and 6, but "
"Subversion will mark your working copy of <filename>Makefile</filename> with"
" revision 6 to indicate that it is still current. So, after you do a clean "
"update at the top of your working copy, it will generally correspond to "
"exactly one revision in the repository."
msgstr ""

#. (title)
msgid "How Working Copies Track the Repository"
msgstr ""

#. (para)
msgid ""
"For each file in a working directory, Subversion records two essential "
"pieces of information in the <filename>.svn/</filename> administrative area:"
msgstr ""

#. (para)
msgid ""
"what revision your working file is based on (this is called the file's "
"<firstterm>working revision</firstterm>), and"
msgstr ""

#. (para)
msgid ""
"a timestamp recording when the local copy was last updated by the "
"repository."
msgstr ""

#. (para)
msgid ""
"Given this information, by talking to the repository, Subversion can tell "
"which of the following four states a working file is in:"
msgstr ""

#. (term)
msgid "Unchanged, and current"
msgstr "Pa ndryshuar, dhe e fundit"

#. (para)
msgid ""
"The file is unchanged in the working directory, and no changes to that file "
"have been committed to the repository since its working revision. A "
"<command>commit</command> of the file will do nothing, and an "
"<command>update</command> of the file will do nothing."
msgstr ""

#. (term)
msgid "Locally changed, and current"
msgstr "Ndryshuar në kompjuterin tuaj, dhe e fundit"

#. (para)
msgid ""
"The file has been changed in the working directory, and no changes to that "
"file have been committed to the repository since its base revision. There "
"are local changes that have not been committed to the repository, thus a "
"<command>commit</command> of the file will succeed in publishing your "
"changes, and an <command>update</command> of the file will do nothing."
msgstr ""

#. (term)
msgid "Unchanged, and out-of-date"
msgstr "Pa ndryshuar, dhe e vjetruar"

#. (para)
msgid ""
"The file has not been changed in the working directory, but it has been "
"changed in the repository. The file should eventually be updated, to make it"
" current with the public revision. A <command>commit</command> of the file "
"will do nothing, and an <command>update</command> of the file will fold the "
"latest changes into your working copy."
msgstr ""

#. (term)
msgid "Locally changed, and out-of-date"
msgstr "Ndryshuar në kompjuterin tuaj, dhe e vjetruar"

#. (para)
msgid ""
"The file has been changed both in the working directory, and in the "
"repository. A <command>commit</command> of the file will fail with an "
"<emphasis>out-of-date</emphasis> error. The file should be updated first; an"
" <command>update</command> command will attempt to merge the public changes "
"with the local changes. If Subversion can't complete the merge in a "
"plausible way automatically, it leaves it to the user to resolve the "
"conflict."
msgstr ""

#. (title)
msgid "Summary"
msgstr "Përmbledhje"

#. (para)
msgid ""
"We've covered a number of fundamental Subversion concepts in this chapter:"
msgstr ""

#. (para)
msgid ""
"We've introduced the notions of the central repository, the client working "
"copy, and the array of repository revision trees."
msgstr ""

#. (para)
msgid ""
"We've seen some simple examples of how two collaborators can use Subversion "
"to publish and receive changes from one another, using the 'copy-modify-"
"merge' model."
msgstr ""

#. (para)
msgid ""
"We've talked a bit about the way Subversion tracks and manages information "
"in a working copy."
msgstr ""

#. (para)
msgid ""
"No matter which protocol you use to access your repositories, you always "
"need to create at least one repository. This can either be done with the "
"Subversion command line client or with TortoiseSVN."
msgstr ""

#. (para)
msgid ""
"If you haven't created a Subversion repository yet, it's time to do that "
"now."
msgstr ""

#. (title)
msgid "Repository Creation"
msgstr ""

#. (primary)
msgid "create repository"
msgstr ""

#. (para)
msgid ""
"You can create a repository with the FSFS backend or with the older Berkeley"
" Database (BDB) format. The FSFS format is generally faster and easier to "
"administer, and it works on network shares and Windows 98 without problems. "
"The BDB format was once considered more stable simply because it has been in"
" use for longer, but since FSFS has now been in use in the field for several"
" years, that argument is now rather weak. Read <ulink url=\"http://svnbook"
".red-"
"bean.com/en/1.8/svn.reposadmin.planning.html#svn.reposadmin.basics.backends\"><citetitle>Choosing"
" a Data Store</citetitle></ulink> in the Subversion book for more "
"information."
msgstr ""

#. (title)
msgid "Creating a Repository with the Command Line Client"
msgstr ""

#. (primary)
#. (primary)
msgid "Create"
msgstr "Krijo"

#. (para)
msgid ""
"Create an empty folder with the name SVN (e.g. "
"<filename>D:\\SVN\\</filename>), which is used as root for all your "
"repositories."
msgstr ""

#. (para)
msgid ""
"Create another folder <filename>MyNewRepository</filename> inside "
"<filename>D:\\SVN\\</filename>."
msgstr ""

#. (para)
msgid ""
"Open the command prompt (or DOS-Box), change into <filename>D:\\SVN\\</filename> and type <screen>\n"
"svnadmin create --fs-type bdb MyNewRepository\n"
"</screen> or <screen>\n"
"svnadmin create --fs-type fsfs MyNewRepository\n"
"</screen>"
msgstr ""

#. (para)
msgid ""
"Now you've got a new repository located at "
"<filename>D:\\SVN\\MyNewRepository</filename>."
msgstr ""

#. (title)
msgid "Creating The Repository With TortoiseSVN"
msgstr ""

#. (para)
msgid "Open the windows explorer"
msgstr ""

#. (para)
msgid ""
"Create a new folder and name it e.g. <filename>SVNRepository</filename>"
msgstr ""

#. (para)
msgid ""
"<action>Right click</action> on the newly created folder and select "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Create Repository "
"here...</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"A repository is then created inside the new folder. <emphasis>Don't edit "
"those files yourself!!!</emphasis>. If you get any errors make sure that the"
" folder is empty and not write protected."
msgstr ""

#. (para)
msgid ""
"You will also be asked whether you want to create a directory structure "
"within the repository. Find out about layout options in <xref linkend"
"=\"tsvn-repository-layout\"/>."
msgstr ""

#. (para)
msgid ""
"TortoiseSVN will set a custom folder icon when it creates a repository so "
"you can identify local repositories more easily. If you create a repository "
"using the official command line client this folder icon is not assigned."
msgstr ""

#. (para)
msgid ""
"TortoiseSVN no longer offers the option to create BDB repositories, although"
" you can still use the command line client to create them. FSFS repositories"
" are generally easier for you to maintain, and also makes it easier for us "
"to maintain TortoiseSVN due to compatibility issues between the different "
"BDB versions."
msgstr ""

#. (para)
msgid ""
"TortoiseSVN does not support <literal>file://</literal> access to BDB "
"repositories due to these compatibility issues, although it will of course "
"always support this repository format when accessed via a server through the"
" <literal>svn://</literal>, <literal>http://</literal> or "
"<literal>https://</literal> protocols."
msgstr ""

#. (para)
msgid ""
"Of course we also recommend that you don't use <literal>file://</literal> "
"access at all, apart from local testing purposes. Using a server is more "
"secure and more reliable for all but single-developer use."
msgstr ""

#. (title)
msgid "Local Access to the Repository"
msgstr ""

#. (primary)
msgid "Access"
msgstr "Qasja"

#. (primary)
msgid "UNC paths"
msgstr "UNC rrugët"

#. (para)
msgid ""
"To access your local repository you need the path to that folder. Just "
"remember that Subversion expects all repository paths in the form "
"<systemitem class=\"url\">file:///C:/SVNRepository/</systemitem>. Note the "
"use of forward slashes throughout."
msgstr ""

#. (para)
msgid ""
"To access a repository located on a network share you can either use drive "
"mapping, or you can use the UNC path. For UNC paths, the form is <systemitem"
" class=\"url\">file://ServerName/path/to/repos/</systemitem>. Note that "
"there are only 2 leading slashes here."
msgstr ""

#. (para)
msgid ""
"Prior to SVN 1.2, UNC paths had to be given in the more obscure form "
"<systemitem class=\"url\">file:///\\ServerName/path/to/repos</systemitem>. "
"This form is still supported, but not recommended."
msgstr ""

#. (para)
msgid ""
"Do not create or access a Berkeley DB repository on a network share. It "
"<emphasis>cannot</emphasis> exist on a remote file system. Not even if you "
"have the network drive mapped to a drive letter. If you attempt to use "
"Berkeley DB on a network share, the results are unpredictable - you may see "
"mysterious errors right away, or it may be months before you discover that "
"your repository database is subtly corrupted."
msgstr ""

#. (title)
msgid "Accessing a Repository on a Network Share"
msgstr ""

#. (primary)
msgid "Network share"
msgstr ""

#. (para)
msgid ""
"Although in theory it is possible to put a FSFS repository on a network "
"share and have multiple users access it using <literal>file://</literal> "
"protocol, this is most definitely <emphasis>not</emphasis> recommended. In "
"fact we would <emphasis>strongly</emphasis> discourage it, and do not "
"support such use."
msgstr ""

#. (para)
msgid ""
"Firstly you are giving every user direct write access to the repository, so "
"any user could accidentally delete the entire repository or make it unusable"
" in some other way."
msgstr ""

#. (para)
msgid ""
"Secondly not all network file sharing protocols support the locking that "
"Subversion requires, so you may find your repository gets corrupted. It may "
"not happen straight away, but one day two users will try to access the "
"repository at the same time."
msgstr ""

#. (para)
msgid ""
"Thirdly the file permissions have to be set just so. You may just about get "
"away with it on a native Windows share, but SAMBA is particularly difficult."
msgstr ""

#. (para)
msgid ""
"<literal>file://</literal> access is intended for local, single-user access "
"only, particularly testing and debugging. When you want to share the "
"repository you <emphasis>really</emphasis> need to set up a proper server, "
"and it is not nearly as difficult as you might think. Read <xref linkend"
"=\"tsvn-serversetup\"/> for guidelines on choosing and setting up a server."
msgstr ""

#. (title)
msgid "Repository Layout"
msgstr ""

#. (para)
msgid ""
"Before you import your data into the repository you should first think about"
" how you want to organize your data. If you use one of the recommended "
"layouts you will later have it much easier."
msgstr ""

#. (para)
msgid ""
"There are some standard, recommended ways to organize a repository. Most "
"people create a <filename>trunk</filename> directory to hold the <quote>main"
" line</quote> of development, a <filename>branches</filename> directory to "
"contain branch copies, and a <filename>tags</filename> directory to contain "
"tag copies. If a repository holds only one project, then often people create"
" these top-level directories:"
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"/trunk\n"
"/branches\n"
"/tags\n"
msgstr "\n/trunk\n/branches\n/tags\n"

#. (para)
msgid ""
"Because this layout is so commonly used, when you create a new repository "
"using TortoiseSVN, it will also offer to create the directory structure for "
"you."
msgstr ""

#. (para)
msgid ""
"If a repository contains multiple projects, people often index their layout "
"by branch:"
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"/trunk/paint\n"
"/trunk/calc\n"
"/branches/paint\n"
"/branches/calc\n"
"/tags/paint\n"
"/tags/calc\n"
msgstr "\n/trunk/paint\n/trunk/calc\n/branches/paint\n/branches/calc\n/tags/paint\n/tags/calc\n"

#. (para)
msgid "...or by project:"
msgstr "...ose sipas projektit:"

#. (screen)
#, no-wrap
msgid ""
"\n"
"/paint/trunk\n"
"/paint/branches\n"
"/paint/tags\n"
"/calc/trunk\n"
"/calc/branches\n"
"/calc/tags\n"
msgstr "\n/paint/trunk\n/paint/branches\n/paint/tags\n/calc/trunk\n/calc/branches\n/calc/tags\n"

#. (para)
msgid ""
"Indexing by project makes sense if the projects are not closely related and "
"each one is checked out individually. For related projects where you may "
"want to check out all projects in one go, or where the projects are all tied"
" together in a single distribution package, it is often better to index by "
"branch. This way you have only one trunk to checkout, and the relationships "
"between the sub-projects is more easily visible."
msgstr ""

#. (para)
msgid ""
"If you adopt a top level <filename>/trunk /tags /branches</filename> "
"approach, there is nothing to say that you have to copy the entire trunk for"
" every branch and tag, and in some ways this structure offers the most "
"flexibility."
msgstr ""

#. (para)
msgid ""
"For unrelated projects you may prefer to use separate repositories. When you"
" commit changes, it is the revision number of the whole repository which "
"changes, not the revision number of the project. Having 2 unrelated projects"
" share a repository can mean large gaps in the revision numbers. The "
"Subversion and TortoiseSVN projects appear at the same host address, but are"
" completely separate repositories allowing independent development, and no "
"confusion over build numbers."
msgstr ""

#. (para)
msgid ""
"Of course, you're free to ignore these common layouts. You can create any "
"sort of variation, whatever works best for you or your team. Remember that "
"whatever you choose, it's not a permanent commitment. You can reorganize "
"your repository at any time. Because branches and tags are ordinary "
"directories, TortoiseSVN can move or rename them however you wish."
msgstr ""

#. (para)
msgid ""
"Switching from one layout to another is just a matter of issuing a series of"
" server-side moves; If you don't like the way things are organized in the "
"repository, just juggle the directories around."
msgstr ""

#. (para)
msgid "create a new empty folder on your hard drive"
msgstr ""

#. (para)
msgid ""
"create your desired top-level folder structure inside that folder - don't "
"put any files in it yet!"
msgstr ""

#. (para)
msgid ""
"import this structure into the repository via a <action>right click</action>"
" on the folder that contains this folder structure and selecting "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Import...</guimenuitem></menuchoice>"
" In the import dialog enter the URL to your repository and click OK. This "
"will import your temp folder into the repository root to create the basic "
"repository layout."
msgstr ""

#. (para)
msgid ""
"So if you haven't already created a basic folder structure inside your "
"repository you should do that now. There are two ways to achieve this. If "
"you simply want to create a <filename>/trunk /tags /branches</filename> "
"structure, you can use the repository browser to create the three folders "
"(in three separate commits). If you want to create a deeper hierarchy then "
"it is simpler to create a folder structure on disk first and import it in a "
"single commit, like this: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"Note that the name of the folder you are importing does not appear in the repository, only its contents. For example, create the following folder structure: <screen>\n"
"C:\\Temp\\New\\trunk\n"
"C:\\Temp\\New\\branches\n"
"C:\\Temp\\New\\tags\n"
"</screen> Import <filename>C:\\Temp\\New</filename> into the repository root, which will then look like this: <screen>\n"
"/trunk\n"
"/branches\n"
"/tags\n"
"</screen>"
msgstr ""

#. (title)
msgid "Repository Backup"
msgstr ""

#. (primary)
msgid "backup"
msgstr ""

#. (para)
msgid ""
"Whichever type of repository you use, it is vitally important that you "
"maintain regular backups, and that you verify the backup. If the server "
"fails, you may be able to access a recent version of your files, but without"
" the repository all your history is lost forever."
msgstr ""

#. (para)
msgid ""
"The simplest (but not recommended) way is just to copy the repository folder"
" onto the backup medium. However, you have to be absolutely sure that no "
"process is accessing the data. In this context, access means "
"<emphasis>any</emphasis> access at all. A BDB repository is written to even "
"when the operation only appears to require reading, such as getting status. "
"If your repository is accessed at all during the copy, (web browser left "
"open, WebSVN, etc.) the backup will be worthless."
msgstr ""

#. (para)
msgid ""
"The recommended method is to run <screen>\n"
"svnadmin hotcopy path/to/repository path/to/backup --clean-logs\n"
"</screen> to create a copy of your repository in a safe manner. Then backup the copy. The <literal>--clean-logs</literal> option is not required, but removes any redundant log files when you backup a BDB repository, which may save some space."
msgstr ""

#. (para)
msgid ""
"The <literal>svnadmin</literal> tool is installed automatically when you "
"install the Subversion command line client. The easiest way to get this is "
"to check the option to include the command line tools when installing "
"TortoiseSVN, but if you prefer you can download the latest version of "
"command line tools directly from the <ulink "
"url=\"http://subversion.apache.org/packages.html#windows\"><citetitle>Subversion</citetitle></ulink>"
" website."
msgstr ""

#. (title)
msgid "Server side hook scripts"
msgstr ""

#. (primary)
msgid "hooks"
msgstr ""

#. (primary)
#. (primary)
msgid "hook scripts"
msgstr ""

#. (primary)
msgid "server side hook scripts"
msgstr ""

#. (para)
msgid ""
"A hook script is a program triggered by some repository event, such as the "
"creation of a new revision or the modification of an unversioned property. "
"Each hook is handed enough information to tell what that event is, what "
"target(s) it's operating on, and the username of the person who triggered "
"the event. Depending on the hook's output or return status, the hook program"
" may continue the action, stop it, or suspend it in some way. Please refer "
"to the chapter on <ulink url=\"http://svnbook.red-"
"bean.com/en/1.8/svn.reposadmin.create.html#svn.reposadmin.create.hooks\"><citetitle>Hook"
" Scripts</citetitle></ulink> in the Subversion Book for full details about "
"the hooks which are implemented."
msgstr ""

#. (para)
msgid ""
"These hook scripts are executed by the server that hosts the repository. "
"TortoiseSVN also allows you to configure client side hook scripts that are "
"executed locally upon certain events. See <xref linkend=\"tsvn-dug-settings-"
"hooks\"/> for more information."
msgstr ""

#. (para)
msgid ""
"Sample hook scripts can be found in the <filename>hooks</filename> directory of the repository. These sample scripts are suitable for Unix/Linux servers but need to be modified if your server is Windows based. The hook can be a batch file or an executable. The sample below shows a batch file which might be used to implement a pre-revprop-change hook. <screen>\n"
"rem Only allow log messages to be changed.\n"
"if \"%4\" == \"svn:log\" exit 0\n"
"echo Property '%4' cannot be changed &gt;&amp;2\n"
"exit 1\n"
"</screen> Note that anything sent to stdout is discarded. If you want a message to appear in the Commit Reject dialog you must send it to stderr. In a batch file this is achieved using <filename>&gt;&amp;2</filename>."
msgstr ""

#. (title)
msgid "Overriding Hooks"
msgstr ""

#. (para)
msgid ""
"If a hook script rejects your commit then its decision is final. But you can"
" build an override mechanism into the script itself using the "
"<emphasis>Magic Word</emphasis> technique. If the script wants to reject the"
" operation it first scans the log message for a special pass phrase, either "
"a fixed phrase or perhaps the filename with a prefix. If it finds the magic "
"word then it allows the commit to proceed. If the phrase is not found then "
"it can block the commit with a message like <quote>You didn't say the magic "
"word</quote>. :-)"
msgstr ""

#. (title)
msgid "Checkout Links"
msgstr ""

#. (primary)
msgid "checkout link"
msgstr ""

#. (primary)
msgid "TortoiseSVN link"
msgstr "Nyja e TortoiseSVN"

#. (primary)
msgid "link"
msgstr "nyje"

#. (primary)
msgid "website"
msgstr "ueb faqja"

#. (para)
msgid ""
"If you want to make your Subversion repository available to others you may "
"want to include a link to it from your website. One way to make this more "
"accessible is to include a <firstterm>checkout link</firstterm> for other "
"TortoiseSVN users."
msgstr ""

#. (para)
msgid ""
"When you install TortoiseSVN, it registers a new <literal>tsvn:</literal> "
"protocol. When a TortoiseSVN user clicks on such a link, the checkout dialog"
" will open automatically with the repository URL already filled in."
msgstr ""

#. (programlisting)
#, no-wrap
msgid ""
"\n"
"&lt;a href=\"tsvn:http://project.domain.org/svn/trunk\"&gt;\n"
"&lt;/a&gt;\n"
msgstr "\n&lt;a href=\"tsvn:http://project.domain.org/svn/trunk\"&gt;\n&lt;/a&gt;\n"

#. (para)
msgid ""
"To include such a link in your own html page, you need to add code which "
"looks something like this: <placeholder-1/>"
msgstr ""

#. (programlisting)
#, no-wrap
msgid ""
"\n"
"&lt;a href=\"tsvn:http://project.domain.org/svn/trunk\"&gt;\n"
"&lt;img src=TortoiseCheckout.png&gt;&lt;/a&gt;\n"
msgstr "\n&lt;a href=\"tsvn:http://project.domain.org/svn/trunk\"&gt;\n&lt;img src=TortoiseCheckout.png&gt;&lt;/a&gt;\n"

#. (para)
msgid ""
"Of course it would look even better if you included a suitable picture. You "
"can use the <ulink "
"url=\"http://tortoisesvn.net/images/TortoiseCheckout.png\"><citetitle>TortoiseSVN"
" logo</citetitle></ulink> or you can provide your own image. "
"<placeholder-1/>"
msgstr ""

#. (programlisting)
#, no-wrap
msgid ""
"\n"
"&lt;a href=\"tsvn:http://project.domain.org/svn/trunk?100\"&gt;\n"
"&lt;/a&gt;\n"
msgstr "\n&lt;a href=\"tsvn:http://project.domain.org/svn/trunk?100\"&gt;\n&lt;/a&gt;\n"

#. (para)
msgid ""
"You can also make the link point to a specific revision, for example "
"<placeholder-1/>"
msgstr ""

#. (title)
msgid "Accessing the Repository"
msgstr ""

#. (para)
msgid ""
"To use TortoiseSVN (or any other Subversion client), you need a place where "
"your repositories are located. You can either store your repositories "
"locally and access them using the <literal>file://</literal> protocol or you"
" can place them on a server and access them with the "
"<literal>http://</literal> or <literal>svn://</literal> protocols. The two "
"server protocols can also be encrypted. You use <literal>https://</literal> "
"or <literal>svn+ssh://</literal>, or you can use <literal>svn://</literal> "
"with SASL."
msgstr ""

#. (para)
msgid ""
"If you are using a public hosting service such as <ulink "
"url=\"http://code.google.com/hosting/\"><citetitle>Google "
"Code</citetitle></ulink> or your server has already been setup by someone "
"else then there is nothing else you need to do. Move along to <xref linkend"
"=\"tsvn-dug\"/>."
msgstr ""

#. (para)
msgid ""
"If you don't have a server and you work alone, or if you are just evaluating"
" Subversion and TortoiseSVN in isolation, then local repositories are "
"probably your best choice. Just create a repository on your own PC as "
"described earlier in <xref linkend=\"tsvn-repository\"/>. You can skip the "
"rest of this chapter and go directly to <xref linkend=\"tsvn-dug\"/> to find"
" out how to start using it."
msgstr ""

#. (para)
msgid ""
"If you were thinking about setting up a multi-user repository on a network "
"share, think again. Read <xref linkend=\"tsvn-repository-local-share\"/> to "
"find out why we think this is a bad idea. Setting up a server is not as hard"
" as it sounds, and will give you better reliability and probably speed too."
msgstr ""

#. (para)
msgid ""
"More detailed information on the Subversion server options, and how to "
"choose the best architecture for your situation, can be found in the "
"Subversion book under <ulink url=\"http://svnbook.red-"
"bean.com/en/1.8/svn.serverconfig.html\"><citetitle>Server "
"Configuration</citetitle></ulink>."
msgstr ""

#. (citetitle)
msgid "VisualSVN"
msgstr "VisualSVN"

#. (citetitle)
msgid "CollabNet"
msgstr "CollabNet"

#. (citetitle)
msgid "UberSVN"
msgstr "UberSVN"

#. (para)
msgid ""
"In the early days of Subversion, setting up a server required a good "
"understanding of server configuration and in previous versions of this "
"manual we included detailed descriptions of how to set up a server. Since "
"then things have become easier as there are now several pre-packaged server "
"installers available which guide you through the setup and configuration "
"process. These links are for some of the installers we know about: "
"<placeholder-1/> You can always find the latest links on the <ulink "
"url=\"http://subversion.apache.org/packages.html\"><citetitle>Subversion</citetitle></ulink>"
" website."
msgstr ""

#. (para)
msgid ""
"You can find further How To guides on the <ulink "
"url=\"http://tortoisesvn.net/usefultips.html\"><citetitle>TortoiseSVN</citetitle></ulink>"
" website."
msgstr ""

#. (title)
msgid "Daily Use Guide"
msgstr "Udhëzuesi Ditor i Shfrytëzuesit"

#. (para)
msgid ""
"This document describes day to day usage of the TortoiseSVN client. It is "
"<emphasis>not</emphasis> an introduction to version control systems, and "
"<emphasis>not</emphasis> an introduction to Subversion (SVN). It is more "
"like a place you may turn to when you know approximately what you want to "
"do, but don't quite remember how to do it."
msgstr ""

#. (para)
msgid ""
"If you need an introduction to version control with Subversion, then we "
"recommend you read the fantastic book: <ulink url=\"http://svnbook.red-"
"bean.com/\"><citetitle>Version Control with Subversion</citetitle></ulink>."
msgstr ""

#. (para)
msgid ""
"This document is also a work in progress, just as TortoiseSVN and Subversion"
" are. If you find any mistakes, please report them to the mailing list so we"
" can update the documentation. Some of the screenshots in the Daily Use "
"Guide (DUG) might not reflect the current state of the software. Please "
"forgive us. We're working on TortoiseSVN in our free time."
msgstr ""

#. (para)
msgid "You should have installed TortoiseSVN already."
msgstr ""

#. (para)
msgid "You should be familiar with version control systems."
msgstr ""

#. (para)
msgid "You should know the basics of Subversion."
msgstr ""

#. (para)
msgid ""
"You should have set up a server and/or have access to a Subversion "
"repository."
msgstr ""

#. (para)
msgid "In order to get the most out of the Daily Use Guide: <placeholder-1/>"
msgstr ""

#. (title)
msgid "General Features"
msgstr ""

#. (para)
msgid ""
"This section describes some of the features of TortoiseSVN which apply to "
"just about everything in the manual. Note that many of these features will "
"only show up within a Subversion working copy."
msgstr ""

#. (title)
#. (title)
#. (title)
msgid "Icon Overlays"
msgstr ""

#. (title)
#. (title)
msgid "Explorer showing icon overlays"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> One of the most visible features of TortoiseSVN is the icon"
" overlays which appear on files in your working copy. These show you at a "
"glance which of your files have been modified. Refer to <xref linkend"
"=\"tsvn-dug-wcstatus-1\"/> to find out what the different overlays "
"represent."
msgstr ""

#. (title)
msgid "Context Menus"
msgstr ""

#. (primary)
msgid "context menu"
msgstr "menyja kontekstuale"

#. (primary)
msgid "right click"
msgstr "kliko me të djathtën"

#. (title)
msgid "Context menu for a directory under version control"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> All TortoiseSVN commands are invoked from the context menu "
"of the windows explorer. Most are directly visible, when you <action>right "
"click</action> on a file or folder. The commands that are available depend "
"on whether the file or folder or its parent folder is under version control "
"or not. You can also see the TortoiseSVN menu as part of the Explorer file "
"menu."
msgstr ""

#. (para)
msgid ""
"Some commands which are very rarely used are only available in the extended "
"context menu. To bring up the extended context menu, hold down the "
"<keycap>Shift</keycap> key when you <action>right click</action>."
msgstr ""

#. (title)
msgid "Explorer file menu for a shortcut in a versioned folder"
msgstr ""

#. (para)
msgid ""
"In some cases you may see several TortoiseSVN entries. This is not a bug! "
"<placeholder-1/> This example is for an unversioned shortcut within a "
"versioned folder, and in the Explorer file menu there are "
"<emphasis>three</emphasis> entries for TortoiseSVN. One is for the folder, "
"one for the shortcut itself, and the third for the object the shortcut is "
"pointing to. To help you distinguish between them, the icons have an "
"indicator in the lower right corner to show whether the menu entry is for a "
"file, a folder, a shortcut or for multiple selected items."
msgstr ""

#. (para)
msgid ""
"If you are using Windows 2000 you will find that the context menus are shown"
" as plain text, without the menu icons shown above. We are aware that this "
"was working in previous versions, but Microsoft has changed the way its icon"
" handlers work for Vista, requiring us to use a different display method "
"which unfortunately does not work on Windows 2000."
msgstr ""

#. (title)
#. (title)
msgid "Drag and Drop"
msgstr "Zvarrit dhe Hidh"

#. (primary)
msgid "drag handler"
msgstr "Zvarrit dhe Hidh"

#. (primary)
msgid "drag-n-drop"
msgstr "zvarrit-hidh"

#. (primary)
msgid "right drag"
msgstr ""

#. (title)
#. (title)
msgid "Right drag menu for a directory under version control"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> Other commands are available as drag handlers, when you "
"<action>right drag</action> files or folders to a new location inside "
"working copies or when you <action>right drag</action> a non-versioned file "
"or folder into a directory which is under version control."
msgstr ""

#. (title)
msgid "Common Shortcuts"
msgstr "Shkurtesat e Përbashkëta"

#. (term)
msgid "F1"
msgstr "F1"

#. (para)
msgid "Help, of course."
msgstr "Ndihmë, kuptohet."

#. (term)
msgid "F5"
msgstr "F5"

#. (para)
msgid ""
"Refresh the current view. This is perhaps the single most useful one-key "
"command. For example ... In Explorer this will refresh the icon overlays on "
"your working copy. In the commit dialog it will re-scan the working copy to "
"see what may need to be committed. In the Revision Log dialog it will "
"contact the repository again to check for more recent changes."
msgstr ""

#. (term)
msgid "Ctrl-A"
msgstr "Ctrl-A"

#. (para)
msgid ""
"Select all. This can be used if you get an error message and want to copy "
"and paste into an email. Use Ctrl-A to select the error message and then ..."
msgstr ""

#. (term)
msgid "Ctrl-C"
msgstr "Ctrl-C"

#. (para)
msgid "... Copy the selected text."
msgstr "... Kopjo tekstin e përzgjedhur."

#. (para)
msgid ""
"Some common operations have well-known Windows shortcuts, but do not appear "
"on buttons or in menus. If you can't work out how to do something obvious, "
"like refreshing a view, check here. <placeholder-1/>"
msgstr ""

#. (title)
msgid "Authentication"
msgstr "Vërtetim"

#. (primary)
msgid "authentication"
msgstr "vërtetim"

#. (primary)
msgid "authentication cache"
msgstr ""

#. (title)
msgid "Authentication Dialog"
msgstr "Dialogu Vërtetues"

#. (para)
msgid ""
"<filename>svn.simple</filename> contains credentials for basic "
"authentication (username/password). Note that passwords are stored using the"
" WinCrypt API, not in plain text form."
msgstr ""

#. (para)
msgid "<filename>svn.ssl.server</filename> contains SSL server certificates."
msgstr "<filename>svn.ssl.server</filename> përmban SSL certifikata."

#. (para)
msgid ""
"<filename>svn.username</filename> contains credentials for username-only "
"authentication (no password needed)."
msgstr ""

#. (para)
msgid ""
"If the repository that you are trying to access is password protected, an "
"authentication Dialog will show up. <placeholder-1/> Enter your username and"
" password. The checkbox will make TortoiseSVN store the credentials in "
"Subversion's default directory: "
"<filename>%APPDATA%\\Subversion\\auth</filename> in three subdirectories: "
"<placeholder-2/>"
msgstr ""

#. (para)
msgid ""
"If you want to clear the authentication cache for all servers, you can do so"
" from the <guilabel>Saved Data</guilabel> page of TortoiseSVN's settings "
"dialog. That button will clear all cached authentication data from the "
"Subversion <filename>auth</filename> directories, as well as any "
"authentication data stored in the registry by earlier versions of "
"TortoiseSVN. Refer to <xref linkend=\"tsvn-dug-settings-saved-data\"/>."
msgstr ""

#. (para)
msgid ""
"If you want to clear authentication for one realm only then you will have to"
" dig into those directories, find the file which contains the information "
"you want to clear and delete the file."
msgstr ""

#. (para)
msgid ""
"Some people like to have the authentication data deleted when they log off Windows, or on shutdown. The way to do that is to use a shutdown script to delete the <filename>%APPDATA%\\Subversion\\auth</filename> directory, e.g. <screen>\n"
"@echo off\n"
"rmdir /s /q \"%APPDATA%\\Subversion\\auth\"\n"
"</screen> You can find a description of how to install such scripts at <ulink url=\"http://www.windows-help-central.com/windows-shutdown-script.html\"><citetitle>http://www.windows-help-central.com/windows-shutdown-script.html</citetitle></ulink>."
msgstr ""

#. (para)
msgid ""
"For more information on how to set up your server for authentication and "
"access control, refer to <xref linkend=\"tsvn-serversetup\"/>."
msgstr ""

#. (title)
msgid "Maximizing Windows"
msgstr "Zmadho Dritaren"

#. (primary)
msgid "maximize"
msgstr "zmadho"

#. (para)
msgid ""
"Many of TortoiseSVN's dialogs have a lot of information to display, but it "
"is often useful to maximize only the height, or only the width, rather than "
"maximizing to fill the screen. As a convenience, there are shortcuts for "
"this on the <guilabel>Maximize</guilabel> button. Use the <action>middle "
"mouse</action> button to maximize vertically, and <action>right "
"mouse</action> to maximize horizontally."
msgstr ""

#. (title)
msgid "Importing Data Into A Repository"
msgstr ""

#. (primary)
msgid "import"
msgstr "importo"

#. (primary)
msgid "add files to repository"
msgstr ""

#. (title)
#. (entry)
#. (title)
#. (glossterm)
msgid "Import"
msgstr "Importo"

#. (primary)
msgid "temporary files"
msgstr "skedat e përkohshme"

#. (para)
msgid ""
"If you are importing into an existing repository which already contains some"
" projects, then the repository structure will already have been decided. If "
"you are importing data into a new repository, then it is worth taking the "
"time to think about how it will be organised. Read <xref linkend=\"tsvn-"
"repository-layout\"/> for further advice."
msgstr ""

#. (para)
msgid ""
"There is no way to select files and folders to include, aside from using the"
" global ignore settings."
msgstr ""

#. (para)
msgid ""
"The folder imported does not become a working copy. You have to do a "
"checkout to copy the files back from the server."
msgstr ""

#. (para)
msgid "It is easy to import to the wrong folder level in the repository."
msgstr ""

#. (para)
msgid ""
"This section describes the Subversion import command, which was designed for"
" importing a directory hierarchy into the repository in one shot. Although "
"it does the job, it has several shortcomings: <placeholder-1/> For these "
"reasons we recommend that you do not use the import command at all but "
"rather follow the two-step method described in <xref linkend=\"tsvn-dug-"
"import-in-place\"/>, unless you are performing the simple step of creating "
"an initial <filename>/trunk /tags /branches</filename> structure in your "
"repository. Since you are here, this is how the basic import works ..."
msgstr ""

#. (para)
msgid ""
"Remove all files which are not needed to build the project (temporary files,"
" files which are generated by a compiler e.g. *.obj, compiled binaries, ...)"
msgstr ""

#. (para)
msgid ""
"Organize the files in folders and sub-folders. Although it is possible to "
"rename/move files later it is highly recommended to get your project's "
"structure straight before importing!"
msgstr ""

#. (para)
msgid ""
"Before you import your project into a repository you should: "
"<placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"Now select the top-level folder of your project directory structure in the "
"windows explorer and <action>right click</action> to open the context menu. "
"Select the command "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Import...</guimenuitem></menuchoice>"
" which brings up a dialog box: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"In this dialog you have to enter the URL of the repository location where you want to import your project. It is very important to realise that the local folder you are importing does not itself appear in the repository, only its content. For example if you have a structure: <screen>\n"
"C:\\Projects\\Widget\\source\n"
"C:\\Projects\\Widget\\doc\n"
"C:\\Projects\\Widget\\images\n"
"</screen> and you import <filename>C:\\Projects\\Widget</filename> into <systemitem class=\"url\">http://mydomain.com/svn/trunk</systemitem> then you may be surprised to find that your subdirectories go straight into <literal>trunk</literal> rather than being in a <literal>Widget</literal> subdirectory. You need to specify the subdirectory as part of the URL, <systemitem class=\"url\">http://mydomain.com/svn/trunk/Widget-X</systemitem>. Note that the import command will automatically create subdirectories within the repository if they do not exist."
msgstr ""

#. (para)
msgid "The import message is used as a log message."
msgstr ""

#. (para)
msgid ""
"By default, files and folders which match the global-ignore patterns are "
"<emphasis>not</emphasis> imported. To override this behaviour you can use "
"the <guilabel>Include ignored files</guilabel> checkbox. Refer to <xref "
"linkend=\"tsvn-dug-settings-main\"/> for more information on setting a "
"global ignore pattern."
msgstr ""

#. (para)
msgid ""
"As soon as you press <guibutton>OK</guibutton> TortoiseSVN imports the "
"complete directory tree including all files into the repository. The project"
" is now stored in the repository under version control. Please note that the"
" folder you imported is <emphasis>NOT</emphasis> under version control! To "
"get a version-controlled <firstterm>working copy</firstterm> you need to do "
"a Checkout of the version you just imported. Or read on to find out how to "
"import a folder in place."
msgstr ""

#. (title)
msgid "Import in Place"
msgstr "Importo në Vend"

#. (primary)
msgid "import in place"
msgstr "importo në vend"

#. (para)
msgid ""
"Use the repository browser to create a new project folder directly in the "
"repository. If you are using one of the standard layouts you will probably "
"want to create this as a sub-folder of trunk rather than in the repository "
"root. The repository browser shows the repository structure just like "
"Windows explorer, so you can see how things are organised."
msgstr ""

#. (para)
msgid ""
"Checkout the new folder over the top of the folder you want to import. You "
"will get a warning that the local folder is not empty. Ignore the warning. "
"Now you have a versioned top level folder with unversioned content."
msgstr ""

#. (para)
msgid ""
"Use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Add...</guimenuitem></menuchoice>"
" on this versioned folder to add some or all of the content. You can add and"
" remove files, set <literal>svn:ignore</literal> properties on folders and "
"make any other changes you need to."
msgstr ""

#. (para)
msgid ""
"Commit the top level folder, and you have a new versioned tree, and a local "
"working copy, created from your existing folder."
msgstr ""

#. (para)
msgid ""
"Assuming you already have a repository, and you want to add a new folder "
"structure to it, just follow these steps: <placeholder-1/>"
msgstr ""

#. (title)
msgid "Special Files"
msgstr "Skeda Speciale"

#. (primary)
msgid "special files"
msgstr "skeda speciale"

#. (para)
msgid ""
"Sometimes you need to have a file under version control which contains user "
"specific data. That means you have a file which every developer/user needs "
"to modify to suit his/her local setup. But versioning such a file is "
"difficult because every user would commit his/her changes every time to the "
"repository."
msgstr ""

#. (para)
msgid ""
"In such cases we suggest to use <emphasis>template</emphasis> files. You "
"create a file which contains all the data your developers will need, add "
"that file to version control and let the developers check this file out. "
"Then, each developer has to <emphasis>make a copy</emphasis> of that file "
"and rename that copy. After that, modifying the copy is not a problem "
"anymore."
msgstr ""

#. (para)
msgid ""
"As an example, you can have a look at TortoiseSVN's build script. It calls a"
" file named <filename>TortoiseVars.bat</filename> which doesn't exist in the"
" repository. Only the file <filename>TortoiseVars.tmpl</filename>. "
"<filename>TortoiseVars.tmpl</filename> is the template file which every "
"developer has to create a copy from and rename that file to "
"<filename>TortoiseVars.bat</filename>. Inside that file, we added comments "
"so that the users will see which lines they have to edit and change "
"according to their local setup to get it working."
msgstr ""

#. (para)
msgid ""
"So as not to disturb the users, we also added the file "
"<filename>TortoiseVars.bat</filename> to the ignore list of its parent "
"folder, i.e. we've set the Subversion property <literal>svn:ignore</literal>"
" to include that filename. That way it won't show up as unversioned on every"
" commit."
msgstr ""

#. (title)
msgid "Checking Out A Working Copy"
msgstr ""

#. (primary)
msgid "checkout"
msgstr ""

#. (primary)
msgid "create working copy"
msgstr "krijo kopje funksionale"

#. (primary)
msgid "sparse checkout"
msgstr ""

#. (primary)
msgid "partial checkout"
msgstr ""

#. (para)
msgid ""
"To obtain a working copy you need to do a <firstterm>checkout</firstterm> "
"from a repository."
msgstr ""

#. (title)
msgid "The Checkout dialog"
msgstr ""

#. (para)
msgid ""
"Select a directory in windows explorer where you want to place your working "
"copy. <action>Right click</action> to pop up the context menu and select the"
" command "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Checkout...</guimenuitem></menuchoice>,"
" which brings up the following dialog box: <placeholder-1/> If you enter a "
"folder name that does not yet exist, then a directory with that name is "
"created."
msgstr ""

#. (title)
msgid "Checkout Depth"
msgstr ""

#. (term)
msgid "Fully recursive"
msgstr ""

#. (para)
msgid "Checkout the entire tree, including all child folders and sub-folders."
msgstr ""

#. (term)
msgid "Immediate children, including folders"
msgstr ""

#. (para)
msgid ""
"Checkout the specified directory, including all files and child folders, but"
" do not populate the child folders."
msgstr ""

#. (term)
msgid "Only file children"
msgstr "Vetëm skedat fëmijë"

#. (para)
msgid ""
"Checkout the specified directory, including all files but do not checkout "
"any child folders."
msgstr ""

#. (term)
msgid "Only this item"
msgstr "Vetëm këtë send"

#. (para)
msgid ""
"Checkout the directory only. Do not populate it with files or child folders."
msgstr ""

#. (term)
#. (term)
#. (listitem)
msgid "Working copy"
msgstr "Kopje funksionale"

#. (para)
msgid ""
"Retain the depth specified in the working copy. This option is not used in "
"the checkout dialog, but it is the default in all other dialogs which have a"
" depth setting."
msgstr ""

#. (term)
msgid "Exclude"
msgstr "Përjashto"

#. (para)
msgid ""
"Used to reduce working copy depth after a folder has already been populated."
" This option is only available in the <guilabel>Update to "
"revision</guilabel> dialog."
msgstr ""

#. (para)
msgid ""
"You can choose the <firstterm>depth</firstterm> you want to checkout, which "
"allows you to specify the depth of recursion into child folders. If you want"
" just a few sections of a large tree, You can checkout the top level folder "
"only, then update selected folders recursively. <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"To easily select only the items you want for the checkout and force the "
"resulting working copy to keep only those items, click the <guibutton>Choose"
" items...</guibutton> button. This opens a new dialog where you can check "
"all items you want in your working copy and uncheck all the items you don't "
"want. The resulting working copy is then known as a <literal>sparse "
"checkout</literal>. An update of such a working copy will not fetch the "
"missing files and folders but only update what you already have in your "
"working copy."
msgstr ""

#. (para)
msgid ""
"If you check out a sparse working copy (i.e., by choosing something other "
"than <literal>fully recursive</literal> for the checkout depth), you can "
"easily add or remove sub-folders later using one of the following methods."
msgstr ""

#. (title)
msgid "Sparse Update using Update to Revision"
msgstr ""

#. (para)
msgid ""
"<action>Right click</action> on the checked out folder, then use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Update to "
"Revision</guimenuitem></menuchoice> and select <guibutton>Choose "
"items...</guibutton>. This opens the same dialog that was available in the "
"original checkout and allows you to select or deselect items to include in "
"the checkout. This method is very flexible but can be slow as every item in "
"the folder is updated individually."
msgstr ""

#. (title)
msgid "Sparse Update using Repo Browser"
msgstr ""

#. (para)
msgid ""
"<action>Right click</action> on the checked out folder, then use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Repo-"
"Browser</guimenuitem></menuchoice> to bring up the repository browser. Find "
"the sub-folder you would like to add to your working copy, then use "
"<menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Update item to "
"revision...</guimenuitem></menuchoice>."
msgstr ""

#. (title)
msgid "Sparse Update using Check for Modifications"
msgstr ""

#. (para)
msgid ""
"In the check for modifications dialog, first <keycap>shift</keycap> click on"
" the button <guibutton>Check repository</guibutton>. The dialog will show "
"all the files and folders which are in the repository but which you have not"
" checked out as <literal>remotely added</literal>. <action>Right "
"click</action> on the folder(s) you would like to add to your working copy, "
"then use <menuchoice><guimenu>Context "
"menu</guimenu><guimenuitem>Update</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"This feature is very useful when you only want to checkout parts of a large "
"tree, but you want the convenience of updating a single working copy. "
"Suppose you have a large tree which has sub-folders "
"<literal>Project01</literal> to <literal>Project99</literal>, and you only "
"want to checkout <literal>Project03</literal>, <literal>Project25</literal> "
"and <literal>Project76/SubProj</literal>. Use these steps:"
msgstr ""

#. (para)
msgid ""
"Checkout the parent folder with depth <quote>Only this item</quote> You now "
"have an empty top level folder."
msgstr ""

#. (para)
msgid ""
"Select the new folder and use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Repo "
"browser</guimenuitem></menuchoice> to display the repository content."
msgstr ""

#. (para)
msgid ""
"Right click on <literal>Project03</literal> and <menuchoice><guimenu>Context"
" menu</guimenu><guimenuitem>Update item to "
"revision...</guimenuitem></menuchoice>. Keep the default settings and click "
"on <guibutton>OK</guibutton>. You now have that folder fully populated."
msgstr ""

#. (para)
msgid "Repeat the same process for <literal>Project25</literal>."
msgstr ""

#. (para)
msgid ""
"Navigate to <literal>Project76/SubProj</literal> and do the same. This time "
"note that the <literal>Project76</literal> folder has no content except for "
"<literal>SubProj</literal>, which itself is fully populated. Subversion has "
"created the intermediate folders for you without populating them."
msgstr ""

#. (title)
msgid "Changing working copy depth"
msgstr ""

#. (para)
msgid ""
"Once you have checked out a working copy to a particular depth you can "
"change that depth later to get more or less content using "
"<menuchoice><guimenu>Context menu</guimenu><guimenuitem>Update item to "
"revision...</guimenuitem></menuchoice>. In that dialog, be sure to check the"
" <guilabel>Make depth sticky</guilabel> checkbox."
msgstr ""

#. (title)
msgid "Using an older server"
msgstr "Shfrytëzimi i një serveri të vjetër"

#. (para)
msgid ""
"Pre-1.5 servers do not understand the working copy depth request, so they "
"cannot always deal with requests efficiently. The command will still work, "
"but an older server may send all the data, leaving the client to filter out "
"what is not required, which may mean a lot of network traffic. If possible "
"you should upgrade your server to at least 1.5."
msgstr ""

#. (para)
msgid ""
"If the project contains references to external projects which you do "
"<emphasis>not</emphasis> want checked out at the same time, use the "
"<guilabel>Omit externals</guilabel> checkbox."
msgstr ""

#. (para)
msgid ""
"If <guilabel>Omit externals</guilabel> is checked, or if you wish to "
"increase the depth value, you will have to perform updates to your working "
"copy using <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Update to "
"Revision...</guimenuitem></menuchoice> instead of "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Update</guimenuitem></menuchoice>."
" The standard update will include all externals and keep the existing depth."
msgstr ""

#. (para)
msgid ""
"It is recommended that you check out only the <literal>trunk</literal> part "
"of the directory tree, or lower. If you specify the parent path of the "
"directory tree in the URL then you might end up with a full hard disk since "
"you will get a copy of the entire repository tree including every branch and"
" tag of your project!"
msgstr ""

#. (title)
msgid "Exporting"
msgstr "Eksportimi"

#. (para)
msgid ""
"Sometimes you may want to create a local copy without any of those "
"<filename>.svn</filename> directories, e.g. to create a zipped tarball of "
"your source. Read <xref linkend=\"tsvn-dug-export\"/> to find out how to do "
"that."
msgstr ""

#. (title)
msgid "Committing Your Changes To The Repository"
msgstr ""

#. (primary)
msgid "commit"
msgstr "parashtro"

#. (primary)
msgid "send changes"
msgstr "dërgo ndryshimet"

#. (primary)
msgid "check in"
msgstr ""

#. (para)
msgid ""
"Sending the changes you made to your working copy is known as "
"<firstterm>committing</firstterm> the changes. But before you commit you "
"have to make sure that your working copy is up to date. You can either use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Update</guimenuitem></menuchoice>"
" directly. Or you can use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Check for "
"Modifications</guimenuitem></menuchoice> first, to see which files have "
"changed locally or on the server."
msgstr ""

#. (title)
msgid "The Commit Dialog"
msgstr "Dialogu i Parashtrimit"

#. (title)
msgid "The Commit dialog"
msgstr "Dialogu i parashtrimit"

#. (para)
msgid ""
"If your working copy is up to date and there are no conflicts, you are ready"
" to commit your changes. Select any file and/or folders you want to commit, "
"then "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Commit...</guimenuitem></menuchoice>."
" <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"The commit dialog will show you every changed file, including added, deleted"
" and unversioned files. If you don't want a changed file to be committed, "
"just uncheck that file. If you want to include an unversioned file, just "
"check that file to add it to the commit."
msgstr ""

#. (para)
msgid ""
"For information on the coloring and overlays of the items according to their"
" status, please see <xref linkend=\"tsvn-dug-wcstatus-2\"/>."
msgstr ""

#. (para)
msgid ""
"Items which have been switched to a different repository path are also "
"indicated using an <literal>(s)</literal> marker. You may have switched "
"something while working on a branch and forgotten to switch back to trunk. "
"This is your warning sign!"
msgstr ""

#. (title)
msgid "Commit files or folders?"
msgstr "Parashtro skedat ose dosjet?"

#. (para)
msgid ""
"When you commit files, the commit dialog shows only the files you have "
"selected. When you commit a folder the commit dialog will select the changed"
" files automatically. If you forget about a new file you created, committing"
" the folder will find it anyway. Committing a folder does "
"<emphasis>not</emphasis> mean that every file gets marked as changed; It "
"just makes your life easier by doing more work for you."
msgstr ""

#. (title)
msgid "Many unversioned files in the commit dialog"
msgstr ""

#. (para)
msgid ""
"add the file (or a wildcard extension) to the list of files to exclude on "
"the settings page. This will affect every working copy you have."
msgstr ""

#. (para)
msgid ""
"add the file to the <literal>svn:ignore</literal> list using "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Add to ignore "
"list</guimenuitem></menuchoice> This will only affect the directory on which"
" you set the <literal>svn:ignore</literal> property. Using the SVN Property "
"Dialog, you can alter the <literal>svn:ignore</literal> property for a "
"directory."
msgstr ""

#. (para)
msgid ""
"add the file to the <literal>svn:global-ignores</literal> list using "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Add to ignore list "
"(recursively)</guimenuitem></menuchoice> This will affect the directory on "
"which you set the <literal>svn:global-ignores</literal> property and all "
"subfolders as well."
msgstr ""

#. (para)
msgid ""
"If you think that the commit dialog shows you too many unversioned (e.g. "
"compiler generated or editor backup) files, there are several ways to handle"
" this. You can: <placeholder-1/> Read <xref linkend=\"tsvn-dug-ignore\"/> "
"for more information."
msgstr ""

#. (para)
msgid ""
"<action>Double clicking</action> on any modified file in the commit dialog "
"will launch the external diff tool to show your changes. The context menu "
"will give you more options, as shown in the screenshot. You can also drag "
"files from here into another application such as a text editor or an IDE."
msgstr ""

#. (para)
msgid ""
"You can select or deselect items by clicking on the checkbox to the left of "
"the item. For directories you can use "
"<keycap>Shift</keycap>-<action>select</action> to make the action recursive."
msgstr ""

#. (para)
msgid ""
"The columns displayed in the bottom pane are customizable. If you "
"<action>right click</action> on any column header you will see a context "
"menu allowing you to select which columns are displayed. You can also change"
" column width by using the drag handle which appears when you move the mouse"
" over a column boundary. These customizations are preserved, so you will see"
" the same headings next time."
msgstr ""

#. (para)
msgid ""
"By default when you commit changes, any locks that you hold on files are "
"released automatically after the commit succeeds. If you want to keep those "
"locks, make sure the <guilabel>Keep locks</guilabel> checkbox is checked. "
"The default state of this checkbox is taken from the "
"<literal>no_unlock</literal> option in the Subversion configuration file. "
"Read <xref linkend=\"tsvn-dug-settings-main\"/> for information on how to "
"edit the Subversion configuration file."
msgstr ""

#. (para)
msgid ""
"You can drag files into the commit dialog from elsewhere, so long as the "
"working copies are checked out from the same repository. For example, you "
"may have a huge working copy with several explorer windows open to look at "
"distant folders of the hierarchy. If you want to avoid committing from the "
"top level folder (with a lengthy folder crawl to check for changes) you can "
"open the commit dialog for one folder and drag in items from the other "
"windows to include within the same atomic commit."
msgstr ""

#. (para)
msgid ""
"You can drag unversioned files which reside within a working copy into the "
"commit dialog, and they will be SVN added automatically."
msgstr ""

#. (para)
msgid ""
"Dragging files from the list at the bottom of the commit dialog to the log "
"message edit box will insert the paths as plain text into that edit box. "
"This is useful if you want to write commit log messages that include the "
"paths that are affected by the commit."
msgstr ""

#. (title)
#. (title)
msgid "Repairing External Renames"
msgstr "Riparimi i Riemërimeve Eksternale"

#. (para)
#. (para)
msgid ""
"Sometimes files get renamed outside of Subversion, and they show up in the "
"file list as a missing file and an unversioned file. To avoid losing the "
"history you need to notify Subversion about the connection. Simply select "
"both the old name (missing) and the new name (unversioned) and use "
"<menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Repair "
"Move</guimenuitem></menuchoice> to pair the two files as a rename."
msgstr ""

#. (title)
#. (title)
msgid "Repairing External Copies"
msgstr "Riparimi i Kopjeve Eksternale"

#. (para)
#. (para)
msgid ""
"If you made a copy of a file but forgot to use the Subversion command to do "
"so, you can repair that copy so the new file doesn't lose its history. "
"Simply select both the old name (normal or modified) and the new name "
"(unversioned) and use <menuchoice><guimenu>Context "
"Menu</guimenu><guimenuitem>Repair Copy</guimenuitem></menuchoice> to pair "
"the two files as a copy."
msgstr ""

#. (title)
#. (title)
msgid "Change Lists"
msgstr "Listat e Ndryshimit"

#. (para)
msgid ""
"The commit dialog supports Subversion's changelist feature to help with "
"grouping related files together. Find out about this feature in <xref "
"linkend=\"tsvn-dug-changelists\"/>."
msgstr ""

#. (title)
msgid "Commit only parts of files"
msgstr ""

#. (para)
msgid ""
"Sometimes you want to only commit parts of the changes you made to a file. "
"Such a situation usually happens when you're working on something but then "
"an urgent fix needs to be committed, and that fix happens to be in the same "
"file you're working on."
msgstr ""

#. (para)
msgid ""
"<action>right click</action> on the file and use "
"<menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Restore after "
"commit</guimenuitem></menuchoice>. This will create a copy of the file as it"
" is. Then you can edit the file, e.g. in TortoiseMerge and undo all the "
"changes you don't want to commit. After saving those changes you can commit "
"the file."
msgstr ""

#. (para)
msgid ""
"After the commit is done, the copy of the file is restored automatically, "
"and you have the file with all your modifications that were not committed "
"back."
msgstr ""

#. (title)
msgid "Excluding Items from the Commit List"
msgstr ""

#. (para)
msgid ""
"Sometimes you have versioned files that change frequently but that you "
"really don't want to commit. Sometimes this indicates a flaw in your build "
"process - why are those files versioned? should you be using template files?"
" But occasionally it is inevitable. A classic reason is that your IDE "
"changes a timestamp in the project file every time you build. The project "
"file has to be versioned as it includes all the build settings, but it "
"doesn't need to be committed just because the timestamp changed."
msgstr ""

#. (para)
msgid ""
"To help out in awkward cases like this, we have reserved a changelist called"
" <literal>ignore-on-commit</literal>. Any file added to this changelist will"
" automatically be unchecked in the commit dialog. You can still commit "
"changes, but you have to select it manually in the commit dialog."
msgstr ""

#. (title)
msgid "Commit Log Messages"
msgstr ""

#. (para)
msgid ""
"Be sure to enter a log message which describes the changes you are "
"committing. This will help you to see what happened and when, as you browse "
"through the project log messages at a later date. The message can be as long"
" or as brief as you like; many projects have guidelines for what should be "
"included, the language to use, and sometimes even a strict format."
msgstr ""

#. (para)
msgid ""
"You can apply simple formatting to your log messages using a convention "
"similar to that used within emails. To apply styling to "
"<literal>text</literal>, use <literal>*text*</literal> for bold, "
"<literal>_text_</literal> for underlining, and <literal>^text^</literal> for"
" italics."
msgstr ""

#. (title)
msgid "The Commit Dialog Spellchecker"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> TortoiseSVN includes a spellchecker to help you get your "
"log messages right. This will highlight any mis-spelled words. Use the "
"context menu to access the suggested corrections. Of course, it doesn't know"
" <emphasis>every</emphasis> technical term that you do, so correctly spelt "
"words will sometimes show up as errors. But don't worry. You can just add "
"them to your personal dictionary using the context menu."
msgstr ""

#. (para)
msgid ""
"The log message window also includes a filename and function auto-completion"
" facility. This uses regular expressions to extract class and function names"
" from the (text) files you are committing, as well as the filenames "
"themselves. If a word you are typing matches anything in the list (after you"
" have typed at least 3 characters, or pressed <keycap>Ctrl+Space</keycap>), "
"a drop-down appears allowing you to select the full name. The regular "
"expressions supplied with TortoiseSVN are held in the TortoiseSVN "
"installation <filename>bin</filename> folder. You can also define your own "
"regexes and store them in "
"<filename>%APPDATA%\\TortoiseSVN\\autolist.txt</filename>. Of course your "
"private autolist will not be overwritten when you update your installation "
"of TortoiseSVN. If you are unfamiliar with regular expressions, take a look "
"at the introduction at <ulink "
"url=\"http://en.wikipedia.org/wiki/Regular_expression\"><citetitle>http://en.wikipedia.org/wiki/Regular_expression</citetitle></ulink>,"
" and the online documentation and tutorial at <ulink url=\"http://www"
".regular-expressions.info/\"><citetitle>http://www.regular-"
"expressions.info/</citetitle></ulink>."
msgstr ""

#. (para)
msgid ""
"Getting the regex just right can be tricky, so to help you sort out a "
"suitable expression there is a test dialog which allows you to enter an "
"expression and then type in filenames to test it against. Start it from the "
"command prompt using the command <literal>TortoiseProc.exe "
"/command:autotexttest</literal>."
msgstr ""

#. (para)
msgid ""
"You can re-use previously entered log messages. Just click on "
"<guibutton>Recent messages</guibutton> to view a list of the last few "
"messages you entered for this working copy. The number of stored messages "
"can be customized in the TortoiseSVN settings dialog."
msgstr ""

#. (para)
msgid ""
"You can clear all stored commit messages from the <guilabel>Saved "
"data</guilabel> page of TortoiseSVN's settings, or you can clear individual "
"messages from within the <guilabel>Recent messages</guilabel> dialog using "
"the <keycap>Delete</keycap> key."
msgstr ""

#. (para)
msgid ""
"If you want to include the checked paths in your log message, you can use "
"the command <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Paste "
"filename list</guimenuitem></menuchoice> in the edit control."
msgstr ""

#. (para)
msgid ""
"Another way to insert the paths into the log message is to simply drag the "
"files from the file list onto the edit control."
msgstr ""

#. (title)
msgid "Special Folder Properties"
msgstr ""

#. (para)
msgid ""
"There are several special folder properties which can be used to help give "
"more control over the formatting of commit log messages and the language "
"used by the spellchecker module. Read <xref linkend=\"tsvn-dug-"
"propertypage\"/> for further information."
msgstr ""

#. (title)
msgid "Integration with Bug Tracking Tools"
msgstr ""

#. (para)
msgid ""
"If you have activated the bug tracking system, you can set one or more "
"Issues in the <guilabel>Bug-ID / Issue-Nr:</guilabel> text box. Multiple "
"issues should be comma separated. Alternatively, if you are using regex-"
"based bug tracking support, just add your issue references as part of the "
"log message. Learn more in <xref linkend=\"tsvn-dug-bugtracker\"/>."
msgstr ""

#. (title)
msgid "Commit Progress"
msgstr ""

#. (title)
msgid "The Progress dialog showing a commit in progress"
msgstr ""

#. (para)
msgid ""
"After pressing <guibutton>OK</guibutton>, a dialog appears displaying the "
"progress of the commit. <placeholder-1/>"
msgstr ""

#. (term)
#. (term)
msgid "Blue"
msgstr "Kaltër"

#. (para)
msgid "Committing a modification."
msgstr ""

#. (term)
#. (term)
#. (term)
msgid "Purple"
msgstr "Vjollcë"

#. (para)
msgid "Committing a new addition."
msgstr ""

#. (term)
#. (term)
#. (term)
msgid "Dark red"
msgstr "Kuq Errët"

#. (para)
msgid "Committing a deletion or a replacement."
msgstr ""

#. (term)
#. (term)
#. (term)
msgid "Black"
msgstr "Zezë"

#. (para)
msgid "All other items."
msgstr "Të gjitha sendet tjera."

#. (para)
msgid ""
"The progress dialog uses colour coding to highlight different commit actions"
" <placeholder-1/>"
msgstr ""

#. (para)
#. (para)
#. (para)
msgid ""
"This is the default colour scheme, but you can customise those colours using"
" the settings dialog. Read <xref linkend=\"tsvn-dug-settings-colours\"/> for"
" more information."
msgstr ""

#. (title)
msgid "Update Your Working Copy With Changes From Others"
msgstr ""

#. (primary)
#. (primary)
msgid "update"
msgstr "përditëso"

#. (primary)
msgid "fetch changes"
msgstr ""

#. (title)
msgid "Progress dialog showing finished update"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> Periodically, you should ensure that changes done by others"
" get incorporated in your local working copy. The process of getting changes"
" from the server to your local copy is known as "
"<emphasis>updating</emphasis>. Updating may be done on single files, a set "
"of selected files, or recursively on entire directory hierarchies. To "
"update, select the files and/or directories you want, <action>right "
"click</action> and select "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Update</guimenuitem></menuchoice>"
" in the explorer context menu. A window will pop up displaying the progress "
"of the update as it runs. Changes done by others will be merged into your "
"files, keeping any changes you may have done to the same files. The "
"repository is <emphasis>not</emphasis> affected by an update."
msgstr ""

#. (para)
msgid "New item added to your WC."
msgstr ""

#. (para)
msgid ""
"Redundant item deleted from your WC, or missing item replaced in your WC."
msgstr ""

#. (term)
#. (term)
msgid "Green"
msgstr "Gjelbër"

#. (para)
msgid "Changes from repository successfully merged with your local changes."
msgstr ""

#. (term)
#. (term)
msgid "Bright red"
msgstr "Kuq Ndritur"

#. (para)
msgid ""
"Changes from repository merged with local changes, resulting in conflicts "
"which you need to resolve."
msgstr ""

#. (para)
msgid ""
"Unchanged item in your WC updated with newer version from the repository."
msgstr ""

#. (para)
msgid ""
"The progress dialog uses colour coding to highlight different update actions"
" <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"If you get any <emphasis>conflicts</emphasis> during an update (this can "
"happen if others changed the same lines in the same file as you did and "
"those changes don't match) then the dialog shows those conflicts in red. You"
" can <action>double click</action> on these lines to start the external "
"merge tool to resolve the conflicts."
msgstr ""

#. (para)
msgid ""
"When the update is complete, the progress dialog shows a summary of the "
"number of items updated, added, removed, conflicted, etc. below the file "
"list. This summary information can be copied to the clipboard using "
"<keycap>Ctrl+C</keycap>."
msgstr ""

#. (para)
msgid ""
"The standard Update command has no options and just updates your working "
"copy to the HEAD revision of the repository, which is the most common use "
"case. If you want more control over the update process, you should use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Update to "
"Revision...</guimenuitem></menuchoice> instead. This allows you to update "
"your working copy to a specific revision, not only to the most recent one. "
"Suppose your working copy is at revision 100, but you want it to reflect the"
" state which it had in revision 50 - then simply update to revision 50."
msgstr ""

#. (para)
msgid ""
"In the same dialog you can also choose the <firstterm>depth</firstterm> at "
"which to update the current folder. The terms used are described in <xref "
"linkend=\"tsvn-dug-checkout-depth\"/>. The default depth is "
"<guilabel>Working copy</guilabel>, which preserves the existing depth "
"setting. You can also set the depth <literal>sticky</literal> which means "
"subsequent updates will use that new depth, i.e. that depth is then used as "
"the default depth."
msgstr ""

#. (para)
msgid ""
"To make it easier to include or exclude specific items from the checkout "
"click the <guibutton>Choose items...</guibutton> button. This opens a new "
"dialog where you can check all items you want in your working copy and "
"uncheck all the items you don't want."
msgstr ""

#. (para)
msgid ""
"You can also choose whether to ignore any external projects in the update "
"(i.e. projects referenced using <literal>svn:externals</literal>)."
msgstr ""

#. (para)
msgid ""
"If you update a file or folder to a specific revision, you should not make "
"changes to those files. You will get <quote>out of date</quote> error "
"messages when you try to commit them! If you want to undo changes to a file "
"and start afresh from an earlier revision, you can rollback to a previous "
"revision from the revision log dialog. Take a look at <xref linkend=\"tsvn-"
"howto-rollback\"/> for further instructions, and alternative methods."
msgstr ""

#. (para)
msgid ""
"<menuchoice><guimenuitem>Update to Revision</guimenuitem></menuchoice> can "
"occasionally be useful to see what your project looked like at some earlier "
"point in its history. But in general, updating individual files to an "
"earlier revision is not a good idea as it leaves your working copy in an "
"inconsistent state. If the file you are updating has changed name, you may "
"even find that the file just disappears from your working copy because no "
"file of that name existed in the earlier revision. You should also note that"
" the item will show a normal green overlay, so it is indistinguishable from "
"files which are up-to-date."
msgstr ""

#. (para)
msgid ""
"If you simply want a local copy of an old version of a file it is better to "
"use the <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Save "
"revision to...</guimenuitem></menuchoice> command from the log dialog for "
"that file."
msgstr ""

#. (title)
msgid "Multiple Files/Folders"
msgstr "Skeda/Dosje të shumëfishta"

#. (para)
msgid ""
"If you select multiple files and folders in the explorer and then select "
"<menuchoice><guimenuitem>Update</guimenuitem></menuchoice>, all of those "
"files/folders are updated one by one. TortoiseSVN makes sure that all "
"files/folders which are from the same repository are updated to the exact "
"same revision! Even if between those updates another commit occurred."
msgstr ""

#. (title)
msgid "Resolving Conflicts"
msgstr ""

#. (primary)
msgid "tree conflict"
msgstr "konflikt trungu"

#. (primary)
msgid "resolve"
msgstr "zgjidh"

#. (term)
msgid "file conflicts"
msgstr "konflikte skedash"

#. (para)
msgid ""
"A file conflict occurs if two (or more) developers have changed the same few"
" lines of a file."
msgstr ""

#. (term)
msgid "tree conflicts"
msgstr "konflikte trungu"

#. (para)
msgid ""
"A tree conflict occurs when a developer moved/renamed/deleted a file or "
"folder, which another developer either also has moved/renamed/deleted or "
"just modified."
msgstr ""

#. (para)
msgid ""
"Once in a while, you will get a <emphasis>conflict</emphasis> when you "
"update/merge your files from the repository or when you switch your working "
"copy to a different URL. There are two kinds of conflicts: <placeholder-1/>"
msgstr ""

#. (title)
msgid "File Conflicts"
msgstr "Konflikte Skedash"

#. (term)
msgid "filename.ext.mine"
msgstr "filename.ext.mine"

#. (para)
msgid ""
"This is your file as it existed in your working copy before you updated your"
" working copy - that is, without conflict markers. This file has your latest"
" changes in it and nothing else."
msgstr ""

#. (term)
msgid "filename.ext.rOLDREV"
msgstr "filename.ext.rOLDREV"

#. (para)
msgid ""
"This is the file that was the BASE revision before you updated your working "
"copy. That is, it the file that you checked out before you made your latest "
"edits."
msgstr ""

#. (term)
msgid "filename.ext.rNEWREV"
msgstr "filename.ext.rNEWREV"

#. (para)
msgid ""
"This is the file that your Subversion client just received from the server "
"when you updated your working copy. This file corresponds to the HEAD "
"revision of the repository."
msgstr ""

#. (para)
msgid ""
"A file conflict occurs when two or more developers have changed the same few lines of a file. As Subversion knows nothing of your project, it leaves resolving the conflicts to the developers. The conflicting area in a text file is marked like this: <screen>\n"
"&lt;&lt;&lt;&lt;&lt;&lt;&lt; filename\n"
"    your changes\n"
"=======\n"
"    code merged from repository\n"
"&gt;&gt;&gt;&gt;&gt;&gt;&gt; revision\n"
"</screen> Also, for every conflicted file Subversion places three additional files in your directory: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"You can either launch an external merge tool / conflict editor with "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Edit "
"Conflicts</guimenuitem></menuchoice> or you can use any text editor to "
"resolve the conflict manually. You should decide what the code should look "
"like, do the necessary changes and save the file. Using a merge tool such as"
" TortoiseMerge or one of the other popular tools is generally the easier "
"option as they generally present the files involved in a 3-pane view and you"
" don't have to worry about the conflict markers. If you do use a text editor"
" then you should search for lines starting with the string "
"<literal>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</literal>."
msgstr ""

#. (para)
msgid ""
"Afterwards execute the command "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Resolved</guimenuitem></menuchoice>"
" and commit your modifications to the repository. Please note that the "
"Resolve command does not really resolve the conflict. It just removes the "
"<filename>filename.ext.mine</filename> and "
"<filename>filename.ext.r*</filename> files, to allow you to commit your "
"changes."
msgstr ""

#. (para)
msgid ""
"If you have conflicts with binary files, Subversion does not attempt to "
"merge the files itself. The local file remains unchanged (exactly as you "
"last changed it) and you have <filename>filename.ext.r*</filename> files. If"
" you want to discard your changes and keep the repository version, just use "
"the Revert command. If you want to keep your version and overwrite the "
"repository version, use the Resolved command, then commit your version."
msgstr ""

#. (para)
msgid ""
"You can use the Resolved command for multiple files if you right click on "
"the parent folder and select "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Resolved...</guimenuitem></menuchoice>"
" This will bring up a dialog listing all conflicted files in that folder, "
"and you can select which ones to mark as resolved."
msgstr ""

#. (title)
msgid "Property Conflicts"
msgstr ""

#. (para)
msgid ""
"A property conflict occurs when two or more developers have changed the same"
" property. As with file content, resolving the conflict can only be done by "
"the developers."
msgstr ""

#. (para)
msgid ""
"If one of the changes must override the other then choose the option to "
"<guilabel>Resolve using local property</guilabel> or <guilabel>Resolve using"
" remote property</guilabel>. If the changes must be merged then select "
"<guilabel>Manually edit property</guilabel>, sort out what the property "
"value should be and mark as resolved."
msgstr ""

#. (title)
msgid "Tree Conflicts"
msgstr "Konflikte Trungu"

#. (para)
msgid ""
"A tree conflict occurs when a developer moved/renamed/deleted a file or "
"folder, which another developer either also has moved/renamed/deleted or "
"just modified. There are many different situations that can result in a tree"
" conflict, and all of them require different steps to resolve the conflict."
msgstr ""

#. (para)
msgid ""
"When a file is deleted locally in Subversion, the file is also deleted from "
"the local file system, so even if it is part of a tree conflict it cannot "
"show a conflicted overlay and you cannot right click on it to resolve the "
"conflict. Use the <guilabel>Check for Modifications</guilabel> dialog "
"instead to access the <guilabel>Edit conflicts</guilabel> option."
msgstr ""

#. (para)
msgid ""
"TortoiseSVN can help find the right place to merge changes, but there may be"
" additional work required to sort out the conflicts. Remember that after an "
"update the working BASE will always contain the revision of each item as it "
"was in the repository at the time of update. If you revert a change after "
"updating it goes back to the repository state, not to the way it was when "
"you started making your own local changes."
msgstr ""

#. (title)
msgid "Local delete, incoming edit upon update"
msgstr ""

#. (para)
msgid ""
"Developer A modifies <filename>Foo.c</filename> and commits it to the "
"repository."
msgstr ""

#. (para)
msgid ""
"Developer B has simultaneously moved <filename>Foo.c</filename> to "
"<filename>Bar.c</filename> in his working copy, or simply deleted "
"<filename>Foo.c</filename> or its parent folder."
msgstr "Zhvilluesi B njëkohësisht ka lëvizur <filename>Foo.c</filename> tek <filename>Bar.c</filename> në kopjen e tij funksionale, ose thjesht ka grisur <filename>Foo.c</filename> ose dosjen ëmë."

#. (para)
msgid ""
"<filename>Foo.c</filename> has been deleted from working copy, but is marked"
" with a tree conflict."
msgstr "<filename>Foo.c</filename> është grisur nga kopja funksionale, por është shënuar me konflikt trungu."

#. (para)
msgid ""
"If the conflict results from a rename rather than a delete then "
"<filename>Bar.c</filename> is marked as added, but does not contain "
"developer A's modifications."
msgstr ""

#. (para)
#. (para)
msgid ""
"An update of developer B's working copy results in a tree conflict: "
"<placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"Developer B now has to choose whether to keep Developer A's changes. In the "
"case of a file rename, he can merge the changes to "
"<filename>Foo.c</filename> into the renamed file <filename>Bar.c</filename>."
" For simple file or directory deletions he can choose to keep the item with "
"Developer A's changes and discard the deletion. Or, by marking the conflict "
"as resolved without doing anything he effectively discards Developer A's "
"changes."
msgstr ""

#. (para)
msgid ""
"The conflict edit dialog offers to merge changes if it can find the original"
" file of the renamed <filename>Bar.c</filename>. Depending on where the "
"update was invoked, it may not be possible to find the source file."
msgstr ""

#. (title)
msgid "Local edit, incoming delete upon update"
msgstr ""

#. (para)
#. (para)
msgid ""
"Developer A moves <filename>Foo.c</filename> to <filename>Bar.c</filename> "
"and commits it to the repository."
msgstr ""

#. (para)
#. (para)
msgid "Developer B modifies <filename>Foo.c</filename> in his working copy."
msgstr ""

#. (para)
msgid "Or in the case of a folder move ..."
msgstr "Ose në rast të lëvizjes së dosjes ..."

#. (para)
msgid ""
"Developer A moves parent folder <filename>FooFolder</filename> to "
"<filename>BarFolder</filename> and commits it to the repository."
msgstr ""

#. (para)
msgid ""
"<filename>Bar.c</filename> is added to the working copy as a normal file."
msgstr "<filename>Bar.c</filename> është vendosur në kopjen funksionale si skedë normale."

#. (para)
msgid ""
"<filename>Foo.c</filename> is marked as added (with history) and has a tree "
"conflict."
msgstr "<filename>Foo.c</filename> është shënuar si e vendosur (me histori) dhe ka konflikt trungu."

#. (para)
msgid ""
"An update of developer B's working copy results in a tree conflict. For a "
"simple file conflict: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"<filename>BarFolder</filename> is added to the working copy as a normal "
"folder."
msgstr ""

#. (para)
msgid ""
"<filename>FooFolder</filename> is marked as added (with history) and has a "
"tree conflict."
msgstr ""

#. (para)
msgid "<filename>Foo.c</filename> is marked as modified."
msgstr "<filename>Foo.c</filename> është shënuar si e ndryshuar."

#. (para)
msgid "For a folder conflict: <placeholder-1/>"
msgstr "Për konflikt të dosjes: <placeholder-1/>"

#. (para)
#. (para)
msgid ""
"Developer B now has to decide whether to go with developer A's "
"reorganisation and merge her changes into the corresponding file in the new "
"structure, or simply revert A's changes and keep the local file."
msgstr ""

#. (para)
msgid ""
"To merge her local changes with the reshuffle, Developer B must first find "
"out to what filename the conflicted file <filename>Foo.c</filename> was "
"renamed/moved in the repository. This can be done by using the log dialog. "
"The changes must then be merged by hand as there is currently no way to "
"automate or even simplify this process. Once the changes have been ported "
"across, the conflicted path is redundant and can be deleted. In this case "
"use the <guilabel>Remove</guilabel> button in the conflict editor dialog to "
"clean up and mark the conflict as resolved."
msgstr ""

#. (para)
msgid ""
"If Developer B decides that A's changes were wrong then she must choose the "
"<guilabel>Keep</guilabel> button in the conflict editor dialog. This marks "
"the conflicted file/folder as resolved, but Developer A's changes need to be"
" removed by hand. Again the log dialog helps to track down what was moved."
msgstr ""

#. (title)
msgid "Local delete, incoming delete upon update"
msgstr ""

#. (para)
msgid ""
"Developer B moves <filename>Foo.c</filename> to <filename>Bix.c</filename>."
msgstr "Zhvilluesi B zhvendos <filename>Foo.c</filename> tek <filename>Bix.c</filename>."

#. (para)
msgid "<filename>Bix.c</filename> is marked as added with history."
msgstr "<filename>Bix.c</filename> është shënuar si e vendosur me histori."

#. (para)
msgid ""
"<filename>Bar.c</filename> is added to the working copy with status "
"'normal'."
msgstr "<filename>Bar.c</filename> është vendosur tek kopja funksionale nën gjendjen 'normal'."

#. (para)
msgid ""
"<filename>Foo.c</filename> is marked as deleted and has a tree conflict."
msgstr "<filename>Foo.c</filename> është shënuar si e grisur dhe ka konflikt trungu."

#. (para)
msgid ""
"To resolve this conflict, Developer B has to find out to what filename the "
"conflicted file <filename>Foo.c</filename> was renamed/moved in the "
"repository. This can be done by using the log dialog."
msgstr ""

#. (para)
#. (para)
msgid ""
"Then developer B has to decide which new filename of "
"<filename>Foo.c</filename> to keep - the one done by developer A or the "
"rename done by himself."
msgstr ""

#. (para)
#. (para)
msgid ""
"After developer B has manually resolved the conflict, the tree conflict has "
"to be marked as resolved with the button in the conflict editor dialog."
msgstr ""

#. (title)
msgid "Local missing, incoming edit upon merge"
msgstr ""

#. (para)
msgid ""
"Developer A working on trunk modifies <filename>Foo.c</filename> and commits"
" it to the repository"
msgstr ""

#. (para)
msgid ""
"Developer B working on a branch moves <filename>Foo.c</filename> to "
"<filename>Bar.c</filename> and commits it to the repository"
msgstr ""

#. (para)
msgid ""
"<filename>Bar.c</filename> is already in the working copy with status "
"'normal'."
msgstr "<filename>Bar.c</filename> tanimë gjendet në kopjen funksionale nën statutin 'normal'."

#. (para)
msgid "<filename>Foo.c</filename> is marked as missing with a tree conflict."
msgstr ""

#. (para)
#. (para)
#. (para)
msgid ""
"A merge of developer A's trunk changes to developer B's branch working copy "
"results in a tree conflict: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"To resolve this conflict, Developer B has to mark the file as resolved in "
"the conflict editor dialog, which will remove it from the conflict list. She"
" then has to decide whether to copy the missing file "
"<filename>Foo.c</filename> from the repository to the working copy, whether "
"to merge Developer A's changes to <filename>Foo.c</filename> into the "
"renamed <filename>Bar.c</filename> or whether to ignore the changes by "
"marking the conflict as resolved and doing nothing else."
msgstr ""

#. (para)
msgid ""
"Note that if you copy the missing file from the repository and then mark as "
"resolved, your copy will be removed again. You have to resolve the conflict "
"first."
msgstr ""

#. (title)
msgid "Local edit, incoming delete upon merge"
msgstr ""

#. (para)
#. (para)
msgid ""
"Developer A working on trunk moves <filename>Foo.c</filename> to "
"<filename>Bar.c</filename> and commits it to the repository."
msgstr ""

#. (para)
msgid ""
"Developer B working on a branch modifies <filename>Foo.c</filename> and "
"commits it to the repository."
msgstr ""

#. (para)
msgid ""
"There is an equivalent case for folder moves, but it is not yet detected in "
"Subversion 1.6 ..."
msgstr ""

#. (para)
msgid ""
"Developer A working on trunk moves parent folder "
"<filename>FooFolder</filename> to <filename>BarFolder</filename> and commits"
" it to the repository."
msgstr ""

#. (para)
msgid ""
"Developer B working on a branch modifies <filename>Foo.c</filename> in her "
"working copy."
msgstr ""

#. (para)
msgid "<filename>Bar.c</filename> is marked as added."
msgstr "<filename>Bar.c</filename> është shënuar si e vendosur."

#. (para)
msgid "<filename>Foo.c</filename> is marked as modified with a tree conflict."
msgstr ""

#. (para)
msgid ""
"To merge her local changes with the reshuffle, Developer B must first find "
"out to what filename the conflicted file <filename>Foo.c</filename> was "
"renamed/moved in the repository. This can be done by using the log dialog "
"for the merge source. The conflict editor only shows the log for the working"
" copy as it does not know which path was used in the merge, so you will have"
" to find that yourself. The changes must then be merged by hand as there is "
"currently no way to automate or even simplify this process. Once the changes"
" have been ported across, the conflicted path is redundant and can be "
"deleted. In this case use the <guilabel>Remove</guilabel> button in the "
"conflict editor dialog to clean up and mark the conflict as resolved."
msgstr ""

#. (para)
msgid ""
"If Developer B decides that A's changes were wrong then she must choose the "
"<guilabel>Keep</guilabel> button in the conflict editor dialog. This marks "
"the conflicted file/folder as resolved, but Developer A's changes need to be"
" removed by hand. Again the log dialog for the merge source helps to track "
"down what was moved."
msgstr ""

#. (title)
msgid "Local delete, incoming delete upon merge"
msgstr ""

#. (para)
msgid ""
"Developer B working on a branch moves <filename>Foo.c</filename> to "
"<filename>Bix.c</filename> and commits it to the repository."
msgstr ""

#. (para)
msgid "<filename>Bix.c</filename> is marked with normal (unmodified) status."
msgstr "<filename>Bix.c</filename> është shënuar me statutin normal (pa ndryshuar)."

#. (para)
msgid "<filename>Bar.c</filename> is marked as added with history."
msgstr "<filename>Bar.c</filename> është shënuar si e vendosur me histori."

#. (para)
msgid ""
"<filename>Foo.c</filename> is marked as missing and has a tree conflict."
msgstr "<filename>Foo.c</filename> është shënuar që mungon dhe ka konflikt trungu."

#. (para)
msgid ""
"To resolve this conflict, Developer B has to find out to what filename the "
"conflicted file <filename>Foo.c</filename> was renamed/moved in the "
"repository. This can be done by using the log dialog for the merge source. "
"The conflict editor only shows the log for the working copy as it does not "
"know which path was used in the merge, so you will have to find that "
"yourself."
msgstr ""

#. (title)
msgid "Other tree conflicts"
msgstr "Konflikte tjera trungu"

#. (para)
msgid ""
"There are other cases which are labelled as tree conflicts simply because "
"the conflict involves a folder rather than a file. For example if you add a "
"folder with the same name to both trunk and branch and then try to merge you"
" will get a tree conflict. If you want to keep the folder from the merge "
"target, just mark the conflict as resolved. If you want to use the one in "
"the merge source then you need to SVN delete the one in the target first and"
" run the merge again. If you need anything more complicated then you have to"
" resolve manually."
msgstr ""

#. (title)
msgid "Getting Status Information"
msgstr ""

#. (primary)
#. (primary)
msgid "status"
msgstr "statuti"

#. (primary)
msgid "view changes"
msgstr "shih ndryshimet"

#. (primary)
msgid "working copy status"
msgstr "statuti i kopjes funksionale"

#. (para)
msgid ""
"While you are working on your working copy you often need to know which "
"files you have changed/added/removed or renamed, or even which files got "
"changed and committed by others."
msgstr ""

#. (primary)
#. (primary)
msgid "overlays"
msgstr ""

#. (primary)
msgid "icons"
msgstr "ikonat"

#. (para)
msgid ""
"Now that you have checked out a working copy from a Subversion repository "
"you can see your files in the windows explorer with changed icons. This is "
"one of the reasons why TortoiseSVN is so popular. TortoiseSVN adds a so "
"called overlay icon to each file icon which overlaps the original file icon."
" Depending on the Subversion status of the file the overlay icon is "
"different."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"../images/InSubVersionIcon.png\"/> A fresh checked out "
"working copy has a green checkmark as overlay. That means the Subversion "
"status is <emphasis>normal</emphasis>."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"../images/ModifiedIcon.png\"/> As soon as you start "
"editing a file, the status changes to <emphasis>modified</emphasis> and the "
"icon overlay then changes to a red exclamation mark. That way you can easily"
" see which files were changed since you last updated your working copy and "
"need to be committed."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"../images/ConflictIcon.png\"/> If during an update a "
"<emphasis>conflict</emphasis> occurs then the icon changes to a yellow "
"exclamation mark."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"../images/ReadOnlyIcon.png\"/> If you have set the "
"<literal>svn:needs-lock</literal> property on a file, Subversion makes that "
"file read-only until you get a lock on that file. Such files have this "
"overlay to indicate that you have to get a lock first before you can edit "
"that file."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"../images/LockedIcon.png\"/> If you hold a lock on a "
"file, and the Subversion status is <emphasis>normal</emphasis>, this icon "
"overlay reminds you that you should release the lock if you are not using it"
" to allow others to commit their changes to the file."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"../images/DeletedIcon.png\"/> This icon shows you that "
"some files or folders inside the current folder have been scheduled to be "
"<emphasis>deleted</emphasis> from version control or a file under version "
"control is missing in a folder."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"../images/AddedIcon.png\"/> The plus sign tells you that "
"a file or folder has been scheduled to be <emphasis>added</emphasis> to "
"version control."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"../images/IgnoredIcon.png\"/> The bar sign tells you that"
" a file or folder is <emphasis>ignored</emphasis> for version control "
"purposes. This overlay is optional."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"../images/UnversionedIcon.png\"/> This icon shows files "
"and folders which are not under version control, but have not been ignored. "
"This overlay is optional."
msgstr ""

#. (para)
msgid ""
"In fact, you may find that not all of these icons are used on your system. "
"This is because the number of overlays allowed by Windows is very limited "
"and if you are also using an old version of TortoiseCVS, then there are not "
"enough overlay slots available. TortoiseSVN tries to be a <quote>Good "
"Citizen (TM)</quote> and limits its use of overlays to give other apps a "
"chance too."
msgstr ""

#. (para)
msgid ""
"Now that there are more Tortoise clients around (TortoiseCVS, TortoiseHg, "
"...) the icon limit becomes a real problem. To work around this, the "
"TortoiseSVN project introduced a common shared icon set, loaded as a DLL, "
"which can be used by all Tortoise clients. Check with your client provider "
"to see if this has been integrated yet :-)"
msgstr ""

#. (para)
msgid ""
"For a description of how icon overlays correspond to Subversion status and "
"other technical details, read <xref linkend=\"tsvn-app-internals-"
"overlays\"/>."
msgstr ""

#. (title)
msgid "Detailed Status"
msgstr "Statuti i Detajuar"

#. (primary)
msgid "windows properties"
msgstr ""

#. (title)
msgid "Explorer property page, Subversion tab"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> Sometimes you want to have more detailed information about "
"a file/directory than just the icon overlay. You can get all the information"
" Subversion provides in the explorer properties dialog. Just select the file"
" or directory and select <menuchoice><guimenu>Windows "
"Menu</guimenu><guimenuitem>properties</guimenuitem></menuchoice> in the "
"context menu (note: this is the normal properties menu entry the explorer "
"provides, not the one in the TortoiseSVN submenu!). In the properties dialog"
" box TortoiseSVN has added a new property page for files/folders under "
"Subversion control, where you can see all relevant information about the "
"selected file/directory."
msgstr ""

#. (title)
msgid "TortoiseSVN Columns In Windows Explorer"
msgstr "Kolonat e TortoiseSVN Në Windows Explorer"

#. (primary)
msgid "Explorer Columns"
msgstr ""

#. (para)
msgid ""
"The same information which is available from the icon overlays (and much "
"more) can be displayed as additional columns in Windows Explorer's Details "
"View."
msgstr ""

#. (para)
msgid ""
"Simply right click on one of the headings of a column, choose "
"<guimenuitem>More...</guimenuitem> from the context menu displayed. A dialog"
" will appear where you can specify the columns and their order, which is "
"displayed in the <quote>Detailed View</quote>. Scroll down until the entries"
" starting with SVN come into view. Check the ones you would like to have "
"displayed and close the dialog by pressing <guibutton>OK</guibutton>. The "
"columns will be appended to the right of those currently displayed. You can "
"reorder them by drag and drop, or resize them, so that they fit your needs."
msgstr ""

#. (para)
msgid ""
"The additional columns in the Windows Explorer are not available on Vista, "
"since Microsoft decided to not allow such columns for "
"<emphasis>all</emphasis> files anymore but only for specific file types."
msgstr ""

#. (para)
msgid ""
"If you want the current layout to be displayed in all your working copies, "
"you may want to make this the default view."
msgstr ""

#. (title)
msgid "Local and Remote Status"
msgstr ""

#. (primary)
msgid "modifications"
msgstr "ndryshimet"

#. (title)
#. (title)
msgid "Check for Modifications"
msgstr "Kontrollo për Ndryshime"

#. (para)
msgid ""
"<placeholder-1/> It's often very useful to know which files you have changed"
" and also which files got changed and committed by others. That's where the "
"command <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Check For "
"Modifications...</guimenuitem></menuchoice> comes in handy. This dialog will"
" show you every file that has changed in any way in your working copy, as "
"well as any unversioned files you may have."
msgstr ""

#. (para)
msgid ""
"If you click on the <guibutton>Check Repository</guibutton> then you can "
"also look for changes in the repository. That way you can check before an "
"update if there's a possible conflict. You can also update selected files "
"from the repository without updating the whole folder. By default, the "
"<guibutton>Check Repository</guibutton> button only fetches the remote "
"status with the checkout depth of the working copy. If you want to see all "
"files and folders in the repository, even those you have not checked out, "
"then you have to hold down the <keycap>Shift</keycap> key when you click on "
"the <guibutton>Check Repository</guibutton> button."
msgstr ""

#. (para)
msgid "Locally modified items."
msgstr "Sendet e ndryshuara në kompjuterin tuaj."

#. (para)
msgid ""
"Added items. Items which have been added with history have a "
"<literal>+</literal> sign in the <guilabel>Text status</guilabel> column, "
"and a tooltip shows where the item was copied from."
msgstr ""

#. (para)
msgid "Deleted or missing items."
msgstr "Sendet e grisura ose që mungojnë."

#. (para)
msgid ""
"Items modified locally and in the repository. The changes will be merged on "
"update. These <emphasis>may</emphasis> produce conflicts on update."
msgstr ""

#. (para)
msgid ""
"Items modified locally and deleted in repository, or modified in repository "
"and deleted locally. These <emphasis>will</emphasis> produce conflicts on "
"update."
msgstr ""

#. (para)
msgid "Unchanged and unversioned items."
msgstr "Sendet e pa ndryshuara dhe të pa përditësuara."

#. (para)
msgid ""
"The dialog uses colour coding to highlight the status. <placeholder-1/>"
msgstr ""

#. (para)
msgid "Checkout depth <literal>empty</literal>, meaning only the item itself."
msgstr ""

#. (para)
msgid ""
"Checkout depth <literal>files</literal>, meaning only the item itself and "
"all file children without child folders."
msgstr ""

#. (para)
msgid ""
"Checkout depth <literal>immediates</literal>, meaning only the item itself "
"and all file and folder children, but without children of the child folders."
msgstr ""

#. (para)
msgid "Nested items, i.e., working copies inside the working copy."
msgstr ""

#. (para)
msgid ""
"External items, i.e., all items that are added via an "
"<literal>svn:externals</literal> property."
msgstr ""

#. (para)
msgid ""
"Items that are restored after a commit. See <xref linkend=\"tsvn-dug-commit-"
"restore\"/> for details."
msgstr ""

#. (para)
msgid ""
"Items that have property modifications, but only to the "
"<literal>svn:mergeinfo</literal> property. If any other property is "
"modified, the overlay is not used."
msgstr ""

#. (para)
msgid ""
"Overlay icons are used to indicate other states as well. The screenshot "
"below shows all the possible overlays that are shown if necessary. <graphic "
"fileref=\"../images/statuslistoverlays.png\"/> Overlays are shown for the "
"following states: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"Items which have been switched to a different repository path are also "
"indicated using an <literal>(s)</literal> marker. You may have switched "
"something while working on a branch and forgotten to switch back to trunk. "
"This is your warning sign! The context menu allows you to switch them back "
"to the normal path again."
msgstr ""

#. (para)
msgid ""
"From the context menu of the dialog you can show a diff of the changes. "
"Check the local changes <emphasis>you</emphasis> made using "
"<menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Compare with "
"Base</guimenuitem></menuchoice>. Check the changes in the repository made by"
" others using <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Show "
"Differences as Unified Diff</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"You can also revert changes in individual files. If you have deleted a file "
"accidentally, it will show up as <emphasis>Missing</emphasis> and you can "
"use <emphasis>Revert</emphasis> to recover it."
msgstr ""

#. (para)
msgid ""
"Unversioned and ignored files can be sent to the recycle bin from here using"
" <menuchoice><guimenu>Context "
"Menu</guimenu><guimenuitem>Delete</guimenuitem></menuchoice>. If you want to"
" delete files permanently (bypassing the recycle bin) hold the "
"<keycap>Shift</keycap> key while clicking on <guilabel>Delete</guilabel>."
msgstr ""

#. (para)
msgid ""
"If you want to examine a file in detail, you can drag it from here into "
"another application such as a text editor or IDE, or you can save a copy "
"simply by dragging it into a folder in explorer."
msgstr ""

#. (para)
msgid ""
"The columns are customizable. If you <action>right click</action> on any "
"column header you will see a context menu allowing you to select which "
"columns are displayed. You can also change column width by using the drag "
"handle which appears when you move the mouse over a column boundary. These "
"customizations are preserved, so you will see the same headings next time."
msgstr ""

#. (para)
msgid ""
"If you are working on several unrelated tasks at once, you can also group "
"files together into changelists. Read <xref linkend=\"tsvn-dug-commit-"
"changelists\"/> for more information."
msgstr ""

#. (para)
msgid ""
"At the bottom of the dialog you can see a summary of the range of repository"
" revisions in use in your working copy. These are the "
"<emphasis>commit</emphasis> revisions, not the <emphasis>update</emphasis> "
"revisions; they represent the range of revisions where these files were last"
" committed, not the revisions to which they have been updated. Note that the"
" revision range shown applies only to the items displayed, not to the entire"
" working copy. If you want to see that information for the whole working "
"copy you must check the <guilabel>Show unmodified files</guilabel> checkbox."
msgstr ""

#. (para)
msgid ""
"If you want a flat view of your working copy, i.e. showing all files and "
"folders at every level of the folder hierarchy, then the <guilabel>Check for"
" Modifications</guilabel> dialog is the easiest way to achieve that. Just "
"check the <guilabel>Show unmodified files</guilabel> checkbox to show all "
"files in your working copy."
msgstr ""

#. (title)
msgid "Viewing Diffs"
msgstr ""

#. (primary)
msgid "diffing"
msgstr ""

#. (para)
msgid ""
"Often you want to look inside your files, to have a look at what you've "
"changed. You can accomplish this by selecting a file which has changed, and "
"selecting <guimenuitem>Diff</guimenuitem> from TortoiseSVN's context menu. "
"This starts the external diff-viewer, which will then compare the current "
"file with the pristine copy (<literal>BASE</literal> revision), which was "
"stored after the last checkout or update."
msgstr ""

#. (para)
msgid ""
"Even when not inside a working copy or when you have multiple versions of "
"the file lying around, you can still display diffs:"
msgstr ""

#. (para)
msgid ""
"Select the two files you want to compare in explorer (e.g. using "
"<keycap>Ctrl</keycap> and the mouse) and choose "
"<guimenuitem>Diff</guimenuitem> from TortoiseSVN's context menu. The file "
"clicked last (the one with the focus, i.e. the dotted rectangle) will be "
"regarded as the later one."
msgstr ""

#. (primary)
msgid "changelist"
msgstr "lista e ndryshimeve"

#. (para)
msgid ""
"In an ideal world, you only ever work on one thing at a time, and your "
"working copy contains only one set of logical changes. OK, back to reality. "
"It often happens that you have to work on several unrelated tasks at once, "
"and when you look in the commit dialog, all the changes are mixed in "
"together. The <firstterm>changelist</firstterm> feature helps you group "
"files together, making it easier to see what you are doing. Of course this "
"can only work if the changes do not overlap. If two different tasks affect "
"the same file, there is no way to separate the changes."
msgstr ""

#. (para)
msgid ""
"You can see changelists in several places, but the most important ones are "
"the commit dialog and the check-for-modifications dialog. Let's start in the"
" check-for-modifications dialog after you have worked on several features "
"and many files. When you first open the dialog, all the changed files are "
"listed together. Suppose you now want to organise things and group those "
"files according to feature."
msgstr ""

#. (para)
msgid ""
"Select one or more files and use <menuchoice><guimenu>Context "
"Menu</guimenu><guimenuitem>Move to changelist</guimenuitem></menuchoice> to "
"add an item to a changelist. Initially there will be no changelists, so the "
"first time you do this you will create a new changelist. Give it name which "
"describes what you are using it for, and click <guibutton>OK</guibutton>. "
"The dialog will now change to show groups of items."
msgstr ""

#. (para)
msgid ""
"Once you have created a changelist you can drag and drop items into it, "
"either from another changelist, or from Windows Explorer. Dragging from "
"Explorer can be useful as it allows you to add items to a changelist before "
"the file is modified. You could do that from the check-for-modifications "
"dialog, but only by displaying all unmodified files."
msgstr ""

#. (title)
msgid "Commit dialog with Changelists"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> In the commit dialog you can see those same files, grouped "
"by changelist. Apart from giving an immediate visual indication of "
"groupings, you can also use the group headings to select which files to "
"commit."
msgstr ""

#. (para)
msgid ""
"On XP, there is a context menu when you right click on a group heading which"
" gives you the choice to check or uncheck all group entries. On Vista "
"however the context menu is not necessary. Click on the group header to "
"select all entries, then check one of the selected entries to check all."
msgstr ""

#. (para)
msgid ""
"TortoiseSVN reserves one changelist name for its own use, namely <literal"
">ignore-on-commit</literal>. This is used to mark versioned files which you "
"almost never want to commit even though they have local changes. This "
"feature is described in <xref linkend=\"tsvn-dug-commit-ignore\"/>."
msgstr ""

#. (para)
msgid ""
"When you commit files belonging to a changelist then normally you would "
"expect that the changelist membership is no longer needed. So by default, "
"files are removed from changelists automatically on commit. If you wish to "
"retain the file in its changelist, use the <guilabel>Keep "
"changelists</guilabel> checkbox at the bottom of the commit dialog."
msgstr ""

#. (para)
msgid ""
"Changelists are purely a local client feature. Creating and removing "
"changelists will not affect the repository, nor anyone else's working copy. "
"They are simply a convenient way for you to organise your files."
msgstr ""

#. (title)
msgid "Revision Log Dialog"
msgstr ""

#. (primary)
msgid "log"
msgstr ""

#. (primary)
msgid "history"
msgstr "historia"

#. (primary)
msgid "commit messages"
msgstr "dërgo porosi"

#. (primary)
msgid "log messages"
msgstr ""

#. (para)
msgid ""
"For every change you make and commit, you should provide a log message for "
"that change. That way you can later find out what changes you made and why, "
"and you have a detailed log for your development process."
msgstr ""

#. (para)
msgid ""
"The top pane shows a list of revisions where changes to the file/folder have"
" been committed. This summary includes the date and time, the person who "
"committed the revision and the start of the log message."
msgstr ""

#. (para)
msgid ""
"Lines shown in blue indicate that something has been copied to this "
"development line (perhaps from a branch)."
msgstr ""

#. (para)
msgid "The middle pane shows the full log message for the selected revision."
msgstr ""

#. (para)
msgid ""
"The bottom pane shows a list of all files and folders that were changed as "
"part of the selected revision."
msgstr ""

#. (para)
msgid ""
"The Revision Log Dialog retrieves all those log messages and shows them to "
"you. The display is divided into 3 panes. <placeholder-1/> But it does much "
"more than that - it provides context menu commands which you can use to get "
"even more information about the project history."
msgstr ""

#. (title)
msgid "Invoking the Revision Log Dialog"
msgstr ""

#. (title)
msgid "The Revision Log Dialog"
msgstr ""

#. (para)
msgid "From the TortoiseSVN context submenu"
msgstr ""

#. (para)
msgid "From the property page"
msgstr ""

#. (para)
msgid ""
"From the Progress dialog after an update has finished. Then the Log dialog "
"only shows those revisions which were changed since your last update"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> There are several places from where you can show the Log "
"dialog: <placeholder-2/>"
msgstr ""

#. (para)
msgid ""
"If the repository is unavailable you will see the <guilabel>Want to go "
"offline?</guilabel> dialog, described in <xref linkend=\"tsvn-dug-showlog-"
"cache\"/>."
msgstr ""

#. (title)
msgid "Revision Log Actions"
msgstr ""

#. (para)
msgid ""
"The top pane has an <guilabel>Actions</guilabel> column containing icons "
"that summarize what has been done in that revision. There are four different"
" icons, each shown in its own column."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"../images/ActionModifiedIcon.png\"/> If a revision "
"modified a file or directory, the <emphasis>modified</emphasis> icon is "
"shown in the first column."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"../images/ActionAddedIcon.png\"/> If a revision added a "
"file or directory, the <emphasis>added</emphasis> icon is shown in the "
"second column."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"../images/ActionDeletedIcon.png\"/> If a revision deleted"
" a file or directory, the <emphasis>deleted</emphasis> icon is shown in the "
"third column."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"../images/ActionReplacedIcon.png\"/> If a revision "
"replaced a file or directory, the <emphasis>replaced</emphasis> icon is "
"shown in the fourth column."
msgstr ""

#. (title)
msgid "Getting Additional Information"
msgstr ""

#. (title)
msgid "The Revision Log Dialog Top Pane with Context Menu"
msgstr ""

#. (term)
msgid "Compare with working copy"
msgstr ""

#. (para)
msgid ""
"Compare the selected revision with your working copy. The default Diff-Tool "
"is TortoiseMerge which is supplied with TortoiseSVN. If the log dialog is "
"for a folder, this will show you a list of changed files, and allow you to "
"review the changes made to each file individually."
msgstr ""

#. (term)
msgid "Compare and blame with working BASE"
msgstr ""

#. (para)
msgid ""
"Blame the selected revision, and the file in your working BASE and compare "
"the blame reports using a visual diff tool. Read <xref linkend=\"tsvn-dug-"
"blame-diffs\"/> for more detail. (files only)"
msgstr ""

#. (term)
msgid "Show changes as unified diff"
msgstr ""

#. (para)
msgid ""
"View the changes made in the selected revision as a Unified-Diff file (GNU "
"patch format). This shows only the differences with a few lines of context. "
"It is harder to read than a visual file compare, but will show all file "
"changes together in a compact format."
msgstr ""

#. (para)
msgid ""
"If you hold down the <keycap>Shift</keycap> key when clicking on the menu "
"item, a dialog shows up first where you can set options for the unified "
"diff. These options include the ability to ignore changes in line endings "
"and whitespaces."
msgstr ""

#. (term)
msgid "Compare with previous revision"
msgstr "Krahaso me versionin paraprak"

#. (para)
msgid ""
"Compare the selected revision with the previous revision. This works in a "
"similar manner to comparing with your working copy. For folders this option "
"will first show the changed files dialog allowing you to select files to "
"compare."
msgstr ""

#. (term)
msgid "Compare and blame with previous revision"
msgstr ""

#. (para)
msgid ""
"Show the changed files dialog allowing you to select files. Blame the "
"selected revision, and the previous revision, and compare the results using "
"a visual diff tool. (folders only)"
msgstr ""

#. (term)
#. (term)
#. (term)
msgid "Save revision to..."
msgstr "Ruaje rivlerësimin tek..."

#. (para)
msgid ""
"Save the selected revision to a file so you have an older version of that "
"file. (files only)"
msgstr ""

#. (term)
#. (term)
msgid "Open / Open with..."
msgstr "Hape / Hape me..."

#. (para)
msgid ""
"Open the selected file, either with the default viewer for that file type, "
"or with a program you choose. (files only)"
msgstr ""

#. (term)
#. (term)
msgid "Blame..."
msgstr "Fajëso..."

#. (para)
msgid "Blame the file up to the selected revision. (files only)"
msgstr ""

#. (term)
msgid "Browse repository"
msgstr ""

#. (para)
msgid ""
"Open the repository browser to examine the selected file or folder in the "
"repository as it was at the selected revision."
msgstr ""

#. (term)
msgid "Create branch/tag from revision"
msgstr ""

#. (para)
msgid ""
"Create a branch or tag from a selected revision. This is useful e.g. if you "
"forgot to create a tag and already committed some changes which weren't "
"supposed to get into that release."
msgstr ""

#. (term)
msgid "Update item to revision"
msgstr "Përditëso sendin tek rivlerësimi"

#. (para)
msgid ""
"Update your working copy to the selected revision. Useful if you want to "
"have your working copy reflect a time in the past, or if there have been "
"further commits to the repository and you want to update your working copy "
"one step at a time. It is best to update a whole directory in your working "
"copy, not just one file, otherwise your working copy could be inconsistent."
msgstr ""

#. (para)
msgid ""
"If you want to undo an earlier change permanently, use <guilabel>Revert to "
"this revision</guilabel> instead."
msgstr ""

#. (term)
msgid "Revert to this revision"
msgstr ""

#. (para)
msgid ""
"Revert to an earlier revision. If you have made several changes, and then "
"decide that you really want to go back to how things were in revision N, "
"this is the command you need. The changes are undone in your working copy so"
" this operation does <emphasis>not</emphasis> affect the repository until "
"you commit the changes. Note that this will undo <emphasis>all</emphasis> "
"changes made after the selected revision, replacing the file/folder with the"
" earlier version."
msgstr ""

#. (para)
#. (para)
msgid ""
"If your working copy is in an unmodified state, after you perform this "
"action your working copy will show as modified. If you already have local "
"changes, this command will merge the <emphasis>undo</emphasis> changes into "
"your working copy."
msgstr ""

#. (para)
msgid ""
"What is happening internally is that Subversion performs a reverse merge of "
"all the changes made after the selected revision, undoing the effect of "
"those previous commits."
msgstr ""

#. (para)
msgid ""
"If after performing this action you decide that you want to <emphasis>undo "
"the undo</emphasis> and get your working copy back to its previous "
"unmodified state, you should use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Revert</guimenuitem></menuchoice>"
" from within Windows Explorer, which will discard the local modifications "
"made by this reverse merge action."
msgstr ""

#. (para)
msgid ""
"If you simply want to see what a file or folder looked like at an earlier "
"revision, use <guilabel>Update to revision</guilabel> or <guilabel>Save "
"revision as...</guilabel> instead."
msgstr ""

#. (term)
#. (term)
msgid "Revert changes from this revision"
msgstr ""

#. (para)
msgid ""
"Undo changes from which were made in the selected revision. The changes are "
"undone in your working copy so this operation does <emphasis>not</emphasis> "
"affect the repository at all! Note that this will undo the changes made in "
"that revision only; it does not replace your working copy with the entire "
"file at the earlier revision. This is very useful for undoing an earlier "
"change when other unrelated changes have been made since."
msgstr ""

#. (para)
msgid ""
"What is happening internally is that Subversion performs a reverse merge of "
"that one revision, undoing its effect from a previous commit."
msgstr ""

#. (para)
msgid ""
"You can <emphasis>undo the undo</emphasis> as described above in "
"<guilabel>Revert to this revision</guilabel>."
msgstr ""

#. (term)
msgid "Merge revision to..."
msgstr "Bashko rivlerësimin tek..."

#. (para)
msgid ""
"Merge the selected revision(s) into a different working copy. A folder "
"selection dialog allows you to choose the working copy to merge into, but "
"after that there is no confirmation dialog, nor any opportunity to try a "
"test merge. It is a good idea to merge into an unmodified working copy so "
"that you can revert the changes if it doesn't work out! This is a useful "
"feature if you want to merge selected revisions from one branch to another."
msgstr ""

#. (term)
msgid "Checkout..."
msgstr "Kontrollo..."

#. (para)
msgid ""
"Make a fresh checkout of the selected folder at the selected revision. This "
"brings up a dialog for you to confirm the URL and revision, and select a "
"location for the checkout."
msgstr ""

#. (term)
#. (term)
#. (term)
msgid "Export..."
msgstr "Eksporto..."

#. (para)
msgid ""
"Export the selected file/folder at the selected revision. This brings up a "
"dialog for you to confirm the URL and revision, and select a location for "
"the export."
msgstr ""

#. (term)
msgid "Edit author / log message"
msgstr ""

#. (para)
msgid ""
"Edit the log message or author attached to a previous commit. Read <xref "
"linkend=\"tsvn-dug-showlog-4\"/> to find out how this works."
msgstr ""

#. (term)
msgid "Show revision properties"
msgstr ""

#. (para)
msgid ""
"View and edit any revision property, not just log message and author. Refer "
"to <xref linkend=\"tsvn-dug-showlog-4\"/>."
msgstr ""

#. (term)
#. (term)
msgid "Copy to clipboard"
msgstr "Kopjo në tabelë"

#. (para)
msgid ""
"Copy the log details of the selected revisions to the clipboard. This will "
"copy the revision number, author, date, log message and the list of changed "
"items for each revision."
msgstr ""

#. (term)
#. (term)
msgid "Search log messages..."
msgstr ""

#. (para)
msgid ""
"Search log messages for the text you enter. This searches the log messages "
"that you entered and also the action summaries created by Subversion (shown "
"in the bottom pane). The search is not case sensitive."
msgstr ""

#. (term)
msgid "Create code collaborator review..."
msgstr ""

#. (para)
msgid ""
"This menu is shown only if the SmartBear code collaborator tool is "
"installed. When invoked for the first time, a dialog is shown prompting the "
"user to enter user credentials for both code collaborator and SVN. Once the "
"settings are stored, the settings dialog is no longer shown when the menu is"
" invoked, unless the user holds <keycap>Ctrl</keycap> while executing the "
"menu item. The configuration and the chosen revision(s) are used to invoke "
"the code collaborator graphical user interface client, which creates a new "
"review with the selected revisions."
msgstr ""

#. (title)
msgid "The Code Collaborator Settings Dialog"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> The top pane of the Log dialog has a context menu that "
"allows you to access much more information. Some of these menu entries "
"appear only when the log is shown for a file, and some only when the log is "
"shown for a folder. <placeholder-2/><placeholder-3/>"
msgstr ""

#. (title)
msgid "Top Pane Context Menu for 2 Selected Revisions"
msgstr ""

#. (term)
msgid "Compare revisions"
msgstr "Krahaso rivlerësimet"

#. (para)
msgid ""
"Compare the two selected revisions using a visual difference tool. The "
"default Diff-Tool is TortoiseMerge which is supplied with TortoiseSVN."
msgstr ""

#. (para)
msgid ""
"If you select this option for a folder, a further dialog pops up listing the"
" changed files and offering you further diff options. Read more about the "
"Compare Revisions dialog in <xref linkend=\"tsvn-dug-compare-revs\"/>."
msgstr ""

#. (term)
msgid "Blame revisions"
msgstr ""

#. (para)
msgid ""
"Blame the two revisions and compare the blame reports using a visual "
"difference tool. Read <xref linkend=\"tsvn-dug-blame-diffs\"/> for more "
"detail."
msgstr ""

#. (term)
msgid "Show differences as unified diff"
msgstr ""

#. (para)
msgid ""
"View the differences between the two selected revisions as a Unified-Diff "
"file. This works for files and folders."
msgstr ""

#. (para)
msgid "Copy log messages to clipboard as described above."
msgstr ""

#. (para)
msgid "Search log messages as described above."
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> If you select two revisions at once (using the usual "
"<keycap>Ctrl</keycap>-modifier), the context menu changes and gives you "
"fewer options: <placeholder-2/>"
msgstr ""

#. (para)
msgid ""
"If you select two or more revisions (using the usual <keycap>Ctrl</keycap> "
"or <keycap>Shift</keycap> modifiers), the context menu will include an entry"
" to Revert all changes which were made in the selected revisions. This is "
"the easiest way to rollback a group of revisions in one go."
msgstr ""

#. (para)
msgid ""
"You can also choose to merge the selected revisions to another working copy,"
" as described above."
msgstr ""

#. (para)
msgid ""
"If all selected revisions have the same author, you can edit the author of "
"all those revisions in one go."
msgstr ""

#. (title)
msgid "The Log Dialog Bottom Pane with Context Menu"
msgstr ""

#. (term)
msgid "Show changes"
msgstr "Shfaq ndryshimet"

#. (para)
msgid "Show changes made in the selected revision for the selected file."
msgstr ""

#. (term)
msgid "Blame changes"
msgstr ""

#. (para)
msgid ""
"Blame the selected revision and the previous revision for the selected file,"
" and compare the blame reports using a visual diff tool. Read <xref linkend"
"=\"tsvn-dug-blame-diffs\"/> for more detail."
msgstr ""

#. (term)
msgid "Show as unified diff"
msgstr ""

#. (para)
msgid ""
"Show file changes in unified diff format. This context menu is only "
"available for files shown as <emphasis>modified</emphasis>."
msgstr ""

#. (para)
#. (para)
msgid ""
"Open the selected file, either with the default viewer for that file type, "
"or with a program you choose."
msgstr ""

#. (para)
msgid ""
"Opens the Blame dialog, allowing you to blame up to the selected revision."
msgstr ""

#. (para)
msgid "Revert the changes made to the selected file in that revision."
msgstr ""

#. (term)
msgid "Show properties"
msgstr ""

#. (para)
msgid "View the Subversion properties for the selected item."
msgstr ""

#. (term)
#. (guilabel)
msgid "Show log"
msgstr ""

#. (para)
msgid "Show the revision log for the selected single file."
msgstr ""

#. (term)
msgid "Get merge logs"
msgstr ""

#. (para)
msgid ""
"Show the revision log for the selected single file, including merged "
"changes. Find out more in <xref linkend=\"tsvn-dug-showlog-mergetrack\"/>."
msgstr ""

#. (para)
#. (para)
msgid ""
"Save the selected revision to a file so you have an older version of that "
"file."
msgstr ""

#. (para)
msgid ""
"Export the selected items in this revision to a folder, preserving the file "
"hierarchy."
msgstr ""

#. (title)
msgid ""
"The Log Dialog Bottom Pane with Context Menu When Multiple Files Selected."
msgstr ""

#. (term)
msgid "Show multiple changes..."
msgstr ""

#. (para)
msgid ""
"Show changes made in the selected revision for the selected files. Note that"
" the show changes functionality is invoked multiple times, which may bring "
"up multiple copies of your selected diff tool, or just add a new comparison "
"tab in your diff tool. If you have selected more than 15 files, you will be "
"prompted to confirm the action."
msgstr ""

#. (term)
msgid "Open multiple local..."
msgstr ""

#. (para)
msgid ""
"This will open local working copy files that correspond to your selected "
"files using the application that is registered for the extension. [The "
"behavior is the one you would get double-clicking the working-copy file(s) "
"in Windows explorer]. Depending on how your file extension is associated to "
"an application and the capabilities of the application, this may be a slow "
"operation. In the worst case, new instances of the application may be "
"launched by Windows for each file that was selected."
msgstr ""

#. (para)
msgid ""
"If you hold <keycap>Ctrl</keycap> while invoking this command, the working "
"copy files are always loaded into Visual Studio. This only works when the "
"following conditions are met: Visual Studio must be running in the same user"
" context while having the same process integrity level [running as admin or "
"not] as TortoiseProc.exe. It may be desirable to have the solution "
"containing the changed files loaded, although this is not strictly "
"necessary. Only files that exist on disk with extensions [.cpp, .h, .cs, "
".rc, .resx, .xaml, .js, .html, .htm, .asp, .aspx, .php, .css and .xml] will "
"be loaded. A maximum of 100 files can be loaded into Visual Studio at one "
"time, and the files are always loaded as new tabs into the currently open "
"instance of Visual Studio. The benefit of reviewing code changes in Visual "
"Studio lies in the fact that you can then use the built-in code navigation, "
"reference finding, static code analysis and other tools built into Visual "
"Studio."
msgstr ""

#. (para)
msgid ""
"Export the selected files/folder at the selected revision. This brings up a "
"dialog for you to confirm the URL and revision, and select a location for "
"the export."
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> The bottom pane of the Log dialog also has a context menu "
"that allows you to <placeholder-2/> When multiple files are selected in the "
"bottom pane of the Log dialog, the context menu changes to the following: "
"<placeholder-3/><placeholder-4/>"
msgstr ""

#. (para)
msgid ""
"You may notice that sometimes we refer to changes and other times to "
"differences. What's the difference?"
msgstr ""

#. (para)
msgid ""
"Subversion uses revision numbers to mean 2 different things. A revision "
"generally represents the state of the repository at a point in time, but it "
"can also be used to represent the changeset which created that revision, "
"e.g. <quote>Done in r1234</quote> means that the changes committed in r1234 "
"implement feature X. To make it clearer which sense is being used, we use "
"two different terms."
msgstr ""

#. (para)
msgid ""
"If you select two revisions N and M, the context menu will offer to show the"
" <emphasis>difference</emphasis> between those two revisions. In Subversion "
"terms this is <literal>diff -r M:N</literal>."
msgstr ""

#. (para)
msgid ""
"If you select a single revision N, the context menu will offer to show the "
"<emphasis>changes</emphasis> made in that revision. In Subversion terms this"
" is <literal>diff -r N-1:N</literal> or <literal>diff -c N</literal>."
msgstr ""

#. (para)
msgid ""
"The bottom pane shows the files changed in all selected revisions, so the "
"context menu always offers to show <emphasis>changes</emphasis>."
msgstr ""

#. (title)
msgid "Getting more log messages"
msgstr ""

#. (para)
msgid ""
"For a large repository there may be hundreds or even thousands of changes "
"and fetching them all could take a long time. Normally you are only "
"interested in the more recent changes. By default, the number of log "
"messages fetched is limited to 100, but you can change this value in "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Settings</guimenuitem></menuchoice>"
" (<xref linkend=\"tsvn-dug-settings-dialogs\"/>),"
msgstr ""

#. (para)
msgid ""
"When the <guilabel>Stop on copy/rename</guilabel> box is checked, Show Log "
"will stop at the point that the selected file or folder was copied from "
"somewhere else within the repository. This can be useful when looking at "
"branches (or tags) as it stops at the root of that branch, and gives a quick"
" indication of changes made in that branch only."
msgstr ""

#. (para)
msgid ""
"Normally you will want to leave this option unchecked. TortoiseSVN remembers"
" the state of the checkbox, so it will respect your preference."
msgstr ""

#. (para)
msgid ""
"When the Show Log dialog is invoked from within the Merge dialog, the box is"
" always checked by default. This is because merging is most often looking at"
" changes on branches, and going back beyond the root of the branch does not "
"make sense in that instance."
msgstr ""

#. (para)
msgid ""
"Note that Subversion currently implements renaming as a copy/delete pair, so"
" renaming a file or folder will also cause the log display to stop if this "
"option is checked."
msgstr ""

#. (para)
msgid ""
"The Log dialog does not always show all changes ever made for a number of "
"reasons: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"If you want to see more log messages, click the <guibutton>Next "
"100</guibutton> to retrieve the next 100 log messages. You can repeat this "
"as many times as needed."
msgstr ""

#. (para)
msgid ""
"Next to this button there is a multi-function button which remembers the "
"last option you used it for. Click on the arrow to see the other options "
"offered."
msgstr ""

#. (para)
msgid ""
"Use <guibutton>Show Range ...</guibutton> if you want to view a specific "
"range of revisions. A dialog will then prompt you to enter the start and end"
" revision."
msgstr ""

#. (para)
msgid ""
"Use <guibutton>Show All</guibutton> if you want to see "
"<emphasis>all</emphasis> log messages from HEAD right back to revision 1."
msgstr ""

#. (para)
msgid ""
"To refresh the latest revision in case there were other commits while the "
"log dialog was open, hit the <keycap>F5</keycap> key."
msgstr ""

#. (para)
msgid "To refresh the log cache, hit the <keycap>Ctrl-F5</keycap> keys."
msgstr ""

#. (title)
msgid "Current Working Copy Revision"
msgstr ""

#. (para)
msgid ""
"Because the log dialog shows you the log from HEAD, not from the current "
"working copy revision, it often happens that there are log messages shown "
"for content which has not yet been updated in your working copy. To help "
"make this clearer, the commit message which corresponds to the revision you "
"have in your working copy is shown in bold."
msgstr ""

#. (para)
msgid ""
"When you show the log for a folder the revision highlighted is the highest "
"revision found anywhere within that folder, which requires a crawl of the "
"working copy. The crawl takes place within a separate thread so as not to "
"delay showing the log, but as a result highlighting for folders may not "
"appear immediately."
msgstr ""

#. (title)
msgid "Merge Tracking Features"
msgstr ""

#. (primary)
msgid "merge tracking log"
msgstr ""

#. (para)
msgid ""
"Subversion 1.5 and later keeps a record of merges using properties. This "
"allows us to get a more detailed history of merged changes. For example, if "
"you develop a new feature on a branch and then merge that branch back to "
"trunk, the feature development will show up on the trunk log as a single "
"commit for the merge, even though there may have been 1000 commits during "
"branch development."
msgstr ""

#. (title)
msgid "The Log Dialog Showing Merge Tracking Revisions"
msgstr ""

#. (para)
msgid ""
"If you want to see the detail of which revisions were merged as part of that"
" commit, use the <guilabel>Include merged revisions</guilabel> checkbox. "
"This will fetch the log messages again, but will also interleave the log "
"messages from revisions which were merged. Merged revisions are shown in "
"grey because they represent changes made on a different part of the tree."
msgstr ""

#. (para)
msgid ""
"Of course, merging is never simple! During feature development on the branch"
" there will probably be occasional merges back from trunk to keep the branch"
" in sync with the main line code. So the merge history of the branch will "
"also include another layer of merge history. These different layers are "
"shown in the log dialog using indentation levels."
msgstr ""

#. (title)
msgid "Changing the Log Message and Author"
msgstr ""

#. (primary)
msgid "edit log/author"
msgstr ""

#. (primary)
msgid "revision properties"
msgstr ""

#. (primary)
msgid "revprops"
msgstr ""

#. (para)
msgid ""
"Revision properties are completely different from the Subversion properties "
"of each item. Revprops are descriptive items which are associated with one "
"specific revision number in the repository, such as log message, commit date"
" and committer name (author)."
msgstr ""

#. (para)
msgid ""
"Sometimes you might want to change a log message you once entered, maybe "
"because there's a spelling error in it or you want to improve the message or"
" change it for other reasons. Or you want to change the author of the commit"
" because you forgot to set up authentication or..."
msgstr ""

#. (para)
msgid ""
"Subversion lets you change revision properties any time you want. But since "
"such changes can't be undone (those changes are not versioned) this feature "
"is disabled by default. To make this work, you must set up a pre-revprop-"
"change hook. Please refer to the chapter on <ulink url=\"http://svnbook.red-"
"bean.com/en/1.8/svn.reposadmin.create.html#svn.reposadmin.create.hooks\"><citetitle>Hook"
" Scripts</citetitle></ulink> in the Subversion Book for details about how to"
" do that. Read <xref linkend=\"tsvn-repository-hooks\"/> to find some "
"further notes on implementing hooks on a Windows machine."
msgstr ""

#. (para)
msgid ""
"Once you've set up your server with the required hooks, you can change the "
"author and log message (or any other revprop) of any revision, using the "
"context menu from the top pane of the Log dialog. You can also edit a log "
"message using the context menu for the middle pane."
msgstr ""

#. (para)
msgid ""
"Because Subversion's revision properties are not versioned, making "
"modifications to such a property (for example, the "
"<literal>svn:log</literal> commit message property) will overwrite the "
"previous value of that property <emphasis>forever</emphasis>."
msgstr ""

#. (para)
msgid ""
"Since TortoiseSVN keeps a cache of all the log information, edits made for "
"author and log messages will only show up on your local installation. Other "
"users using TortoiseSVN will still see the cached (old) authors and log "
"messages until they refresh the log cache."
msgstr ""

#. (title)
msgid "Filtering Log Messages"
msgstr ""

#. (primary)
msgid "filter"
msgstr "filtro"

#. (para)
msgid ""
"If you want to restrict the log messages to show only those you are "
"interested in rather than scrolling through a list of hundreds, you can use "
"the filter controls at the top of the Log Dialog. The start and end date "
"controls allow you to restrict the output to a known date range. The search "
"box allows you to show only messages which contain a particular phrase."
msgstr ""

#. (para)
msgid ""
"Click on the search icon to select which information you want to search in, "
"and to choose <emphasis>regex</emphasis> mode. Normally you will only need a"
" simple sub-string search, but if you need to more flexible search terms, "
"you can use regular expressions. If you hover the mouse over the box, a "
"tooltip will give hints on how to use the regex functions, or the sub-string"
" functions. The filter works by checking whether your filter string matches "
"the log entries, and then only those entries which "
"<emphasis>match</emphasis> the filter string are shown."
msgstr ""

#. (para)
msgid ""
"Simple sub-string search works in a manner similar to a search engine. Strings to search for are separated by spaces, and all strings must match. You can use a leading <literal>-</literal> to specify that a particular sub-string is not found (invert matching for that term), and you can use <literal>!</literal> at the start of the expression to invert matching for the entire expression. You can use a leading <literal>+</literal> to specify that a sub-string should be included, even if previously excluded with a <literal>-</literal>. Note that the order of inclusion/exclusion is significant here. You can use quote marks to surround a string which must contain spaces, and if you want to search for a literal quotation mark you can use two quotation marks together as a self-escaping sequence. Note that the backslash character is <emphasis>not</emphasis> used as an escape character and has no special significance in simple sub-string searches. Examples will make this easier: <screen>\n"
"Alice Bob -Eve\n"
"</screen> searches for strings containing both Alice and Bob but not Eve <screen>\n"
"Alice -Bob +Eve\n"
"</screen> searches for strings containing both Alice but not Bob, or strings which contain Eve. <screen>\n"
"-Case +SpecialCase\n"
"</screen> searches for strings which do not contain Case, but still include strings which contain SpecialCase. <screen>\n"
"!Alice Bob\n"
"</screen> searches for strings which do not contain both Alice and Bob <screen>\n"
"!-Alice -Bob\n"
"</screen> do you remember De Morgan's theorem? NOT(NOT Alice AND NOT Bob) reduces to (Alice OR Bob). <screen>\n"
"\"Alice and Bob\"\n"
"</screen> searches for the literal expression <quote>Alice and Bob</quote><screen>\n"
"\"\"\n"
"</screen> searches for a double-quote anywhere in the text <screen>\n"
"\"Alice says \"\"hi\"\" to Bob\"\n"
"</screen> searches for the literal expression <quote>Alice says \"hi\" to Bob</quote>."
msgstr ""

#. (para)
msgid ""
"Describing the use of regular expression searches is beyond the scope of "
"this manual, but you can find online documentation and a tutorial at <ulink "
"url=\"http://www.regular-expressions.info/\"><citetitle>http://www.regular-"
"expressions.info/</citetitle></ulink>."
msgstr ""

#. (para)
msgid ""
"Note that these filters act on the messages already retrieved. They do not "
"control downloading of messages from the repository."
msgstr ""

#. (para)
msgid ""
"You can also filter the path names in the bottom pane using the "
"<guilabel>Show only affected paths</guilabel> checkbox. Affected paths are "
"those which contain the path used to display the log. If you fetch the log "
"for a folder, that means anything in that folder or below it. For a file it "
"means just that one file. Normally the path list shows any other paths which"
" are affected by the same commit, but in grey. If the box is checked, those "
"paths are hidden."
msgstr ""

#. (para)
msgid ""
"Sometimes your working practices will require log messages to follow a "
"particular format, which means that the text describing the changes is not "
"visible in the abbreviated summary shown in the top pane. The property "
"<literal>tsvn:logsummary</literal> can be used to extract a portion of the "
"log message to be shown in the top pane. Read <xref linkend=\"tsvn-dug-"
"propertypage-tsvn-props\"/> to find out how to use this property."
msgstr ""

#. (title)
msgid "No Log Formatting from Repository Browser"
msgstr ""

#. (para)
msgid ""
"Because the formatting depends upon accessing Subversion properties, you "
"will only see the results when using a checked out working copy. Fetching "
"properties remotely is a slow operation, so you will not see this feature in"
" action from the repo browser."
msgstr ""

#. (title)
msgid "Statistical Information"
msgstr "Informacione Statistikore"

#. (primary)
msgid "statistics"
msgstr "statistikat"

#. (para)
msgid ""
"The <guibutton>Statistics</guibutton> button brings up a box showing some "
"interesting information about the revisions shown in the Log dialog. This "
"shows how many authors have been at work, how many commits they have made, "
"progress by week, and much more. Now you can see at a glance who has been "
"working hardest and who is slacking ;-)"
msgstr ""

#. (title)
msgid "Statistics Page"
msgstr "Faqja e Statistikave"

#. (para)
msgid ""
"This page gives you all the numbers you can think of, in particular the "
"period and number of revisions covered, and some min/max/average values."
msgstr ""

#. (title)
msgid "Commits by Author Page"
msgstr ""

#. (title)
msgid "Commits-by-Author Histogram"
msgstr ""

#. (title)
msgid "Commits-by-Author Pie Chart"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> This graph shows you which authors have been active on the "
"project as a simple histogram, stacked histogram or pie chart. "
"<placeholder-2/>"
msgstr ""

#. (para)
msgid ""
"Where there are a few major authors and many minor contributors, the number "
"of tiny segments can make the graph more difficult to read. The slider at "
"the bottom allows you to set a threshold (as a percentage of total commits) "
"below which any activity is grouped into an <emphasis>Others</emphasis> "
"category."
msgstr ""

#. (title)
msgid "Commits by date Page"
msgstr ""

#. (title)
msgid "Commits-by-date Graph"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> This page gives you a graphical representation of project "
"activity in terms of number of commits <emphasis>and</emphasis> author. This"
" gives some idea of when a project is being worked on, and who was working "
"at which time."
msgstr ""

#. (para)
msgid ""
"When there are several authors, you will get many lines on the graph. There "
"are two views available here: <emphasis>normal</emphasis>, where each "
"author's activity is relative to the base line, and "
"<emphasis>stacked</emphasis>, where each author's activity is relative to "
"the line underneath. The latter option avoids the lines crossing over, which"
" can make the graph easier to read, but less easy to see one author's "
"output."
msgstr ""

#. (para)
msgid ""
"By default the analysis is case-sensitive, so users "
"<literal>PeterEgan</literal> and <literal>PeteRegan</literal> are treated as"
" different authors. However, in many cases user names are not case-"
"sensitive, and are sometimes entered inconsistently, so you may want "
"<literal>DavidMorgan</literal> and <literal>davidmorgan</literal> to be "
"treated as the same person. Use the <guilabel>Authors case "
"insensitive</guilabel> checkbox to control how this is handled."
msgstr ""

#. (para)
msgid ""
"Note that the statistics cover the same period as the Log dialog. If that is"
" only displaying one revision then the statistics will not tell you very "
"much."
msgstr ""

#. (title)
msgid "Offline Mode"
msgstr ""

#. (title)
msgid "Go Offline Dialog"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> If the server is not reachable, and you have log caching "
"enabled you can use the log dialog and revision graph in offline mode. This "
"uses data from the cache, which allows you to continue working although the "
"information may not be up-to-date or even complete."
msgstr ""

#. (term)
msgid "Offline for now"
msgstr ""

#. (para)
msgid ""
"Complete the current operation in offline mode, but retry the repository "
"next time log data is requested."
msgstr ""

#. (term)
msgid "Permanently offline"
msgstr ""

#. (para)
msgid ""
"Remain in offline mode until a repository check is specifically requested. "
"See <xref linkend=\"tsvn-dug-showlog-refresh\"/>."
msgstr ""

#. (term)
msgid "Cancel"
msgstr "Ndalo"

#. (para)
msgid ""
"If you don't want to continue the operation with possibly stale data, just "
"cancel."
msgstr ""

#. (para)
msgid "Here you have three options: <placeholder-1/>"
msgstr "Këtu keni tri mundësi: <placeholder-1/>"

#. (para)
msgid ""
"The <guilabel>Make this the default</guilabel> checkbox prevents this dialog"
" from re-appearing and always picks the option you choose next. You can "
"still change (or remove) the default after doing this from "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Settings</guimenuitem></menuchoice>."
msgstr ""

#. (title)
#. (title)
msgid "Refreshing the View"
msgstr ""

#. (para)
msgid ""
"If you want to check the server again for newer log messages, you can simply"
" refresh the view using <keycap>F5</keycap>. If you are using the log cache "
"(enabled by default), this will check the repository for newer messages and "
"fetch only the new ones. If the log cache was in offline mode, this will "
"also attempt to go back online."
msgstr ""

#. (para)
msgid ""
"If you are using the log cache and you think the message content or author "
"may have changed, you can use <keycap>Shift-F5</keycap> or "
"<keycap>Ctrl-F5</keycap> to re-fetch the displayed messages from the server "
"and update the log cache. Note that this only affects messages currently "
"shown and does not invalidate the entire cache for that repository."
msgstr ""

#. (title)
msgid "Viewing Differences"
msgstr "Duke parë Dallimet"

#. (primary)
#. (primary)
msgid "diff"
msgstr ""

#. (primary)
msgid "compare"
msgstr "krahaso"

#. (para)
msgid ""
"One of the commonest requirements in project development is to see what has "
"changed. You might want to look at the differences between two revisions of "
"the same file, or the differences between two separate files. TortoiseSVN "
"provides a built-in tool named <application>TortoiseMerge</application> for "
"viewing differences of text files. For viewing differences of image files, "
"TortoiseSVN also has a tool named <application>TortoiseIDiff</application>. "
"Of course, you can use your own favourite diff program if you like."
msgstr ""

#. (title)
msgid "File Differences"
msgstr ""

#. (term)
msgid "Local changes"
msgstr ""

#. (para)
msgid ""
"If you want to see what changes <emphasis>you</emphasis> have made in your "
"working copy, just use the explorer context menu and select "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Diff</guimenuitem></menuchoice>."
msgstr ""

#. (term)
msgid "Difference to another branch/tag"
msgstr ""

#. (para)
msgid ""
"If you want to see what has changed on trunk (if you are working on a "
"branch) or on a specific branch (if you are working on trunk), you can use "
"the explorer context menu. Just hold down the <keycap>Shift</keycap> key "
"while you right click on the file. Then select "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Diff with "
"URL</guimenuitem></menuchoice>. In the following dialog, specify the URL in "
"the repository with which you want to compare your local file to."
msgstr ""

#. (para)
msgid ""
"You can also use the repository browser and select two trees to diff, "
"perhaps two tags, or a branch/tag and trunk. The context menu there allows "
"you to compare them using <guimenuitem>Compare revisions</guimenuitem>. Read"
" more in <xref linkend=\"tsvn-dug-compare-revs\"/>."
msgstr ""

#. (term)
msgid "Difference from a previous revision"
msgstr ""

#. (para)
msgid ""
"If you want to see the difference between a particular revision and your "
"working copy, use the Revision Log dialog, select the revision of interest, "
"then select <guimenuitem>Compare with working copy</guimenuitem> from the "
"context menu."
msgstr ""

#. (para)
msgid ""
"If you want to see the difference between the last committed revision and "
"your working copy, assuming that the working copy hasn't been modified, just"
" right click on the file. Then select "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Diff with previous "
"version</guimenuitem></menuchoice>. This will perform a diff between the "
"revision before the last-commit-date (as recorded in your working copy) and "
"the working BASE. This shows you the last change made to that file to bring "
"it to the state you now see in your working copy. It will not show changes "
"newer than your working copy."
msgstr ""

#. (term)
msgid "Difference between two previous revisions"
msgstr ""

#. (para)
msgid ""
"If you want to see the difference between two revisions which are already "
"committed, use the Revision Log dialog and select the two revisions you want"
" to compare (using the usual <keycap>Ctrl</keycap>-modifier). Then select "
"<guimenuitem>Compare revisions</guimenuitem> from the context menu."
msgstr ""

#. (para)
msgid ""
"If you did this from the revision log for a folder, a Compare Revisions "
"dialog appears, showing a list of changed files in that folder. Read more in"
" <xref linkend=\"tsvn-dug-compare-revs\"/>."
msgstr ""

#. (term)
msgid "All changes made in a commit"
msgstr ""

#. (para)
msgid ""
"If you want to see the changes made to all files in a particular revision in"
" one view, you can use Unified-Diff output (GNU patch format). This shows "
"only the differences with a few lines of context. It is harder to read than "
"a visual file compare, but will show all the changes together. From the "
"Revision Log dialog select the revision of interest, then select "
"<guimenuitem>Show Differences as Unified-Diff</guimenuitem> from the context"
" menu."
msgstr ""

#. (term)
msgid "Difference between files"
msgstr "Dallimi mes skedave"

#. (para)
msgid ""
"If you want to see the differences between two different files, you can do "
"that directly in explorer by selecting both files (using the usual "
"<keycap>Ctrl</keycap>-modifier). Then from the explorer context menu select "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Diff</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"If the files to compare are not located in the same folder, use the command "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Diff "
"later</guimenuitem></menuchoice> to mark the first file for diffing, then "
"browse to the second file and use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Diff with "
"\"path/of/marked/file\"</guimenuitem></menuchoice>. To remove the marked "
"file, use the command "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Diff "
"later</guimenuitem></menuchoice> again, but hold down the "
"<keycap>Ctrl</keycap>-modifier while clicking on it."
msgstr ""

#. (term)
msgid "Difference between WC file/folder and a URL"
msgstr ""

#. (para)
msgid ""
"If you want to see the differences between a file in your working copy, and "
"a file in any Subversion repository, you can do that directly in explorer by"
" selecting the file then holding down the <keycap>Shift</keycap> key whilst "
"right clicking to obtain the context menu. Select "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Diff with "
"URL</guimenuitem></menuchoice>. You can do the same thing for a working copy"
" folder. TortoiseMerge shows these differences in the same way as it shows a"
" patch file - a list of changed files which you can view one at a time."
msgstr ""

#. (term)
msgid "Difference with blame information"
msgstr ""

#. (para)
msgid ""
"If you want to see not only the differences but also the author, revision "
"and date that changes were made, you can combine the diff and blame reports "
"from within the revision log dialog. Read <xref linkend=\"tsvn-dug-blame-"
"diffs\"/> for more detail."
msgstr ""

#. (term)
msgid "Difference between folders"
msgstr "Dallimi mes dosjeve"

#. (para)
msgid ""
"The built-in tools supplied with TortoiseSVN do not support viewing "
"differences between directory hierarchies. But if you have an external tool "
"which does support that feature, you can use that instead. In <xref linkend"
"=\"tsvn-dug-diff-tools\"/> we tell you about some tools which we have used."
msgstr ""

#. (para)
msgid ""
"If you have configured a third party diff tool, you can use "
"<keycap>Shift</keycap> when selecting the Diff command to use the alternate "
"tool. Read <xref linkend=\"tsvn-dug-settings-progs\"/> to find out about "
"configuring other diff tools."
msgstr ""

#. (title)
msgid "Line-end and Whitespace Options"
msgstr ""

#. (para)
msgid ""
"Sometimes in the life of a project you might change the line endings from "
"<literal>CRLF</literal> to <literal>LF</literal>, or you may change the "
"indentation of a section. Unfortunately this will mark a large number of "
"lines as changed, even though there is no change to the meaning of the code."
" The options here will help to manage these changes when it comes to "
"comparing and applying differences. You will see these settings in the "
"<guilabel>Merge</guilabel> and <guilabel>Blame</guilabel> dialogs, as well "
"as in the settings for TortoiseMerge."
msgstr ""

#. (para)
msgid ""
"<guilabel>Ignore line endings</guilabel> excludes changes which are due "
"solely to difference in line-end style."
msgstr ""

#. (para)
msgid ""
"<guilabel>Compare whitespaces</guilabel> includes all changes in indentation"
" and inline whitespace as added/removed lines."
msgstr ""

#. (para)
msgid ""
"<guilabel>Ignore whitespace changes</guilabel> excludes changes which are "
"due solely to a change in the amount or type of whitespace, e.g. changing "
"the indentation or changing tabs to spaces. Adding whitespace where there "
"was none before, or removing a whitespace completely is still shown as a "
"change."
msgstr ""

#. (para)
msgid ""
"<guilabel>Ignore all whitespaces</guilabel> excludes all whitespace-only "
"changes."
msgstr ""

#. (para)
msgid ""
"Naturally, any line with changed content is always included in the diff."
msgstr ""

#. (title)
msgid "Comparing Folders"
msgstr "Duke Krahasuar Dosjet"

#. (primary)
msgid "compare revisions"
msgstr "krahaso rivlerësimet"

#. (primary)
msgid "export changes"
msgstr "eksporto ndryshimet"

#. (title)
msgid "The Compare Revisions Dialog"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> When you select two trees within the repository browser, or"
" when you select two revisions of a folder in the log dialog, you can "
"<menuchoice><guimenu>Context menu</guimenu><guimenuitem>Compare "
"revisions</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"This dialog shows a list of all files which have changed and allows you to "
"compare or blame them individually using context menu."
msgstr ""

#. (para)
msgid ""
"You can export a <emphasis>change tree</emphasis>, which is useful if you "
"need to send someone else your project tree structure, but containing only "
"the files which have changed. This operation works on the selected files "
"only, so you need to select the files of interest - usually that means all "
"of them - and then <menuchoice><guimenu>Context "
"menu</guimenu><guimenuitem>Export selection "
"to...</guimenuitem></menuchoice>. You will be prompted for a location to "
"save the change tree."
msgstr ""

#. (para)
msgid ""
"You can also export the <emphasis>list</emphasis> of changed files to a text"
" file using <menuchoice><guimenu>Context menu</guimenu><guimenuitem>Save "
"list of selected files to...</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"If you want to export the list of files <emphasis>and</emphasis> the actions"
" (modified, added, deleted) as well, you can do that using "
"<menuchoice><guimenu>Context menu</guimenu><guimenuitem>Copy selection to "
"clipboard</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"The button at the top allows you to change the direction of comparison. You "
"can show the changes need to get from A to B, or if you prefer, from B to A."
msgstr ""

#. (para)
msgid ""
"The buttons with the revision numbers on can be used to change to a "
"different revision range. When you change the range, the list of items which"
" differ between the two revisions will be updated automatically."
msgstr ""

#. (para)
msgid ""
"If the list of filenames is very long, you can use the search box to reduce "
"the list to filenames containing specific text. Note that a simple text "
"search is used, so if you want to restrict the list to C source files you "
"should enter <filename>.c</filename> rather than <filename>*.c</filename>."
msgstr ""

#. (title)
msgid "Diffing Images Using TortoiseIDiff"
msgstr ""

#. (primary)
msgid "image diff"
msgstr ""

#. (primary)
msgid "TortoiseIDiff"
msgstr "TortoiseIDiff"

#. (para)
msgid ""
"There are many tools available for diffing text files, including our own "
"TortoiseMerge, but we often find ourselves wanting to see how an image file "
"has changed too. That's why we created TortoiseIDiff."
msgstr ""

#. (title)
msgid "The image difference viewer"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/><menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Diff</guimenuitem></menuchoice>"
" for any of the common image file formats will start TortoiseIDiff to show "
"image differences. By default the images are displayed side-by-side but you "
"can use the View menu or toolbar to switch to a top-bottom view instead, or "
"if you prefer, you can overlay the images and pretend you are using a "
"lightbox."
msgstr ""

#. (para)
msgid ""
"Naturally you can also zoom in and out and pan around the image. You can "
"also pan the image simply by left-dragging it. If you select the "
"<guilabel>Link images together</guilabel> option, then the pan controls "
"(scrollbars, mousewheel) on both images are linked."
msgstr ""

#. (para)
msgid ""
"An image info box shows details about the image file, such as the size in "
"pixels, resolution and colour depth. If this box gets in the way, use "
"<menuchoice><guimenu>View</guimenu><guimenuitem>Image "
"Info</guimenuitem></menuchoice> to hide it. You can get the same information"
" in a tooltip if you hover the mouse over the image title bar."
msgstr ""

#. (para)
msgid ""
"When the images are overlaid, the relative intensity of the images (alpha "
"blend) is controlled by a slider control at the left side. You can click "
"anywhere in the slider to set the blend directly, or you can drag the slider"
" to change the blend interactively. "
"<keycap>Ctrl+Shift</keycap>-<action>Wheel</action> to change the blend."
msgstr ""

#. (para)
msgid ""
"The button above the slider toggles between 0% and 100% blends, and if you "
"double click the button, the blend toggles automatically every second until "
"you click the button again. This can be useful when looking for multiple "
"small changes."
msgstr ""

#. (para)
msgid ""
"Sometimes you want to see a difference rather than a blend. You might have "
"the image files for two revisions of a printed circuit board and want to see"
" which tracks have changed. If you disable alpha blend mode, the difference "
"will be shown as an <emphasis>XOR</emphasis> of the pixel colour values. "
"Unchanged areas will be plain white and changes will be coloured."
msgstr ""

#. (title)
msgid "Diffing Office Documents"
msgstr ""

#. (primary)
msgid "Microsoft Word"
msgstr "Microsoft Word"

#. (para)
msgid ""
"When you want to diff non-text documents you normally have to use the "
"software used to create the document as it understands the file format. For "
"the commonly used Microsoft Office and Open Office suites there is indeed "
"some support for viewing differences and TortoiseSVN includes scripts to "
"invoke these with the right settings when you diff files with the well-known"
" file extensions. You can check which file extensions are supported and add "
"your own by going to "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Settings</guimenuitem></menuchoice>"
" and clicking <guibutton>Advanced</guibutton> in the <guilabel>External "
"Programs</guilabel> section."
msgstr ""

#. (title)
msgid "Problems with Office 2010"
msgstr ""

#. (para)
msgid ""
"If you installed the <emphasis>Click-to-Run</emphasis> version of Office "
"2010 and you try to diff documents you may get an error message from Windows"
" Script Host something like this: <quote>ActiveX component can't create "
"object: word.Application</quote>. It seems you have to use the MSI-based "
"version of Office to get the diff functionality."
msgstr ""

#. (title)
msgid "External Diff/Merge Tools"
msgstr ""

#. (primary)
msgid "diff tools"
msgstr ""

#. (primary)
msgid "merge tools"
msgstr "bashko mjetet"

#. (para)
msgid ""
"If the tools we provide don't do what you need, try one of the many open-"
"source or commercial programs available. Everyone has their own favourites, "
"and this list is by no means complete, but here are a few that you might "
"consider:"
msgstr ""

#. (term)
msgid "WinMerge"
msgstr ""

#. (para)
msgid ""
"<ulink "
"url=\"http://winmerge.sourceforge.net/\"><citetitle>WinMerge</citetitle></ulink>"
" is a great open-source diff tool which can also handle directories."
msgstr ""

#. (term)
msgid "Perforce Merge"
msgstr ""

#. (para)
msgid ""
"Perforce is a commercial RCS, but you can download the diff/merge tool for "
"free. Get more information from <ulink "
"url=\"http://www.perforce.com/perforce/products/merge.html\"><citetitle>Perforce</citetitle></ulink>."
msgstr ""

#. (term)
msgid "KDiff3"
msgstr "KDiff3"

#. (para)
msgid ""
"KDiff3 is a free diff tool which can also handle directories. You can "
"download it from <ulink "
"url=\"http://kdiff3.sf.net/\"><citetitle>here</citetitle></ulink>."
msgstr "KDiff3 është mjet diff falas i cili mund të merret me direktoritë. Ju mund të shkarkoni këtë mjet nga <ulink url=\"http://kdiff3.sf.net/\"><citetitle>here</citetitle></ulink>."

#. (term)
msgid "SourceGear DiffMerge"
msgstr ""

#. (para)
msgid ""
"SourceGear Vault is a commercial RCS, but you can download the diff/merge "
"tool for free. Get more information from <ulink "
"url=\"http://www.sourcegear.com/diffmerge/\"><citetitle>SourceGear</citetitle></ulink>."
msgstr ""

#. (term)
msgid "ExamDiff"
msgstr "ExamDiff"

#. (para)
msgid ""
"ExamDiff Standard is freeware. It can handle files but not directories. "
"ExamDiff Pro is shareware and adds a number of goodies including directory "
"diff and editing capability. In both flavours, version 3.2 and above can "
"handle unicode. You can download them from <ulink "
"url=\"http://www.prestosoft.com/\"><citetitle>PrestoSoft</citetitle></ulink>."
msgstr ""

#. (term)
msgid "Beyond Compare"
msgstr ""

#. (para)
msgid ""
"Similar to ExamDiff Pro, this is an excellent shareware diff tool which can "
"handle directory diffs and unicode. Download it from <ulink "
"url=\"http://www.scootersoftware.com/\"><citetitle>Scooter "
"Software</citetitle></ulink>."
msgstr ""

#. (term)
msgid "Araxis Merge"
msgstr "Araxis Merge"

#. (para)
msgid ""
"Araxis Merge is a useful commercial tool for diff and merging both files and"
" folders. It does three-way comparison in merges and has synchronization "
"links to use if you've changed the order of functions. Download it from "
"<ulink "
"url=\"http://www.araxis.com/merge/index.html\"><citetitle>Araxis</citetitle></ulink>."
msgstr ""

#. (para)
msgid ""
"Read <xref linkend=\"tsvn-dug-settings-progs\"/> for information on how to "
"set up TortoiseSVN to use these tools."
msgstr ""

#. (title)
msgid "Adding New Files And Directories"
msgstr "Duke Vendosur Skeda dhe Direktori të Reja"

#. (primary)
msgid "add"
msgstr "shto"

#. (primary)
msgid "version new files"
msgstr ""

#. (title)
#. (title)
msgid "Explorer context menu for unversioned files"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> If you created new files and/or directories during your "
"development process then you need to add them to source control too. Select "
"the file(s) and/or directory and use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Add</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"After you added the files/directories to source control the file appears "
"with a <literal>added</literal> icon overlay which means you first have to "
"commit your working copy to make those files/directories available to other "
"developers. Adding a file/directory does <emphasis>not</emphasis> affect the"
" repository!"
msgstr ""

#. (title)
msgid "Many Adds"
msgstr ""

#. (para)
msgid ""
"You can also use the Add command on already versioned folders. In that case,"
" the add dialog will show you all unversioned files inside that versioned "
"folder. This helps if you have many new files and need to add them all at "
"once."
msgstr ""

#. (para)
msgid "select the files you want to add"
msgstr ""

#. (para)
#. (para)
msgid ""
"<action>right drag</action> them to the new location inside the working copy"
msgstr ""

#. (para)
#. (para)
msgid "release the right mouse button"
msgstr ""

#. (para)
msgid ""
"select <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>SVN Add files"
" to this WC</guimenuitem></menuchoice>. The files will then be copied to the"
" working copy and added to version control."
msgstr ""

#. (para)
msgid ""
"To add files from outside your working copy you can use the drag-and-drop "
"handler: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"You can also add files within a working copy simply by left-dragging and "
"dropping them onto the commit dialog."
msgstr ""

#. (para)
msgid ""
"If you add a file or folder by mistake, you can undo the addition before you"
" commit using <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Undo "
"add...</guimenuitem></menuchoice>."
msgstr ""

#. (title)
msgid "Copying/Moving/Renaming Files and Folders"
msgstr ""

#. (primary)
msgid "copy files"
msgstr "kopjo skedat"

#. (primary)
msgid "rename files"
msgstr "riemëro skedat"

#. (primary)
msgid "move files"
msgstr "zhvendos skedat"

#. (primary)
#. (primary)
msgid "branch"
msgstr ""

#. (primary)
#. (primary)
msgid "tag"
msgstr ""

#. (para)
msgid ""
"It often happens that you already have the files you need in another project"
" in your repository, and you simply want to copy them across. You could "
"simply copy the files and add them as described above, but that would not "
"give you any history. And if you subsequently fix a bug in the original "
"files, you can only merge the fix automatically if the new copy is related "
"to the original in Subversion."
msgstr ""

#. (para)
msgid ""
"The easiest way to copy files and folders from within a working copy is to "
"use the right drag menu. When you <action>right drag</action> a file or "
"folder from one working copy to another, or even within the same folder, a "
"context menu appears when you release the mouse. <placeholder-1/> Now you "
"can copy existing versioned content to a new location, possibly renaming it "
"at the same time."
msgstr ""

#. (para)
msgid ""
"You can also copy or move versioned files within a working copy, or between "
"two working copies, using the familiar cut-and-paste method. Use the "
"standard Windows <action>Copy</action> or <action>Cut</action> to copy one "
"or more versioned items to the clipboard. If the clipboard contains such "
"versioned items, you can then use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Paste</guimenuitem></menuchoice>"
" (note: not the standard Windows <action>Paste</action>) to copy or move "
"those items to the new working copy location."
msgstr ""

#. (para)
msgid ""
"You can copy files and folders from your working copy to another location in"
" the repository using "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Branch/Tag</guimenuitem></menuchoice>."
" Refer to <xref linkend=\"tsvn-dug-branch-1\"/> to find out more."
msgstr ""

#. (para)
msgid ""
"You can locate an older version of a file or folder in the log dialog and "
"copy it to a new location in the repository directly from the log dialog "
"using <menuchoice><guimenu>Context menu</guimenu><guimenuitem>Create "
"branch/tag from revision</guimenuitem></menuchoice>. Refer to <xref linkend"
"=\"tsvn-dug-showlog-2\"/> to find out more."
msgstr ""

#. (para)
msgid ""
"You can also use the repository browser to locate content you want, and copy"
" it into your working copy directly from the repository, or copy between two"
" locations within the repository. Refer to <xref linkend=\"tsvn-dug-"
"repobrowser\"/> to find out more."
msgstr ""

#. (title)
msgid "Cannot copy between repositories"
msgstr ""

#. (para)
msgid ""
"Whilst you can copy or move files and folders <emphasis>within</emphasis> a "
"repository, you <emphasis>cannot</emphasis> copy or move from one repository"
" to another while preserving history using TortoiseSVN. Not even if the "
"repositories live on the same server. All you can do is copy the content in "
"its current state and add it as new content to the second repository."
msgstr ""

#. (para)
msgid ""
"If you are uncertain whether two URLs on the same server refer to the same "
"or different repositories, use the repo browser to open one URL and find out"
" where the repository root is. If you can see both locations in one repo "
"browser window then they are in the same repository."
msgstr ""

#. (title)
msgid "Ignoring Files And Directories"
msgstr ""

#. (primary)
msgid "ignore"
msgstr "injoro"

#. (primary)
msgid "unversioned files/folders"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> In most projects you will have files and folders that "
"should not be subject to version control. These might include files created "
"by the compiler, <filename>*.obj, *.lst</filename>, maybe an output folder "
"used to store the executable. Whenever you commit changes, TortoiseSVN shows"
" your unversioned files, which fills up the file list in the commit dialog. "
"Of course you can turn off this display, but then you might forget to add a "
"new source file."
msgstr ""

#. (para)
msgid ""
"The best way to avoid these problems is to add the derived files to the "
"project's ignore list. That way they will never show up in the commit "
"dialog, but genuine unversioned source files will still be flagged up."
msgstr ""

#. (para)
msgid ""
"If you <action>right click</action> on a single unversioned file, and select"
" the command <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Add to "
"Ignore List</guimenuitem></menuchoice> from the context menu, a submenu "
"appears allowing you to select just that file, or all files with the same "
"extension. Both submenus also have a <literal>(recursively)</literal> "
"equivalent. If you select multiple files, there is no submenu and you can "
"only add those specific files/folders."
msgstr ""

#. (para)
msgid ""
"If you choose the <literal>(recursively)</literal> version of the ignore "
"context menu, the item will be ignored not just for the selected folder but "
"all subfolders as well. However this requires SVN clients version 1.8 or "
"higher."
msgstr ""

#. (para)
msgid ""
"If you want to remove one or more items from the ignore list, <action>right "
"click</action> on those items and select "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Remove from Ignore "
"List</guimenuitem></menuchoice> You can also access a folder's "
"<literal>svn:ignore</literal> property directly. That allows you to specify "
"more general patterns using filename globbing, described in the section "
"below. Read <xref linkend=\"tsvn-dug-propertypage\"/> for more information "
"on setting properties directly. Please be aware that each ignore pattern has"
" to be placed on a separate line. Separating them by spaces does not work."
msgstr ""

#. (title)
msgid "The Global Ignore List"
msgstr ""

#. (para)
msgid ""
"Another way to ignore files is to add them to the <firstterm>global ignore "
"list</firstterm>. The big difference here is that the global ignore list is "
"a client property. It applies to <emphasis>all</emphasis> Subversion "
"projects, but on the client PC only. In general it is better to use the "
"<filename>svn:ignore</filename> property where possible, because it can be "
"applied to specific project areas, and it works for everyone who checks out "
"the project. Read <xref linkend=\"tsvn-dug-settings-main\"/> for more "
"information."
msgstr ""

#. (title)
msgid "Ignoring Versioned Items"
msgstr ""

#. (para)
msgid ""
"Versioned files and folders can never be ignored - that's a feature of "
"Subversion. If you versioned a file by mistake, read <xref linkend=\"tsvn-"
"howto-unversion\"/> for instructions on how to <quote>unversion</quote> it."
msgstr ""

#. (title)
msgid "Pattern Matching in Ignore Lists"
msgstr ""

#. (primary)
msgid "globbing"
msgstr ""

#. (primary)
msgid "pattern matching"
msgstr ""

#. (term)
msgid "*"
msgstr "*"

#. (para)
msgid ""
"Matches any string of characters, including the empty string (no "
"characters)."
msgstr ""

#. (term)
msgid "?"
msgstr "?"

#. (para)
msgid "Matches any single character."
msgstr ""

#. (term)
msgid "[...]"
msgstr "[...]"

#. (para)
msgid ""
"Matches any one of the characters enclosed in the square brackets. Within "
"the brackets, a pair of characters separated by <quote>-</quote> matches any"
" character lexically between the two. For example <literal>[AGm-p]</literal>"
" matches any one of <literal>A</literal>, <literal>G</literal>, "
"<literal>m</literal>, <literal>n</literal>, <literal>o</literal> or "
"<literal>p</literal>."
msgstr ""

#. (para)
msgid ""
"Subversion's ignore patterns make use of filename globbing, a technique "
"originally used in Unix to specify files using meta-characters as wildcards."
" The following characters have special meaning: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"Pattern matching is case sensitive, which can cause problems on Windows. You"
" can force case insensitivity the hard way by pairing characters, e.g. to "
"ignore <literal>*.tmp</literal> regardless of case, you could use a pattern "
"like <literal>*.[Tt][Mm][Pp]</literal>."
msgstr ""

#. (para)
msgid ""
"If you want an official definition for globbing, you can find it in the IEEE"
" specifications for the shell command language <ulink "
"url=\"http://www.opengroup.org/onlinepubs/009695399/utilities/xcu_chap02.html#tag_02_13\"><citetitle>Pattern"
" Matching Notation</citetitle></ulink>."
msgstr ""

#. (title)
msgid "No Paths in Global Ignore List"
msgstr ""

#. (para)
msgid ""
"You should not include path information in your pattern. The pattern "
"matching is intended to be used against plain file names and folder names. "
"If you want to ignore all <literal>CVS</literal> folders, just add "
"<literal>CVS</literal> to the ignore list. There is no need to specify "
"<literal>CVS */CVS</literal> as you did in earlier versions. If you want to "
"ignore all <literal>tmp</literal> folders when they exist within a "
"<literal>prog</literal> folder but not within a <literal>doc</literal> "
"folder you should use the <literal>svn:ignore</literal> property instead. "
"There is no reliable way to achieve this using global ignore patterns."
msgstr ""

#. (title)
msgid "Deleting, Moving and Renaming"
msgstr ""

#. (title)
msgid "Explorer context menu for versioned files"
msgstr ""

#. (para)
msgid ""
"Subversion allows renaming and moving of files and folders. So there are "
"menu entries for delete and rename in the TortoiseSVN submenu. "
"<placeholder-1/>"
msgstr ""

#. (title)
msgid "Deleting files and folders"
msgstr ""

#. (primary)
msgid "delete"
msgstr "grise"

#. (primary)
msgid "remove"
msgstr "largo"

#. (para)
msgid ""
"Use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Delete</guimenuitem></menuchoice>"
" to remove files or folders from Subversion."
msgstr "Shfrytëzo <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Grise</guimenuitem></menuchoice> për të larguar skedat ose dosjet nga Subversion."

#. (para)
msgid ""
"When you "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Delete</guimenuitem></menuchoice>"
" a file or folder, it is removed from your working copy immediately as well "
"as being marked for deletion in the repository on next commit. The item's "
"parent folder shows a <quote>modified</quote> icon overlay. Up until you "
"commit the change, you can get the file back using "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Revert</guimenuitem></menuchoice>"
" on the parent folder."
msgstr ""

#. (para)
msgid ""
"If you want to delete an item from the repository, but keep it locally as an"
" unversioned file/folder, use <menuchoice><guimenu>Extended Context "
"Menu</guimenu><guimenuitem>Delete (keep local)</guimenuitem></menuchoice>. "
"You have to hold the <keycap>Shift</keycap> key while right clicking on the "
"item in the explorer list pane (right pane) in order to see this in the "
"extended context menu."
msgstr ""

#. (para)
msgid ""
"If an item is deleted via the explorer instead of using the TortoiseSVN "
"context menu, the commit dialog shows those items as missing and lets you "
"remove them from version control too before the commit. However, if you "
"update your working copy, Subversion will spot the missing item and replace "
"it with the latest version from the repository. If you need to delete a "
"version-controlled file, always use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Delete</guimenuitem></menuchoice>"
" so that Subversion doesn't have to guess what you really want to do."
msgstr ""

#. (title)
msgid "Getting a deleted file or folder back"
msgstr ""

#. (para)
msgid ""
"If you have deleted a file or a folder and already committed that delete "
"operation to the repository, then a normal "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Revert</guimenuitem></menuchoice>"
" can't bring it back anymore. But the file or folder is not lost at all. If "
"you know the revision the file or folder got deleted (if you don't, use the "
"log dialog to find out) open the repository browser and switch to that "
"revision. Then select the file or folder you deleted, right click and select"
" <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Copy "
"to...</guimenuitem></menuchoice> as the target for that copy operation "
"select the path to your working copy."
msgstr ""

#. (title)
msgid "Moving files and folders"
msgstr ""

#. (primary)
#. (primary)
#. (primary)
msgid "rename"
msgstr "riemëro"

#. (primary)
msgid "move"
msgstr "lëviz"

#. (para)
msgid ""
"If you want to do a simple in-place rename of a file or folder, use "
"<menuchoice><guimenu>Context "
"Menu</guimenu><guimenuitem>Rename...</guimenuitem></menuchoice> Enter the "
"new name for the item and you're done."
msgstr ""

#. (para)
msgid "select the files or directories you want to move"
msgstr ""

#. (para)
msgid ""
"in the popup menu select <menuchoice><guimenu>Context "
"Menu</guimenu><guimenuitem>SVN Move versioned files "
"here</guimenuitem></menuchoice>"
msgstr ""

#. (para)
msgid ""
"If you want to move files around inside your working copy, perhaps to a "
"different sub-folder, use the right mouse drag-and-drop handler: "
"<placeholder-1/>"
msgstr ""

#. (title)
msgid "Commit the parent folder"
msgstr ""

#. (para)
msgid ""
"Since renames and moves are done as a delete followed by an add you must "
"commit the parent folder of the renamed/moved file so that the deleted part "
"of the rename/move will show up in the commit dialog. If you don't commit "
"the removed part of the rename/move, it will stay behind in the repository "
"and when your co-workers update, the old file will not be removed. i.e. they"
" will have <emphasis>both</emphasis> the old and the new copies."
msgstr ""

#. (para)
msgid ""
"You <emphasis>must</emphasis> commit a folder rename before changing any of "
"the files inside the folder, otherwise your working copy can get really "
"messed up."
msgstr ""

#. (para)
msgid ""
"Another way of moving or copying files is to use the Windows copy/cut "
"commands. Select the files you want to copy, right click and choose "
"<menuchoice><guimenu>Context "
"Menu</guimenu><guimenuitem>Copy</guimenuitem></menuchoice> from the explorer"
" context menu. Then browse to the target folder, right click and choose "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Paste</guimenuitem></menuchoice>."
" For moving files, choose <menuchoice><guimenu>Context "
"Menu</guimenu><guimenuitem>Cut</guimenuitem></menuchoice> instead of "
"<menuchoice><guimenu>Context "
"Menu</guimenu><guimenuitem>Copy</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"You can also use the repository browser to move items around. Read <xref "
"linkend=\"tsvn-dug-repobrowser\"/> to find out more."
msgstr ""

#. (title)
msgid "Do Not SVN Move Externals"
msgstr ""

#. (para)
msgid ""
"You should <emphasis>not</emphasis> use the TortoiseSVN "
"<guilabel>Move</guilabel> or <guilabel>Rename</guilabel> commands on a "
"folder which has been created using <literal>svn:externals</literal>. This "
"action would cause the external item to be deleted from its parent "
"repository, probably upsetting many other people. If you need to move an "
"externals folder you should use an ordinary shell move, then adjust the "
"<literal>svn:externals</literal> properties of the source and destination "
"parent folders."
msgstr ""

#. (title)
msgid "Dealing with filename case conflicts"
msgstr ""

#. (para)
msgid ""
"If the repository already contains two files with the same name but "
"differing only in case (e.g. <filename>TEST.TXT</filename> and "
"<filename>test.txt</filename>), you will not be able to update or checkout "
"the parent directory on a Windows client. Whilst Subversion supports case-"
"sensitive filenames, Windows does not."
msgstr ""

#. (para)
msgid ""
"This sometimes happens when two people commit, from separate working copies,"
" files which happen to have the same name, but with a case difference. It "
"can also happen when files are committed from a system with a case-sensitive"
" file system, like Linux."
msgstr ""

#. (para)
msgid ""
"In that case, you have to decide which one of them you want to keep and "
"delete (or rename) the other one from the repository."
msgstr ""

#. (title)
msgid "Preventing two files with the same name"
msgstr ""

#. (para)
msgid ""
"There is a server hook script available at: <ulink "
"url=\"http://svn.collab.net/repos/svn/trunk/contrib/hook-"
"scripts/\"><citetitle>http://svn.collab.net/repos/svn/trunk/contrib/hook-"
"scripts/</citetitle></ulink> that will prevent checkins which result in case"
" conflicts."
msgstr ""

#. (title)
msgid "Repairing File Renames"
msgstr ""

#. (para)
msgid ""
"Sometimes your friendly IDE will rename files for you as part of a "
"refactoring exercise, and of course it doesn't tell Subversion. If you try "
"to commit your changes, Subversion will see the old filename as missing and "
"the new one as an unversioned file. You could just check the new filename to"
" get it added in, but you would then lose the history tracing, as Subversion"
" does not know the files are related."
msgstr ""

#. (para)
msgid ""
"A better way is to notify Subversion that this change is actually a rename, "
"and you can do this within the <guilabel>Commit</guilabel> and "
"<guilabel>Check for Modifications</guilabel> dialogs. Simply select both the"
" old name (missing) and the new name (unversioned) and use "
"<menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Repair "
"Move</guimenuitem></menuchoice> to pair the two files as a rename."
msgstr ""

#. (title)
msgid "Deleting Unversioned Files"
msgstr ""

#. (para)
msgid ""
"Usually you set your ignore list such that all generated files are ignored "
"in Subversion. But what if you want to clear all those ignored items to "
"produce a clean build? Usually you would set that in your makefile, but if "
"you are debugging the makefile, or changing the build system it is useful to"
" have a way of clearing the decks."
msgstr ""

#. (para)
msgid ""
"TortoiseSVN provides just such an option using <menuchoice><guimenu>Extended"
" Context Menu</guimenu><guimenuitem>Delete unversioned "
"items...</guimenuitem></menuchoice>. You have to hold the "
"<keycap>Shift</keycap> while right clicking on a folder in the explorer list"
" pane (right pane) in order to see this in the extended context menu. This "
"will produce a dialog which lists all unversioned files anywhere in your "
"working copy. You can then select or deselect items to be removed."
msgstr ""

#. (para)
msgid ""
"When such items are deleted, the recycle bin is used, so if you make a "
"mistake here and delete a file that should have been versioned, you can "
"still recover it."
msgstr ""

#. (title)
msgid "Undo Changes"
msgstr "Rikthe Ndryshimet"

#. (primary)
#. (primary)
msgid "revert"
msgstr ""

#. (primary)
msgid "undo"
msgstr "rikthe"

#. (primary)
msgid "clean"
msgstr "pastro"

#. (title)
msgid "Revert dialog"
msgstr ""

#. (para)
msgid ""
"If you want to undo all changes you made in a file since the last update you"
" need to select the file, <action>right click</action> to pop up the context"
" menu and then select the command "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Revert</guimenuitem></menuchoice>"
" A dialog will pop up showing you the files that you've changed and can "
"revert. Select those you want to revert and click on "
"<guibutton>OK</guibutton>. <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"If you also want to clear all the changelists that are set, check the box at"
" the bottom of the dialog."
msgstr ""

#. (para)
msgid ""
"If you want to undo a deletion or a rename, you need to use Revert on the "
"parent folder as the deleted item does not exist for you to right click on."
msgstr ""

#. (para)
msgid ""
"If you want to undo the addition of an item, this appears in the context "
"menu as <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Undo "
"add...</guimenuitem></menuchoice>. This is really a revert as well, but the "
"name has been changed to make it more obvious."
msgstr ""

#. (para)
#. (para)
msgid ""
"The columns in this dialog can be customized in the same way as the columns "
"in the <guilabel>Check for modifications</guilabel> dialog. Read <xref "
"linkend=\"tsvn-dug-wcstatus-2\"/> for further details."
msgstr ""

#. (para)
msgid ""
"Since revert is sometimes used to clean up a working copy, there is an extra"
" button which allows you to delete unversioned items as well. When you click"
" this button another dialog comes up listing all the unversioned items, "
"which you can then select for deletion."
msgstr ""

#. (title)
msgid "Undoing Changes which have been Committed"
msgstr ""

#. (para)
msgid ""
"<menuchoice><guimenuitem>Revert</guimenuitem></menuchoice> will only undo "
"your local changes. It does <emphasis>not</emphasis> undo any changes which "
"have already been committed. If you want to undo all the changes which were "
"committed in a particular revision, read <xref linkend=\"tsvn-dug-"
"showlog\"/> for further information."
msgstr ""

#. (title)
msgid "Revert is Slow"
msgstr ""

#. (para)
msgid ""
"When you revert changes you may find that the operation takes a lot longer "
"than you expect. This is because the modified version of the file is sent to"
" the recycle bin, so you can retrieve your changes if you reverted by "
"mistake. However, if your recycle bin is full, Windows takes a long time to "
"find a place to put the file. The solution is simple: either empty the "
"recycle bin or deactivate the <guilabel>Use recycle bin when "
"reverting</guilabel> box in TortoiseSVN's settings."
msgstr ""

#. (title)
#. (entry)
#. (title)
#. (glossterm)
msgid "Cleanup"
msgstr "Pastro"

#. (primary)
msgid "cleanup"
msgstr "pastro"

#. (para)
msgid ""
"If a Subversion command cannot complete successfully, perhaps due to server "
"problems, your working copy can be left in an inconsistent state. In that "
"case you need to use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Cleanup</guimenuitem></menuchoice>"
" on the folder. It is a good idea to do this at the top level of the working"
" copy."
msgstr ""

#. (term)
msgid "Clean up working copy status"
msgstr ""

#. (para)
msgid ""
"As stated above, this option tries to get an inconsistent working copy into "
"a workable and usable state. This doesn't affect any data you have but only "
"the internal states of the working copy database. This is the actual "
"<literal>Cleanup</literal> command you know from older TortoiseSVN clients "
"or other SVN clients."
msgstr ""

#. (term)
msgid "Refresh shell overlays"
msgstr ""

#. (para)
msgid ""
"Sometimes the shell overlays, especially on the tree view on the left side "
"of the explorer don't show the current status, or the status cache failed to"
" recognize changes. In this situation, you can use this command to force a "
"refresh."
msgstr ""

#. (term)
msgid "Include externals"
msgstr ""

#. (para)
msgid ""
"If this is checked, then all actions are done for all files and folders "
"included with the <literal>svn:externals</literal> property as well."
msgstr ""

#. (term)
msgid "Delete unversioned files and folders, Delete ignored files and folders"
msgstr ""

#. (para)
msgid ""
"This is a fast and easy way to remove all generated files in your working "
"copy. All files and folders that are not versioned are moved to the trash "
"bin."
msgstr ""

#. (para)
msgid ""
"Note: you can also do the same from the "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Revert</guimenuitem></menuchoice>"
" dialog. There you also get a list of all the unversioned files and folders "
"to select for removal."
msgstr ""

#. (term)
msgid "Revert all changes recursively"
msgstr ""

#. (para)
msgid ""
"This command reverts all your local modifications which are not committed "
"yet."
msgstr ""

#. (para)
msgid ""
"Note: it's better to use the "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Revert</guimenuitem></menuchoice>"
" command instead, because there you can first see and select the files which"
" you want to revert."
msgstr ""

#. (para)
msgid ""
"In the cleanup dialog, there are also other useful options to get the "
"working copy into a <literal>clean</literal> state. <placeholder-1/>"
msgstr ""

#. (title)
msgid "Project Settings"
msgstr ""

#. (title)
msgid "Subversion Properties"
msgstr "Karakteristikat e Subversion"

#. (primary)
msgid "Subversion properties"
msgstr "Karakteristikat e Subversion"

#. (title)
msgid "Subversion property page"
msgstr "Faqja e karakteristikave të Subversion"

#. (para)
msgid ""
"<placeholder-1/> You can read and set the Subversion properties from the "
"Windows properties dialog, but also from "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>properties</guimenuitem></menuchoice>"
" and within TortoiseSVN's status lists, from <menuchoice><guimenu>Context "
"menu</guimenu><guimenuitem>properties</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"You can add your own properties, or some properties with a special meaning "
"in Subversion. These begin with <literal>svn:</literal>. "
"<literal>svn:externals</literal> is such a property; see how to handle "
"externals in <xref linkend=\"tsvn-dug-externals\"/>."
msgstr ""

#. (title)
msgid "svn:keywords"
msgstr "svn:keywords"

#. (primary)
msgid "keywords"
msgstr ""

#. (primary)
msgid "expand keywords"
msgstr ""

#. (para)
msgid ""
"Date of last known commit. This is based on information obtained when you "
"update your working copy. It does <emphasis>not</emphasis> check the "
"repository to find more recent changes."
msgstr ""

#. (para)
msgid "Revision of last known commit."
msgstr ""

#. (para)
msgid "Author who made the last known commit."
msgstr ""

#. (para)
msgid "The full URL of this file in the repository."
msgstr ""

#. (para)
msgid "A compressed combination of the previous four keywords."
msgstr ""

#. (para)
msgid ""
"Subversion supports CVS-like keyword expansion which can be used to embed "
"filename and revision information within the file itself. Keywords currently"
" supported are: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"To find out how to use these keywords, look at the <ulink "
"url=\"http://svnbook.red-"
"bean.com/en/1.8/svn.advanced.props.special.keywords.html\"><citetitle>svn:keywords"
" section</citetitle></ulink> in the Subversion book, which gives a full "
"description of these keywords and how to enable and use them."
msgstr ""

#. (para)
msgid ""
"For more information about properties in Subversion see the <ulink "
"url=\"http://svnbook.red-"
"bean.com/en/1.8/svn.advanced.props.html\"><citetitle>Special "
"Properties</citetitle></ulink>."
msgstr ""

#. (title)
msgid "Adding and Editing Properties"
msgstr ""

#. (title)
msgid "Adding properties"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> To add a new property, first click on "
"<guilabel>New...</guilabel>. Select the required property name from the "
"menu, and then fill in the required information in the specific property "
"dialog. These specific property dialogs are described in more detail in "
"<xref linkend=\"tsvn-dug-propertypage-editors\"/>."
msgstr ""

#. (para)
msgid ""
"To add a property that doesn't have its own dialog, choose "
"<guimenuitem>Advanced</guimenuitem> from the <guilabel>New...</guilabel> "
"menu. Then either select an existing property in the combo box or enter a "
"custom property name."
msgstr ""

#. (para)
msgid ""
"If you want to apply a property to many items at once, select the "
"files/folders in explorer, then select <menuchoice><guimenu>Context "
"menu</guimenu><guimenuitem>properties</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"If you want to apply the property to <emphasis>every</emphasis> file and "
"folder in the hierarchy below the current folder, check the "
"<guilabel>Recursive</guilabel> checkbox."
msgstr ""

#. (para)
msgid ""
"If you wish to edit an existing property, select that property from the list"
" of existing properties, then click on <guibutton>Edit...</guibutton>."
msgstr ""

#. (para)
msgid ""
"If you wish to remove an existing property, select that property from the "
"list of existing properties, then click on <guibutton>Remove</guibutton>."
msgstr ""

#. (para)
msgid ""
"The <literal>svn:externals</literal> property can be used to pull in other "
"projects from the same repository or a completely different repository. For "
"more information, read <xref linkend=\"tsvn-dug-externals\"/>."
msgstr ""

#. (title)
msgid "Edit properties at HEAD revision"
msgstr ""

#. (para)
msgid ""
"Because properties are versioned, you cannot edit the properties of previous"
" revisions. If you look at properties from the log dialog, or from a non-"
"HEAD revision in the repository browser, you will see a list of properties "
"and values, but no edit controls."
msgstr ""

#. (title)
msgid "Exporting and Importing Properties"
msgstr ""

#. (para)
msgid ""
"Often you will find yourself applying the same set of properties many times,"
" for example <literal>bugtraq:logregex</literal>. To simplify the process of"
" copying properties from one project to another, you can use the "
"Export/Import feature."
msgstr ""

#. (para)
msgid ""
"From the file or folder where the properties are already set, use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>properties</guimenuitem></menuchoice>,"
" select the properties you wish to export and click on "
"<guibutton>Export...</guibutton>. You will be prompted for a filename where "
"the property names and values will be saved."
msgstr ""

#. (para)
msgid ""
"From the folder(s) where you wish to apply these properties, use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>properties</guimenuitem></menuchoice>"
" and click on <guibutton>Import...</guibutton>. You will be prompted for a "
"filename to import from, so navigate to the place you saved the export file "
"previously and select it. The properties will be added to the folders non-"
"recursively."
msgstr ""

#. (para)
msgid ""
"If you want to add properties to a tree recursively, follow the steps above,"
" then in the property dialog select each property in turn, click on "
"<guibutton>Edit...</guibutton>, check the <guilabel>Apply property "
"recursively</guilabel> box and click on <guibutton>OK</guibutton>."
msgstr ""

#. (para)
msgid ""
"The Import file format is binary and proprietary to TortoiseSVN. Its only "
"purpose is to transfer properties using Import and Export, so there is no "
"need to edit these files."
msgstr ""

#. (title)
msgid "Binary Properties"
msgstr ""

#. (para)
msgid ""
"TortoiseSVN can handle binary property values using files. To read a binary "
"property value, <guibutton>Save...</guibutton> to a file. To set a binary "
"value, use a hex editor or other appropriate tool to create a file with the "
"content you require, then <guibutton>Load...</guibutton> from that file."
msgstr ""

#. (para)
msgid ""
"Although binary properties are not often used, they can be useful in some "
"applications. For example if you are storing huge graphics files, or if the "
"application used to load the file is huge, you might want to store a "
"thumbnail as a property so you can obtain a preview quickly."
msgstr ""

#. (title)
msgid "Automatic property setting"
msgstr ""

#. (primary)
msgid "auto-props"
msgstr ""

#. (para)
msgid ""
"You can configure Subversion and TortoiseSVN to set properties automatically"
" on files and folders when they are added to the repository. There are two "
"ways of doing this."
msgstr ""

#. (para)
msgid ""
"You can edit the Subversion configuration file to enable this feature on "
"your client. The <guilabel>General</guilabel> page of TortoiseSVN's settings"
" dialog has an edit button to take you there directly. The config file is a "
"simple text file which controls some of Subversion's workings. You need to "
"change two things: firstly in the section headed "
"<literal>miscellany</literal> uncomment the line <literal>enable-auto-props "
"= yes</literal>. Secondly you need to edit the section below to define which"
" properties you want added to which file types. This method is a standard "
"Subversion feature and works with any Subversion client. However it has to "
"be defined on each client individually - there is no way to propagate these "
"settings from the repository."
msgstr ""

#. (para)
msgid ""
"An alternative method is to set the <literal>tsvn:autoprops</literal> "
"property on folders, as described in the next section. This method only "
"works for TortoiseSVN clients, but it does get propagated to all working "
"copies on update."
msgstr ""

#. (para)
msgid ""
"Whichever method you choose, you should note that auto-props are only "
"applied to files at the time they are added to the working copy. Auto-props "
"will never change the properties of files which are already versioned."
msgstr ""

#. (para)
msgid ""
"If you want to be absolutely sure that new files have the correct properties"
" applied, you should set up a repository pre-commit hook to reject commits "
"where the required properties are not set."
msgstr ""

#. (title)
msgid "Commit properties"
msgstr ""

#. (para)
msgid ""
"Subversion properties are versioned. After you change or add a property you "
"have to commit your changes."
msgstr ""

#. (title)
msgid "Conflicts on properties"
msgstr ""

#. (para)
msgid ""
"If there's a conflict on committing the changes, because another user has "
"changed the same property, Subversion generates a <filename>.prej</filename>"
" file. Delete this file after you have resolved the conflict."
msgstr ""

#. (title)
msgid "TortoiseSVN Project Properties"
msgstr ""

#. (primary)
msgid "project properties"
msgstr ""

#. (primary)
msgid "TortoiseSVN properties"
msgstr ""

#. (para)
msgid ""
"<literal>tsvn:logminsize</literal> sets the minimum length of a log message "
"for a commit. If you enter a shorter message than specified here, the commit"
" is disabled. This feature is very useful for reminding you to supply a "
"proper descriptive message for every commit. If this property is not set, or"
" the value is zero, empty log messages are allowed."
msgstr ""

#. (para)
msgid ""
"<literal>tsvn:lockmsgminsize</literal> sets the minimum length of a lock "
"message. If you enter a shorter message than specified here, the lock is "
"disabled. This feature is very useful for reminding you to supply a proper "
"descriptive message for every lock you get. If this property is not set, or "
"the value is zero, empty lock messages are allowed."
msgstr ""

#. (para)
msgid ""
"<literal>tsvn:logwidthmarker</literal> is used with projects which require "
"log messages to be formatted with some maximum width (typically 80 "
"characters) before a line break. Setting this property to a non-zero will do"
" 2 things in the log message entry dialog: it places a marker to indicate "
"the maximum width, and it disables word wrap in the display, so that you can"
" see whether the text you entered is too long. Note: this feature will only "
"work correctly if you have a fixed-width font selected for log messages."
msgstr ""

#. (para)
msgid ""
"<literal>tsvn:logtemplate</literal> is used with projects which have rules "
"about log message formatting. The property holds a multi-line text string "
"which will be inserted in the commit message box when you start a commit. "
"You can then edit it to include the required information. Note: if you are "
"also using <literal>tsvn:logminsize</literal>, be sure to set the length "
"longer than the template or you will lose the protection mechanism."
msgstr ""

#. (para)
msgid ""
"There are also action specific templates which you can use instead of "
"<literal>tsvn:logtemplate</literal>. The action specific templates are used "
"if set, but <literal>tsvn:logtemplate</literal> will be used if no action "
"specific template is set."
msgstr ""

#. (para)
msgid ""
"<literal>tsvn:logtemplatecommit</literal> is used for all commits from a "
"working copy."
msgstr ""

#. (para)
msgid ""
"<literal>tsvn:logtemplatebranch</literal> is used when you create a "
"branch/tag, or when you copy files or folders directly in the repository "
"browser."
msgstr ""

#. (para)
msgid "<literal>tsvn:logtemplateimport</literal> is used for imports."
msgstr ""

#. (para)
msgid ""
"<literal>tsvn:logtemplatedelete</literal> is used when deleting items "
"directly in the repository browser."
msgstr ""

#. (para)
msgid ""
"<literal>tsvn:logtemplatemove</literal> is used when renaming or moving "
"items in the repository browser."
msgstr ""

#. (para)
msgid ""
"<literal>tsvn:logtemplatemkdir</literal> is used when creating directories "
"in the repository browser."
msgstr ""

#. (para)
msgid ""
"<literal>tsvn:logtemplatepropset</literal> is used when modifying properties"
" in the repository browser."
msgstr ""

#. (para)
msgid "<literal>tsvn:logtemplatelock</literal> is used when getting a lock."
msgstr ""

#. (para)
msgid "The action specific templates are: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"Subversion allows you to set <quote>autoprops</quote> which will be applied "
"to newly added or imported files, based on the file extension. This depends "
"on every client having set appropriate autoprops in their Subversion "
"configuration file. <literal>tsvn:autoprops</literal> can be set on folders "
"and these will be merged with the user's local autoprops when importing or "
"adding files. The format is the same as for Subversion autoprops, e.g. "
"<literal>*.sh = svn:eol-style=native;svn:executable</literal> sets two "
"properties on files with the <literal>.sh</literal> extension."
msgstr ""

#. (para)
msgid ""
"If there is a conflict between the local autoprops and "
"<literal>tsvn:autoprops</literal>, the project settings take precedence "
"because they are specific to that project."
msgstr ""

#. (para)
msgid ""
"In the Commit dialog you have the option to paste in the list of changed "
"files, including the status of each file (added, modified, etc). "
"<literal>tsvn:logfilelistenglish</literal> defines whether the file status "
"is inserted in English or in the localized language. If the property is not "
"set, the default is <literal>true</literal>."
msgstr ""

#. (para)
msgid ""
"TortoiseSVN can use spell checker modules which are also used by OpenOffice "
"and Mozilla. If you have those installed this property will determine which "
"spell checker to use, i.e. in which language the log messages for your "
"project should be written. <literal>tsvn:projectlanguage</literal> sets the "
"language module the spell checking engine should use when you enter a log "
"message. You can find the values for your language on this page: <ulink "
"url=\"http://msdn2.microsoft.com/en-"
"us/library/ms776260.aspx\"><citetitle>MSDN: Language "
"Identifiers</citetitle></ulink>."
msgstr ""

#. (para)
msgid ""
"You can enter this value in decimal, or in hexadecimal if prefixed with "
"<literal>0x</literal>. For example English (US) can be entered as "
"<literal>0x0409</literal> or <literal>1033</literal>."
msgstr ""

#. (para)
msgid ""
"The property <literal>tsvn:logsummary</literal> is used to extract a portion"
" of the log message which is then shown in the log dialog as the log message"
" summary."
msgstr ""

#. (para)
msgid ""
"The value of the <literal>tsvn:logsummary</literal> property must be set to "
"a one line regex string which contains one regex group. Whatever matches "
"that group is used as the summary."
msgstr ""

#. (para)
msgid ""
"An example: <literal>\\[SUMMARY\\]:\\s+(.*)</literal> Will catch everything "
"after <quote>[SUMMARY]</quote> in the log message and use that as the "
"summary."
msgstr ""

#. (para)
msgid ""
"The property <literal>tsvn:logrevregex</literal> defines a regular "
"expression which matches references to revisions in a log message. This is "
"used in the log dialog to turn such references into links which when clicked"
" will either scroll to that revision (if the revision is already shown in "
"the log dialog, or if it's available from the log cache) or open a new log "
"dialog showing that revision."
msgstr ""

#. (para)
msgid ""
"The regular expression must match the whole reference, not just the revision"
" number. The revision number is extracted from the matched reference string "
"automatically."
msgstr ""

#. (para)
msgid ""
"If this property is not set, a default regular expression is used to link "
"revision references."
msgstr ""

#. (para)
msgid ""
"There are several properties available to configure client-side hook "
"scripts. Each property is for one specific hook script type."
msgstr ""

#. (listitem)
msgid "tsvn:startcommithook"
msgstr "tsvn:startcommithook"

#. (listitem)
msgid "tsvn:precommithook"
msgstr "tsvn:precommithook"

#. (listitem)
msgid "tsvn:postcommithook"
msgstr "tsvn:postcommithook"

#. (listitem)
msgid "tsvn:startupdatehook"
msgstr "tsvn:startupdatehook"

#. (listitem)
msgid "tsvn:preupdatehook"
msgstr "tsvn:preupdatehook"

#. (listitem)
msgid "tsvn:postupdatehook"
msgstr "tsvn:postupdatehook"

#. (para)
msgid "The available properties/hook-scripts are <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"The parameters are the same as if you would configure the hook scripts in "
"the settings dialog. See <xref linkend=\"tsvn-dug-settings-hooks\"/> for the"
" details."
msgstr ""

#. (para)
msgid ""
"Since not every user has his or her working copy checked out at the same "
"location with the same name, you can configure a script/tool to execute that"
" resides in your working copy by specifying the URL in the repository "
"instead, using <filename>%REPOROOT%</filename> as the part of the URL to the"
" repository root. For example, if your hook script is in your working copy "
"under <filename>contrib/hook-scripts/client-side/checkyear.js</filename>, "
"you would specify the path to the script as "
"<filename>%REPOROOT%/trunk/contrib/hook-scripts/client-"
"side/checkyear.js</filename>. This way even if you move your repository to "
"another server you do not have to adjust the hook script properties."
msgstr ""

#. (para)
msgid ""
"Instead of <filename>%REPOROOT%</filename> you can also specify "
"<filename>%REPOROOT+%</filename>. The <literal>+</literal> is used to insert"
" any number of folder paths necessary to find the script. This is useful if "
"you want to specify your script so that if you create a branch the script is"
" still found even though the url of the working copy is now different. Using"
" the example above, you would specify the path to the script as "
"<filename>%REPOROOT+%/contrib/hook-scripts/client-"
"side/checkyear.js</filename>."
msgstr ""

#. (title)
msgid "Property dialog for hook scripts"
msgstr ""

#. (para)
msgid ""
"The following screenshot shows how the script to check for current copyright"
" years in source file headers is configured for TortoiseSVN. "
"<placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"When you want to add a new property, you can either pick one from the list "
"in the combo box, or you can enter any property name you like. If your "
"project uses some custom properties, and you want those properties to appear"
" in the list in the combo box (to avoid typos when you enter a property "
"name), you can create a list of your custom properties using "
"<literal>tsvn:userfileproperties</literal> and "
"<literal>tsvn:userdirproperties</literal>. Apply these properties to a "
"folder. When you go to edit the properties of any child item, your custom "
"properties will appear in the list of pre-defined property names."
msgstr ""

#. (title)
msgid "Property dialog boolean user types"
msgstr ""

#. (para)
msgid ""
"If your property can only have two states, e.g., true and false, then you "
"can configure your property as a <literal>bool</literal> type. "
"<placeholder-1/> Specify your property like this:"
msgstr ""

#. (literal)
msgid "propertyname=bool;labeltext(YESVALUE;NOVALUE;Checkboxtext)"
msgstr "propertyname=bool;labeltext(YESVALUE;NOVALUE;Checkboxtext)"

#. (para)
msgid ""
"the <literal>labeltext</literal> is the text shown in the dialog above the "
"checkbox where you can explain the purpose and use of the property. The "
"other parameters should be self explanatory."
msgstr ""

#. (title)
msgid "Property dialog state user types"
msgstr ""

#. (para)
msgid ""
"If your property represents one of many possible states, e.g., <literal>yes,"
" no, maybe</literal>, then you can configure your property as a "
"<literal>state</literal><placeholder-1/> property like this:"
msgstr ""

#. (literal)
msgid ""
"propertyname=state;labeltext(DEFVAL;VAL1;TEXT1;VAL2;TEXT2;VAL3;TEXT3;...)"
msgstr "propertyname=state;labeltext(DEFVAL;VAL1;TEXT1;VAL2;TEXT2;VAL3;TEXT3;...)"

#. (para)
msgid ""
"The parameters are the same as for the <literal>bool</literal> property, "
"with <literal>DEFVAL</literal> being the default value to be used if the "
"property isn't set yet or has a value that's not configured."
msgstr ""

#. (para)
msgid ""
"For up to three different values, the dialog shows up to three radio "
"buttons. If there are more values configured, it uses a combo box from where"
" the user can select the required state."
msgstr ""

#. (title)
msgid "Property dialog single-line user types"
msgstr ""

#. (para)
msgid ""
"For properties that consist of one line of text, use the "
"<literal>singleline</literal> property type: <placeholder-1/>"
msgstr ""

#. (literal)
msgid "propertyname=singleline;labeltext(regex)"
msgstr "propertyname=singleline;labeltext(regex)"

#. (para)
msgid ""
"the <literal>regex</literal> specifies a regular expression which is used to"
" validate (match) the text the user entered. If the text does not match the "
"regex, then the user is shown an error and the property isn't set."
msgstr ""

#. (title)
msgid "Property dialog multi-line user types"
msgstr ""

#. (para)
msgid ""
"For properties that consist of multiple lines of text, use the "
"<literal>multiline</literal> property type: <placeholder-1/>"
msgstr ""

#. (literal)
msgid "propertyname=multiline;labeltext(regex)"
msgstr "propertyname=multiline;labeltext(regex)"

#. (para)
msgid ""
"the <literal>regex</literal> specifies a regular expression which is used to"
" validate (match) the text the user entered. Don't forget to include the "
"newline (\\n) character in the regex!"
msgstr ""

#. (para)
msgid ""
"You can also specify whether a custom dialog is used to add/edit your property. TortoiseSVN offers four different dialog, depending on the type of your property. <placeholder-1/> The screenshots above were made with the following <literal>tsvn:userdirproperties</literal>: <screen>\n"
"my:boolprop=bool;This is a bool type property. Either check or uncheck it.(true;false;my bool prop)\n"
"my:stateprop1=state;This is a state property. Select one of the two states.(true;true;true value;false;false value)\n"
"my:stateprop2=state;This is a state property. Select one of the three states.(maybe;true;answer is correct;false;answer is wrong;maybe;not answered)\n"
"my:stateprop3=state;Specify the day to set this property.(1;1;Monday;2;Tuesday;3;Wednesday;4;Thursday;5;Friday;6;Saturday;7;Sunday)\n"
"my:singlelineprop=singleline;enter a small comment(.*)\n"
"my:multilineprop=multiline;copy and paste a full chapter here(.*)\n"
"</screen>"
msgstr ""

#. (para)
msgid ""
"TortoiseSVN has a few special properties of its own, and these begin with "
"<literal>tsvn:</literal>. <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"TortoiseSVN can integrate with some bug tracking tools. This uses project "
"properties that start with <literal>bugtraq:</literal>. Read <xref linkend"
"=\"tsvn-dug-bugtracker\"/> for further information."
msgstr ""

#. (para)
msgid ""
"It can also integrate with some web-based repository browsers, using project"
" properties that start with <literal>webviewer:</literal>. Read <xref "
"linkend=\"tsvn-dug-repoviewer\"/> for further information."
msgstr ""

#. (title)
msgid "Set the project properties on folders"
msgstr ""

#. (para)
msgid ""
"These special project properties must be set on <emphasis>folders</emphasis>"
" for the system to work. When you use a TortoiseSVN command which uses these"
" properties, the properties are read from the folder you clicked on. If the "
"properties are not found there, TortoiseSVN will search upwards through the "
"folder tree to find them until it comes to an unversioned folder, or the "
"tree root (e.g. <literal>C:\\</literal>) is found. If you can be sure that "
"each user checks out only from e.g <filename>trunk/</filename> and not some "
"sub-folder, then it is sufficient to set the properties on "
"<filename>trunk/</filename>. If you can't be sure, you should set the "
"properties recursively on each sub-folder. If you set the same property but "
"you use different values at different depths in your project hierarchy then "
"you will get different results depending on where you click in the folder "
"structure."
msgstr ""

#. (para)
#. (para)
#. (para)
msgid ""
"For project properties <emphasis>only</emphasis>, i.e. "
"<literal>tsvn:</literal>, <literal>bugtraq:</literal> and "
"<literal>webviewer:</literal> you can use the <guilabel>Recursive</guilabel>"
" checkbox to set the property to all sub-folders in the hierarchy, without "
"also setting it on all files."
msgstr ""

#. (para)
#. (para)
#. (para)
msgid ""
"When you add new sub-folders to a working copy using TortoiseSVN, any "
"project properties present in the parent folder will automatically be added "
"to the new child folder too."
msgstr ""

#. (title)
#. (title)
msgid "Limitations Using the Repository Browser"
msgstr ""

#. (para)
msgid ""
"Fetching properties remotely is a slow operation, so some of the features "
"described above will not work in the repository browser as they do in a "
"working copy."
msgstr ""

#. (para)
msgid ""
"When you add a property using the repo browser, only the standard "
"<literal>svn:</literal> properties are offered in the pre-defined list. Any "
"other property name must be entered manually."
msgstr ""

#. (para)
msgid ""
"Properties cannot be set or deleted recursively using the repo browser."
msgstr ""

#. (para)
msgid ""
"Project properties will <emphasis>not</emphasis> be propagated automatically"
" when a child folder is added using the repo browser."
msgstr ""

#. (para)
msgid ""
"<literal>tsvn:autoprops</literal> will <emphasis>not</emphasis> set "
"properties on files which are added using the repo browser."
msgstr ""

#. (para)
msgid ""
"Although TortoiseSVN's project properties are extremely useful, they only "
"work with TortoiseSVN, and some will only work in newer versions of "
"TortoiseSVN. If people working on your project use a variety of Subversion "
"clients, or possibly have old versions of TortoiseSVN, you may want to use "
"repository hooks to enforce project policies. project properties can only "
"help to implement a policy, they cannot enforce it."
msgstr ""

#. (title)
msgid "Property Editors"
msgstr ""

#. (para)
msgid ""
"Some properties have to use specific values, or be formatted in a specific "
"way in order to be used for automation. To help get the formatting correct, "
"TortoiseSVN presents edit dialogs for some particular properties which show "
"the possible values or break the property into its individual components."
msgstr ""

#. (title)
msgid "External Content"
msgstr ""

#. (title)
msgid "svn:externals property page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> The <literal>svn:externals</literal> property can be used "
"to pull in other projects from the same repository or a completely different"
" repository as described in <xref linkend=\"tsvn-dug-externals\"/>."
msgstr ""

#. (para)
msgid ""
"You need to define the name of the sub-folder that the external folder is "
"checked out as, and the Subversion URL of the external item. You can check "
"out an external at its HEAD revision, so when the external item changes in "
"the repository, your working copy will receive those changes on update. "
"However, if you want the external to reference a particular stable point "
"then you can specify the specific revision to use. IN this case you may also"
" want to specify the same revision as a peg revision. If the external item "
"is renamed at some point in the future then Subversion will not be able to "
"update this item in your working copy. By specifying a peg revision you tell"
" Subversion to look for an item that had that name at the peg revision "
"rather than at HEAD."
msgstr ""

#. (para)
msgid ""
"The button <guibutton>Find HEAD-Revision</guibutton> fetches the HEAD "
"revision of every external URL and shows that HEAD revision in the rightmost"
" column. After the HEAD revision is known, a simple right click on an "
"external gives you the command to peg the selected externals to their "
"explicit HEAD revision. In case the HEAD revision is not known yet, the "
"right click command will fetch the HEAD revision first."
msgstr ""

#. (title)
msgid "SVN Keywords"
msgstr ""

#. (title)
msgid "svn:keywords property page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> Select the keywords that you would like to be expanded in "
"your file."
msgstr ""

#. (title)
msgid "EOL Style"
msgstr ""

#. (title)
msgid "svn:eol-style property page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> Select the end-of-line style that you wish to use and "
"TortoiseSVN will use the correct property value."
msgstr ""

#. (title)
#. (title)
msgid "Issue Tracker Integration"
msgstr ""

#. (title)
msgid "tsvn:bugtraq property page"
msgstr ""

#. (title)
msgid "Log Message Sizes"
msgstr ""

#. (title)
msgid "Size of log messages property page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> These 3 properties control the formatting of log messages. "
"The first 2 disable the <guibutton>OK</guibutton> in the commit or lock "
"dialogs until the message meets the minimum length. The border position "
"shows a marker at the given column width as a guide for projects which have "
"width limits on their log messages. Setting a value to zero will delete the "
"property."
msgstr ""

#. (title)
msgid "Project Language"
msgstr "Gjuha e Projektit"

#. (title)
msgid "Language property page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> Choose the language to use for spell-checking log messages "
"in the commit dialog. The file lists checkbox comes into effect when you "
"right click in the log message pane and select <guilabel>Paste file "
"list</guilabel>. By default the Subversion status will be shown in your "
"local language. When this box is checked the status is always given in "
"English, for projects which require English-only log messages."
msgstr ""

#. (title)
msgid "MIME-type"
msgstr "MIME-lloji"

#. (title)
msgid "svn:mime-type property page"
msgstr ""

#. (title)
#. (literal)
#. (literal)
msgid "svn:needs-lock"
msgstr "svn:needs-lock"

#. (title)
msgid "svn:needs-lock property page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> This property simply controls whether a file will be "
"checked out as read-only if there is no lock held for it in the working "
"copy."
msgstr ""

#. (title)
msgid "svn:executable"
msgstr ""

#. (title)
msgid "svn:executable property page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> This property controls whether a file will be given "
"executable status when checked out on a Unix/Linux system. It has no effect "
"on a Windows checkout."
msgstr ""

#. (title)
msgid "Merge log message templates"
msgstr ""

#. (para)
#. (para)
msgid ""
"Whenever revisions are merged into a working copy, TortoiseSVN generates a "
"log message from all the merged revisions. Those are then available from the"
" <guibutton>Recent Messages</guibutton> button in the commit dialog."
msgstr ""

#. (title)
msgid "Property dialog merge log message templates"
msgstr ""

#. (para)
msgid ""
"You can customize that generated message with the following properties: "
"<placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"A comma separated list of the merged revisions, e.g., <literal>3, 5, 6, "
"7</literal>"
msgstr ""

#. (para)
msgid ""
"Like <literal>{revisions}</literal>, but with each revision preceded with an"
" <literal>r</literal>, e.g., <literal>r3, r5, r6, r7</literal>"
msgstr ""

#. (para)
msgid ""
"A comma separated list of the merged revisions, grouped into ranges if "
"possible, e.g., <literal>3, 5-7</literal>"
msgstr ""

#. (para)
msgid ""
"The source URL of the merge, i.e., where the revisions are merged from."
msgstr ""

#. (para)
msgid ""
"This property specifies the first part of the generated log message. The "
"following keywords can be used: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"The default value for this string is <literal>Merged revision(s) {revrange} "
"from {mergeurl}:</literal> with a newline at the end."
msgstr ""

#. (para)
msgid "The log message of the merged revision, as it was entered."
msgstr ""

#. (para)
msgid ""
"Like <literal>{msg}</literal>, but all newlines are replaced with a space, "
"so that the whole log message appears on one single line."
msgstr ""

#. (para)
msgid "The author of the merged revision."
msgstr ""

#. (para)
msgid "The merged revision itself."
msgstr ""

#. (para)
msgid "The bug IDs of the merged revision, if there are any."
msgstr ""

#. (para)
msgid ""
"This property specifies how the text for each merged revision should look "
"like. The following keywords can be used: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"This only works if the merged revisions are already in the log cache. If you"
" have disabled the log cache or not shown the log first before the merge, "
"the generated message won't contain any information about the merged "
"revisions."
msgstr ""

#. (title)
msgid "External Items"
msgstr "Sendet e Jashtme"

#. (primary)
msgid "external repositories"
msgstr ""

#. (primary)
#. (primary)
msgid "externals"
msgstr ""

#. (para)
msgid ""
"Sometimes it is useful to construct a working copy that is made out of a "
"number of different checkouts. For example, you may want different files or "
"subdirectories to come from different locations in a repository, or perhaps "
"from different repositories altogether. If you want every user to have the "
"same layout, you can define the <literal>svn:externals</literal> properties "
"to pull in the specified resource at the locations where they are needed."
msgstr ""

#. (title)
msgid "External Folders"
msgstr ""

#. (para)
msgid ""
"Let's say you check out a working copy of <filename>/project1</filename> to "
"<filename>D:\\dev\\project1</filename>. Select the folder "
"<filename>D:\\dev\\project1</filename>, <action>right click</action> and "
"choose <menuchoice><guimenu>Windows "
"Menu</guimenu><guimenuitem>Properties</guimenuitem></menuchoice> from the "
"context menu. The Properties Dialog comes up. Then go to the Subversion tab."
" There, you can set properties. Click <guibutton>Properties...</guibutton>. "
"In the properties dialog, either double click on the "
"<literal>svn:externals</literal> if it already exists, or click on the "
"<guibutton>New...</guibutton> button and select <literal>externals</literal>"
" from the menu. To add a new external, click the "
"<guibutton>New...</guibutton> and then fill in the required information in "
"the shown dialog."
msgstr ""

#. (para)
msgid ""
"URLs must be properly escaped or they will not work, e.g. you must replace "
"each space with <literal>%20</literal>."
msgstr ""

#. (para)
msgid ""
"If you want the local path to include spaces or other special characters, "
"you can enclose it in double quotes, or you can use the "
"<literal>\\</literal> (backslash) character as a Unix shell style escape "
"character preceding any special character. Of course this also means that "
"you must use <literal>/</literal> (forward slash) as a path delimiter. Note "
"that this behaviour is new in Subversion 1.6 and will not work with older "
"clients."
msgstr ""

#. (title)
msgid "Use explicit revision numbers"
msgstr ""

#. (para)
msgid ""
"You should strongly consider using explicit revision numbers in all of your "
"externals definitions, as described above. Doing so means that you get to "
"decide when to pull down a different snapshot of external information, and "
"exactly which snapshot to pull. Besides the common sense aspect of not being"
" surprised by changes to third-party repositories that you might not have "
"any control over, using explicit revision numbers also means that as you "
"backdate your working copy to a previous revision, your externals "
"definitions will also revert to the way they looked in that previous "
"revision, which in turn means that the external working copies will be "
"updated to match the way <emphasis>they</emphasis> looked back when your "
"repository was at that previous revision. For software projects, this could "
"be the difference between a successful and a failed build of an older "
"snapshot of your complex code base."
msgstr ""

#. (para)
msgid ""
"The edit dialog for <literal>svn:externals</literal> properties allows you "
"to select the externals and automatically set them explicitly to the HEAD "
"revision."
msgstr ""

#. (para)
#. (para)
msgid ""
"If the external project is in the same repository, any changes you make "
"there will be included in the commit list when you commit your main project."
msgstr ""

#. (para)
#. (para)
msgid ""
"If the external project is in a different repository, any changes you make "
"to the external project will be notified when you commit the main project, "
"but you have to commit those external changes separately."
msgstr ""

#. (para)
msgid ""
"If you use absolute URLs in <literal>svn:externals</literal> definitions and"
" you have to relocate your working copy (i.e., if the URL of your repository"
" changes), then your externals won't change and might not work anymore."
msgstr ""

#. (para)
msgid ""
"To avoid such problems, Subversion clients version 1.5 and higher support "
"relative external URLs. Four different methods of specifying a relative URL "
"are supported. In the following examples, assume we have two repositories: "
"one at <systemitem class=\"url\">http://example.com/svn/repos-1</systemitem>"
" and another at <systemitem "
"class=\"url\">http://example.com/svn/repos-2</systemitem>. We have a "
"checkout of <systemitem "
"class=\"url\">http://example.com/svn/repos-1/project/trunk</systemitem> into"
" <filename>C:\\Working</filename> and the <literal>svn:externals</literal> "
"property is set on trunk."
msgstr ""

#. (term)
msgid "Relative to parent directory"
msgstr ""

#. (para)
msgid ""
"These URLs always begin with the string <literal>../</literal> for example: <screen>\n"
"../../widgets/foo  common/foo-widget\n"
"</screen> This will extract <systemitem class=\"url\">http://example.com/svn/repos-1/widgets/foo</systemitem> into <filename>C:\\Working\\common\\foo-widget</filename>."
msgstr ""

#. (para)
msgid ""
"Note that the URL is relative to the URL of the directory with the "
"<literal>svn:externals</literal> property, not to the directory where the "
"external is written to disk."
msgstr ""

#. (term)
msgid "Relative to repository root"
msgstr ""

#. (para)
msgid ""
"These URLs always begin with the string <literal>^/</literal> for example: <screen>\n"
"^/widgets/foo  common/foo-widget\n"
"</screen> This will extract <systemitem class=\"url\">http://example.com/svn/repos-1/widgets/foo</systemitem> into <filename>C:\\Working\\common\\foo-widget</filename>."
msgstr ""

#. (para)
msgid ""
"You can easily refer to other repositories with the same <literal>SVNParentPath</literal> (a common directory holding several repositories). For example: <screen>\n"
"^/../repos-2/hammers/claw  common/claw-hammer\n"
"</screen> This will extract <systemitem class=\"url\">http://example.com/svn/repos-2/hammers/claw</systemitem> into <filename>C:\\Working\\common\\claw-hammer</filename>."
msgstr ""

#. (term)
msgid "Relative to scheme"
msgstr ""

#. (para)
msgid ""
"URLs beginning with the string <literal>//</literal> copy only the scheme part of the URL. This is useful when the same hostname must the accessed with different schemes depending upon network location; e.g. clients in the intranet use <systemitem class=\"url\">http://</systemitem> while external clients use <systemitem class=\"url\">svn+ssh://</systemitem>. For example: <screen>\n"
"//example.com/svn/repos-1/widgets/foo  common/foo-widget\n"
"</screen> This will extract <systemitem class=\"url\">http://example.com/svn/repos-1/widgets/foo</systemitem> or <systemitem class=\"url\">svn+ssh://example.com/svn/repos-1/widgets/foo</systemitem> depending on which method was used to checkout <filename>C:\\Working</filename>."
msgstr ""

#. (term)
msgid "Relative to the server's hostname"
msgstr ""

#. (para)
msgid ""
"URLs beginning with the string <literal>/</literal> copy the scheme and the hostname part of the URL, for example: <screen>\n"
"/svn/repos-1/widgets/foo  common/foo-widget\n"
"</screen> This will extract <systemitem class=\"url\">http://example.com/svn/repos-1/widgets/foo</systemitem> into <filename>C:\\Working\\common\\foo-widget</filename>. But if you checkout your working copy from another server at <systemitem class=\"url\">svn+ssh://another.mirror.net/svn/repos-1/project1/trunk</systemitem> then the external reference will extract <systemitem class=\"url\">svn+ssh://another.mirror.net/svn/repos-1/widgets/foo</systemitem>."
msgstr ""

#. (para)
msgid ""
"You can also specify a peg and operative revision for the URL if required. "
"To learn more about peg and operative revisions, please read the <ulink "
"url=\"http://svnbook.red-"
"bean.com/en/1.8/svn.advanced.pegrevs.html\"><citetitle>corresponding "
"chapter</citetitle></ulink> in the Subversion book."
msgstr ""

#. (para)
msgid ""
"If you need more information how TortoiseSVN handles Properties read <xref "
"linkend=\"tsvn-dug-propertypage\"/>."
msgstr ""

#. (para)
msgid ""
"To find out about different methods of accessing common sub-projects read "
"<xref linkend=\"tsvn-howto-common-projects\"/>."
msgstr ""

#. (title)
msgid "External Files"
msgstr "Skedat e Jashtme"

#. (para)
msgid ""
"As of Subversion 1.6 you can add single file externals to your working copy "
"using the same syntax as for folders. However, there are some restrictions."
msgstr ""

#. (para)
msgid ""
"The path to the file external must place the file in an existing versioned "
"folder. In general it makes most sense to place the file directly in the "
"folder that has <literal>svn:externals</literal> set, but it can be in a "
"versioned sub-folder if necessary. By contrast, directory externals will "
"automatically create any intermediate unversioned folders as required."
msgstr ""

#. (para)
msgid ""
"The URL for a file external must be in the same repository as the URL that "
"the file external will be inserted into; inter-repository file externals are"
" not supported."
msgstr ""

#. (para)
msgid ""
"A file external behaves just like any other versioned file in many respects,"
" but they cannot be moved or deleted using the normal commands; the "
"<literal>svn:externals</literal> property must be modified instead."
msgstr ""

#. (title)
msgid "Creating externals via drag and drop"
msgstr ""

#. (para)
msgid ""
"If you already have a working copy of the files or folders you want to "
"include as externals in another working copy, you can simply add those via "
"drag and drop from the windows explorer."
msgstr ""

#. (para)
msgid ""
"Simply <action>right drag</action> the file or folder from one working copy "
"to where you want those to be included as externals. A context menu appears "
"when you release the mouse button: <menuchoice><guimenuitem>SVN Add as "
"externals here</guimenuitem></menuchoice> if you click on that context menu "
"entry, the <literal>svn:externals</literal> property is automatically added."
" All you have to do after that is commit the property changes and update to "
"get those externals properly included in your working copy."
msgstr ""

#. (title)
msgid "Branching / Tagging"
msgstr ""

#. (primary)
#. (primary)
msgid "copy"
msgstr "kopjo"

#. (primary)
msgid "mark release"
msgstr ""

#. (para)
msgid ""
"One of the features of version control systems is the ability to isolate "
"changes onto a separate line of development. This line is known as a "
"<firstterm>branch</firstterm>. Branches are often used to try out new "
"features without disturbing the main line of development with compiler "
"errors and bugs. As soon as the new feature is stable enough then the "
"development branch is <firstterm>merged</firstterm> back into the main "
"branch (trunk)."
msgstr ""

#. (para)
msgid ""
"Another feature of version control systems is the ability to mark particular"
" revisions (e.g. a release version), so you can at any time recreate a "
"certain build or environment. This process is known as "
"<firstterm>tagging</firstterm>."
msgstr ""

#. (para)
msgid ""
"Subversion does not have special commands for branching or tagging, but uses"
" so-called <quote>cheap copies</quote> instead. Cheap copies are similar to "
"hard links in Unix, which means that instead of making a complete copy in "
"the repository, an internal link is created, pointing to a specific "
"tree/revision. As a result branches and tags are very quick to create, and "
"take up almost no extra space in the repository."
msgstr ""

#. (title)
msgid "Creating a Branch or Tag"
msgstr ""

#. (title)
msgid "The Branch/Tag Dialog"
msgstr ""

#. (para)
msgid ""
"If you have imported your project with the recommended directory structure, "
"creating a branch or tag version is very simple: <placeholder-1/> Select the"
" folder in your working copy which you want to copy to a branch or tag, then"
" select the command "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Branch/Tag...</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"The default destination URL for the new branch will be the source URL on which your working copy is based. You will need to edit that URL to the new path for your branch/tag. So instead of <screen>\n"
"    http://svn.collab.net/repos/ProjectName/trunk\n"
"</screen> you might now use something like <screen>\n"
"    http://svn.collab.net/repos/ProjectName/tags/Release_1.10\n"
"</screen> If you can't remember the naming convention you used last time, click the button on the right to open the repository browser so you can view the existing repository structure."
msgstr ""

#. (title)
msgid "intermediate folders"
msgstr ""

#. (para)
msgid ""
"When you specify the target URL, all the folders up to the last one must "
"already exist or you will get an error message. In the above example, the "
"URL <literal>http://svn.collab.net/repos/ProjectName/tags/</literal> must "
"exist to create the <literal>Release_1.10</literal> tag."
msgstr ""

#. (para)
msgid ""
"However if you want to create a branch/tag to an URL that has intermediate "
"folders that don't exist yet you can check the option <option>Create "
"intermediate folders</option> at the bottom of the dialog. If that option is"
" activated, all intermediate folders are automatically created."
msgstr ""

#. (para)
msgid ""
"Note that this option is disabled by default to avoid typos. For example, if"
" you typed the target URL as "
"<literal>http://svn.collab.net/repos/ProjectName/Tags/Release_1.10</literal>"
" instead of "
"<literal>http://svn.collab.net/repos/ProjectName/tags/Release_1.10</literal>,"
" you would get an error with the option disabled, but with the option "
"enabled a folder <literal>Tags</literal> would be automatically created, and"
" you would end up with a folder <literal>Tags</literal> and a folder "
"<literal>tags</literal>."
msgstr ""

#. (term)
#. (listitem)
msgid "HEAD revision in the repository"
msgstr ""

#. (para)
msgid ""
"The new branch is copied directly in the repository from the HEAD revision. "
"No data needs to be transferred from your working copy, and the branch is "
"created very quickly."
msgstr ""

#. (term)
msgid "Specific revision in the repository"
msgstr ""

#. (para)
msgid ""
"The new branch is copied directly in the repository but you can choose an "
"older revision. This is useful if you forgot to make a tag when you released"
" your project last week. If you can't remember the revision number, click "
"the button on the right to show the revision log, and select the revision "
"number from there. Again no data is transferred from your working copy, and "
"the branch is created very quickly."
msgstr ""

#. (para)
msgid ""
"The new branch is an identical copy of your local working copy. If you have "
"updated some files to an older revision in your WC, or if you have made "
"local changes, that is exactly what goes into the copy. Naturally this sort "
"of complex tag may involve transferring data from your WC back to the "
"repository if it does not exist there already."
msgstr ""

#. (para)
msgid ""
"Now you have to select the source of the copy. Here you have three options: "
"<placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"If you want your working copy to be switched to the newly created branch "
"automatically, use the <guilabel>Switch working copy to new "
"branch/tag</guilabel> checkbox. But if you do that, first make sure that "
"your working copy does not contain modifications. If it does, those changes "
"will be merged into the branch WC when you switch."
msgstr ""

#. (para)
msgid ""
"If your working copy has other projects included with "
"<literal>svn:externals</literal> properties, those externals will be listed "
"at the bottom of the branch/tag dialog. For each external, the target path, "
"the source URL and the revision is shown. The revision of the external is "
"determined from the working copy, which means it shows the revision that "
"external actually points to."
msgstr ""

#. (para)
msgid ""
"If you want to make sure that the new tag always is in a consistent state, "
"check all the externals to have their revisions fixed to their current "
"working copy revision. If you don't check the externals and those externals "
"point to a HEAD revision which might change in the future, checking out the "
"new tag will check out that HEAD revision of the external and your tag might"
" not compile anymore. So it's always a good idea to set the externals to an "
"explicit revision when creating a tag."
msgstr ""

#. (para)
msgid ""
"If externals are set to an explicit revision when creating a branch or tag, "
"TortoiseSVN automatically changes the <literal>svn:externals</literal> "
"property. When the branch/tag is created from HEAD or a specific revision in"
" the repository, TortoiseSVN first creates the branch/tag, then adjusts the "
"properties. This will create additional commits for each property. When the "
"branch/tag is created from the working copy, the properties are modified "
"first, then the branch/tag is created and then the properties are changed "
"back to their original value."
msgstr ""

#. (para)
msgid ""
"Press <guibutton>OK</guibutton> to commit the new copy to the repository. "
"Don't forget to supply a log message. Note that the copy is created "
"<emphasis>inside the repository</emphasis>."
msgstr ""

#. (para)
msgid ""
"Note that unless you opted to switch your working copy to the newly created "
"branch, creating a Branch or Tag does <emphasis>not</emphasis> affect your "
"working copy. Even if you create the branch from your WC, those changes are "
"committed to the new branch, not to the trunk, so your WC may still be "
"marked as modified with respect to the trunk."
msgstr ""

#. (title)
msgid "Other ways to create a branch or tag"
msgstr ""

#. (para)
msgid ""
"You can also create a branch or tag without having a working copy. To do "
"that, open the repository browser. You can there drag folders to a new "
"location. You have to hold down the <keycap>Ctrl</keycap> key while you drag"
" to create a copy, otherwise the folder gets moved, not copied."
msgstr ""

#. (para)
msgid ""
"You can also drag a folder with the right mouse button. Once you release the"
" mouse button you can choose from the context menu whether you want the "
"folder to be moved or copied. Of course to create a branch or tag you must "
"copy the folder, not move it."
msgstr ""

#. (para)
msgid ""
"Yet another way is from the log dialog. You can show the log dialog for e.g."
" trunk, select a revision (either the HEAD revision at the very top or an "
"earlier revision), right click and choose <menuchoice><guimenuitem>create "
"branch/tag from revision...</guimenuitem></menuchoice>."
msgstr ""

#. (title)
msgid "To Checkout or to Switch..."
msgstr ""

#. (primary)
msgid "switch"
msgstr "u ndërro vendet"

#. (para)
msgid ""
"...that is (not really) the question. While a checkout downloads everything "
"from the desired branch in the repository to your working directory, "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Switch...</guimenuitem></menuchoice>"
" only transfers the changed data to your working copy. Good for the network "
"load, good for your patience. :-)"
msgstr ""

#. (para)
msgid ""
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Checkout</guimenuitem></menuchoice>"
" to make a fresh checkout in an empty folder. You can check out to any "
"location on your local disk and you can create as many working copies from "
"your repository as you like."
msgstr ""

#. (para)
msgid ""
"Switch your current working copy to the newly created copy in the "
"repository. Again select the top level folder of your project and use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Switch...</guimenuitem></menuchoice>"
" from the context menu."
msgstr ""

#. (para)
msgid ""
"In the next dialog enter the URL of the branch you just created. Select the "
"<guilabel>Head Revision</guilabel> radio button and click on "
"<guibutton>OK</guibutton>. Your working copy is switched to the new "
"branch/tag."
msgstr ""

#. (para)
msgid ""
"Switch works just like Update in that it never discards your local changes. "
"Any changes you have made to your working copy which have not yet been "
"committed will be merged when you do the Switch. If you do not want this to "
"happen then you must either commit the changes before switching, or revert "
"your working copy to an already-committed revision (typically HEAD)."
msgstr ""

#. (para)
msgid ""
"If you want to work on trunk and branch, but don't want the expense of a "
"fresh checkout, you can use Windows Explorer to make a copy of your trunk "
"checkout in another folder, then "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Switch...</guimenuitem></menuchoice>"
" that copy to your new branch."
msgstr ""

#. (title)
msgid "The Switch Dialog"
msgstr ""

#. (para)
msgid ""
"To be able to work with your freshly generated branch or tag you have "
"several ways to handle it. You can: <placeholder-1/><placeholder-2/>"
msgstr ""

#. (para)
msgid ""
"Tags are typically used to create a static snapshot of the project at a "
"particular stage. As such they are not normally used for development - "
"that's what branches are for, which is the reason we recommended the "
"<filename>/trunk /branches /tags</filename> repository structure in the "
"first place. Working on a tag revision is <emphasis>not a good "
"idea</emphasis>, but because your local files are not write protected there "
"is nothing to stop you doing this by mistake. However, if you try to commit "
"to a path in the repository which contains <filename>/tags/</filename>, "
"TortoiseSVN will warn you."
msgstr ""

#. (para)
msgid ""
"It may be that you need to make further changes to a release which you have "
"already tagged. The correct way to handle this is to create a new branch "
"from the tag first and commit the branch. Do your Changes on this branch and"
" then create a new tag from this new branch, e.g. "
"<filename>Version_1.0.1</filename>."
msgstr ""

#. (para)
msgid ""
"If you modify a working copy created from a branch and commit, then all "
"changes go to the new branch and <emphasis>not</emphasis> the trunk. Only "
"the modifications are stored. The rest remains a cheap copy."
msgstr ""

#. (para)
msgid ""
"Although Subversion itself makes no distinction between tags and branches, "
"the way they are typically used differs a bit. <placeholder-1/>"
msgstr ""

#. (title)
msgid "Merging"
msgstr "Duke Bashkuar"

#. (primary)
#. (primary)
#. (primary)
msgid "merge"
msgstr "bashko"

#. (para)
msgid ""
"Where branches are used to maintain separate lines of development, at some "
"stage you will want to merge the changes made on one branch back into the "
"trunk, or vice versa."
msgstr ""

#. (para)
msgid ""
"It is important to understand how branching and merging works in Subversion "
"before you start using it, as it can become quite complex. It is highly "
"recommended that you read the chapter <ulink url=\"http://svnbook.red-"
"bean.com/en/1.8/svn.branchmerge.html\"><citetitle>Branching and "
"Merging</citetitle></ulink> in the Subversion book, which gives a full "
"description and many examples of how it is used."
msgstr ""

#. (para)
msgid ""
"The next point to note is that merging <emphasis>always</emphasis> takes "
"place within a working copy. If you want to merge changes "
"<emphasis>into</emphasis> a branch, you have to have a working copy for that"
" branch checked out, and invoke the merge wizard from that working copy "
"using "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Merge...</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"In general it is a good idea to perform a merge into an unmodified working "
"copy. If you have made other changes in your WC, commit those first. If the "
"merge does not go as you expect, you may want to revert the changes, and the"
" <guilabel>Revert</guilabel> command will discard <emphasis>all</emphasis> "
"changes including any you made before the merge."
msgstr ""

#. (para)
msgid ""
"There are three common use cases for merging which are handled in slightly "
"different ways, as described below. The first page of the merge wizard asks "
"you to select the method you need."
msgstr ""

#. (term)
msgid "Merge a range of revisions"
msgstr ""

#. (para)
msgid ""
"This method covers the case when you have made one or more revisions to a "
"branch (or to the trunk) and you want to port those changes across to a "
"different branch."
msgstr ""

#. (para)
msgid ""
"What you are asking Subversion to do is this: <quote>Calculate the changes "
"necessary to get [FROM] revision 1 of branch A [TO] revision 7 of branch A, "
"and apply those changes to my working copy (of trunk or branch B).</quote>"
msgstr ""

#. (para)
msgid ""
"If you leave the revision range empty, Subversion uses the merge-tracking "
"features to calculate the correct revision range to use. This is known as a "
"reintegrate or automatic merge."
msgstr ""

#. (term)
msgid "Merge two different trees"
msgstr ""

#. (para)
msgid ""
"This is a more general case of the reintegrate method. What you are asking "
"Subversion to do is: <quote>Calculate the changes necessary to get [FROM] "
"the head revision of the trunk [TO] the head revision of the branch, and "
"apply those changes to my working copy (of the trunk).</quote> The net "
"result is that trunk now looks exactly like the branch."
msgstr ""

#. (para)
msgid ""
"If your server/repository does not support merge-tracking then this is the "
"only way to merge a branch back to trunk. Another use case occurs when you "
"are using vendor branches and you need to merge the changes following a new "
"vendor drop into your trunk code. For more information read the chapter on "
"<ulink url=\"http://svnbook.red-"
"bean.com/en/1.8/svn.advanced.vendorbr.html\"><citetitle>vendor "
"branches</citetitle></ulink> in the Subversion Book."
msgstr ""

#. (title)
msgid "Merging a Range of Revisions"
msgstr ""

#. (secondary)
msgid "revision range"
msgstr ""

#. (title)
msgid "The Merge Wizard - Select Revision Range"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> In the <guilabel>From:</guilabel> field enter the full "
"folder URL of the branch or tag containing the changes you want to port into"
" your working copy. You may also click <guibutton>...</guibutton> to browse "
"the repository and find the desired branch. If you have merged from this "
"branch before, then just use the drop down list which shows a history of "
"previously used URLs."
msgstr ""

#. (para)
msgid ""
"If you are merging from a renamed or deleted branch then you will have to go"
" back to a revision where that branch still existed. In this case you will "
"also need to specify that revision as a peg revision in the range of "
"revisions being merged (see below), otherwise the merge will fail when it "
"can't find that path at HEAD."
msgstr ""

#. (para)
msgid ""
"In the <guilabel>Revision range to merge</guilabel> field enter the list of "
"revisions you want to merge. This can be a single revision, a list of "
"specific revisions separated by commas, or a range of revisions separated by"
" a dash, or any combination of these."
msgstr ""

#. (para)
msgid ""
"If you need to specify a peg revision for the merge, add the peg revision at"
" the end of the revisions, e.g. <literal>5-7,10@3</literal>. In the above "
"example, the revisions 5,6,7 and 10 would be merged, with 3 being the peg "
"revision."
msgstr ""

#. (para)
msgid ""
"There is an important difference in the way a revision range is specified "
"with TortoiseSVN compared to the command line client. The easiest way to "
"visualise it is to think of a fence with posts and fence panels."
msgstr ""

#. (para)
msgid ""
"With the command line client you specify the changes to merge using two "
"<quote>fence post</quote> revisions which specify the "
"<emphasis>before</emphasis> and <emphasis>after</emphasis> points."
msgstr ""

#. (para)
msgid ""
"With TortoiseSVN you specify the changeset to merge using <quote>fence "
"panels</quote>. The reason for this becomes clear when you use the log "
"dialog to specify revisions to merge, where each revision appears as a "
"changeset."
msgstr ""

#. (para)
msgid ""
"If you are merging revisions in chunks, the method shown in the Subversion "
"book will have you merge 100-200 this time and 200-300 next time. With "
"TortoiseSVN you would merge 100-200 this time and 201-300 next time."
msgstr ""

#. (para)
msgid ""
"This difference has generated a lot of heat on the mailing lists. We "
"acknowledge that there is a difference from the command line client, but we "
"believe that for the majority of GUI users it is easier to understand the "
"method we have implemented."
msgstr ""

#. (para)
msgid ""
"The easiest way to select the range of revisions you need is to click on "
"<guibutton>Show Log</guibutton>, as this will list recent changes with their"
" log comments. If you want to merge the changes from a single revision, just"
" select that revision. If you want to merge changes from several revisions, "
"then select that range (using the usual <keycap>Shift</keycap>-modifier). "
"Click on <guibutton>OK</guibutton> and the list of revision numbers to merge"
" will be filled in for you."
msgstr ""

#. (para)
msgid ""
"If you want to merge changes back <emphasis>out</emphasis> of your working "
"copy, to revert a change which has already been committed, select the "
"revisions to revert and make sure the <guilabel>Reverse merge</guilabel> box"
" is checked."
msgstr ""

#. (para)
msgid ""
"If you have already merged some changes from this branch, hopefully you will"
" have made a note of the last revision merged in the log message when you "
"committed the change. In that case, you can use <guibutton>Show "
"Log</guibutton> for the Working Copy to trace that log message. Remembering "
"that we are thinking of revisions as changesets, you should Use the revision"
" after the end point of the last merge as the start point for this merge. "
"For example, if you have merged revisions 37 to 39 last time, then the start"
" point for this merge should be revision 40."
msgstr ""

#. (para)
msgid ""
"If you are using the merge tracking features of Subversion, you do not need "
"to remember which revisions have already been merged - Subversion will "
"record that for you. If you leave the revision range blank, all revisions "
"which have not yet been merged will be included. Read <xref linkend=\"tsvn-"
"dug-merge-tracking\"/> to find out more."
msgstr ""

#. (para)
msgid ""
"When merge tracking is used, the log dialog will show previously merged "
"revisions, and revisions pre-dating the common ancestor point, i.e. before "
"the branch was copied, as greyed out. The <guilabel>Hide non-mergeable "
"revisions</guilabel> checkbox allows you to filter out these revisions "
"completely so you see only the revisions which <emphasis>can</emphasis> be "
"merged."
msgstr ""

#. (para)
msgid ""
"If other people may be committing changes then be careful about using the "
"HEAD revision. It may not refer to the revision you think it does if someone"
" else made a commit after your last update."
msgstr ""

#. (para)
msgid ""
"If you leave the range of revisions empty or have the radio button "
"<guilabel>all revisions</guilabel> checked, then Subversion merges all not-"
"yet merged revisions. This is known as a reintegrate or automatic merge."
msgstr ""

#. (para)
msgid ""
"There are some conditions which apply to a reintegrate merge. Firstly, the "
"server must support merge tracking. The working copy must be of depth "
"infinite (no sparse checkouts), and it must not have any local "
"modifications, switched items or items that have been updated to revisions "
"other than HEAD. All changes to trunk made during branch development must "
"have been merged across to the branch (or marked as having been merged). The"
" range of revisions to merge will be calculated automatically."
msgstr ""

#. (para)
msgid ""
"Click <guibutton>Next</guibutton> and go to <xref linkend=\"tsvn-dug-merge-"
"options\"/>."
msgstr ""

#. (title)
msgid "Merging Two Different Trees"
msgstr "Duke Bashkuar Dy Trungje të Ndryshme"

#. (secondary)
msgid "two trees"
msgstr "dy trungje"

#. (title)
msgid "The Merge Wizard - Tree Merge"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> If you are using this method to merge a feature branch back"
" to trunk, you need to start the merge wizard from within a working copy of "
"trunk."
msgstr ""

#. (para)
msgid ""
"In the <guilabel>From:</guilabel> field enter the full folder URL of the "
"<emphasis>trunk</emphasis>. This may sound wrong, but remember that the "
"trunk is the start point to which you want to add the branch changes. You "
"may also click <guibutton>...</guibutton> to browse the repository."
msgstr ""

#. (para)
msgid ""
"In the <guilabel>To:</guilabel> field enter the full folder URL of the "
"feature branch."
msgstr ""

#. (para)
msgid ""
"In both the <guilabel>From Revision</guilabel> field and the <guilabel>To "
"Revision</guilabel> field, enter the last revision number at which the two "
"trees were synchronized. If you are sure no-one else is making commits you "
"can use the HEAD revision in both cases. If there is a chance that someone "
"else may have made a commit since that synchronization, use the specific "
"revision number to avoid losing more recent commits."
msgstr ""

#. (para)
msgid ""
"You can also use <guibutton>Show Log</guibutton> to select the revision."
msgstr ""

#. (title)
msgid "Merge Options"
msgstr ""

#. (para)
msgid ""
"This page of the wizard lets you specify advanced options, before starting "
"the merge process. Most of the time you can just use the default settings."
msgstr ""

#. (para)
msgid ""
"You can specify the depth to use for the merge, i.e. how far down into your "
"working copy the merge should go. The depth terms used are described in "
"<xref linkend=\"tsvn-dug-checkout-depth\"/>. The default depth is "
"<guilabel>Working copy</guilabel>, which uses the existing depth setting, "
"and is almost always what you want."
msgstr ""

#. (para)
msgid ""
"Most of the time you want merge to take account of the file's history, so "
"that changes relative to a common ancestor are merged. Sometimes you may "
"need to merge files which are perhaps related, but not in your repository. "
"For example you may have imported versions 1 and 2 of a third party library "
"into two separate directories. Although they are logically related, "
"Subversion has no knowledge of this because it only sees the tarballs you "
"imported. If you attempt to merge the difference between these two trees you"
" would see a complete removal followed by a complete add. To make Subversion"
" use only path-based differences rather than history-based differences, "
"check the <guilabel>Ignore ancestry</guilabel> box. Read more about this "
"topic in the Subversion book, <ulink url=\"http://svnbook.red-"
"bean.com/en/1.8/svn.branchmerge.advanced.html#svn.branchmerge.advanced.ancestry\"><citetitle>Noticing"
" or Ignoring Ancestry</citetitle></ulink>."
msgstr ""

#. (para)
msgid ""
"You can specify the way that line ending and whitespace changes are handled."
" These options are described in <xref linkend=\"tsvn-dug-diff-eol-"
"whitespace\"/>. The default behaviour is to treat all whitespace and line-"
"end differences as real changes to be merged."
msgstr ""

#. (para)
msgid ""
"The checkbox marked <guilabel>Force the merge</guilabel> is used to avoid a "
"tree conflict where an incoming delete affects a file that is either "
"modified locally or not versioned at all. If the file is deleted then there "
"is no way to recover it, which is why that option is not checked by default."
msgstr ""

#. (para)
msgid ""
"If you are using merge tracking and you want to mark a revision as having "
"been merged, without actually doing the merge here, check the <guilabel>Only"
" record the merge</guilabel> checkbox. There are two possible reasons you "
"might want to do this. It may be that the merge is too complicated for the "
"merge algorithms, so you code the changes by hand, then mark the change as "
"merged so that the merge tracking algorithm is aware of it. Or you might "
"want to prevent a particular revision from being merged. Marking it as "
"already merged will prevent the merge occurring with merge-tracking-aware "
"clients."
msgstr ""

#. (para)
msgid ""
"Now everything is set up, all you have to do is click on the "
"<guibutton>Merge</guibutton> button. If you want to preview the results "
"<guibutton>Test Merge</guibutton> simulates the merge operation, but does "
"<emphasis>not</emphasis> modify the working copy at all. It shows you a list"
" of the files that will be changed by a real merge, and notes files where "
"conflicts <emphasis>may</emphasis> occur. Because merge tracking makes the "
"merge process a lot more complicated, there is no guaranteed way to find out"
" in advance whether the merge will complete without conflicts, so files "
"marked as conflicted in a test merge may in fact merge without any problem."
msgstr ""

#. (para)
msgid ""
"The merge progress dialog shows each stage of the merge, with the revision "
"ranges involved. This may indicate one more revision than you were "
"expecting. For example if you asked to merge revision 123 the progress "
"dialog will report <quote>Merging revisions 122 through 123</quote>. To "
"understand this you need to remember that Merge is closely related to Diff. "
"The merge process works by generating a list of differences between two "
"points in the repository, and applying those differences to your working "
"copy. The progress dialog is simply showing the start and end points for the"
" diff."
msgstr ""

#. (title)
msgid "Reviewing the Merge Results"
msgstr ""

#. (para)
msgid ""
"The merge is now complete. It's a good idea to have a look at the merge and "
"see if it's as expected. Merging is usually quite complicated. Conflicts "
"often arise if the branch has drifted far from the trunk."
msgstr ""

#. (para)
msgid ""
"To customize that generated message, set the corresponding project "
"properties on your working copy. See <xref linkend=\"tsvn_dug_propertypage-"
"edit-mergelogmsgtemplate\"/>"
msgstr ""

#. (para)
msgid ""
"For Subversion clients and servers prior to 1.5, no merge information is "
"stored and merged revisions have to be tracked manually. When you have "
"tested the changes and come to commit this revision, your commit log message"
" should <emphasis>always</emphasis> include the revision numbers which have "
"been ported in the merge. If you want to apply another merge at a later time"
" you will need to know what you have already merged, as you do not want to "
"port a change more than once. For more information about this, refer to "
"<ulink url=\"http://svnbook.red-"
"bean.com/en/1.4/svn.branchmerge.copychanges.html#svn.branchmerge.copychanges.bestprac\"><citetitle>Best"
" Practices for Merging</citetitle></ulink> in the Subversion book."
msgstr ""

#. (para)
msgid ""
"If your server and all clients are running Subversion 1.5 or higher, the "
"merge tracking facility will record the revisions merged and avoid a "
"revision being merged more than once. This makes your life much simpler as "
"you can simply merge the entire revision range each time and know that only "
"new revisions will actually be merged."
msgstr ""

#. (para)
msgid ""
"Branch management is important. If you want to keep this branch up to date "
"with the trunk, you should be sure to merge often so that the branch and "
"trunk do not drift too far apart. Of course, you should still avoid repeated"
" merging of changes, as explained above."
msgstr ""

#. (para)
msgid ""
"If you have just merged a feature branch back into the trunk, the trunk now "
"contains all the new feature code, and the branch is obsolete. You can now "
"delete it from the repository if required."
msgstr ""

#. (para)
msgid ""
"Subversion can't merge a file with a folder and vice versa - only folders to"
" folders and files to files. If you click on a file and open up the merge "
"dialog, then you have to give a path to a file in that dialog. If you select"
" a folder and bring up the dialog, then you must specify a folder URL for "
"the merge."
msgstr ""

#. (title)
msgid "Merge Tracking"
msgstr ""

#. (primary)
msgid "merge tracking"
msgstr ""

#. (para)
msgid ""
"You can avoid the danger of merging the same revision twice (repeated merge "
"problem). Once a revision is marked as having been merged, future merges "
"which include that revision in the range will skip over it."
msgstr ""

#. (para)
msgid ""
"When you merge a branch back into trunk, the log dialog can show you the "
"branch commits as part of the trunk log, giving better traceability of "
"changes."
msgstr ""

#. (para)
msgid ""
"When you show the log dialog from within the merge dialog, revisions already"
" merged are shown in grey."
msgstr ""

#. (para)
msgid ""
"When showing blame information for a file, you can choose to show the "
"original author of merged revisions, rather than the person who did the "
"merge."
msgstr ""

#. (para)
msgid ""
"You can mark revisions as <emphasis>do not merge</emphasis> by including "
"them in the list of merged revisions without actually doing the merge."
msgstr ""

#. (para)
msgid ""
"Subversion 1.5 introduced facilities for merge tracking. When you merge "
"changes from one tree into another, the revision numbers merged are stored "
"and this information can be used for several different purposes. "
"<placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"Merge tracking information is stored in the <literal>svn:mergeinfo</literal>"
" property by the client when it performs a merge. When the merge is "
"committed the server stores that information in a database, and when you "
"request merge, log or blame information, the server can respond "
"appropriately. For the system to work properly you must ensure that the "
"server, the repository and all clients are upgraded. Earlier clients will "
"not store the <literal>svn:mergeinfo</literal> property and earlier servers "
"will not provide the information requested by new clients."
msgstr ""

#. (para)
msgid ""
"Find out more about merge tracking from Subversion's <ulink "
"url=\"http://svn.apache.org/repos/asf/Subversion/trunk/notes/merge-"
"tracking/index.html\"><citetitle>Merge tracking "
"documentation</citetitle></ulink>."
msgstr ""

#. (title)
msgid "Handling Conflicts during Merge"
msgstr ""

#. (primary)
msgid "merge conflicts"
msgstr "bashko konfliktet"

#. (title)
msgid "The Merge Conflict Callback Dialog"
msgstr ""

#. (para)
msgid ""
"Merging does not always go smoothly. Sometimes there is a conflict, and if "
"you are merging multiple ranges, you generally want to resolve the conflict "
"before merging of the next range starts. TortoiseSVN helps you through this "
"process by showing the <emphasis>merge conflict callback</emphasis> dialog. "
"<placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"If your merge includes binary files, merging of conflicts in those is not "
"possible. You have to choose one complete file. Use <emphasis>Prefer "
"local</emphasis> to select the local version as it was in your working copy "
"prior to the merge, or <emphasis>Prefer repository</emphasis> to select the "
"incoming file from the merge source in the repository."
msgstr ""

#. (para)
msgid ""
"If you are merging text files then these first two buttons allow you to "
"merge non-conflicting lines as normal and always prefer one version where "
"there are conflicts. Choosing <emphasis>Prefer local</emphasis> will select "
"your local version in every conflict, i.e. it will prefer what was already "
"there before the merge over the incoming change from the merge source. "
"Likewise, <emphasis>Prefer repository</emphasis> will select the repository "
"changes in every conflict, i.e. it will prefer the incoming changes from the"
" merge source over what was already in your working copy. This sounds easy, "
"but the conflicts often cover more lines than you think they will and you "
"may get unexpected results."
msgstr ""

#. (para)
msgid ""
"Normally you will want to look at the conflicts and resolve them yourself. "
"In that case, choose the <guibutton>Edit Conflict</guibutton> which will "
"start up your merge tool. When you are satisfied with the result, click "
"<guibutton>Resolved</guibutton>."
msgstr ""

#. (para)
msgid ""
"The last option is to postpone resolution and continue with merging. You can"
" choose to do that for the current conflicted file, or for all files in the "
"rest of the merge. However, if there are further changes in that file, it "
"will not be possible to complete the merge."
msgstr ""

#. (para)
msgid ""
"It is likely that some of the changes will have merged smoothly, while other"
" local changes conflict with changes already committed to the repository. "
"All changes which can be merged are merged. The Merge Conflict Callback "
"dialog gives you three different ways of handling the lines which are in "
"conflict. <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"If you do not want to use this interactive callback, there is a checkbox in "
"the merge progress dialog <guilabel>Merge non-interactive</guilabel>. If "
"this is set for a merge and the merge would result in a conflict, the file "
"is marked as in conflict and the merge goes on. You will have to resolve the"
" conflicts after the whole merge is finished. If it is not set, then before "
"a file is marked as conflicted you get the chance to resolve the conflict "
"<emphasis>during</emphasis> the merge. This has the advantage that if a file"
" gets multiple merges (multiple revisions apply a change to that file), "
"subsequent merges might succeed depending on which lines are affected. But "
"of course you can't walk away to get a coffee while the merge is running ;)"
msgstr ""

#. (title)
msgid "Merge a Completed Branch"
msgstr ""

#. (primary)
msgid "merge reintegrate"
msgstr ""

#. (title)
msgid "The Merge reintegrate Dialog"
msgstr ""

#. (para)
msgid ""
"If you want to merge all changes from a feature branch back to trunk, then "
"you can use the <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Merge"
" reintegrate...</guimenuitem></menuchoice> from the extended context menu "
"(hold down the <keycap>Shift</keycap> key while you right click on the "
"file). <placeholder-1/> This dialog is very easy. All you have to do is set "
"the options for the merge, as described in <xref linkend=\"tsvn-dug-merge-"
"options\"/>. The rest is done by TortoiseSVN automatically using merge "
"tracking."
msgstr ""

#. (title)
msgid "Feature Branch Maintenance"
msgstr ""

#. (para)
msgid ""
"When you develop a new feature on a separate branch it is a good idea to "
"work out a policy for re-integration when the feature is complete. If other "
"work is going on in <literal>trunk</literal> at the same time you may find "
"that the differences become significant over time, and merging back becomes "
"a nightmare."
msgstr ""

#. (para)
msgid ""
"If the feature is relatively simple and development will not take long then "
"you can adopt a simple approach, which is to keep the branch entirely "
"separate until the feature is complete, then merge the branch changes back "
"into trunk. In the merge wizard this would be a simple <guilabel>Merge a "
"range of revisions</guilabel>, with the revision range being the revision "
"span of the branch."
msgstr ""

#. (para)
msgid ""
"If the feature is going to take longer and you need to account for changes "
"in <literal>trunk</literal>, then you need to keep the branch synchronised. "
"This simply means that periodically you merge trunk changes into the branch,"
" so that the branch contains all the trunk changes <emphasis>plus</emphasis>"
" the new feature. The synchronisation process uses <guilabel>Merge a range "
"of revisions</guilabel>. When the feature is complete then you can merge it "
"back to <literal>trunk</literal> using either <guilabel>Reintegrate a "
"branch</guilabel> or <guilabel>Merge two different trees</guilabel>."
msgstr ""

#. (title)
msgid "Locking"
msgstr ""

#. (primary)
msgid "locking"
msgstr ""

#. (primary)
msgid "readonly"
msgstr "vetëm për të lexuar"

#. (para)
msgid ""
"You are using <quote>unmergeable</quote> files, for example, graphics files."
" If two people change the same file, merging is not possible, so one of you "
"will lose their changes."
msgstr ""

#. (para)
msgid ""
"Your company has always used a locking revision control system in the past "
"and there has been a management decision that <quote>locking is "
"best</quote>."
msgstr ""

#. (para)
msgid ""
"Subversion generally works best without locking, using the <quote>Copy-"
"Modify-Merge</quote> methods described earlier in <xref linkend=\"tsvn-"
"basics-versioning-copymodifymerge\"/>. However there are a few instances "
"when you may need to implement some form of locking policy. <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"Firstly you need to ensure that your Subversion server is upgraded to at "
"least version 1.2. Earlier versions do not support locking at all. If you "
"are using <literal>file://</literal> access, then of course only your client"
" needs to be updated."
msgstr ""

#. (title)
msgid "The Three Meanings of <quote>Lock</quote>"
msgstr ""

#. (para)
msgid ""
"In this section, and almost everywhere in this book, the words "
"<quote>lock</quote> and <quote>locking</quote> describe a mechanism for "
"mutual exclusion between users to avoid clashing commits. Unfortunately, "
"there are two other sorts of <quote>lock</quote> with which Subversion, and "
"therefore this book, sometimes needs to be concerned."
msgstr ""

#. (para)
msgid ""
"The second is <literal>working copy locks</literal>, used internally by "
"Subversion to prevent clashes between multiple Subversion clients operating "
"on the same working copy. Usually you get these locks whenever a command "
"like update/commit/... is interrupted due to an error. These locks can be "
"removed by running the cleanup command on the working copy, as described in "
"<xref linkend=\"tsvn-dug-cleanup\"/>."
msgstr ""

#. (para)
msgid ""
"And third, files and folders can get locked if they're in use by another "
"process, for example if you have a word document opened in Word, that file "
"is locked and can not be accessed by TortoiseSVN."
msgstr ""

#. (para)
msgid ""
"You can generally forget about these other kinds of locks until something "
"goes wrong that requires you to care about them. In this book, "
"<quote>lock</quote> means the first sort unless the contrary is either clear"
" from context or explicitly stated."
msgstr ""

#. (title)
msgid "How Locking Works in Subversion"
msgstr ""

#. (para)
msgid ""
"By default, nothing is locked and anyone who has commit access can commit "
"changes to any file at any time. Others will update their working copies "
"periodically and changes in the repository will be merged with local "
"changes."
msgstr ""

#. (para)
msgid ""
"If you <firstterm>Get a Lock</firstterm> on a file, then only you can commit"
" that file. Commits by all other users will be blocked until you release the"
" lock. A locked file cannot be modified in any way in the repository, so it "
"cannot be deleted or renamed either, except by the lock owner."
msgstr ""

#. (para)
msgid ""
"A lock is not assigned to a specific user, but to a specific user and a "
"working copy. Having a lock in one working copy also prevents the same user "
"from committing the locked file from another working copy."
msgstr ""

#. (para)
msgid ""
"As an example, imagine that user Jon has a working copy on his office PC. "
"There he starts working on an image, and therefore acquires a lock on that "
"file. When he leaves his office he's not finished yet with that file, so he "
"doesn't release that lock. Back at home Jon also has a working copy and "
"decides to work a little more on the project. But he can't modify or commit "
"that same image file, because the lock for that file resides in his working "
"copy in the office."
msgstr ""

#. (para)
msgid ""
"However, other users will not necessarily know that you have taken out a "
"lock. Unless they check the lock status regularly, the first they will know "
"about it is when their commit fails, which in most cases is not very useful."
" To make it easier to manage locks, there is a new Subversion property "
"<literal>svn:needs-lock</literal>. When this property is set (to any value) "
"on a file, whenever the file is checked out or updated, the local copy is "
"made read-only <emphasis>unless</emphasis> that working copy holds a lock "
"for the file. This acts as a warning that you should not edit that file "
"unless you have first acquired a lock. Files which are versioned and read-"
"only are marked with a special overlay in TortoiseSVN to indicate that you "
"need to acquire a lock before editing."
msgstr ""

#. (para)
msgid ""
"Locks are recorded by working copy location as well as by owner. If you have"
" several working copies (at home, at work) then you can only hold a lock in "
"<emphasis>one</emphasis> of those working copies."
msgstr ""

#. (para)
msgid ""
"If one of your co-workers acquires a lock and then goes on holiday without "
"releasing it, what do you do? Subversion provides a means to force locks. "
"Releasing a lock held by someone else is referred to as "
"<firstterm>Breaking</firstterm> the lock, and forcibly acquiring a lock "
"which someone else already holds is referred to as "
"<firstterm>Stealing</firstterm> the lock. Naturally these are not things you"
" should do lightly if you want to remain friends with your co-workers."
msgstr ""

#. (para)
msgid ""
"Locks are recorded in the repository, and a lock token is created in your "
"local working copy. If there is a discrepancy, for example if someone else "
"has broken the lock, the local lock token becomes invalid. The repository is"
" always the definitive reference."
msgstr ""

#. (title)
msgid "Getting a Lock"
msgstr ""

#. (title)
msgid "The Locking Dialog"
msgstr ""

#. (para)
msgid ""
"Select the file(s) in your working copy for which you want to acquire a "
"lock, then select the command "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Get "
"Lock...</guimenuitem></menuchoice>. <placeholder-1/> A dialog appears, "
"allowing you to enter a comment, so others can see why you have locked the "
"file. The comment is optional and currently only used with Svnserve based "
"repositories. If (and <emphasis>only</emphasis> if) you need to steal the "
"lock from someone else, check the <guilabel>Steal lock</guilabel> box, then "
"click on <guibutton>OK</guibutton>."
msgstr ""

#. (para)
msgid ""
"You can set the project property <literal>tsvn:logtemplatelock</literal> to "
"provide a message template for users to fill in as the lock message. Refer "
"to <xref linkend=\"tsvn-dug-propertypage\"/> for instructions on how to set "
"properties."
msgstr ""

#. (para)
msgid ""
"If you select a folder and then use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Get "
"Lock...</guimenuitem></menuchoice> the lock dialog will open with "
"<emphasis>every</emphasis> file in <emphasis>every</emphasis> sub-folder "
"selected for locking. If you really want to lock an entire hierarchy, that "
"is the way to do it, but you could become very unpopular with your co-"
"workers if you lock them out of the whole project. Use with care ..."
msgstr ""

#. (title)
msgid "Releasing a Lock"
msgstr ""

#. (para)
msgid ""
"To make sure you don't forget to release a lock you don't need any more, "
"locked files are shown in the commit dialog and selected by default. If you "
"continue with the commit, locks you hold on the selected files are removed, "
"even if the files haven't been modified. If you don't want to release a lock"
" on certain files, you can uncheck them (if they're not modified). If you "
"want to keep a lock on a file you've modified, you have to enable the "
"<guilabel>Keep locks</guilabel> checkbox before you commit your changes."
msgstr ""

#. (para)
msgid ""
"To release a lock manually, select the file(s) in your working copy for "
"which you want to release the lock, then select the command "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Release "
"Lock</guimenuitem></menuchoice> There is nothing further to enter so "
"TortoiseSVN will contact the repository and release the locks. You can also "
"use this command on a folder to release all locks recursively."
msgstr ""

#. (title)
msgid "Checking Lock Status"
msgstr ""

#. (title)
msgid "The Check for Modifications Dialog"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> To see what locks you and others hold, you can use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Check for "
"Modifications...</guimenuitem></menuchoice>. Locally held lock tokens show "
"up immediately. To check for locks held by others (and to see if any of your"
" locks are broken or stolen) you need to click on <guibutton>Check "
"Repository</guibutton>."
msgstr ""

#. (para)
msgid ""
"From the context menu here, you can also get and release locks, as well as "
"breaking and stealing locks held by others."
msgstr ""

#. (title)
msgid "Avoid Breaking and Stealing Locks"
msgstr ""

#. (para)
msgid ""
"If you break or steal someone else's lock without telling them, you could "
"potentially cause loss of work. If you are working with unmergeable file "
"types and you steal someone else's lock, once you release the lock they are "
"free to check in their changes and overwrite yours. Subversion doesn't lose "
"data, but you have lost the team-working protection that locking gave you."
msgstr ""

#. (title)
msgid "Making Non-locked Files Read-Only"
msgstr ""

#. (para)
msgid ""
"As mentioned above, the most effective way to use locking is to set the "
"<literal>svn:needs-lock</literal> property on files. Refer to <xref linkend"
"=\"tsvn-dug-propertypage\"/> for instructions on how to set properties. "
"Files with this property set will always be checked out and updated with the"
" read-only flag set unless your working copy holds a lock. <graphic "
"fileref=\"../images/ReadOnlyIcon.png\"/> As a reminder, TortoiseSVN uses a "
"special overlay to indicate this."
msgstr ""

#. (para)
msgid ""
"If you operate a policy where every file has to be locked then you may find "
"it easier to use Subversion's auto-props feature to set the property "
"automatically every time you add new files. Read <xref linkend=\"tsvn-dug-"
"propertypage-auto-props\"/> for further information."
msgstr ""

#. (title)
msgid "The Locking Hook Scripts"
msgstr ""

#. (para)
msgid ""
"When you create a new repository with Subversion 1.2 or higher, four hook "
"templates are created in the repository <filename>hooks</filename> "
"directory. These are called before and after getting a lock, and before and "
"after releasing a lock."
msgstr ""

#. (para)
msgid ""
"It is a good idea to install a <literal>post-lock</literal> and <literal"
">post-unlock</literal> hook script on the server which sends out an email "
"indicating the file which has been locked. With such a script in place, all "
"your users can be notified if someone locks/unlocks a file. You can find an "
"example hook script <filename>hooks/post-lock.tmpl</filename> in your "
"repository folder."
msgstr ""

#. (para)
msgid ""
"You might also use hooks to disallow breaking or stealing of locks, or "
"perhaps limit it to a named administrator. Or maybe you want to email the "
"owner when one of their locks is broken or stolen."
msgstr ""

#. (para)
msgid "Read <xref linkend=\"tsvn-repository-hooks\"/> to find out more."
msgstr ""

#. (title)
msgid "Creating and Applying Patches"
msgstr ""

#. (primary)
msgid "patch"
msgstr ""

#. (primary)
msgid "unified diff"
msgstr ""

#. (para)
msgid ""
"For open source projects (like this one) everyone has read access to the "
"repository, and anyone can make a contribution to the project. So how are "
"those contributions controlled? If just anyone could commit changes, the "
"project would be permanently unstable and probably permanently broken. In "
"this situation the change is managed by submitting a "
"<firstterm>patch</firstterm> file to the development team, who do have write"
" access. They can review the patch first, and then either submit it to the "
"repository or reject it back to the author."
msgstr ""

#. (para)
msgid ""
"Patch files are simply Unified-Diff files showing the differences between "
"your working copy and the base revision."
msgstr ""

#. (title)
msgid "Creating a Patch File"
msgstr ""

#. (para)
msgid ""
"First you need to make <emphasis>and test</emphasis> your changes. Then "
"instead of using "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Commit...</guimenuitem></menuchoice>"
" on the parent folder, you select "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Create "
"Patch...</guimenuitem></menuchoice>"
msgstr ""

#. (title)
msgid "The Create Patch dialog"
msgstr ""

#. (para)
msgid ""
"you can now select the files you want included in the patch, just as you "
"would with a full commit. This will produce a single file containing a "
"summary of all the changes you have made to the selected files since the "
"last update from the repository."
msgstr ""

#. (para)
msgid ""
"By clicking on the <guilabel>Options</guilabel> button you can specify how "
"the patch is created. For example you can specify that changes in line "
"endings or whitespaces are not included in the final patch file."
msgstr ""

#. (para)
msgid ""
"You can produce separate patches containing changes to different sets of "
"files. Of course, if you create a patch file, make some more changes to the "
"<emphasis>same</emphasis> files and then create another patch, the second "
"patch file will include <emphasis>both</emphasis> sets of changes."
msgstr ""

#. (para)
msgid ""
"Just save the file using a filename of your choice. Patch files can have any"
" extension you like, but by convention they should use the "
"<filename>.patch</filename> or <filename>.diff</filename> extension. You are"
" now ready to submit your patch file."
msgstr ""

#. (para)
msgid ""
"You can also save the patch to the clipboard instead of to a file. You might"
" want to do this so that you can paste it into an email for review by "
"others. Or if you have two working copies on one machine and you want to "
"transfer changes from one to the other, a patch on the clipboard is a "
"convenient way of doing this."
msgstr ""

#. (para)
msgid ""
"If you prefer, you can create a patch file from within the "
"<guilabel>Commit</guilabel> or <guilabel>Check for Modifications</guilabel> "
"dialogs. Just select the files and use the context menu item to create a "
"patch from those files. If you want to see the <guilabel>Options</guilabel> "
"dialog you have to hold <keycap>shift</keycap> when you <action>right "
"click</action>."
msgstr ""

#. (title)
msgid "Applying a Patch File"
msgstr ""

#. (para)
msgid ""
"Patch files are applied to your working copy. This should be done from the "
"same folder level as was used to create the patch. If you are not sure what "
"this is, just look at the first line of the patch file. For example, if the "
"first file being worked on was "
"<filename>doc/source/english/chapter1.xml</filename> and the first line in "
"the patch file is <filename>Index: english/chapter1.xml</filename> then you "
"need to apply the patch to the <filename>doc/source/</filename> folder. "
"However, provided you are in the correct working copy, if you pick the wrong"
" folder level, TortoiseSVN will notice and suggest the correct level."
msgstr ""

#. (para)
msgid ""
"In order to apply a patch file to your working copy, you need to have at "
"least read access to the repository. The reason for this is that the merge "
"program must reference the changes back to the revision against which they "
"were made by the remote developer."
msgstr ""

#. (para)
msgid ""
"From the context menu for that folder, click on "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Apply "
"Patch...</guimenuitem></menuchoice> This will bring up a file open dialog "
"allowing you to select the patch file to apply. By default only "
"<filename>.patch</filename> or <filename>.diff</filename> files are shown, "
"but you can opt for <quote>All files</quote>. If you previously saved a "
"patch to the clipboard, you can use <guibutton>Open from "
"clipboard...</guibutton> in the file open dialog. Note that this option only"
" appears if you saved the patch to the clipboard using "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Create "
"Patch...</guimenuitem></menuchoice>. Copying a patch to the clipboard from "
"another app will not make the button appear."
msgstr ""

#. (para)
msgid ""
"Alternatively, if the patch file has a <filename>.patch</filename> or "
"<filename>.diff</filename> extension, you can right click on it directly and"
" select <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Apply "
"Patch...</guimenuitem></menuchoice>. In this case you will be prompted to "
"enter a working copy location."
msgstr ""

#. (para)
msgid ""
"These two methods just offer different ways of doing the same thing. With "
"the first method you select the WC and browse to the patch file. With the "
"second you select the patch file and browse to the WC."
msgstr ""

#. (para)
msgid ""
"Once you have selected the patch file and working copy location, "
"TortoiseMerge runs to merge the changes from the patch file with your "
"working copy. A small window lists the files which have been changed. Double"
" click on each one in turn, review the changes and save the merged files."
msgstr ""

#. (para)
msgid ""
"The remote developer's patch has now been applied to your working copy, so "
"you need to commit to allow everyone else to access the changes from the "
"repository."
msgstr ""

#. (title)
msgid "Who Changed Which Line?"
msgstr ""

#. (primary)
msgid "blame"
msgstr ""

#. (primary)
msgid "annotate"
msgstr ""

#. (primary)
msgid "praise"
msgstr ""

#. (para)
msgid ""
"Sometimes you need to know not only what lines have changed, but also who "
"exactly changed specific lines in a file. That's when the "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Blame...</guimenuitem></menuchoice>"
" command, sometimes also referred to as <firstterm>annotate</firstterm> "
"command comes in handy."
msgstr ""

#. (para)
msgid ""
"This command lists, for every line in a file, the author and the revision "
"the line was changed."
msgstr ""

#. (title)
msgid "Blame for Files"
msgstr ""

#. (title)
msgid "The Annotate / Blame Dialog"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> If you're not interested in changes from earlier revisions "
"you can set the revision from which the blame should start. Set this to "
"<literal>1</literal>, if you want the blame for <emphasis>every</emphasis> "
"revision."
msgstr ""

#. (para)
msgid ""
"By default the blame file is viewed using "
"<firstterm>TortoiseBlame</firstterm>, which highlights the different "
"revisions to make it easier to read. If you wish to print or edit the blame "
"file, select <guilabel>Use Text viewer to view blames</guilabel>."
msgstr ""

#. (para)
msgid ""
"You can specify the way that line ending and whitespace changes are handled."
" These options are described in <xref linkend=\"tsvn-dug-diff-eol-"
"whitespace\"/>. The default behaviour is to treat all whitespace and line-"
"end differences as real changes, but if you want to ignore an indentation "
"change and find the original author, you can choose an appropriate option "
"here."
msgstr ""

#. (para)
msgid ""
"You can include merge information as well if you wish, although this option "
"can take considerably longer to retrieve from the server. When lines are "
"merged from another source, the blame information shows the revision the "
"change was made in the original source as well as the revision when it was "
"merged into this file."
msgstr ""

#. (para)
msgid ""
"Once you press <guibutton>OK</guibutton> TortoiseSVN starts retrieving the "
"data to create the blame file. Please note: This can take several minutes to"
" finish, depending on how much the file has changed and of course your "
"network connection to the repository. Once the blame process has finished "
"the result is written into a temporary file and you can view the results."
msgstr ""

#. (title)
msgid "TortoiseBlame"
msgstr "TortoiseBlame"

#. (para)
msgid ""
"<placeholder-1/> TortoiseBlame, which is included with TortoiseSVN, makes "
"the blame file easier to read. When you hover the mouse over a line in the "
"blame info column, all lines with the same revision are shown with a darker "
"background. Lines from other revisions which were changed by the same author"
" are shown with a light background. The colouring may not work as clearly if"
" you have your display set to 256 colour mode."
msgstr ""

#. (para)
msgid ""
"If you <action>left click</action> on a line, all lines with the same "
"revision are highlighted, and lines from other revisions by the same author "
"are highlighted in a lighter colour. This highlighting is sticky, allowing "
"you to move the mouse without losing the highlights. Click on that revision "
"again to turn off highlighting."
msgstr ""

#. (para)
msgid ""
"The revision comments (log message) are shown in a hint box whenever the "
"mouse hovers over the blame info column. If you want to copy the log message"
" for that revision, use the context menu which appears when you right click "
"on the blame info column."
msgstr ""

#. (para)
msgid ""
"You can search within the Blame report using "
"<menuchoice><guimenu>Edit</guimenu><guimenuitem>Find...</guimenuitem></menuchoice>."
" This allows you to search for revision numbers, authors and the content of "
"the file itself. Log messages are not included in the search - you should "
"use the Log Dialog to search those."
msgstr ""

#. (para)
msgid ""
"You can also jump to a specific line number using "
"<menuchoice><guimenu>Edit</guimenu><guimenuitem>Go To "
"Line...</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"When the mouse is over the blame info columns, a context menu is available "
"which helps with comparing revisions and examining history, using the "
"revision number of the line under the mouse as a reference. "
"<menuchoice><guimenu>Context menu</guimenu><guimenuitem>Blame previous "
"revision</guimenuitem></menuchoice> generates a blame report for the same "
"file, but using the previous revision as the upper limit. This gives you the"
" blame report for the state of the file just before the line you are looking"
" at was last changed. <menuchoice><guimenu>Context "
"menu</guimenu><guimenuitem>Show changes</guimenuitem></menuchoice> starts "
"your diff viewer, showing you what changed in the referenced revision. "
"<menuchoice><guimenu>Context menu</guimenu><guimenuitem>Show "
"log</guimenuitem></menuchoice> displays the revision log dialog starting "
"with the referenced revision."
msgstr ""

#. (para)
msgid ""
"If you need a better visual indicator of where the oldest and newest changes"
" are, select <menuchoice><guimenu>View</guimenu><guimenuitem>Color age of "
"lines</guimenuitem></menuchoice>. This will use a colour gradient to show "
"newer lines in red and older lines in blue. The default colouring is quite "
"light, but you can change it using the TortoiseBlame settings."
msgstr ""

#. (para)
msgid ""
"If you are using Merge Tracking and you requested merge info when starting "
"the blame, merged lines are shown slightly differently. Where a line has "
"changed as a result of merging from another path, TortoiseBlame will show "
"the revision and author of the last change in the original file rather than "
"the revision where the merge took place. These lines are indicated by "
"showing the revision and author in italics. The revision where the merge "
"took place is shown separately in the tooltip when you hover the mouse over "
"the blame info columns. If you do not want merged lines shown in this way, "
"uncheck the <guilabel>Include merge info</guilabel> checkbox when starting "
"the blame."
msgstr ""

#. (para)
msgid ""
"If you want to see the paths involved in the merge, select "
"<menuchoice><guimenu>View</guimenu><guimenuitem>Merge "
"paths</guimenuitem></menuchoice>. This shows the path where the line was "
"last changed, excluding changes resulting from a merge."
msgstr ""

#. (para)
msgid ""
"The revision shown in the blame information represents the last revision "
"where the content of that line changed. If the file was created by copying "
"another file, then until you change a line, its blame revision will show the"
" last change in the original source file, not the revision where the copy "
"was made. This also applies to the paths shown with merge info. The path "
"shows the repository location where the last change was made to that line."
msgstr ""

#. (para)
msgid ""
"The settings for TortoiseBlame can be accessed using "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Settings...</guimenuitem></menuchoice>"
" on the TortoiseBlame tab. Refer to <xref linkend=\"tsvn-dug-settings-"
"tortoiseblame\"/>."
msgstr ""

#. (title)
msgid "Blame Differences"
msgstr ""

#. (para)
msgid ""
"One of the limitations of the Blame report is that it only shows the file as"
" it was in a particular revision, and the last person to change each line. "
"Sometimes you want to know what change was made, as well as who made it. If "
"you right click on a line in TortoiseBlame you have a context menu item to "
"show the changes made in that revision. But if you want to see the changes "
"<emphasis>and</emphasis> the blame information simultaneously then you need "
"a combination of the diff and blame reports."
msgstr ""

#. (term)
msgid "Blame Revisions"
msgstr ""

#. (para)
msgid ""
"In the top pane, select 2 revisions, then select "
"<menuchoice><guimenu>Context menu</guimenu><guimenuitem>Blame "
"revisions</guimenuitem></menuchoice>. This will fetch the blame data for the"
" 2 revisions, then use the diff viewer to compare the two blame files."
msgstr ""

#. (term)
msgid "Blame Changes"
msgstr ""

#. (para)
msgid ""
"Select one revision in the top pane, then pick one file in the bottom pane "
"and select <menuchoice><guimenu>Context menu</guimenu><guimenuitem>Blame "
"changes</guimenuitem></menuchoice>. This will fetch the blame data for the "
"selected revision and the previous revision, then use the diff viewer to "
"compare the two blame files."
msgstr ""

#. (term)
msgid "Compare and Blame with Working BASE"
msgstr ""

#. (para)
msgid ""
"Show the log for a single file, and in the top pane, select a single "
"revision, then select <menuchoice><guimenu>Context "
"menu</guimenu><guimenuitem>Compare and Blame with Working "
"BASE</guimenuitem></menuchoice>. This will fetch the blame data for the "
"selected revision, and for the file in the working BASE, then use the diff "
"viewer to compare the two blame files."
msgstr ""

#. (para)
msgid ""
"The revision log dialog includes several options which allow you to do this."
" <placeholder-1/>"
msgstr ""

#. (title)
#. (title)
msgid "The Repository Browser"
msgstr ""

#. (primary)
msgid "repo-browser"
msgstr ""

#. (primary)
msgid "server-side actions"
msgstr ""

#. (primary)
msgid "server viewer"
msgstr ""

#. (para)
msgid ""
"Sometimes you need to work directly on the repository, without having a "
"working copy. That's what the <firstterm>Repository Browser</firstterm> is "
"for. Just as the explorer and the icon overlays allow you to view your "
"working copy, so the Repository Browser allows you to view the structure and"
" status of the repository. <placeholder-1/> With the Repository Browser you "
"can execute commands like copy, move, rename, ... directly on the "
"repository."
msgstr ""

#. (para)
msgid ""
"The repository browser looks very similar to the Windows explorer, except "
"that it is showing the content of the repository at a particular revision "
"rather than files on your computer. In the left pane you can see a directory"
" tree, and in the right pane are the contents of the selected directory. At "
"the top of the Repository Browser Window you can enter the URL of the "
"repository and the revision you want to browse."
msgstr ""

#. (para)
msgid ""
"Folders included with the <literal>svn:externals</literal> property are also"
" shown in the repository browser. Those folders are shown with a small arrow"
" on them to indicate that they are not part of the repository structure, "
"just links."
msgstr ""

#. (para)
msgid ""
"Just like Windows explorer, you can click on the column headings in the "
"right pane if you want to set the sort order. And as in explorer there are "
"context menus available in both panes."
msgstr ""

#. (para)
msgid ""
"Edit the selected file. This will checkout a temporary working copy and "
"start the default editor for that file type. When you close the editor "
"program, if changes were saved then a commit dialog appears, allowing you to"
" enter a comment and commit the change."
msgstr ""

#. (para)
msgid ""
"Show the revision log for that file, or show a graph of all revisions so you"
" can see where the file came from."
msgstr ""

#. (para)
msgid "Blame the file, to see who changed which line and when."
msgstr ""

#. (para)
msgid ""
"Checkout a single file. This creates a <quote>sparse</quote> working copy "
"which contains just this one file."
msgstr ""

#. (para)
msgid "Delete or rename the file."
msgstr ""

#. (para)
msgid "Save an unversioned copy of the file to your hard drive."
msgstr ""

#. (para)
msgid "Copy the URL shown in the address bar to the clipboard."
msgstr ""

#. (para)
msgid ""
"Make a copy of the file, either to a different part of the repository, or to"
" a working copy rooted in the same repository."
msgstr ""

#. (para)
msgid "View/Edit the file's properties."
msgstr ""

#. (para)
msgid ""
"Create a shortcut so that you can quickly start repo browser again, opened "
"directly at this location."
msgstr ""

#. (para)
msgid "The context menu for a file allows you to: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"Show the revision log for that folder, or show a graph of all revisions so "
"you can see where the folder came from."
msgstr ""

#. (para)
msgid "Export the folder to a local unversioned copy on your hard drive."
msgstr ""

#. (para)
msgid ""
"Checkout the folder to produce a local working copy on your hard drive."
msgstr ""

#. (para)
msgid "Create a new folder in the repository."
msgstr ""

#. (para)
msgid ""
"Add unversioned files or folders directly to the repository. This is "
"effectively the Subversion Import operation."
msgstr ""

#. (para)
msgid "Delete or rename the folder."
msgstr "Grise ose riemëro dosjen."

#. (para)
msgid ""
"Make a copy of the folder, either to a different part of the repository, or "
"to a working copy rooted in the same repository. This can also be used to "
"create a branch/tag without the need to have a working copy checked out."
msgstr ""

#. (para)
msgid "View/Edit the folder's properties."
msgstr ""

#. (para)
msgid "Mark the folder for comparison. A marked folder is shown in bold."
msgstr ""

#. (para)
msgid ""
"Compare the folder with a previously marked folder, either as a unified "
"diff, or as a list of changed files which can then be visually diffed using "
"the default diff tool. This can be particularly useful for comparing two "
"tags, or trunk and branch to see what changed."
msgstr ""

#. (para)
msgid "The context menu for a folder allows you to: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"If you select two folders in the right pane, you can view the differences "
"either as a unified-diff, or as a list of files which can be visually diffed"
" using the default diff tool."
msgstr ""

#. (para)
msgid ""
"If you select multiple folders in the right pane, you can checkout all of "
"them at once into a common parent folder."
msgstr ""

#. (para)
msgid ""
"If you select 2 tags which are copied from the same root (typically "
"<literal>/trunk/</literal>), you can use <menuchoice><guimenu>Context "
"Menu</guimenu><guimenuitem>Show Log...</guimenuitem></menuchoice> to view "
"the list of revisions between the two tag points."
msgstr ""

#. (para)
msgid ""
"External items (referenced using <literal>svn:externals</literal> are also "
"shown in the repository browser, and you can even drill down into the folder"
" contents. External items are marked with a red arrow over the item."
msgstr ""

#. (para)
msgid ""
"You can use <keycap>F5</keycap> to refresh the view as usual. This will "
"refresh everything which is currently displayed. If you want to pre-fetch or"
" refresh the information for nodes which have not been opened yet, use "
"<keycap>Ctrl-F5</keycap>. After that, expanding any node will happen "
"instantly without a network delay while the information is fetched."
msgstr ""

#. (para)
msgid ""
"You can also use the repository browser for drag-and-drop operations. If you"
" drag a folder from explorer into the repo-browser, it will be imported into"
" the repository. Note that if you drag multiple items, they will be imported"
" in separate commits."
msgstr ""

#. (para)
msgid ""
"If you want to move an item within the repository, just <action>left "
"drag</action> it to the new location. If you want to create a copy rather "
"than moving the item, <keycap>Ctrl</keycap>-<action>left drag</action> "
"instead. When copying, the cursor has a <quote>plus</quote> symbol on it, "
"just as it does in Explorer."
msgstr ""

#. (para)
msgid ""
"If you want to copy/move a file or folder to another location and also give "
"it a new name at the same time, you can <action>right drag</action> or "
"<keycap>Ctrl</keycap>-<action>right drag</action> the item instead of using "
"<action>left drag</action>. In that case, a rename dialog is shown where you"
" can enter a new name for the file or folder."
msgstr ""

#. (para)
msgid ""
"Whenever you make changes in the repository using one of these methods, you "
"will be presented with a log message entry dialog. If you dragged something "
"by mistake, this is also your chance to cancel the action."
msgstr ""

#. (para)
msgid ""
"Sometimes when you try to open a path you will get an error message in place"
" of the item details. This might happen if you specified an invalid URL, or "
"if you don't have access permission, or if there is some other server "
"problem. If you need to copy this message to include it in an email, just "
"right click on it and use <menuchoice><guimenu>Context "
"Menu</guimenu><guimenuitem>Copy error message to "
"clipboard</guimenuitem></menuchoice>, or simply use <keycap>Ctrl+C</keycap>."
msgstr ""

#. (para)
msgid ""
"Bookmarked urls/repositories are shown below the current repository folders "
"in the left tree view. You can add entries there by <action>right "
"clicking</action> on any file or folder and select "
"<menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Add to "
"Bookmarks</guimenuitem></menuchoice>. Clicking on a bookmark will browse to "
"that repository and file/folder."
msgstr ""

#. (title)
msgid "Revision Graphs"
msgstr ""

#. (primary)
msgid "graph"
msgstr "grafiku"

#. (primary)
msgid "revision graph"
msgstr ""

#. (title)
msgid "A Revision Graph"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> Sometimes you need to know where branches and tags were "
"taken from the trunk, and the ideal way to view this sort of information is "
"as a graph or tree structure. That's when you need to use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Revision "
"Graph...</guimenuitem></menuchoice>"
msgstr ""

#. (para)
msgid ""
"This command analyses the revision history and attempts to create a tree "
"showing the points at which copies were taken, and when branches/tags were "
"deleted."
msgstr ""

#. (para)
msgid ""
"In order to generate the graph, TortoiseSVN must fetch all log messages from"
" the repository root. Needless to say this can take several minutes even "
"with a repository of a few thousand revisions, depending on server speed, "
"network bandwidth, etc. If you try this with something like the "
"<emphasis>Apache</emphasis> project which currently has over 500,000 "
"revisions you could be waiting for some time."
msgstr ""

#. (para)
msgid ""
"The good news is that if you are using log caching, you only have to suffer "
"this delay once. After that, log data is held locally. Log caching is "
"enabled in TortoiseSVN's settings."
msgstr ""

#. (title)
msgid "Revision Graph Nodes"
msgstr ""

#. (term)
msgid "Added or copied items"
msgstr "Sended e vendosura ose të kopjuara"

#. (para)
msgid ""
"Items which have been added, or created by copying another file/folder are "
"shown using a rounded rectangle. The default colour is green. Tags and "
"trunks are treated as a special case and use a different shade, depending on"
" the "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Settings</guimenuitem></menuchoice>."
msgstr ""

#. (term)
msgid "Deleted items"
msgstr ""

#. (para)
msgid ""
"Deleted items e.g. a branch which is no longer required, are shown using an "
"octagon (rectangle with corners cut off). The default colour is red."
msgstr ""

#. (term)
msgid "Renamed items"
msgstr "Sendet e riemëruara"

#. (para)
msgid ""
"Renamed items are also shown using an octagon, but the default colour is "
"blue."
msgstr ""

#. (term)
msgid "Branch tip revision"
msgstr ""

#. (para)
msgid ""
"The graph is normally restricted to showing branch points, but it is often "
"useful to be able to see the respective HEAD revision for each branch too. "
"If you select <guilabel>Show HEAD revisions</guilabel>, each HEAD revision "
"nodes will be shown as an ellipse. Note that HEAD here refers to the last "
"revision committed on that path, not to the HEAD revision of the repository."
msgstr ""

#. (term)
msgid "Working copy revision"
msgstr ""

#. (para)
msgid ""
"If you invoked the revision graph from a working copy, you can opt to show "
"the BASE revision on the graph using <guilabel>Show WC revision</guilabel>, "
"which marks the BASE node with a bold outline."
msgstr ""

#. (term)
msgid "Modified working copy"
msgstr "Kopje funksionale e ndryshuar"

#. (para)
msgid ""
"If you invoked the revision graph from a working copy, you can opt to show "
"an additional node representing your modified working copy using "
"<guilabel>Show WC modifications</guilabel>. This is an elliptical node with "
"a bold outline in red by default."
msgstr ""

#. (term)
msgid "Normal item"
msgstr "Send normal"

#. (para)
msgid "All other items are shown using a plain rectangle."
msgstr ""

#. (para)
msgid ""
"Each revision graph node represents a revision in the repository where "
"something changed in the tree you are looking at. Different types of node "
"can be distinguished by shape and colour. The shapes are fixed, but colours "
"can be set using "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Settings</guimenuitem></menuchoice><placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"Note that by default the graph only shows the points at which items were "
"added, copied or deleted. Showing every revision of a project will generate "
"a very large graph for non-trivial cases. If you really want to see "
"<emphasis>all</emphasis> revisions where changes were made, there is an "
"option to do this in the <guilabel>View</guilabel> menu and on the toolbar."
msgstr ""

#. (para)
msgid ""
"The default view (grouping off) places the nodes such that their vertical "
"position is in strict revision order, so you have a visual cue for the order"
" in which things were done. Where two nodes are in the same column the order"
" is very obvious. When two nodes are in adjacent columns the offset is much "
"smaller because there is no need to prevent the nodes from overlapping, and "
"as a result the order is a little less obvious. Such optimisations are "
"necessary to keep complex graphs to a reasonable size. Please note that this"
" ordering uses the <emphasis>edge</emphasis> of the node on the "
"<emphasis>older</emphasis> side as a reference, i.e. the bottom edge of the "
"node when the graph is shown with oldest node at the bottom. The reference "
"edge is significant because the node shapes are not all the same height."
msgstr ""

#. (title)
msgid "Changing the View"
msgstr "Duke ndryshuar Pamjen"

#. (term)
msgid "Group branches"
msgstr ""

#. (para)
msgid ""
"The default behavior (grouping off) has all rows sorted strictly by "
"revision. As a result, long-living branches with sparse commits occupy a "
"whole column for only a few changes and the graph becomes very broad."
msgstr ""

#. (para)
msgid ""
"This mode groups changes by branch, so that there is no global revision "
"ordering: Consecutive revisions on a branch will be shown in (often) "
"consecutive lines. Sub-branches, however, are arranged in such a way that "
"later branches will be shown in the same column above earlier branches to "
"keep the graph slim. As a result, a given row may contain changes from "
"different revisions."
msgstr ""

#. (term)
msgid "Oldest on top"
msgstr "Më të vjetrat sipër"

#. (para)
msgid ""
"Normally the graph shows the oldest revision at the bottom, and the tree "
"grows upwards. Use this option to grow down from the top instead."
msgstr ""

#. (term)
msgid "Align trees on top"
msgstr ""

#. (para)
msgid ""
"When a graph is broken into several smaller trees, the trees may appear "
"either in natural revision order, or aligned at the bottom of the window, "
"depending on whether you are using the <guilabel>Group Branches</guilabel> "
"option. Use this option to grow all trees down from the top instead."
msgstr ""

#. (term)
msgid "Reduce cross lines"
msgstr ""

#. (para)
msgid ""
"This option is normally enabled and avoids showing the graph with a lot of "
"confused crossing lines. However this may also make the layout columns "
"appear in less logical places, for example in a diagonal line rather than a "
"column, and the graph may require a larger area to draw. If this is a "
"problem you can disable the option from the <guilabel>View</guilabel> menu."
msgstr ""

#. (term)
msgid "Differential path names"
msgstr ""

#. (para)
msgid ""
"Long path names can take a lot of space and make the node boxes very large. "
"Use this option to show only the changed part of a path, replacing the "
"common part with dots. E.g. if you create a branch "
"<literal>/branches/1.2.x/doc/html</literal> from "
"<literal>/trunk/doc/html</literal> the branch could be shown in compact form"
" as <literal>/branches/1.2.x/..</literal> because the last two levels, "
"<literal>doc</literal> and <literal>html</literal>, did not change."
msgstr ""

#. (term)
msgid "Show all revisions"
msgstr "Shfaq të gjitha rivlerësimet"

#. (para)
msgid ""
"This does just what you expect and shows every revision where something (in "
"the tree that you are graphing) has changed. For long histories this can "
"produce a truly huge graph."
msgstr ""

#. (term)
msgid "Show HEAD revisions"
msgstr ""

#. (para)
msgid ""
"This ensures that the latest revision on every branch is always shown on the"
" graph."
msgstr ""

#. (term)
msgid "Exact copy sources"
msgstr "Burimet e sakta të kopjes"

#. (para)
msgid ""
"When a branch/tag is made, the default behaviour is to show the branch as "
"taken from the last node where a change was made. Strictly speaking this is "
"inaccurate since the branches are often made from the current HEAD rather "
"than a specific revision. So it is possible to show the more correct (but "
"less useful) revision that was used to create the copy. Note that this "
"revision may be younger than the HEAD revision of the source branch."
msgstr ""

#. (term)
msgid "Fold tags"
msgstr ""

#. (para)
msgid ""
"When a project has many tags, showing every tag as a separate node on the "
"graph takes a lot of space and obscures the more interesting development "
"branch structure. At the same time you may need to be able to access the tag"
" content easily so that you can compare revisions. This option hides the "
"nodes for tags and shows them instead in the tooltip for the node that they "
"were copied from. A tag icon on the right side of the source node indicates "
"that tags were made. This greatly simplifies the view."
msgstr ""

#. (para)
msgid ""
"Note that if a tag is itself used as the source for a copy, perhaps a new "
"branch based on a tag, then that tag will be shown as a separate node rather"
" than folded."
msgstr ""

#. (term)
msgid "Hide deleted paths"
msgstr ""

#. (para)
msgid ""
"Hides paths which are no longer present at the HEAD revision of the "
"repository, e.g. deleted branches."
msgstr ""

#. (para)
msgid ""
"If you have selected the <guilabel>Fold tags</guilabel> option then a "
"deleted branch from which tags were taken will still be shown, otherwise the"
" tags would disappear too. The last revision that was tagged will be shown "
"in the colour used for deleted nodes instead of showing a separate deletion "
"revision."
msgstr ""

#. (para)
msgid ""
"If you select the <guilabel>Hide tags</guilabel> option then these branches "
"will disappear again as they are not needed to show the tags."
msgstr ""

#. (term)
msgid "Hide unused branches"
msgstr ""

#. (para)
msgid ""
"Hides branches where no changes were committed to the respective file or "
"sub-folder. This does not necessarily indicate that the branch was not used,"
" just that no changes were made to <emphasis>this</emphasis> part of it."
msgstr ""

#. (term)
msgid "Show WC revision"
msgstr ""

#. (para)
msgid ""
"Marks the revision on the graph which corresponds to the update revision of "
"the item you fetched the graph for. If you have just updated, this will be "
"HEAD, but if others have committed changes since your last update your WC "
"may be a few revisions lower down. The node is marked by giving it a bold "
"outline."
msgstr ""

#. (term)
msgid "Show WC modifications"
msgstr ""

#. (para)
msgid ""
"If your WC contains local changes, this option draws it as a separate "
"elliptical node, linked back to the node that your WC was last updated to. "
"The default outline colour is red. You may need to refresh the graph using "
"<keycap>F5</keycap> to capture recent changes."
msgstr ""

#. (term)
msgid "Filter"
msgstr "Filtro"

#. (para)
msgid ""
"Sometimes the revision graph contains more revisions than you want to see. "
"This option opens a dialog which allows you to restrict the range of "
"revisions displayed, and to hide particular paths by name."
msgstr ""

#. (para)
msgid ""
"If you hide a particular path and that node has child nodes, the children "
"will be shown as a separate tree. If you want to hide all children as well, "
"use the <guilabel>Remove the whole subtree(s)</guilabel> checkbox."
msgstr ""

#. (term)
msgid "Tree stripes"
msgstr ""

#. (para)
msgid ""
"Where the graph contains several trees, it is sometimes useful to use "
"alternating colours on the background to help distinguish between trees."
msgstr ""

#. (term)
msgid "Show overview"
msgstr ""

#. (para)
msgid ""
"Shows a small picture of the entire graph, with the current view window as a"
" rectangle which you can drag. This allows you to navigate the graph more "
"easily. Note that for very large graphs the overview may become useless due "
"to the extreme zoom factor and will therefore not be shown in such cases."
msgstr ""

#. (para)
msgid ""
"Because a revision graph is often quite complex, there are a number of "
"features which can be used to tailor the view the way you want it. These are"
" available in the <guilabel>View</guilabel> menu and from the toolbar. "
"<placeholder-1/>"
msgstr ""

#. (title)
msgid "Using the Graph"
msgstr "Duke shfrytëzuar Grafikun"

#. (para)
msgid ""
"To make it easier to navigate a large graph, use the overview window. This "
"shows the entire graph in a small window, with the currently displayed "
"portion highlighted. You can drag the highlighted area to change the "
"displayed region."
msgstr ""

#. (para)
msgid ""
"The revision date, author and comments are shown in a hint box whenever the "
"mouse hovers over a revision box."
msgstr ""

#. (para)
msgid ""
"If you select two revisions (Use <keycap>Ctrl</keycap>-<action>left "
"click</action>), you can use the context menu to show the differences "
"between these revisions. You can choose to show differences as at the branch"
" creation points, but usually you will want to show the differences at the "
"branch end points, i.e. at the HEAD revision."
msgstr ""

#. (para)
msgid ""
"You can view the differences as a Unified-Diff file, which shows all "
"differences in a single file with minimal context. If you opt to "
"<menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Compare "
"Revisions</guimenuitem></menuchoice> you will be presented with a list of "
"changed files. <action>Double click</action> on a file name to fetch both "
"revisions of the file and compare them using the visual difference tool."
msgstr ""

#. (para)
msgid ""
"If you <action>right click</action> on a revision you can use "
"<menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Show "
"Log</guimenuitem></menuchoice> to view the history."
msgstr ""

#. (para)
msgid ""
"You can also merge changes in the selected revision(s) into a different "
"working copy. A folder selection dialog allows you to choose the working "
"copy to merge into, but after that there is no confirmation dialog, nor any "
"opportunity to try a test merge. It is a good idea to merge into an "
"unmodified working copy so that you can revert the changes if it doesn't "
"work out! This is a useful feature if you want to merge selected revisions "
"from one branch to another."
msgstr ""

#. (title)
msgid "Learn to Read the Revision Graph"
msgstr ""

#. (para)
msgid ""
"First-time users may be surprised by the fact that the revision graph shows "
"something that does not match the user's mental model. If a revision changes"
" multiple copies or branches of a file or folder, for instance, then there "
"will be multiple nodes for that single revision. It is a good practice to "
"start with the leftmost options in the toolbar and customize the graph step-"
"by-step until it comes close to your mental model."
msgstr ""

#. (para)
msgid ""
"All filter options try lose as little information as possible. That may "
"cause some nodes to change their color, for instance. Whenever the result is"
" unexpected, undo the last filter operation and try to understand what is "
"special about that particular revision or branch. In most cases, the "
"initially expected outcome of the filter operation would either be "
"inaccurate or misleading."
msgstr ""

#. (para)
msgid ""
"If you want to check the server again for newer information, you can simply "
"refresh the view using <keycap>F5</keycap>. If you are using the log cache "
"(enabled by default), this will check the repository for newer commits and "
"fetch only the new ones. If the log cache was in offline mode, this will "
"also attempt to go back online."
msgstr ""

#. (para)
msgid ""
"If you are using the log cache and you think the message content or author "
"may have changed, you should use the log dialog to refresh the messages you "
"need. Since the revision graph works from the repository root, we would have"
" to invalidate the entire log cache, and refilling it could take a "
"<emphasis>very</emphasis> long time."
msgstr ""

#. (title)
msgid "Pruning Trees"
msgstr ""

#. (para)
msgid ""
"A large tree can be difficult to navigate and sometimes you will want to "
"hide parts of it, or break it down into a forest of smaller trees. If you "
"hover the mouse over the point where a node link enters or leaves the node "
"you will see one or more popup buttons which allow you to do this."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"../images/RevGraphCollapse.png\"/> Click on the minus "
"button to collapse the attached sub-tree."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"../images/RevGraphExpand.png\"/> Click on the plus button"
" to expand a collapsed tree. When a tree has been collapsed, this button "
"remains visible to indicate the hidden sub-tree."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"../images/RevGraphSplit.png\"/> Click on the cross button"
" to split the attached sub-tree and show it as a separate tree on the graph."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"../images/RevGraphJoin.png\"/> Click on the circle button"
" to reattach a split tree. When a tree has been split away, this button "
"remains visible to indicate that there is a separate sub-tree."
msgstr ""

#. (para)
msgid ""
"Click on the graph background for the main context menu, which offers "
"options to <guilabel>Expand all</guilabel> and <guilabel>Join "
"all</guilabel>. If no branch has been collapsed or split, the context menu "
"will not be shown."
msgstr ""

#. (title)
msgid "Exporting a Subversion Working Copy"
msgstr ""

#. (primary)
msgid "export"
msgstr "eksporto"

#. (primary)
msgid "unversioned 'working copy'"
msgstr ""

#. (para)
msgid ""
"Sometimes you may want a clean copy of your working tree without the "
"<filename>.svn</filename> directory, e.g. to create a zipped tarball of your"
" source, or to export to a web server. Instead of making a copy and then "
"deleting the <filename>.svn</filename> directory manually, TortoiseSVN "
"offers the command "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Export...</guimenuitem></menuchoice>."
" Exporting from a URL and exporting from a working copy are treated slightly"
" differently."
msgstr ""

#. (title)
msgid "The Export-from-URL Dialog"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> If you execute this command on an unversioned folder, "
"TortoiseSVN will assume that the selected folder is the target, and open a "
"dialog for you to enter the URL and revision to export from. This dialog has"
" options to export only the top level folder, to omit external references, "
"and to override the line end style for files which have the <literal>svn"
":eol-style</literal> property set."
msgstr ""

#. (para)
msgid ""
"Of course you can export directly from the repository too. Use the "
"Repository Browser to navigate to the relevant subtree in your repository, "
"then use <menuchoice><guimenu>Context "
"Menu</guimenu><guimenuitem>Export</guimenuitem></menuchoice>. You will get "
"the <guilabel>Export from URL</guilabel> dialog described above."
msgstr ""

#. (para)
msgid ""
"If you execute this command on your working copy you'll be asked for a place"
" to save the <emphasis>clean</emphasis> working copy without the "
"<filename>.svn</filename> folder. By default, only the versioned files are "
"exported, but you can use the <guilabel>Export unversioned files "
"too</guilabel> checkbox to include any other unversioned files which exist "
"in your WC and not in the repository. External references using "
"<literal>svn:externals</literal> can be omitted if required."
msgstr ""

#. (para)
msgid ""
"Another way to export from a working copy is to <action>right drag</action> "
"the working copy folder to another location and choose "
"<menuchoice><guimenu>Context Menu</guimenu><guimenuitem>SVN Export versioned"
" items here</guimenuitem></menuchoice> or <menuchoice><guimenu>Context "
"Menu</guimenu><guimenuitem>SVN Export all items "
"here</guimenuitem></menuchoice> or <menuchoice><guimenu>Context "
"Menu</guimenu><guimenuitem>SVN Export changed items "
"here</guimenuitem></menuchoice>. The second option includes the unversioned "
"files as well. The third option exports only modified items, but maintains "
"the folder structure."
msgstr ""

#. (para)
msgid ""
"When exporting from a working copy, if the target folder already contains a "
"folder of the same name as the one you are exporting, you will be given the "
"option to overwrite the existing content, or to create a new folder with an "
"automatically generated name, e.g. <literal>Target (1)</literal>."
msgstr ""

#. (title)
msgid "Exporting single files"
msgstr ""

#. (para)
msgid ""
"The export dialog does not allow exporting single files, even though "
"Subversion can."
msgstr ""

#. (para)
msgid ""
"To export single files with TortoiseSVN, you have to use the repository "
"browser (<xref linkend=\"tsvn-dug-repobrowser\"/>). Simply drag the file(s) "
"you want to export from the repository browser to where you want them in the"
" explorer, or use the context menu in the repository browser to export the "
"files."
msgstr ""

#. (title)
msgid "Exporting a Change Tree"
msgstr ""

#. (para)
msgid ""
"If you want to export a copy of your project tree structure but containing "
"only the files which have changed in a particular revision, or between any "
"two revisions, use the compare revisions feature described in <xref linkend"
"=\"tsvn-dug-compare-revs\"/>."
msgstr ""

#. (para)
msgid ""
"If you want to export your working copy tree structure but containing only "
"the files which are locally modified, refer to <guilabel>SVN Export changed "
"items here</guilabel> above."
msgstr ""

#. (title)
msgid "Removing a working copy from version control"
msgstr ""

#. (primary)
#. (primary)
msgid "unversion"
msgstr ""

#. (para)
msgid ""
"Sometimes you have a working copy which you want to convert back to a normal"
" folder without the <literal>.svn</literal> directory. All you need to do is"
" delete the <literal>.svn</literal> directory from the working copy root."
msgstr ""

#. (para)
msgid ""
"Alternatively you can export the folder to itself. In Windows Explorer right"
" drag the working copy root folder from the file pane onto itself in the "
"folder pane. TortoiseSVN detects this special case and asks if you want to "
"make the working copy unversioned. If you answer <emphasis>yes</emphasis> "
"the control directory will be removed and you will have a plain, unversioned"
" directory tree."
msgstr ""

#. (title)
msgid "Relocating a working copy"
msgstr ""

#. (primary)
msgid "relocate"
msgstr ""

#. (primary)
msgid "URL changed"
msgstr "URL e ndryshuar"

#. (primary)
msgid "repository URL changed"
msgstr ""

#. (primary)
msgid "server moved"
msgstr "serveri i zhvendosur"

#. (primary)
msgid "moved server"
msgstr "server i zhvendosur"

#. (title)
msgid "The Relocate Dialog"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> If your repository has for some reason changed it's "
"location (IP/URL). Maybe you're even stuck and can't commit and you don't "
"want to checkout your working copy again from the new location and to move "
"all your changed data back into the new working copy, "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Relocate</guimenuitem></menuchoice>"
" is the command you are looking for. It basically does very little: it "
"rewrites all URLs that are associated with each file and folder with the new"
" URL."
msgstr ""

#. (para)
msgid ""
"This operation only works on working copy <emphasis>roots</emphasis>. So the"
" context menu entry is only shown for working copy roots."
msgstr ""

#. (para)
msgid ""
"You may be surprised to find that TortoiseSVN contacts the repository as "
"part of this operation. All it is doing is performing some simple checks to "
"make sure that the new URL really does refer to the same repository as the "
"existing working copy."
msgstr ""

#. (para)
msgid "The IP address of the server has changed."
msgstr ""

#. (para)
msgid "The protocol has changed (e.g. http:// to https://)."
msgstr ""

#. (para)
msgid "The repository root path in the server setup has changed."
msgstr ""

#. (para)
msgid ""
"<emphasis>This is a very infrequently used operation</emphasis>. The "
"relocate command is <emphasis>only</emphasis> used if the URL of the "
"repository root has changed. Possible reasons are: <placeholder-1/> Put "
"another way, you need to relocate when your working copy is referring to the"
" same location in the same repository, but the repository itself has moved."
msgstr ""

#. (para)
msgid ""
"You want to move to a different Subversion repository. In that case you "
"should perform a clean checkout from the new repository location."
msgstr ""

#. (para)
msgid ""
"You want to switch to a different branch or directory within the same "
"repository. To do that you should use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Switch...</guimenuitem></menuchoice>."
" Read <xref linkend=\"tsvn-dug-switch-1\"/> for more information."
msgstr ""

#. (para)
msgid "It does not apply if: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"If you use relocate in either of the cases above, it <emphasis>will corrupt "
"your working copy</emphasis> and you will get many unexplainable error "
"messages while updating, committing, etc. Once that has happened, the only "
"fix is a fresh checkout."
msgstr ""

#. (title)
msgid "Integration with Bug Tracking Systems / Issue Trackers"
msgstr ""

#. (primary)
msgid "bug tracking"
msgstr ""

#. (primary)
msgid "bug tracker"
msgstr ""

#. (primary)
#. (primary)
msgid "issue tracker"
msgstr ""

#. (primary)
msgid "bugtracker"
msgstr ""

#. (para)
msgid ""
"It is very common in Software Development for changes to be related to a "
"specific bug or issue ID. Users of bug tracking systems (issue trackers) "
"would like to associate the changes they make in Subversion with a specific "
"ID in their issue tracker. Most issue trackers therefore provide a pre-"
"commit hook script which parses the log message to find the bug ID with "
"which the commit is associated. This is somewhat error prone since it relies"
" on the user to write the log message properly so that the pre-commit hook "
"script can parse it correctly."
msgstr ""

#. (para)
msgid ""
"When the user enters a log message, a well defined line including the issue "
"number associated with the commit can be added automatically. This reduces "
"the risk that the user enters the issue number in a way the bug tracking "
"tools can't parse correctly."
msgstr ""

#. (para)
msgid ""
"Or TortoiseSVN can highlight the part of the entered log message which is "
"recognized by the issue tracker. That way the user knows that the log "
"message can be parsed correctly."
msgstr ""

#. (para)
msgid ""
"When the user browses the log messages, TortoiseSVN creates a link out of "
"each bug ID in the log message which fires up the browser to the issue "
"mentioned."
msgstr ""

#. (para)
msgid "TortoiseSVN can help the user in two ways: <placeholder-1/>"
msgstr ""

#. (title)
msgid "Adding Issue Numbers to Log Messages"
msgstr ""

#. (para)
msgid ""
"You can integrate a bug tracking tool of your choice in TortoiseSVN. To do "
"this, you have to define some properties, which start with "
"<literal>bugtraq:</literal>. They must be set on Folders: (<xref linkend"
"=\"tsvn-dug-propertypage\"/>)"
msgstr ""

#. (title)
msgid "The Bugtraq Properties Dialog"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> When you edit any of the bugtraq properties a special "
"property editor is used to make it easier to set appropriate values."
msgstr ""

#. (para)
msgid ""
"Set this property to the URL of your bug tracking tool. It must be properly "
"URI encoded and it has to contain <literal>%BUGID%</literal>. "
"<literal>%BUGID%</literal> is replaced with the Issue number you entered. "
"This allows TortoiseSVN to display a link in the log dialog, so when you are"
" looking at the revision log you can jump directly to your bug tracking "
"tool. You do not have to provide this property, but then TortoiseSVN shows "
"only the issue number and not the link to it. e.g the TortoiseSVN project is"
" using <systemitem "
"class=\"url\">http://issues.tortoisesvn.net/?do=details&amp;id=%BUGID%</systemitem>."
msgstr ""

#. (para)
msgid ""
"You can also use relative URLs instead of absolute ones. This is useful when"
" your issue tracker is on the same domain/server as your source repository. "
"In case the domain name ever changes, you don't have to adjust the "
"<literal>bugtraq:url</literal> property. There are two ways to specify a "
"relative URL:"
msgstr ""

#. (para)
msgid ""
"If it begins with the string <literal>^/</literal> it is assumed to be "
"relative to the repository root. For example, "
"<literal>^/../?do=details&amp;id=%BUGID%</literal> will resolve to "
"<systemitem "
"class=\"url\">http://tortoisesvn.net/?do=details&amp;id=%BUGID%</systemitem>"
" if your repository is located on <systemitem "
"class=\"url\">http://tortoisesvn.net/svn/trunk/</systemitem>."
msgstr ""

#. (para)
msgid ""
"A URL beginning with the string <literal>/</literal> is assumed to be "
"relative to the server's hostname. For example "
"<literal>/?do=details&amp;id=%BUGID%</literal> will resolve to <systemitem "
"class=\"url\">http://tortoisesvn.net/?do=details&amp;id=%BUGID%</systemitem>"
" if your repository is located anywhere on <systemitem "
"class=\"url\">http://tortoisesvn.net</systemitem>."
msgstr ""

#. (para)
msgid ""
"Set this to <literal>true</literal>, if you want TortoiseSVN to warn you "
"because of an empty issue-number text field. Valid values are "
"<literal>true/false</literal>. <emphasis> If not defined, "
"<literal>false</literal> is assumed. </emphasis>"
msgstr ""

#. (para)
msgid ""
"There are two ways to integrate TortoiseSVN with issue trackers. One is "
"based on simple strings, the other is based on <emphasis>regular "
"expressions</emphasis>. The properties used by both approaches are: "
"<placeholder-1/>"
msgstr ""

#. (title)
msgid "Issue Number in Text Box"
msgstr ""

#. (para)
msgid ""
"This property activates the bug tracking system in <emphasis>Input "
"field</emphasis> mode. If this property is set, then TortoiseSVN will prompt"
" you to enter an issue number when you commit your changes. It's used to add"
" a line at the end of the log message. It must contain "
"<literal>%BUGID%</literal>, which is replaced with the issue number on "
"commit. This ensures that your commit log contains a reference to the issue "
"number which is always in a consistent format and can be parsed by your bug "
"tracking tool to associate the issue number with a particular commit. As an "
"example you might use <literal>Issue : %BUGID%</literal>, but this depends "
"on your Tool."
msgstr ""

#. (para)
msgid ""
"This text is shown by TortoiseSVN on the commit dialog to label the edit box"
" where you enter the issue number. If it's not set, <literal>Bug-ID / Issue-"
"Nr:</literal> will be displayed. Keep in mind though that the window will "
"not be resized to fit this label, so keep the size of the label below 20-25 "
"characters."
msgstr ""

#. (para)
msgid ""
"If set to <literal>true</literal> only numbers are allowed in the issue-"
"number text field. An exception is the comma, so you can comma separate "
"several numbers. Valid values are <literal>true/false</literal>. <emphasis> "
"If not defined, <literal>true</literal> is assumed. </emphasis>"
msgstr ""

#. (para)
msgid ""
"This property defines if the bug-ID is appended (true) to the end of the log"
" message or inserted (false) at the start of the log message. Valid values "
"are <literal>true/false</literal>. <emphasis> If not defined, "
"<literal>true</literal> is assumed, so that existing projects don't break. "
"</emphasis>"
msgstr ""

#. (para)
msgid ""
"In the simple approach, TortoiseSVN shows the user a separate input field "
"where a bug ID can be entered. Then a separate line is appended/prepended to"
" the log message the user entered. <placeholder-1/>"
msgstr ""

#. (title)
msgid "Issue Numbers Using Regular Expressions"
msgstr ""

#. (para)
msgid ""
"This property activates the bug tracking system in "
"<emphasis>Regex</emphasis> mode. It contains either a single regular "
"expressions, or two regular expressions separated by a newline."
msgstr ""

#. (para)
msgid ""
"If two expressions are set, then the first expression is used as a pre-"
"filter to find expressions which contain bug IDs. The second expression then"
" extracts the bare bug IDs from the result of the first regex. This allows "
"you to use a list of bug IDs and natural language expressions if you wish. "
"e.g. you might fix several bugs and include a string something like this: "
"<quote>This change resolves issues #23, #24 and #25</quote>."
msgstr ""

#. (para)
msgid ""
"If you want to catch bug IDs as used in the expression above inside a log "
"message, you could use the following regex strings, which are the ones used "
"by the TortoiseSVN project: "
"<literal>[Ii]ssues?:?(\\s*(,|and)?\\s*#\\d+)+</literal> and "
"<literal>(\\d+)</literal>."
msgstr ""

#. (para)
msgid ""
"The first expression picks out <quote>issues #23, #24 and #25</quote> from "
"the surrounding log message. The second regex extracts plain decimal numbers"
" from the output of the first regex, so it will return <quote>23</quote>, "
"<quote>24</quote> and <quote>25</quote> to use as bug IDs."
msgstr ""

#. (para)
msgid ""
"Breaking the first regex down a little, it must start with the word "
"<quote>issue</quote>, possibly capitalised. This is optionally followed by "
"an <quote>s</quote> (more than one issue) and optionally a colon. This is "
"followed by one or more groups each having zero or more leading whitespace, "
"an optional comma or <quote>and</quote> and more optional space. Finally "
"there is a mandatory <quote>#</quote> and a mandatory decimal number."
msgstr ""

#. (para)
msgid ""
"If only one expression is set, then the bare bug IDs must be matched in the "
"groups of the regex string. Example: <literal>[Ii]ssue(?:s)? "
"#?(\\d+)</literal> This method is required by a few issue trackers, e.g. "
"trac, but it is harder to construct the regex. We recommend that you only "
"use this method if your issue tracker documentation tells you to."
msgstr ""

#. (para)
msgid ""
"If you are unfamiliar with regular expressions, take a look at the "
"introduction at <ulink "
"url=\"http://en.wikipedia.org/wiki/Regular_expression\"><citetitle>http://en.wikipedia.org/wiki/Regular_expression</citetitle></ulink>,"
" and the online documentation and tutorial at <ulink url=\"http://www"
".regular-expressions.info/\"><citetitle>http://www.regular-"
"expressions.info/</citetitle></ulink>."
msgstr ""

#. (para)
msgid ""
"It's not always easy to get the regex right so to help out there is a test "
"dialog built into the bugtraq properties dialog. Click on the button to the "
"right of the edit boxes to bring it up. Here you can enter some test text, "
"and change each regex to see the results. If the regex is invalid the edit "
"box background changes to red."
msgstr ""

#. (para)
msgid ""
"In the approach with <emphasis>regular expressions</emphasis>, TortoiseSVN "
"doesn't show a separate input field but marks the part of the log message "
"the user enters which is recognized by the issue tracker. This is done while"
" the user writes the log message. This also means that the bug ID can be "
"anywhere inside a log message! This method is much more flexible, and is the"
" one used by the TortoiseSVN project itself. <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"If both the <literal>bugtraq:message</literal> and "
"<literal>bugtraq:logregex</literal> properties are set, "
"<literal>logregex</literal> takes precedence."
msgstr ""

#. (para)
msgid ""
"Even if you don't have an issue tracker with a pre-commit hook parsing your "
"log messages, you still can use this to turn the issues mentioned in your "
"log messages into links!"
msgstr ""

#. (para)
msgid ""
"And even if you don't need the links, the issue numbers show up as a "
"separate column in the log dialog, making it easier to find the changes "
"which relate to a particular issue."
msgstr ""

#. (para)
msgid ""
"Some <literal>tsvn:</literal> properties require a "
"<literal>true/false</literal> value. TortoiseSVN also understands "
"<literal>yes</literal> as a synonym for <literal>true</literal> and "
"<literal>no</literal> as a synonym for <literal>false</literal>."
msgstr ""

#. (title)
#. (title)
msgid "Set the Properties on Folders"
msgstr ""

#. (para)
#. (para)
msgid ""
"These properties must be set on folders for the system to work. When you "
"commit a file or folder the properties are read from that folder. If the "
"properties are not found there, TortoiseSVN will search upwards through the "
"folder tree to find them until it comes to an unversioned folder, or the "
"tree root (e.g. <literal>C:\\</literal>) is found. If you can be sure that "
"each user checks out only from e.g <filename>trunk/</filename> and not some "
"sub-folder, then it's enough if you set the properties on "
"<filename>trunk/</filename>. If you can't be sure, you should set the "
"properties recursively on each sub-folder. A property setting deeper in the "
"project hierarchy overrides settings on higher levels (closer to "
"<filename>trunk/</filename>)."
msgstr ""

#. (title)
msgid "No Issue Tracker Information from Repository Browser"
msgstr ""

#. (para)
msgid ""
"Because the issue tracker integration depends upon accessing Subversion "
"properties, you will only see the results when using a checked out working "
"copy. Fetching properties remotely is a slow operation, so you will not see "
"this feature in action from the repo browser unless you started the repo "
"browser from your working copy. If you started the repo browser by entering "
"the URL of the repository you won't see this feature."
msgstr ""

#. (para)
#. (para)
msgid ""
"For the same reason, project properties will not be propagated automatically"
" when a child folder is added using the repo browser."
msgstr ""

#. (para)
msgid ""
"This issue tracker integration is not restricted to TortoiseSVN; it can be "
"used with any Subversion client. For more information, read the full <ulink "
"url=\"http://tortoisesvn.googlecode.com/svn/trunk/doc/notes/issuetrackers.txt\"><citetitle>Issue"
" Tracker Integration Specification</citetitle></ulink> in the TortoiseSVN "
"source repository. (<xref linkend=\"tsvn-preface-source\"/> explains how to "
"access the repository.)"
msgstr ""

#. (title)
msgid "Getting Information from the Issue Tracker"
msgstr ""

#. (para)
msgid ""
"The previous section deals with adding issue information to the log "
"messages. But what if you need to get information from the issue tracker? "
"The commit dialog has a COM interface which allows integration an external "
"program that can talk to your tracker. Typically you might want to query the"
" tracker to get a list of open issues assigned to you, so that you can pick "
"the issues that are being addressed in this commit."
msgstr ""

#. (para)
msgid ""
"Any such interface is of course highly specific to your issue tracker "
"system, so we cannot provide this part, and describing how to create such a "
"program is beyond the scope of this manual. The interface definition and "
"sample plugins in C# and C++/ATL can be obtained from the "
"<literal>contrib</literal> folder in the <ulink "
"url=\"http://tortoisesvn.googlecode.com/svn/trunk/contrib/issue-tracker-"
"plugins\"><citetitle>TortoiseSVN repository</citetitle></ulink>. (<xref "
"linkend=\"tsvn-preface-source\"/> explains how to access the repository.) A "
"summary of the API is also given in <xref linkend=\"tsvn-"
"ibugtraqprovider\"/>. Another (working) example plugin in C# is <ulink "
"url=\"http://code.google.com/p/gurtle/\"><citetitle>Gurtle</citetitle></ulink>"
" which implements the required COM interface to interact with the <ulink "
"url=\"http://code.google.com/hosting/\"><citetitle>Google "
"Code</citetitle></ulink> issue tracker."
msgstr ""

#. (title)
msgid "Example issue tracker query dialog"
msgstr ""

#. (para)
msgid ""
"For illustration purposes, let's suppose that your system administrator has "
"provided you with an issue tracker plugin which you have installed, and that"
" you have set up some of your working copies to use the plugin in "
"TortoiseSVN's settings dialog. When you open the commit dialog from a "
"working copy to which the plugin has been assigned, you will see a new "
"button at the top of the dialog. <placeholder-1/> In this example you can "
"select one or more open issues. The plugin can then generate specially "
"formatted text which it adds to your log message."
msgstr ""

#. (title)
msgid "Integration with Web-based Repository Viewers"
msgstr ""

#. (primary)
msgid "web view"
msgstr ""

#. (primary)
msgid "repo viewer"
msgstr ""

#. (primary)
msgid "ViewVC"
msgstr ""

#. (primary)
msgid "WebSVN"
msgstr "WebSVN"

#. (para)
msgid ""
"There are several web-based repository viewers available for use with "
"Subversion such as <ulink "
"url=\"http://www.viewvc.org/\"><citetitle>ViewVC</citetitle></ulink> and "
"<ulink "
"url=\"http://websvn.tigris.org/\"><citetitle>WebSVN</citetitle></ulink>. "
"TortoiseSVN provides a means to link with these viewers."
msgstr ""

#. (para)
msgid ""
"You can integrate a repo viewer of your choice in TortoiseSVN. To do this, "
"you have to define some properties which define the linkage. They must be "
"set on Folders: (<xref linkend=\"tsvn-dug-propertypage\"/>)"
msgstr ""

#. (para)
msgid ""
"Set this property to the URL of your repo viewer to view all changes in a "
"specific revision. It must be properly URI encoded and it has to contain "
"<literal>%REVISION%</literal>. <literal>%REVISION%</literal> is replaced "
"with the revision number in question. This allows TortoiseSVN to display a "
"context menu entry in the log dialog <menuchoice><guimenu>Context "
"Menu</guimenu><guimenuitem>View revision in "
"webviewer</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"Set this property to the URL of your repo viewer to view changes to a "
"specific file in a specific revision. It must be properly URI encoded and it"
" has to contain <literal>%REVISION%</literal> and <literal>%PATH%</literal>."
" <literal>%PATH%</literal> is replaced with the path relative to the "
"repository root. This allows TortoiseSVN to display a context menu entry in "
"the log dialog <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>View "
"revision for path in webviewer</guimenuitem></menuchoice> For example, if "
"you right click in the log dialog bottom pane on a file entry "
"<literal>/trunk/src/file</literal> then the <literal>%PATH%</literal> in the"
" URL will be replaced with <literal>/trunk/src/file</literal>."
msgstr ""

#. (para)
msgid ""
"You can also use relative URLs instead of absolute ones. This is useful in "
"case your web viewer is on the same domain/server as your source repository."
" In case the domain name ever changes, you don't have to adjust the "
"<literal>webviewer:revision</literal> and "
"<literal>webviewer:pathrevision</literal> property. The format is the same "
"as for the <literal>bugtraq:url</literal> property. See <xref linkend"
"=\"tsvn-dug-bugtracker\"/>."
msgstr ""

#. (para)
msgid ""
"Because the repo viewer integration depends upon accessing Subversion "
"properties, you will only see the results when using a checked out working "
"copy. Fetching properties remotely is a slow operation, so you will not see "
"this feature in action from the repo browser unless you started the repo "
"browser from your working copy. If you started the repo browser by entering "
"the URL of the repository you won't see this feature."
msgstr ""

#. (title)
msgid "TortoiseSVN's Settings"
msgstr ""

#. (primary)
msgid "settings"
msgstr ""

#. (para)
msgid ""
"To find out what the different settings are for, just leave your mouse "
"pointer a second on the editbox/checkbox... and a helpful tooltip will "
"popup."
msgstr ""

#. (title)
msgid "General Settings"
msgstr ""

#. (primary)
msgid "sounds"
msgstr "zërat"

#. (title)
msgid "The Settings Dialog, General Page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> This dialog allows you to specify your preferred language, "
"and the Subversion-specific settings."
msgstr ""

#. (term)
msgid "Language"
msgstr "Gjuha"

#. (para)
msgid "Selects your user interface language. What else did you expect?"
msgstr ""

#. (term)
msgid "Check for updates"
msgstr "Kontrollo për freskime"

#. (para)
msgid ""
"TortoiseSVN will contact its download site periodically to see if there is a"
" newer version of the program available. If there is it will show a "
"notification link in the commit dialog. Use <guibutton>Check now</guibutton>"
" if you want an answer right away. The new version will not be downloaded; "
"you simply receive an information dialog telling you that the new version is"
" available."
msgstr ""

#. (term)
msgid "System sounds"
msgstr "Zërat e sistemit"

#. (para)
msgid "Error"
msgstr "Gabim"

#. (para)
msgid "Notice"
msgstr "Shënim"

#. (para)
msgid "Warning"
msgstr "Raralajmërim"

#. (para)
msgid ""
"TortoiseSVN has three custom sounds which are installed by default. "
"<placeholder-1/> You can select different sounds (or turn these sounds off "
"completely) using the Windows Control Panel. "
"<guibutton>Configure</guibutton> is a shortcut to the Control Panel."
msgstr ""

#. (term)
msgid "Use Aero Dialogs"
msgstr ""

#. (para)
msgid ""
"On Windows Vista and later systems this controls whether dialogs use the "
"Aero styling."
msgstr ""

#. (term)
msgid "Create Library"
msgstr "Create Library"

#. (para)
msgid ""
"On Windows 7 you can create a Library in which to group working copies which"
" are scattered in various places on your system."
msgstr ""

#. (term)
msgid "Global ignore pattern"
msgstr ""

#. (primary)
msgid "exclude pattern"
msgstr ""

#. (primary)
msgid "global ignore"
msgstr ""

#. (para)
msgid ""
"Global ignore patterns are used to prevent unversioned files from showing up"
" e.g. in the commit dialog. Files matching the patterns are also ignored by "
"an import. Ignore files or directories by typing in the names or extensions."
" Patterns are separated by spaces e.g. <literal>bin obj *.bak *.~?? *.jar "
"*.[Tt]mp</literal>. These patterns should not include any path separators. "
"Note also that there is no way to differentiate between files and "
"directories. Read <xref linkend=\"tsvn-dug-ignore-glob\"/> for more "
"information on the pattern-matching syntax."
msgstr ""

#. (para)
msgid ""
"Note that the ignore patterns you specify here will also affect other "
"Subversion clients running on your PC, including the command line client."
msgstr ""

#. (para)
msgid ""
"If you use the Subversion configuration file to set a <literal>global-"
"ignores</literal> pattern, it will override the settings you make here. The "
"Subversion configuration file is accessed using the "
"<guibutton>Edit</guibutton> as described below."
msgstr ""

#. (para)
msgid ""
"This ignore pattern will affect all your projects. It is not versioned, so "
"it will not affect other users. By contrast you can also use the versioned "
"<literal>svn:ignore</literal> or <literal>svn:global-ignores</literal> "
"property to exclude files or directories from version control. Read <xref "
"linkend=\"tsvn-dug-ignore\"/> for more information."
msgstr ""

#. (term)
msgid "Set file dates to the <quote>last commit time</quote>"
msgstr ""

#. (para)
msgid ""
"This option tells TortoiseSVN to set the file dates to the last commit time "
"when doing a checkout or an update. Otherwise TortoiseSVN will use the "
"current date. If you are developing software it is generally best to use the"
" current date because build systems normally look at the date stamps to "
"decide which files need compiling. If you use <quote>last commit "
"time</quote> and revert to an older file revision, your project may not "
"compile as you expect it to."
msgstr ""

#. (term)
msgid "Subversion configuration file"
msgstr ""

#. (para)
msgid ""
"Use <guibutton>Edit</guibutton> to edit the Subversion configuration file "
"directly. Some settings cannot be modified directly by TortoiseSVN, and need"
" to be set here instead. For more information about the Subversion "
"<filename>config</filename> file see the <ulink url=\"http://svnbook.red-"
"bean.com/en/1.8/svn.advanced.confarea.html\"><citetitle>Runtime "
"Configuration Area</citetitle></ulink>. The section on <ulink "
"url=\"http://svnbook.red-"
"bean.com/en/1.8/svn.advanced.props.html#svn.advanced.props.auto\"><citetitle>Automatic"
" Property Setting</citetitle></ulink> is of particular interest, and that is"
" configured here. Note that Subversion can read configuration information "
"from several places, and you need to know which one takes priority. Refer to"
" <ulink url=\"http://svnbook.red-"
"bean.com/en/1.8/svn.advanced.confarea.html#svn.advanced.confarea.windows-"
"registry\"><citetitle>Configuration and the Windows "
"Registry</citetitle></ulink> to find out more."
msgstr ""

#. (term)
msgid "Apply local modifications to svn:externals when updating"
msgstr ""

#. (para)
msgid ""
"This option tells TortoiseSVN to always apply local modifications to the "
"<literal>svn:externals</literal> property when updating the working copy."
msgstr ""

#. (title)
msgid "Context Menu Settings"
msgstr ""

#. (title)
msgid "The Settings Dialog, Context Menu Page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> This page allows you to specify which of the TortoiseSVN "
"context menu entries will show up in the main context menu, and which will "
"appear in the TortoiseSVN submenu. By default most items are unchecked and "
"appear in the submenu."
msgstr ""

#. (para)
msgid ""
"There is a special case for <guilabel>Get Lock</guilabel>. You can of course"
" promote it to the top level using the list above, but as most files don't "
"need locking this just adds clutter. However, a file with the <literal>svn"
":needs-lock</literal> property needs this action every time it is edited, so"
" in that case it is very useful to have at the top level. Checking the box "
"here means that when a file is selected which has the <literal>svn:needs-"
"lock</literal> property set, <guilabel>Get Lock</guilabel> will always "
"appear at the top level."
msgstr ""

#. (para)
msgid ""
"Most of the time, you won't need the TortoiseSVN context menu, apart for "
"folders that are under version control by Subversion. For non- versioned "
"folders, you only really need the context menu when you want to do a "
"checkout. If you check the option <literal>Hide menus for unversioned "
"paths</literal>, TortoiseSVN will not add its entries to the context menu "
"for unversioned folders. But the entries are added for all items and paths "
"in a versioned folder. And you can get the entries back for unversioned "
"folders by holding the <keycap>Shift</keycap> key down while showing the "
"context menu."
msgstr ""

#. (para)
msgid ""
"If there are some paths on your computer where you just don't want "
"TortoiseSVN's context menu to appear at all, you can list them in the box at"
" the bottom."
msgstr ""

#. (title)
msgid "TortoiseSVN Dialog Settings 1"
msgstr ""

#. (title)
msgid "The Settings Dialog, Dialogs 1 Page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> This dialog allows you to configure some of TortoiseSVN's "
"dialogs the way you like them."
msgstr ""

#. (term)
msgid "Default number of log messages"
msgstr ""

#. (para)
msgid ""
"Limits the number of log messages that TortoiseSVN fetches when you first "
"select <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Show "
"Log</guimenuitem></menuchoice> Useful for slow server connections. You can "
"always use <guibutton>Show All</guibutton> or <guibutton>Next "
"100</guibutton> to get more messages."
msgstr ""

#. (term)
msgid "Font for log messages"
msgstr ""

#. (para)
msgid ""
"Selects the font face and size used to display the log message itself in the"
" middle pane of the Revision Log dialog, and when composing log messages in "
"the Commit dialog."
msgstr ""

#. (term)
msgid "Short date / time format in log messages"
msgstr ""

#. (para)
msgid ""
"If the standard long messages use up too much space on your screen use the "
"short format."
msgstr ""

#. (term)
msgid "Can double click in log list to compare with previous revision"
msgstr ""

#. (para)
msgid ""
"If you frequently find yourself comparing revisions in the top pane of the "
"log dialog, you can use this option to allow that action on double click. It"
" is not enabled by default because fetching the diff is often a long "
"process, and many people prefer to avoid the wait after an accidental double"
" click, which is why this option is not enabled by default."
msgstr ""

#. (term)
msgid "Auto-close"
msgstr "Auto-mbyll"

#. (para)
msgid ""
"TortoiseSVN can automatically close all progress dialogs when the action is "
"finished without error. This setting allows you to select the conditions for"
" closing the dialogs. The default (recommended) setting is <guilabel>Close "
"manually</guilabel> which allows you to review all messages and check what "
"has happened. However, you may decide that you want to ignore some types of "
"message and have the dialog close automatically if there are no critical "
"changes."
msgstr ""

#. (para)
msgid ""
"<guilabel>Auto-close if no merges, adds or deletes</guilabel> means that the"
" progress dialog will close if there were simple updates, but if changes "
"from the repository were merged with yours, or if any files were added or "
"deleted, the dialog will remain open. It will also stay open if there were "
"any conflicts or errors during the operation."
msgstr ""

#. (para)
msgid ""
"<guilabel>Auto-close if no conflicts</guilabel> relaxes the criteria further"
" and will close the dialog even if there were merges, adds or deletes. "
"However, if there were any conflicts or errors, the dialog remains open."
msgstr ""

#. (para)
msgid ""
"<guilabel>Auto-close if no errors</guilabel> always closes the dialog even "
"if there were conflicts. The only condition that keeps the dialog open is an"
" error condition, which occurs when Subversion is unable to complete the "
"task. For example, an update fails because the server is inaccessible, or a "
"commit fails because the working copy is out-of-date."
msgstr ""

#. (term)
msgid "Always close dialogs for local operations"
msgstr "Gjithnjë mbyll dialogjet për veprime lokale"

#. (para)
msgid ""
"Local operations like adding files or reverting changes do not need to "
"contact the repository and complete quickly, so the progress dialog is often"
" of little interest. Select this option if you want the progress dialog to "
"close automatically after these operations, unless there are errors."
msgstr ""

#. (term)
msgid "Use recycle bin when reverting"
msgstr ""

#. (para)
msgid ""
"When you revert local modifications, your changes are discarded. TortoiseSVN"
" gives you an extra safety net by sending the modified file to the recycle "
"bin before bringing back the pristine copy. If you prefer to skip the "
"recycle bin, uncheck this option."
msgstr ""

#. (term)
msgid "Use URL of WC as the default <quote>From:</quote> URL"
msgstr ""

#. (para)
msgid ""
"In the merge dialog, the default behaviour is for the "
"<guilabel>From:</guilabel> URL to be remembered between merges. However, "
"some people like to perform merges from many different points in their "
"hierarchy, and find it easier to start out with the URL of the current "
"working copy. This can then be edited to refer to a parallel path on another"
" branch."
msgstr ""

#. (term)
msgid "Default checkout path"
msgstr ""

#. (para)
msgid ""
"You can specify the default path for checkouts. If you keep all your "
"checkouts in one place, it is useful to have the drive and folder pre-filled"
" so you only have to add the new folder name to the end."
msgstr ""

#. (term)
msgid "Default checkout URL"
msgstr ""

#. (para)
msgid ""
"You can also specify the default URL for checkouts. If you often checkout "
"sub-projects of some very large project, it can be useful to have the URL "
"pre-filled so you only have to add the sub-project name to the end."
msgstr ""

#. (title)
msgid "TortoiseSVN Dialog Settings 2"
msgstr ""

#. (title)
msgid "The Settings Dialog, Dialogs 2 Page"
msgstr ""

#. (term)
msgid "Recurse into unversioned folders"
msgstr ""

#. (para)
msgid ""
"If this box is checked (default state), then whenever the status of an "
"unversioned folder is shown in the <guilabel>Add</guilabel>, "
"<guilabel>Commit</guilabel> or <guilabel>Check for Modifications</guilabel> "
"dialog, every child file and folder is also shown. If you uncheck this box, "
"only the unversioned parent is shown. Unchecking reduces clutter in these "
"dialogs. In that case if you select an unversioned folder for Add, it is "
"added recursively."
msgstr ""

#. (para)
msgid ""
"In the <guilabel>Check for Modifications</guilabel> dialog you can opt to "
"see ignored items. If this box is checked then whenever an ignored folder is"
" found, all child items will be shown as well."
msgstr ""

#. (term)
msgid "Use auto-completion of file paths and keywords"
msgstr ""

#. (para)
msgid ""
"The commit dialog includes a facility to parse the list of filenames being "
"committed. When you type the first 3 letters of an item in the list, the "
"auto-completion box pops up, and you can press Enter to complete the "
"filename. Check the box to enable this feature."
msgstr ""

#. (term)
msgid "Timeout in seconds to stop the auto-completion parsing"
msgstr ""

#. (para)
msgid ""
"The auto-completion parser can be quite slow if there are a lot of large "
"files to check. This timeout stops the commit dialog being held up for too "
"long. If you are missing important auto-completion information, you can "
"extend the timeout."
msgstr ""

#. (term)
msgid ""
"Only use spellchecker when <literal>tsvn:projectlanguage</literal> is set"
msgstr ""

#. (para)
msgid ""
"If you don't wish to use the spellchecker for all commits, check this box. "
"The spellchecker will still be enabled where the project properties require "
"it."
msgstr ""

#. (term)
msgid "Max. items to keep in the log message history"
msgstr ""

#. (para)
msgid ""
"When you type in a log message in the commit dialog, TortoiseSVN stores it "
"for possible re-use later. By default it will keep the last 25 log messages "
"for each repository, but you can customize that number here. If you have "
"many different repositories, you may wish to reduce this to avoid filling "
"your registry."
msgstr ""

#. (para)
msgid ""
"Note that this setting applies only to messages that you type in on this "
"computer. It has nothing to do with the log cache."
msgstr ""

#. (term)
msgid "Select items automatically"
msgstr ""

#. (para)
msgid ""
"The normal behaviour in the commit dialog is for all modified (versioned) "
"items to be selected for commit automatically. If you prefer to start with "
"nothing selected and pick the items for commit manually, uncheck this box."
msgstr ""

#. (term)
msgid "Reopen dialog after commit if items were left uncommitted"
msgstr ""

#. (para)
msgid ""
"This reopens the commit dialog automatically at the same directory after a "
"successful commit. The dialog is reopened only if there still are items left"
" to commit."
msgstr ""

#. (term)
msgid "Contact the repository on startup"
msgstr ""

#. (para)
msgid ""
"The Check for Modifications dialog checks the working copy by default, and "
"only contacts the repository when you click <guibutton>Check "
"repository</guibutton>. If you always want to check the repository, you can "
"use this setting to make that action happen automatically."
msgstr ""

#. (term)
msgid "Show Lock dialog before locking files"
msgstr ""

#. (para)
msgid ""
"When you select one or more files and then use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Lock</guimenuitem></menuchoice>"
" to take out a lock on those files, on some projects it is customary to "
"write a lock message explaining why you have locked the files. If you do not"
" use lock messages, you can uncheck this box to skip that dialog and lock "
"the files immediately."
msgstr ""

#. (para)
msgid ""
"If you use the lock command on a folder, you are always presented with the "
"lock dialog as that also gives you the option to select files for locking."
msgstr ""

#. (para)
msgid ""
"If your project is using the <literal>tsvn:lockmsgminsize</literal> "
"property, you will see the lock dialog regardless of this setting because "
"the project <emphasis>requires</emphasis> lock messages."
msgstr ""

#. (title)
msgid "TortoiseSVN Dialog Settings 3"
msgstr ""

#. (title)
msgid "The Settings Dialog, Dialogs 3 Page"
msgstr ""

#. (term)
msgid "Pre-fetch folders for faster browsing"
msgstr ""

#. (para)
msgid ""
"If this box is checked (default state), then the repository browser fetches "
"information about shown folders in the background. That way as soon as you "
"browse into one of those folders, the information is already available."
msgstr ""

#. (para)
msgid ""
"Some servers however can't handle the multiple requests this causes or when "
"not configured correctly treat so many requests as something bad and start "
"blocking them. In this case you can disable the pre-fetching here."
msgstr ""

#. (term)
msgid "Show externals"
msgstr ""

#. (para)
msgid ""
"If this box is checked (default state), then the repository browser shows "
"files and folders that are included with the "
"<literal>svn:externals</literal> property as normal files and folders, but "
"with an overlay icon to mark them as from an external source."
msgstr ""

#. (para)
msgid ""
"As with the pre-fetch feature explained above, this too can put too much "
"stress on weak servers. In this case you can disable this feature here."
msgstr ""

#. (title)
msgid "TortoiseSVN Colour Settings"
msgstr ""

#. (title)
msgid "The Settings Dialog, Colours Page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> This dialog allows you to configure the text colours used "
"in TortoiseSVN's dialogs the way you like them."
msgstr ""

#. (term)
msgid "Possible or real conflict / obstructed"
msgstr ""

#. (para)
msgid ""
"A conflict has occurred during update, or may occur during merge. Update is "
"obstructed by an existing unversioned file/folder of the same name as a "
"versioned one."
msgstr ""

#. (para)
msgid "This colour is also used for error messages in the progress dialogs."
msgstr ""

#. (term)
msgid "Added files"
msgstr "Skedat e vendosura"

#. (para)
msgid "Items added to the repository."
msgstr ""

#. (term)
msgid "Missing / deleted / replaced"
msgstr ""

#. (para)
msgid ""
"Items deleted from the repository, missing from the working copy, or deleted"
" from the working copy and replaced with another file of the same name."
msgstr ""

#. (term)
msgid "Merged"
msgstr "Bashkuar"

#. (para)
msgid ""
"Changes from the repository successfully merged into the WC without creating"
" any conflicts."
msgstr ""

#. (term)
msgid "Modified / copied"
msgstr ""

#. (para)
msgid ""
"Add with history, or paths copied in the repository. Also used in the log "
"dialog for entries which include copied items."
msgstr ""

#. (term)
msgid "Deleted node"
msgstr "Nyje e grisur"

#. (para)
msgid "An item which has been deleted from the repository."
msgstr ""

#. (term)
msgid "Added node"
msgstr "Nyje e vendosur"

#. (para)
msgid ""
"An item which has been added to the repository, by an add, copy or move "
"operation."
msgstr ""

#. (term)
msgid "Renamed node"
msgstr "Nyje e riemëruar"

#. (para)
msgid "An item which has been renamed within the repository."
msgstr ""

#. (term)
msgid "Replaced node"
msgstr "Nyje e zëvendësuar"

#. (para)
msgid ""
"The original item has been deleted and a new item with the same name "
"replaces it."
msgstr ""

#. (term)
msgid "Filter match"
msgstr ""

#. (para)
msgid ""
"When using filtering in the log dialog, search terms are highlighted in the "
"results using this colour."
msgstr ""

#. (title)
msgid "Revision Graph Settings"
msgstr ""

#. (title)
msgid "The Settings Dialog, Revision Graph Page"
msgstr ""

#. (term)
msgid "Classification Patterns"
msgstr ""

#. (para)
msgid ""
"The revision graph attempts to show a clearer picture of your repository "
"structure by distinguishing between trunk, branches and tags. As there is no"
" such classification built into Subversion, this information is extracted "
"from the path names. The default settings assume that you use the "
"conventional English names as suggested in the Subversion documentation, but"
" of course your usage may vary."
msgstr ""

#. (para)
msgid ""
"Specify the patterns used to recognise these paths in the three boxes "
"provided. The patterns will be matched case-insensitively, but you must "
"specify them in lower case. Wild cards <literal>*</literal> and "
"<literal>?</literal> will work as usual, and you can use "
"<literal>;</literal> to separate multiple patterns. Do not include any extra"
" white space as it will be included in the matching specification."
msgstr ""

#. (term)
msgid "Modify Colors"
msgstr "Ndrysho Ngjyrat"

#. (para)
msgid ""
"Colors are used in the revision graph to indicate the node type, i.e. "
"whether a node is added, deleted, renamed. In order to help pick out node "
"classifications, you can allow the revision graph to blend colors to give an"
" indication of both node type and classification. If the box is checked, "
"blending is used. If the box is unchecked, color is used to indicate node "
"type only. Use the color selection dialog to allocate the specific colors "
"used."
msgstr ""

#. (title)
msgid "Revision Graph Colors"
msgstr ""

#. (title)
msgid "The Settings Dialog, Revision Graph Colors Page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> This page allows you to configure the colors used. Note "
"that the color specified here is the solid color. Most nodes are colored "
"using a blend of the node type color, the background color and optionally "
"the classification color."
msgstr ""

#. (term)
msgid "Deleted Node"
msgstr "Nyje e Grisur"

#. (para)
msgid ""
"Items which have been deleted and not copied anywhere else in the same "
"revision."
msgstr ""

#. (term)
msgid "Added Node"
msgstr "Nyje e Vendosur"

#. (para)
msgid "Items newly added, or copied (add with history)."
msgstr ""

#. (term)
msgid "Renamed Node"
msgstr "Nyje e Riemëruar"

#. (para)
msgid ""
"Items deleted from one location and added in another in the same revision."
msgstr ""

#. (term)
msgid "Modified Node"
msgstr "Nyje e Ndryshuar"

#. (para)
msgid "Simple modifications without any add or delete."
msgstr ""

#. (term)
msgid "Unchanged Node"
msgstr "Nyje e Pandryshuar"

#. (para)
msgid ""
"May be used to show the revision used as the source of a copy, even when no "
"change (to the item being graphed) took place in that revision."
msgstr ""

#. (term)
msgid "HEAD node"
msgstr "HEAD nyje"

#. (para)
msgid "Current HEAD revision in the repository."
msgstr ""

#. (term)
msgid "WC Node"
msgstr "WC Nyje"

#. (para)
msgid ""
"If you opt to show an extra node for your modified working copy, attached to"
" its last-commit revision on the graph, use this color."
msgstr ""

#. (term)
msgid "WC Node Border"
msgstr "Korniza e WC Nyjes"

#. (para)
msgid ""
"If you opt to show whether the working copy is modified, use this color "
"border on the WC node when modifications are found."
msgstr ""

#. (term)
msgid "Tag Nodes"
msgstr ""

#. (para)
msgid "Nodes classified as tags may be blended with this color."
msgstr ""

#. (term)
msgid "Trunk Nodes"
msgstr ""

#. (para)
msgid "Nodes classified as trunk may be blended with this color."
msgstr ""

#. (term)
msgid "Folded Tag Markers"
msgstr ""

#. (para)
msgid ""
"If you use tag folding to save space, tags are marked on the copy source "
"using a block in this color."
msgstr ""

#. (term)
msgid "Selected Node Markers"
msgstr ""

#. (para)
msgid ""
"When you left click on a node to select it, the marker used to indicate "
"selection is a block in this color."
msgstr ""

#. (term)
msgid "Stripes"
msgstr ""

#. (para)
msgid ""
"These colors are used when the graph is split into sub-trees and the "
"background is colored in alternating stripes to help pick out the separate "
"trees."
msgstr ""

#. (title)
msgid "Icon Overlay Settings"
msgstr ""

#. (title)
msgid "The Settings Dialog, Icon Overlays Page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> This page allows you to choose the items for which "
"TortoiseSVN will display icon overlays."
msgstr ""

#. (term)
msgid "Default"
msgstr ""

#. (para)
msgid ""
"Caches all status information in a separate process "
"(<filename>TSVNCache.exe</filename>). That process watches all drives for "
"changes and fetches the status again if files inside a working copy get "
"modified. The process runs with the least possible priority so other "
"programs don't get hogged because of it. That also means that the status "
"information is not <emphasis>real time</emphasis> but it can take a few "
"seconds for the overlays to change."
msgstr ""

#. (para)
msgid ""
"Advantage: the overlays show the status recursively, i.e. if a file deep "
"inside a working copy is modified, all folders up to the working copy root "
"will also show the modified overlay. And since the process can send "
"notifications to the shell, the overlays on the left tree view usually "
"change too."
msgstr ""

#. (para)
msgid ""
"Disadvantage: the process runs constantly, even if you're not working on "
"your projects. It also uses around 10-50 MB of RAM depending on number and "
"size of your working copies."
msgstr ""

#. (term)
msgid "Shell"
msgstr "Windows shell"

#. (para)
msgid ""
"Caching is done directly inside the shell extension dll, but only for the "
"currently visible folder. Each time you navigate to another folder, the "
"status information is fetched again."
msgstr ""

#. (para)
msgid ""
"Advantage: needs only very little memory (around 1 MB of RAM) and can show "
"the status in <emphasis>real time</emphasis>."
msgstr ""

#. (para)
msgid ""
"Disadvantage: Since only one folder is cached, the overlays don't show the "
"status recursively. For big working copies, it can take more time to show a "
"folder in explorer than with the default cache. Also the mime-type column is"
" not available."
msgstr ""

#. (term)
msgid "None"
msgstr "Asnjë"

#. (para)
msgid ""
"With this setting, the TortoiseSVN does not fetch the status at all in "
"Explorer. Because of that, files don't get an overlay and folders only get a"
" 'normal' overlay if they're versioned. No other overlays are shown, and no "
"extra columns are available either."
msgstr ""

#. (para)
msgid ""
"Advantage: uses absolutely no additional memory and does not slow down the "
"Explorer at all while browsing."
msgstr ""

#. (para)
msgid ""
"Disadvantage: Status information of files and folders is not shown in "
"Explorer. To see if your working copies are modified, you have to use the "
"<quote>Check for modifications</quote> dialog."
msgstr ""

#. (para)
msgid ""
"Since it takes quite a while to fetch the status of a working copy, "
"TortoiseSVN uses a cache to store the status so the explorer doesn't get "
"hogged too much when showing the overlays. You can choose which type of "
"cache TortoiseSVN should use according to your system and working copy size "
"here: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"By default, overlay icons and context menus will appear in all open/save "
"dialogs as well as in Windows Explorer. If you want them to appear "
"<emphasis>only</emphasis> in Windows Explorer, check the <guilabel>Show "
"overlays and context menu only in explorer</guilabel> box."
msgstr ""

#. (para)
msgid ""
"You can also choose to mark folders as modified if they contain unversioned "
"items. This could be useful for reminding you that you have created new "
"files which are not yet versioned. This option is only available when you "
"use the <emphasis>default</emphasis> status cache option (see below)."
msgstr ""

#. (para)
msgid ""
"The next group allows you to select which classes of storage should show "
"overlays. By default, only hard drives are selected. You can even disable "
"all icon overlays, but where's the fun in that?"
msgstr ""

#. (para)
msgid ""
"Network drives can be very slow, so by default icons are not shown for "
"working copies located on network shares."
msgstr ""

#. (para)
msgid ""
"USB Flash drives appear to be a special case in that the drive type is "
"identified by the device itself. Some appear as fixed drives, and some as "
"removable drives."
msgstr ""

#. (para)
msgid ""
"The <guilabel>Exclude Paths</guilabel> are used to tell TortoiseSVN those "
"paths for which it should <emphasis>not</emphasis> show icon overlays and "
"status columns. This is useful if you have some very big working copies "
"containing only libraries which you won't change at all and therefore don't "
"need the overlays, or if you only want TortoiseSVN to look in specific "
"folders."
msgstr ""

#. (para)
msgid ""
"Any path you specify here is assumed to apply recursively, so none of the "
"child folders will show overlays either. If you want to exclude "
"<emphasis>only</emphasis> the named folder, append <literal>?</literal> "
"after the path."
msgstr ""

#. (para)
msgid ""
"The same applies to the <guilabel>Include Paths</guilabel>. Except that for "
"those paths the overlays are shown even if the overlays are disabled for "
"that specific drive type, or by an exclude path specified above."
msgstr ""

#. (para)
msgid ""
"Users sometimes ask how these three settings interact. For any given path "
"check the include and exclude lists, seeking upwards through the directory "
"structure until a match is found. When the first match is found, obey that "
"include or exclude rule. If there is a conflict, a single directory spec "
"takes precedence over a recursive spec, then inclusion takes precedence over"
" exclusion."
msgstr ""

#. (para)
msgid ""
"An example will help here: <screen>\n"
"Exclude:\n"
"       C:\n"
"       C:\\develop\\?\n"
"       C:\\develop\\tsvn\\obj\n"
"       C:\\develop\\tsvn\\bin\n"
"\n"
"Include:\n"
"       C:\\develop\n"
"</screen> These settings disable icon overlays for the C: drive, except for <literal>c:\\develop</literal>. All projects below that directory will show overlays, except the <literal>c:\\develop</literal> folder itself, which is specifically ignored. The high-churn binary folders are also excluded."
msgstr ""

#. (para)
msgid ""
"TSVNCache.exe also uses these paths to restrict its scanning. If you want it"
" to look only in particular folders, disable all drive types and include "
"only the folders you specifically want to be scanned."
msgstr ""

#. (title)
msgid "Exclude <literal>SUBST</literal> Drives"
msgstr ""

#. (primary)
msgid "SUBST drives"
msgstr ""

#. (para)
msgid ""
"It is often convenient to use a <literal>SUBST</literal> drive to access your working copies, e.g. using the command <screen>\n"
"subst T: C:\\TortoiseSVN\\trunk\\doc\n"
"</screen> However this can cause the overlays not to update, as <literal>TSVNCache</literal> will only receive one notification when a file changes, and that is normally for the original path. This means that your overlays on the <literal>subst</literal> path may never be updated."
msgstr ""

#. (para)
msgid ""
"An easy way to work around this is to exclude the original path from showing"
" overlays, so that the overlays show up on the <literal>subst</literal> path"
" instead."
msgstr ""

#. (para)
msgid ""
"Sometimes you will exclude areas that contain working copies, which saves "
"TSVNCache from scanning and monitoring for changes, but you still want a "
"visual indication that a folder contains a working copy. The <guilabel>Show "
"excluded root folders as 'normal'</guilabel> checkbox allows you to do this."
" With this option, working copy root folders in any excluded area (drive "
"type not checked, or specifically excluded) will show up as normal and up-"
"to-date, with a green check mark. This reminds you that you are looking at a"
" working copy, even though the folder overlays may not be correct. Files do "
"not get an overlay at all. Note that the context menus still work, even "
"though the overlays are not shown."
msgstr ""

#. (para)
msgid ""
"As a special exception to this, drives <literal>A:</literal> and "
"<literal>B:</literal> are never considered for the <guilabel>Show excluded "
"folders as 'normal'</guilabel> option. This is because Windows is forced to "
"look on the drive, which can result in a delay of several seconds when "
"starting Explorer, even if your PC does have a floppy drive."
msgstr ""

#. (title)
msgid "Icon Set Selection"
msgstr ""

#. (title)
msgid "The Settings Dialog, Icon Set Page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> You can change the overlay icon set to the one you like "
"best. Note that if you change overlay set, you may have to restart your "
"computer for the changes to take effect."
msgstr ""

#. (title)
msgid "Enabled Overlay Handlers"
msgstr ""

#. (title)
msgid "The Settings Dialog, Icon Handlers Page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> Because the number of overlays available is severely "
"restricted, you can choose to disable some handlers to ensure that the ones "
"you want will be loaded. Because TortoiseSVN uses the common "
"TortoiseOverlays component which is shared with other Tortoise clients (e.g."
" TortoiseCVS, TortoiseHg) this setting will affect those clients too."
msgstr ""

#. (title)
msgid "Network Settings"
msgstr ""

#. (primary)
msgid "proxy server"
msgstr ""

#. (title)
msgid "The Settings Dialog, Network Page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> Here you can configure your proxy server, if you need one "
"to get through your company's firewall."
msgstr ""

#. (para)
msgid ""
"If you need to set up per-repository proxy settings, you will need to use "
"the Subversion <filename>servers</filename> file to configure this. Use "
"<guibutton>Edit</guibutton> to get there directly. Consult the <ulink "
"url=\"http://svnbook.red-"
"bean.com/en/1.8/svn.advanced.confarea.html\"><citetitle>Runtime "
"Configuration Area</citetitle></ulink> for details on how to use this file."
msgstr ""

#. (para)
msgid ""
"You can also specify which program TortoiseSVN should use to establish a "
"secure connection to a svn+ssh repository. We recommend that you use "
"TortoisePlink.exe. This is a version of the popular Plink program, and is "
"included with TortoiseSVN, but it is compiled as a Windowless app, so you "
"don't get a DOS box popping up every time you authenticate."
msgstr ""

#. (para)
msgid ""
"You must specify the full path to the executable. For TortoisePlink.exe this is the standard TortoiseSVN bin directory. Use the <guibutton>Browse</guibutton> button to help locate it. Note that if the path contains spaces, you must enclose it in quotes, e.g. <screen>\n"
"\"C:\\Program Files\\TortoiseSVN\\bin\\TortoisePlink.exe\"\n"
"</screen>"
msgstr ""

#. (para)
msgid ""
"One side-effect of not having a window is that there is nowhere for any "
"error messages to go, so if authentication fails you will simply get a "
"message saying something like <quote>Unable to write to standard "
"output</quote>. For this reason we recommend that you first set up using "
"standard Plink. When everything is working, you can use TortoisePlink with "
"exactly the same parameters."
msgstr ""

#. (para)
msgid ""
"TortoisePlink does not have any documentation of its own because it is just "
"a minor variant of Plink. Find out about command line parameters from the "
"<ulink "
"url=\"http://www.chiark.greenend.org.uk/~sgtatham/putty/\"><citetitle>PuTTY "
"website</citetitle></ulink>."
msgstr ""

#. (para)
msgid ""
"To avoid being prompted for a password repeatedly, you might also consider "
"using a password caching tool such as Pageant. This is also available for "
"download from the PuTTY website."
msgstr ""

#. (para)
msgid ""
"Finally, setting up SSH on server and clients is a non-trivial process which"
" is beyond the scope of this help file. However, you can find a guide in the"
" TortoiseSVN FAQ listed under <ulink "
"url=\"http://tortoisesvn.net/ssh_howto\"><citetitle>Subversion/TortoiseSVN "
"SSH How-To</citetitle></ulink>."
msgstr ""

#. (title)
msgid "External Program Settings"
msgstr ""

#. (title)
msgid "The Settings Dialog, Diff Viewer Page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> Here you can define your own diff/merge programs that "
"TortoiseSVN should use. The default setting is to use TortoiseMerge which is"
" installed alongside TortoiseSVN."
msgstr ""

#. (para)
msgid ""
"Read <xref linkend=\"tsvn-dug-diff-tools\"/> for a list of some of the "
"external diff/merge programs that people are using with TortoiseSVN."
msgstr ""

#. (title)
msgid "Diff Viewer"
msgstr ""

#. (para)
msgid "The original file without your changes"
msgstr ""

#. (para)
#. (para)
msgid "The window title for the base file"
msgstr ""

#. (para)
#. (para)
msgid "The window title for the base file, without quotes"
msgstr ""

#. (para)
msgid "Your own file, with your changes"
msgstr ""

#. (para)
#. (para)
msgid "The window title for your file"
msgstr ""

#. (para)
#. (para)
msgid "The window title for your file, without quotes"
msgstr ""

#. (para)
msgid "The URL of the original file, if available"
msgstr ""

#. (para)
msgid "The URL of the original file, if available, without quotes"
msgstr ""

#. (para)
msgid "The URL of the second file, if available"
msgstr ""

#. (para)
msgid "The URL of the second file, if available, without quotes"
msgstr ""

#. (para)
msgid "The revision of the original file, if available"
msgstr ""

#. (para)
msgid "The revision of the original file, if available, without quotes"
msgstr ""

#. (para)
msgid "The revision of the second file, if available"
msgstr ""

#. (para)
msgid "The revision of the second file, if available, without quotes"
msgstr ""

#. (para)
msgid "The peg revision, if available"
msgstr ""

#. (para)
msgid "The peg revision, if available, without quotes"
msgstr ""

#. (para)
msgid "The name of the conflicted file"
msgstr ""

#. (para)
msgid "The name of the conflicted file, without quotes"
msgstr ""

#. (para)
msgid ""
"An external diff program may be used for comparing different revisions of "
"files. The external program will need to obtain the filenames from the "
"command line, along with any other command line options. TortoiseSVN uses "
"substitution parameters prefixed with <literal>%</literal>. When it "
"encounters one of these it will substitute the appropriate value. The order "
"of the parameters will depend on the Diff program you use. <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"The window titles are not pure filenames. TortoiseSVN treats that as a name "
"to display and creates the names accordingly. So e.g. if you're doing a diff"
" from a file in revision 123 with a file in your working copy, the names "
"will be <filename>filename : revision 123</filename> and <filename>filename "
": working copy</filename>."
msgstr ""

#. (para)
msgid ""
"For example, with ExamDiff Pro: <screen>\n"
"C:\\Path-To\\ExamDiff.exe %base %mine --left_display_name:%bname\n"
"    --right_display_name:%yname\n"
"</screen> or with KDiff3: <screen>\n"
"C:\\Path-To\\kdiff3.exe %base %mine --L1 %bname --L2 %yname\n"
"</screen> or with WinMerge: <screen>\n"
"C:\\Path-To\\WinMerge.exe -e -ub -dl %bname -dr %yname %base %mine\n"
"</screen> or with Araxis: <screen>\n"
"C:\\Path-To\\compare.exe /max /wait /title1:%bname /title2:%yname\n"
"    %base %mine\n"
"</screen> or with UltraCompare: <screen>\n"
"C:\\Path-To\\uc.exe %base %mine -title1 %bname -title2 %yname\n"
"</screen> or with DiffMerge: <screen>\n"
"C:\\Path-To\\DiffMerge.exe -nosplash -t1=%bname -t2=%yname %base %mine\n"
"</screen>"
msgstr ""

#. (para)
msgid ""
"If you use the <literal>svn:keywords</literal> property to expand keywords, "
"and in particular the <emphasis>revision</emphasis> of a file, then there "
"may be a difference between files which is purely due to the current value "
"of the keyword. Also if you use <literal>svn:eol-style = native</literal> "
"the BASE file will have pure <literal>LF</literal> line endings whereas your"
" file will have <literal>CR-LF</literal> line endings. TortoiseSVN will "
"normally hide these differences automatically by first parsing the BASE file"
" to expand keywords and line endings before doing the diff operation. "
"However, this can take a long time with large files. If <guilabel>Convert "
"files when diffing against BASE</guilabel> is unchecked then TortoiseSVN "
"will skip pre-processing the files."
msgstr ""

#. (para)
msgid ""
"You can also specify a different diff tool to use on Subversion properties. "
"Since these tend to be short simple text strings, you may want to use a "
"simpler more compact viewer."
msgstr ""

#. (para)
msgid ""
"If you have configured an alternate diff tool, you can access TortoiseMerge "
"<emphasis>and</emphasis> the third party tool from the context menus. "
"<menuchoice><guimenu>Context "
"menu</guimenu><guimenuitem>Diff</guimenuitem></menuchoice> uses the primary "
"diff tool, and <keycap>Shift</keycap>+ <menuchoice><guimenu>Context "
"menu</guimenu><guimenuitem>Diff</guimenuitem></menuchoice> uses the "
"secondary diff tool."
msgstr ""

#. (para)
msgid ""
"At the bottom of the dialog you can configure a viewer program for unified-"
"diff files (patch files). No parameters are required. The "
"<guilabel>Default</guilabel> setting is to use TortoiseUDiff which is "
"installed alongside TortoiseSVN, and colour-codes the added and removed "
"lines."
msgstr ""

#. (para)
msgid ""
"Since Unified Diff is just a text format, you can use your favourite text "
"editor if you prefer."
msgstr ""

#. (title)
msgid "Merge Tool"
msgstr "Bashko Mjetet"

#. (para)
msgid "the original file without your or the others changes"
msgstr ""

#. (para)
msgid "your own file, with your changes"
msgstr ""

#. (para)
msgid "the file as it is in the repository"
msgstr ""

#. (para)
msgid "The window title for the file in the repository"
msgstr ""

#. (para)
msgid "The window title for the file in the repository, without quotes"
msgstr ""

#. (para)
msgid "the conflicted file, the result of the merge operation"
msgstr ""

#. (para)
msgid "The window title for the merged file"
msgstr "Titulli i dritares për skedën e bashkuar"

#. (para)
msgid "The window title for the merged file, without quotes"
msgstr ""

#. (para)
msgid ""
"The name of the file. This is an empty string if two different files are "
"diffed instead of two states of the same file."
msgstr ""

#. (para)
msgid "The name of the file, without quotes"
msgstr ""

#. (para)
msgid ""
"An external merge program used to resolve conflicted files. Parameter "
"substitution is used in the same way as with the Diff Program. "
"<placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"For example, with Perforce Merge: <screen>\n"
"C:\\Path-To\\P4Merge.exe %base %theirs %mine %merged\n"
"</screen> or with KDiff3: <screen>\n"
"C:\\Path-To\\kdiff3.exe %base %mine %theirs -o %merged\n"
"    --L1 %bname --L2 %yname --L3 %tname\n"
"</screen> or with Araxis: <screen>\n"
"C:\\Path-To\\compare.exe /max /wait /3 /title1:%tname /title2:%bname\n"
"    /title3:%yname %theirs %base %mine %merged /a2\n"
"</screen> or with WinMerge (2.8 or later): <screen>\n"
"C:\\Path-To\\WinMerge.exe %merged\n"
"</screen> or with DiffMerge: <screen>\n"
"C:\\Path-To\\DiffMerge.exe -caption=%mname -result=%merged -merge\n"
"    -nosplash -t1=%yname -t2=%bname -t3=%tname %mine %base %theirs\n"
"</screen>"
msgstr ""

#. (title)
msgid "Diff/Merge Advanced Settings"
msgstr ""

#. (title)
msgid "The Settings Dialog, Diff/Merge Advanced Dialog"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> In the advanced settings, you can define a different diff "
"and merge program for every file extension. For instance you could associate"
" Photoshop as the <quote>Diff</quote> Program for <filename>.jpg</filename> "
"files :-) You can also associate the <literal>svn:mime-type</literal> "
"property with a diff or merge program."
msgstr ""

#. (para)
msgid ""
"To associate using a file extension, you need to specify the extension. Use "
"<literal>.bmp</literal> to describe Windows bitmap files. To associate using"
" the <literal>svn:mime-type</literal> property, specify the mime type, "
"including a slash, for example <literal>text/xml</literal>."
msgstr ""

#. (title)
msgid "Saved Data Settings"
msgstr ""

#. (title)
msgid "The Settings Dialog, Saved Data Page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> For your convenience, TortoiseSVN saves many of the "
"settings you use, and remembers where you have been lately. If you want to "
"clear out that cache of data, you can do it here."
msgstr ""

#. (term)
msgid "URL history"
msgstr "Historia e URL-së"

#. (para)
msgid ""
"Whenever you checkout a working copy, merge changes or use the repository "
"browser, TortoiseSVN keeps a record of recently used URLs and offers them in"
" a combo box. Sometimes that list gets cluttered with outdated URLs so it is"
" useful to flush it out periodically."
msgstr ""

#. (para)
msgid ""
"If you want to remove a single item from one of the combo boxes you can do "
"that in-place. Just click on the arrow to drop the combo box down, move the "
"mouse over the item you want to remove and type <keycap>Shift+Del</keycap>."
msgstr ""

#. (term)
msgid "Log messages (Input dialog)"
msgstr ""

#. (para)
msgid ""
"TortoiseSVN stores recent commit log messages that you enter. These are "
"stored per repository, so if you access many repositories this list can grow"
" quite large."
msgstr ""

#. (term)
msgid "Log messages (Show log dialog)"
msgstr ""

#. (para)
msgid ""
"TortoiseSVN caches log messages fetched by the Show Log dialog to save time "
"when you next show the log. If someone else edits a log message and you "
"already have that message cached, you will not see the change until you "
"clear the cache. Log message caching is enabled on the <guilabel>Log "
"Cache</guilabel> tab."
msgstr ""

#. (term)
msgid "Dialog sizes and positions"
msgstr ""

#. (para)
msgid "Many dialogs remember the size and screen position that you last used."
msgstr ""

#. (term)
msgid "Authentication data"
msgstr "Të dhënat e vërtetimit"

#. (para)
msgid ""
"When you authenticate with a Subversion server, the username and password "
"are cached locally so you don't have to keep entering them. You may want to "
"clear this for security reasons, or because you want to access the "
"repository under a different username ... does John know you are using his "
"PC?"
msgstr ""

#. (para)
msgid ""
"If you want to clear authentication data for one particular server only, use"
" the <guibutton>Clear...</guibutton> instead of the <guibutton>Clear "
"all</guibutton> button."
msgstr ""

#. (term)
msgid "Action log"
msgstr "Veprim shenimesh"

#. (para)
msgid ""
"TortoiseSVN keeps a log of everything written to its progress dialogs. This "
"can be useful when, for example, you want to check what happened in a recent"
" update command."
msgstr ""

#. (para)
msgid ""
"The log file is limited in length and when it grows too big the oldest "
"content is discarded. By default 4000 lines are kept, but you can customize "
"that number."
msgstr ""

#. (para)
msgid "From here you can view the log file content, and also clear it."
msgstr ""

#. (title)
msgid "Log Caching"
msgstr ""

#. (primary)
msgid "log cache"
msgstr ""

#. (title)
msgid "The Settings Dialog, Log Cache Page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> This dialog allows you to configure the log caching feature"
" of TortoiseSVN, which retains a local copy of log messages and changed "
"paths to avoid time-consuming downloads from the server. Using the log cache"
" can dramatically speed up the log dialog and the revision graph. Another "
"useful feature is that the log messages can still be accessed when offline."
msgstr ""

#. (term)
msgid "Enable log caching"
msgstr ""

#. (para)
msgid ""
"Enables log caching whenever log data is requested. If checked, data will be"
" retrieved from the cache when available, and any messages not in the cache "
"will be retrieved from the server and added to the cache."
msgstr ""

#. (para)
msgid ""
"If caching is disabled, data will always be retrieved directly from the "
"server and not stored locally."
msgstr ""

#. (term)
msgid "Allow ambiguous URLs"
msgstr ""

#. (para)
msgid ""
"Occasionally you may have to connect to a server which uses the same URL for"
" all repositories. Older versions of <literal>svnbridge</literal> would do "
"this. If you need to access such repositories you will have to check this "
"option. If you don't, leave it unchecked to improve performance."
msgstr ""

#. (term)
msgid "Allow ambiguous UUIDs"
msgstr ""

#. (para)
msgid ""
"Some hosting services give all their repositories the same UUID. You may "
"even have done this yourself by copying a repository folder to create a new "
"one. For all sorts of reasons this is a bad idea - a UUID should be "
"<emphasis>unique</emphasis>. However, the log cache will still work in this "
"situation if you check this box. If you don't need it, leave it unchecked to"
" improve performance."
msgstr ""

#. (term)
msgid "If the repository cannot be contacted"
msgstr ""

#. (para)
msgid ""
"If you are working offline, or if the repository server is down, the log "
"cache can still be used to supply log messages already held in the cache. Of"
" course the cache may not be up-to-date, so there are options to allow you "
"to select whether this feature should be used."
msgstr ""

#. (para)
msgid ""
"When log data is being taken from the cache without contacting the server, "
"the dialog using those message will show the offline state in its title bar."
msgstr ""

#. (term)
msgid "Timeout before updating the HEAD revision"
msgstr ""

#. (para)
msgid ""
"When you invoke the log dialog you will normally want to contact the server "
"to check for any newer log messages. If the timeout set here is non-zero "
"then the server will only be contacted when the timeout has elapsed since "
"the last time contact. This can reduce server round-trips if you open the "
"log dialog frequently and the server is slow, but the data shown may not be "
"completely up-to-date. If you want to use this feature we suggest using a "
"value of 300 (5 minutes) as a compromise."
msgstr ""

#. (term)
msgid "Days of inactivity until small caches get removed"
msgstr ""

#. (para)
msgid ""
"If you browse around a lot of repositories you will accumulate a lot of log "
"caches. If you're not actively using them, the cache will not grow very big,"
" so TortoiseSVN purges them after a set time by default. Use this item to "
"control cache purging."
msgstr ""

#. (term)
msgid "Maximum size of removed inactive caches"
msgstr ""

#. (para)
msgid ""
"Larger caches are more expensive to reacquire, so TortoiseSVN only purges "
"small caches. Fine tune the threshold with this value."
msgstr ""

#. (term)
msgid "Maximum number of tool failures before cache removal"
msgstr ""

#. (para)
msgid ""
"Occasionally something goes wrong with the caching and causes a crash. If "
"this happens the cache is normally deleted automatically to prevent a "
"recurrence of the problem. If you use the less stable nightly build you may "
"opt to keep the cache anyway."
msgstr ""

#. (title)
msgid "Cached Repositories"
msgstr ""

#. (para)
msgid ""
"On this page you can see a list of the repositories that are cached locally,"
" and the space used for the cache. If you select one of the repositories you"
" can then use the buttons underneath."
msgstr ""

#. (para)
msgid ""
"Click on the <guibutton>Update</guibutton> to completely refresh the cache "
"and fill in any holes. For a large repository this could be very time "
"consuming, but useful if you are about to go offline and want the best "
"available cache."
msgstr ""

#. (para)
msgid ""
"Click on the <guibutton>Export</guibutton> button to export the entire cache"
" as a set of CSV files. This could be useful if you want to process the log "
"data using an external program, although it is mainly useful to the "
"developers."
msgstr ""

#. (para)
msgid ""
"Click on <guibutton>Delete</guibutton> to remove all cached data for the "
"selected repositories. This does not disable caching for the repository so "
"the next time you request log data, a new cache will be created."
msgstr ""

#. (title)
msgid "Log Cache Statistics"
msgstr ""

#. (title)
msgid "The Settings Dialog, Log Cache Statistics"
msgstr ""

#. (term)
msgid "RAM"
msgstr "RAM"

#. (para)
msgid "The amount of memory required to service this cache."
msgstr ""

#. (term)
msgid "Disk"
msgstr "Disku"

#. (para)
msgid ""
"The amount of disk space used for the cache. Data is compressed, so disk "
"usage is generally fairly modest."
msgstr ""

#. (term)
msgid "Connection"
msgstr "Lidhja"

#. (para)
msgid ""
"Shows whether the repository was available last time the cache was used."
msgstr ""

#. (term)
msgid "Last update"
msgstr "Përditësimi i fundit"

#. (para)
msgid "The last time the cache content was changed."
msgstr ""

#. (term)
msgid "Last head update"
msgstr ""

#. (para)
msgid "The last time we requested the HEAD revision from the server."
msgstr ""

#. (term)
msgid "Authors"
msgstr "Autorët"

#. (para)
msgid "The number of different authors with messages recorded in the cache."
msgstr ""

#. (term)
msgid "Paths"
msgstr "Rrugët"

#. (para)
msgid ""
"The number of paths listed, as you would see using <literal>svn log "
"-v</literal>."
msgstr ""

#. (term)
msgid "Skip ranges"
msgstr ""

#. (para)
msgid ""
"The number of revision ranges which we have not fetched, simply because they"
" haven't been requested. This is a measure of the number of holes in the "
"cache."
msgstr ""

#. (term)
msgid "Max revision"
msgstr ""

#. (para)
msgid "The highest revision number stored in the cache."
msgstr ""

#. (term)
msgid "Revision count"
msgstr ""

#. (para)
msgid ""
"The number of revisions stored in the cache. This is another measure of "
"cache completeness."
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> Click on the <guibutton>Details</guibutton> button to see "
"detailed statistics for a particular cache. Many of the fields shown here "
"are mainly of interest to the developers of TortoiseSVN, so they are not all"
" described in detail. <placeholder-2/>"
msgstr ""

#. (title)
msgid "Client Side Hook Scripts"
msgstr ""

#. (primary)
msgid "client hooks"
msgstr ""

#. (title)
msgid "The Settings Dialog, Hook Scripts Page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> This dialog allows you to set up hook scripts which will be"
" executed automatically when certain Subversion actions are performed. As "
"opposed to the hook scripts explained in <xref linkend=\"tsvn-repository-"
"hooks\"/>, these scripts are executed locally on the client."
msgstr ""

#. (para)
msgid ""
"One application for such hooks might be to call a program like "
"<literal>SubWCRev.exe</literal> to update version numbers after a commit, "
"and perhaps to trigger a rebuild."
msgstr ""

#. (para)
msgid ""
"Note that you can also specify such hook scripts using special properties on"
" your working copy. See the section <xref linkend=\"tsvn-dug-propertypage-"
"tsvn-props\"/> for details."
msgstr ""

#. (title)
msgid "The Settings Dialog, Configure Hook Scripts"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> To add a new hook script, simply click "
"<guibutton>Add</guibutton> and fill in the details."
msgstr ""

#. (term)
#. (term)
msgid "Start-commit"
msgstr ""

#. (para)
msgid ""
"Called before the commit dialog is shown. You might want to use this if the "
"hook modifies a versioned file and affects the list of files that need to be"
" committed and/or commit message. However you should note that because the "
"hook is called at an early stage, the full list of objects selected for "
"commit is not available."
msgstr ""

#. (term)
#. (term)
msgid "Manual Pre-commit"
msgstr ""

#. (para)
msgid ""
"If this is specified, the commit dialog shows a button <guibutton>Run "
"Hook</guibutton> which when clicked runs the specified hook script. The hook"
" script receives a list of all checkec files and folders and the commit "
"message if there was one entered."
msgstr ""

#. (term)
msgid "Check-commit"
msgstr ""

#. (para)
msgid ""
"Called after the user clicks <guibutton>OK</guibutton> in the commit dialog,"
" and before the commit dialog closes. This hook gets a list of all the "
"checked files. If the hook returns an error, the commit dialog stays open."
msgstr ""

#. (para)
msgid ""
"If the returned error message contains paths on newline separated lines, "
"those paths will get selected in the commit dialog after the error message "
"is shown."
msgstr ""

#. (term)
#. (term)
msgid "Pre-commit"
msgstr ""

#. (para)
msgid ""
"Called after the user clicks <guibutton>OK</guibutton> in the commit dialog,"
" and before the actual commit begins. This hook has a list of exactly what "
"will be committed."
msgstr ""

#. (term)
#. (term)
msgid "Post-commit"
msgstr ""

#. (para)
msgid "Called after the commit finishes (whether successful or not)."
msgstr ""

#. (term)
#. (term)
msgid "Start-update"
msgstr "Fillo-përditësimin"

#. (para)
msgid "Called before the update-to-revision dialog is shown."
msgstr ""

#. (term)
#. (term)
msgid "Pre-update"
msgstr "Para-përditësim"

#. (para)
msgid "Called before the actual Subversion update or switch begins."
msgstr ""

#. (term)
#. (term)
msgid "Post-update"
msgstr "Pas-përditësim"

#. (para)
msgid ""
"Called after the update, switch or checkout finishes (whether successful or "
"not)."
msgstr ""

#. (term)
#. (term)
msgid "Pre-connect"
msgstr ""

#. (para)
msgid ""
"Called before an attempt to contact the repository. Called at most once in "
"five minutes."
msgstr ""

#. (para)
msgid ""
"There are currently six types of hook script available <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"A hook is defined for a particular working copy path. You only need to "
"specify the top level path; if you perform an operation in a sub-folder, "
"TortoiseSVN will automatically search upwards for a matching path."
msgstr ""

#. (para)
msgid ""
"Next you must specify the command line to execute, starting with the path to"
" the hook script or executable. This could be a batch file, an executable "
"file or any other file which has a valid windows file association, e.g. a "
"perl script. Note that the script must not be specified using a UNC path as "
"Windows shell execute will not allow such scripts to run due to security "
"restrictions."
msgstr ""

#. (para)
msgid ""
"The command line includes several parameters which get filled in by "
"TortoiseSVN. The parameters passed depend upon which hook is called. Each "
"hook has its own parameters which are passed in the following order: "
"<placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"A path to a temporary file which contains all the paths for which the "
"operation was started. Each path is on a separate line in the temp file."
msgstr ""

#. (para)
msgid ""
"Note that for operations done remotely, e.g. in the repository browser, "
"those paths are not local paths but the urls of the affected items."
msgstr ""

#. (para)
msgid "The depth with which the commit/update is done."
msgstr ""

#. (literal)
msgid "svn_depth_unknown"
msgstr ""

#. (literal)
msgid "svn_depth_exclude"
msgstr "svn_depth_exclude"

#. (literal)
msgid "svn_depth_empty"
msgstr "svn_depth_empty"

#. (literal)
msgid "svn_depth_files"
msgstr "svn_depth_files"

#. (literal)
msgid "svn_depth_immediates"
msgstr "svn_depth_immediates"

#. (literal)
msgid "svn_depth_infinity"
msgstr "svn_depth_infinity"

#. (para)
msgid "Possible values are: <placeholder-1/>"
msgstr "Vlerat e mundshme janë: <placeholder-1/>"

#. (para)
msgid ""
"Path to a file containing the log message for the commit. The file contains "
"the text in UTF-8 encoding. After successful execution of the start-commit "
"hook, the log message is read back, giving the hook a chance to modify it."
msgstr ""

#. (para)
msgid ""
"The repository revision to which the update should be done or after a commit"
" completes."
msgstr ""

#. (para)
msgid ""
"Path to a file containing the error message. If there was no error, the file"
" will be empty."
msgstr ""

#. (para)
msgid ""
"The current working directory with which the script is run. This is set to "
"the common root directory of all affected paths."
msgstr ""

#. (para)
msgid ""
"A path to a temporary file which contains all the paths which were somehow "
"touched by the operation. Each path is on a separate line in the temp file."
msgstr ""

#. (para)
msgid ""
"The meaning of each of these parameters is described here: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"Note that although we have given these parameters names for convenience, you"
" do not have to refer to those names in the hook settings. All parameters "
"listed for a particular hook are always passed, whether you want them or not"
" ;-)"
msgstr ""

#. (para)
msgid ""
"If you want the Subversion operation to hold off until the hook has "
"completed, check <guilabel>Wait for the script to finish</guilabel>."
msgstr ""

#. (para)
msgid ""
"Normally you will want to hide ugly DOS boxes when the script runs, so "
"<guilabel>Hide the script while running</guilabel> is checked by default."
msgstr ""

#. (para)
msgid ""
"Sample client hook scripts can be found in the <literal>contrib</literal> "
"folder in the <ulink "
"url=\"http://tortoisesvn.googlecode.com/svn/trunk/contrib/hook-"
"scripts\"><citetitle>TortoiseSVN repository</citetitle></ulink>. (<xref "
"linkend=\"tsvn-preface-source\"/> explains how to access the repository.)"
msgstr ""

#. (para)
msgid ""
"When debugging hook scripts you may want to echo progress lines to the DOS console, or insert a pause to stop the console window disappearing when the script completes. Because I/O is redirected this will not normally work. However you can redirect input and output explicitly to CON to overcome this. e.g. <screen>\n"
"echo Checking Status &gt; con\n"
"pause &lt; con &gt; con\n"
"</screen>"
msgstr ""

#. (para)
msgid ""
"A small tool is included in the TortoiseSVN installation folder named "
"<literal>ConnectVPN.exe</literal>. You can use this tool configured as a "
"pre-connect hook to connect automatically to your VPN before TortoiseSVN "
"tries to connect to a repository. Just pass the name of the VPN connection "
"as the first parameter to the tool."
msgstr ""

#. (para)
msgid ""
"TortoiseSVN can use a COM plugin to query issue trackers when in the commit "
"dialog. The use of such plugins is described in <xref linkend=\"tsvn-dug-"
"bugtracker-ref\"/>. If your system administrator has provided you with a "
"plugin, which you have already installed and registered, this is the place "
"to specify how it integrates with your working copy."
msgstr ""

#. (title)
msgid "The Settings Dialog, Issue Tracker Integration Page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> Click on <guibutton>Add...</guibutton> to use the plugin "
"with a particular working copy. Here you can specify the working copy path, "
"choose which plugin to use from a drop down list of all registered issue "
"tracker plugins, and any parameters to pass. The parameters will be specific"
" to the plugin, but might include your user name on the issue tracker so "
"that the plugin can query for issues which are assigned to you."
msgstr ""

#. (para)
msgid ""
"This property specifies the COM UUID of the IBugtraqProvider, for example "
"<literal>{91974081-2DC7-4FB1-B3BE-0DE1C8D6CE4E}</literal>. (This example is "
"the UUID of the <ulink "
"url=\"http://code.google.com/p/gurtle/\"><citetitle>Gurtle bugtraq "
"provider</citetitle></ulink>, which is a provider for the <ulink "
"url=\"http://code.google.com/hosting/\"><citetitle>Google "
"Code</citetitle></ulink> issue tracker.)"
msgstr ""

#. (para)
msgid ""
"This is the same as <literal>bugtraq:provideruuid</literal>, but for the "
"64-bit version of the IBugtraqProvider."
msgstr ""

#. (para)
msgid "This property specifies the parameters passed to the IBugtraqProvider."
msgstr ""

#. (para)
msgid ""
"If you want all users to use the same COM plugin for your project, you can "
"specify the plugin also with the properties "
"<literal>bugtraq:provideruuid</literal>, "
"<literal>bugtraq:provideruuid64</literal> and "
"<literal>bugtraq:providerparams</literal>. <placeholder-1/> Please check the"
" documentation of your IBugtraqProvider plugin to find out what to specify "
"in these two properties."
msgstr ""

#. (title)
msgid "TortoiseBlame Settings"
msgstr ""

#. (title)
msgid "The Settings Dialog, TortoiseBlame Page"
msgstr ""

#. (para)
msgid ""
"<placeholder-1/> The settings used by TortoiseBlame are controlled from the "
"main context menu, not directly with TortoiseBlame itself."
msgstr ""

#. (term)
msgid "Colors"
msgstr "Ngjyrat"

#. (para)
msgid ""
"TortoiseBlame can use the background colour to indicate the age of lines in "
"a file. You set the endpoints by specifying the colours for the newest and "
"oldest revisions, and TortoiseBlame uses a linear interpolation between "
"these colours according to the repository revision indicated for each line."
msgstr ""

#. (para)
msgid ""
"You can specify different colours to use for the locator bar. The default is"
" to use strong contrast on the locator bar while keeping the main window "
"background light so that you can still read the text."
msgstr ""

#. (term)
msgid "Font"
msgstr "Shkronja"

#. (para)
msgid ""
"You can select the font used to display the text, and the point size to use."
" This applies both to the file content, and to the author and revision "
"information shown in the left pane."
msgstr ""

#. (term)
msgid "Tabs"
msgstr "Fletët"

#. (para)
msgid ""
"Defines how many spaces to use for expansion when a tab character is found "
"in the file content."
msgstr ""

#. (title)
msgid "Advanced Settings"
msgstr ""

#. (primary)
msgid "registry"
msgstr ""

#. (para)
msgid ""
"A few infrequently used settings are available only in the advanced page of "
"the settings dialog. These settings modify the registry directly and you "
"have to know what each of these settings is used for and what it does. Do "
"not modify these settings unless you are sure you need to change them."
msgstr ""

#. (para)
msgid ""
"Sometimes multiple users use the same account on the same computer. In such "
"situations it's not really wanted to save the authentication data. Setting "
"this value to <literal>false</literal> disables the <literal>save "
"authentication</literal> button in the authentication dialog."
msgstr ""

#. (para)
msgid ""
"If an update adds a new file from the repository which already exists in the"
" local working copy as an unversioned file, the default action is to keep "
"the local file, showing it as a (possibly) modified version of the new file "
"from the repository. If you would prefer TortoiseSVN to create a conflict in"
" such situations, set this value to <literal>false</literal>."
msgstr ""

#. (para)
msgid ""
"As with the explorer, TortoiseSVN shows additional commands if the "
"<keycap>Shift</keycap> key is pressed while the context menu is opened. To "
"force TortoiseSVN to always show those extended commands, set this value to "
"<literal>true</literal>."
msgstr ""

#. (para)
msgid ""
"The minimum amount of chars from which the editor shows an auto-completion "
"popup. The default value is <literal>3</literal>."
msgstr ""

#. (para)
msgid ""
"The auto-completion list shown in the commit message editor displays the "
"names of files listed for commit. To also include these names with "
"extensions removed, set this value to <literal>true</literal>."
msgstr ""

#. (para)
msgid ""
"File externals that are pegged to a specific revision are blocked by default"
" from being selected for a commit. This is because a subsequent update would"
" revert those changes again unless the pegged revision of the external is "
"adjusted."
msgstr ""

#. (para)
msgid ""
"Set this value to <literal>false</literal> in case you still want to commit "
"changes to such external files."
msgstr ""

#. (para)
msgid ""
"If you don't want the explorer to update the status overlays while another "
"TortoiseSVN command is running (e.g. Update, Commit, ...) then set this "
"value to <literal>true</literal>."
msgstr ""

#. (para)
msgid ""
"To add a cache tray icon for the TSVNCache program, set this value to "
"<literal>true</literal>. This is really only useful for developers as it "
"allows you to terminate the program gracefully."
msgstr ""

#. (para)
msgid ""
"The extra columns the TortoiseSVN adds to the details view in Windows "
"Explorer are normally only active in a working copy. If you want those to be"
" accessible everywhere, not just in working copies, set this value to "
"<literal>true</literal>. Note that the extra columns are only available in "
"XP. Vista and later doesn't support that feature any more."
msgstr ""

#. (para)
msgid ""
"You can specify a different location for the Subversion configuration file "
"here. This will affect all TortoiseSVN operations."
msgstr ""

#. (para)
msgid ""
"In most dialogs in TortoiseSVN, you can use <keycap>Ctrl+Enter</keycap> to "
"dismiss the dialog as if you clicked on the OK button. If you don't want "
"this, set this value to <literal>false</literal>."
msgstr ""

#. (para)
msgid ""
"Set this to <literal>true</literal> if you want a dialog to pop up for every"
" command showing the command line used to start TortoiseProc.exe."
msgstr ""

#. (para)
msgid ""
"Set this to <literal>true</literal> if you want TortoiseSVN to print out "
"debug messages during execution. The messages can be captured with special "
"debugging tools only."
msgstr ""

#. (para)
msgid ""
"The default format (value of 0) of dialog titles is <literal>url/path - name"
" of dialog - TortoiseSVN</literal>. If you set this value to 1, the format "
"changes to <literal>name of dialog - url/path - TortoiseSVN</literal>."
msgstr ""

#. (para)
msgid ""
"TortoiseSVN allows you to assign an external diff viewer. Most such viewers,"
" however, are not suited for change blaming (<xref linkend=\"tsvn-dug-blame-"
"diffs\"/>), so you might wish to fall back to TortoiseMerge in this case. To"
" do so, set this value to <literal>true</literal>."
msgstr ""

#. (para)
msgid ""
"Some apps change the case of filenames without notice but those changes "
"aren't really necessary nor wanted. For example a change from "
"<filename>file.txt</filename> to <filename>FILE.TXT</filename> wouldn't "
"bother normal Windows applications, but Subversion is case sensitive in "
"these situations. So TortoiseSVN automatically fixes such case changes."
msgstr ""

#. (para)
msgid ""
"If you don't want TortoiseSVN to automatically fix such case changes for "
"you, you can set this value to <literal>false</literal>."
msgstr ""

#. (para)
msgid ""
"The status list control which is used in various dialogs (e.g., commit, "
"check-for-modifications, add, revert, ...) uses full row selection (i.e., if"
" you select an entry, the full row is selected, not just the first column). "
"This is fine, but the selected row then also covers the background image on "
"the bottom right, which can look ugly. To disable full row select, set this "
"value to <literal>false</literal>."
msgstr ""

#. (para)
msgid ""
"This option determines how the Win7 taskbar icons of the various TortoiseSVN"
" dialogs and windows are grouped together. This option has no effect on "
"Windows XP or Vista!"
msgstr ""

#. (title)
msgid "Taskbar with default grouping"
msgstr ""

#. (para)
msgid ""
"The default value is 0. With this setting, the icons are grouped together by"
" application type. All dialogs from TortoiseSVN are grouped together, all "
"windows from TortoiseMerge are grouped together, ... <placeholder-1/>"
msgstr ""

#. (title)
#. (title)
msgid "Taskbar with repository grouping"
msgstr ""

#. (para)
msgid ""
"If set to 1, then instead of all dialogs in one single group per "
"application, they're grouped together by repository. For example, if you "
"have a log dialog and a commit dialog open for repository "
"<literal>A</literal>, and a check-for-modifications dialog and a log dialog "
"for repository <literal>B</literal>, then there are two application icon "
"groups shown in the Win7 taskbar, one group for each repository. But "
"TortoiseMerge windows are not grouped together with TortoiseSVN dialogs. "
"<placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"If set to 2, then the grouping works as with the setting set to 1, except "
"that TortoiseSVN, TortoiseMerge, TortoiseBlame, TortoiseIDiff and "
"TortoiseUDiff windows are all grouped together. For example, if you have the"
" commit dialog open and then double click on a modified file, the opened "
"TortoiseMerge diff window will be put in the same icon group on the taskbar "
"as the commit dialog icon. <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"If set to 3, then the grouping works as with the setting set to 1, but the "
"grouping isn't done according to the repository but according to the working"
" copy. This is useful if you have all your projects in the same repository "
"but different working copies for each project."
msgstr ""

#. (para)
msgid ""
"If set to 4, then the grouping works as with the setting set to 2, but the "
"grouping isn't done according to the repository but according to the working"
" copy."
msgstr ""

#. (para)
msgid ""
"If this is set to <literal>false</literal>, then every "
"<literal>svn:externals</literal> is shown during an update separately."
msgstr ""

#. (para)
msgid ""
"If it is set to <literal>true</literal> (the default), then update "
"information for externals is only shown if the externals are affected by the"
" update, i.e. changed in some way. Otherwise nothing is shown as with normal"
" files and folders."
msgstr ""

#. (para)
msgid ""
"This has no effect if the option <literal>GroupTaskbarIconsPerRepo</literal>"
" is set to 0 (see above)."
msgstr ""

#. (title)
msgid "Taskbar grouping with repository color overlays"
msgstr ""

#. (para)
msgid ""
"If this option is set to <literal>true</literal>, then every icon on the "
"Win7 taskbar shows a small colored rectangle overlay, indicating the "
"repository the dialogs/windows are used for. <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"By default, TortoiseSVN always runs an update with externals included. This "
"avoids problems with inconsistent working copies. If you have however a lot "
"of externals set, an update can take quite a while. Set this value to "
"<literal>false</literal> to run the default update with externals excluded. "
"To update with externals included, either run the <literal>Update to "
"revision...</literal> dialog or set this value to <literal>true</literal> "
"again."
msgstr ""

#. (para)
msgid ""
"When the log dialog is started from the merge wizard, already merged "
"revisions are shown in gray, but revisions beyond the point where the branch"
" was created are also shown. These revisions are shown in black because "
"those can't be merged."
msgstr ""

#. (para)
msgid ""
"If this option is set to <literal>true</literal> then TortoiseSVN tries to "
"find the revision where the branch was created from and hide all the "
"revisions that are beyond that revision. Since this can take quite a while, "
"this option is disabled by default. Also this option doesn't work with some "
"SVN servers (e.g., Google Code Hosting, see <ulink "
"url=\"http://code.google.com/p/support/issues/detail?id=5471\"><citetitle>issue"
" #5471</citetitle></ulink>)."
msgstr ""

#. (para)
msgid ""
"A format string for the log messages when multiple revisions are selected in"
" the log dialog."
msgstr ""

#. (listitem)
msgid "gets replaced with the revision number text"
msgstr ""

#. (listitem)
msgid "gets replaced with the short log message of the revision"
msgstr ""

#. (para)
msgid ""
"You can use the following placeholders in your format string: "
"<placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"The log dialog shows the revision the working copy path is at in bold. But "
"this requires that the log dialog fetches the status of that path. Since for"
" very big working copies this can take a while, you can set this value to "
"<literal>false</literal> to deactivate this feature."
msgstr ""

#. (para)
msgid ""
"When you merge revisions from another branch, and merge tracking information"
" is available, the log messages from the revisions you merge will be "
"collected to make up a commit log message. A pre-defined string is used to "
"separate the individual log messages of the merged revisions. If you prefer,"
" you can set this to a value containing a separator string of your choice."
msgstr ""

#. (para)
msgid ""
"If you want to show the diff at once for more items than specified with this"
" settings, a warning dialog is shown first. The default is 10."
msgstr ""

#. (para)
msgid ""
"TortoiseSVN checks whether there's a new version available about once a "
"week. If an updated version is found, the commit dialog shows a link control"
" with that info. If you prefer the old behavior back where a dialog pops up "
"notifying you about the update, set this value to <literal>true</literal>."
msgstr ""

#. (para)
msgid ""
"The repository browser tries to fetch the web page that's generated by an "
"SVN server configured with the SVNParentPath directive to get a list of all "
"repositories. To disable that behavior, set this value to "
"<literal>false</literal>."
msgstr ""

#. (para)
msgid ""
"This option enables the use of Direct2D accelerated drawing in the Scintilla"
" control which is used as the edit box in e.g. the commit dialog, and also "
"for the unified diff viewer. With some graphic cards however this sometimes "
"doesn't work properly so that the cursor to enter text isn't always visible."
" If that happens, you can turn this feature off by setting this value to "
"<literal>false</literal>."
msgstr ""

#. (para)
msgid ""
"If you don't want TortoiseSVN to ask you to update the working copy "
"automatically after an <literal>Out of date</literal> error, set this value "
"to <literal>false</literal>."
msgstr ""

#. (para)
msgid ""
"TortoiseSVN uses accelerators for its explorer context menu entries. Since "
"this can lead to doubled accelerators (e.g. the <literal>SVN "
"Commit</literal> has the <keycap>Alt-C</keycap> accelerator, but so does the"
" <literal>Copy</literal> entry of explorer). If you don't want or need the "
"accelerators of the TortoiseSVN entries, set this value to "
"<literal>false</literal>."
msgstr ""

#. (para)
msgid ""
"This can be useful if you use something other than the windows explorer or "
"if you get problems with the context menu displaying incorrectly. Set this "
"value to <literal>false</literal> if you don't want TortoiseSVN to show "
"icons for the shell context menu items. Set this value to "
"<literal>true</literal> to show the icons again."
msgstr ""

#. (para)
msgid ""
"If you don't want TortoiseSVN to show icons for the context menus in its own"
" dialogs, set this value to <literal>false</literal>."
msgstr ""

#. (para)
msgid ""
"The commit and log dialog use styling (e.g. bold, italic) in commit messages"
" (see <xref linkend=\"tsvn-dug-commit-log\"/> for details). If you don't "
"want to do this, set the value to <literal>false</literal>."
msgstr ""

#. (para)
msgid ""
"This value contains the URL from which TortoiseSVN tries to download a text "
"file to find out if there are updates available. This might be useful for "
"company admins who don't want their users to update TortoiseSVN until they "
"approve it."
msgstr ""

#. (para)
msgid ""
"TortoiseSVN checks whether there's a new version available about once a "
"week. If you don't want TortoiseSVN to do this check, set this value to "
"<literal>false</literal>."
msgstr ""

#. (title)
msgid "Exporting TSVN Settings"
msgstr ""

#. (para)
msgid ""
"If you want to export all your client settings to use on another computer "
"you can do so using the Windows registry editor "
"<filename>regedt32.exe</filename>. Go to the registry key "
"<literal>HKCU\\Software\\TortoiseSVN</literal> and export it to a reg file. "
"On the other computer, just import that file again (usually, a double click "
"on the reg file will do that)."
msgstr ""

#. (para)
msgid ""
"Remember to save Subversion's general settings, which you can find in the "
"Subversion configuration file "
"<literal>%APPDATA%\\Subversion\\config</literal>."
msgstr ""

#. (title)
msgid "Final Step"
msgstr ""

#. (title)
msgid "Donate!"
msgstr "Dhuro!"

#. (para)
msgid ""
"Even though TortoiseSVN and TortoiseMerge are free, you can support the "
"developers by sending in patches and playing an active role in the "
"development. You can also help to cheer us up during the endless hours we "
"spend in front of our computers."
msgstr ""

#. (para)
msgid ""
"While working on TortoiseSVN we love to listen to music. And since we spend "
"many hours on the project we need a <emphasis>lot</emphasis> of music. "
"Therefore we have set up some wish-lists with our favourite music CDs and "
"DVDs: <ulink "
"url=\"http://tortoisesvn.net/donate.html\"><citetitle>http://tortoisesvn.net/donate.html</citetitle></ulink>"
" Please also have a look at the list of people who contributed to the "
"project by sending in patches or translations."
msgstr ""

#. (title)
msgid "The SubWCRev Program"
msgstr "SubWCRev"

#. (primary)
msgid "version extraction"
msgstr ""

#. (primary)
msgid "SubWCRev"
msgstr "SubWCRev"

#. (primary)
#. (primary)
msgid "COM"
msgstr "COM"

#. (primary)
msgid "version number in files"
msgstr ""

#. (para)
msgid ""
"SubWCRev is Windows console program which can be used to read the status of "
"a Subversion working copy and optionally perform keyword substitution in a "
"template file. This is often used as part of the build process as a means of"
" incorporating working copy information into the object you are building. "
"Typically it might be used to include the revision number in an "
"<quote>About</quote> box."
msgstr ""

#. (title)
msgid "The SubWCRev Command Line"
msgstr ""

#. (para)
msgid ""
"SubWCRev reads the Subversion status of all files in a working copy, "
"excluding externals by default. It records the highest commit revision "
"number found, and the commit timestamp of that revision, it also records "
"whether there are local modifications in the working copy, or mixed update "
"revisions. The revision number, update revision range and modification "
"status are displayed on stdout."
msgstr ""

#. (para)
msgid ""
"SubWCRev.exe is called from the command line or a script, and is controlled using the command line parameters. <screen>\n"
"SubWCRev WorkingCopyPath [SrcVersionFile DstVersionFile] [-nmdfe]\n"
"</screen>"
msgstr ""

#. (para)
msgid ""
"<literal>WorkingCopyPath</literal> is the path to the working copy being "
"checked. You can only use SubWCRev on working copies, not directly on the "
"repository. The path may be absolute or relative to the current working "
"directory."
msgstr ""

#. (para)
msgid ""
"If you want SubWCRev to perform keyword substitution, so that fields like "
"repository revision and URL are saved to a text file, you need to supply a "
"template file <literal>SrcVersionFile</literal> and an output file "
"<literal>DstVersionFile</literal> which contains the substituted version of "
"the template."
msgstr ""

#. (title)
msgid "List of available command line switches"
msgstr ""

#. (entry)
#. (entry)
#. (title)
#. (glossterm)
msgid "Switch"
msgstr ""

#. (entry)
#. (entry)
#. (entry)
#. (entry)
#. (entry)
#. (entry)
msgid "Description"
msgstr "Përshkrimi"

#. (literal)
msgid "ERRORLEVEL 7"
msgstr "NIVELIGABIMIT 7"

#. (entry)
msgid ""
"If this switch is given, SubWCRev will exit with <placeholder-1/> if the "
"working copy contains local modifications. This may be used to prevent "
"building with uncommitted changes present."
msgstr ""

#. (literal)
msgid "ERRORLEVEL 11"
msgstr ""

#. (entry)
msgid ""
"If this switch is given, SubWCRev will exit with <placeholder-1/> if the "
"working copy contains unversioned items that are not ignored."
msgstr ""

#. (literal)
msgid "ERRORLEVEL 8"
msgstr "NIVELIGABIMIT 8"

#. (entry)
msgid ""
"If this switch is given, SubWCRev will exit with <placeholder-1/> if the "
"working copy contains mixed revisions. This may be used to prevent building "
"with a partially updated working copy."
msgstr ""

#. (literal)
msgid "ERRORLEVEL 9"
msgstr "NIVELIGABIMIT 9"

#. (entry)
msgid ""
"If this switch is given, SubWCRev will exit with <placeholder-1/> if the "
"destination file already exists."
msgstr ""

#. (entry)
msgid ""
"If this switch is given, SubWCRev will include the last-changed revision of "
"folders. The default behaviour is to use only files when getting the "
"revision numbers."
msgstr ""

#. (literal)
msgid "svn:externals"
msgstr "svn:externals"

#. (entry)
msgid ""
"If this switch is given, SubWCRev will examine directories which are "
"included with <placeholder-1/>, but only if they are from the same "
"repository. The default behaviour is to ignore externals."
msgstr ""

#. (literal)
#. (literal)
msgid "-e"
msgstr "-e"

#. (entry)
msgid ""
"If this switch is given, same as <placeholder-1/>, but it ignores the "
"externals with explicit revisions, when the revision range inside of them is"
" only the given explicit revision in the properties. So it doesn't lead to "
"mixed revisions."
msgstr ""

#. (entry)
msgid ""
"If this switch is given, SubWCRev will output the revision numbers in HEX."
msgstr ""

#. (entry)
msgid ""
"If this switch is given, SubWCRev will output the revision numbers in HEX, "
"with '0X' prepended."
msgstr ""

#. (entry)
msgid ""
"If this switch is given, SubWCRev will perform the keyword substitution "
"without showing working copy status on stdout."
msgstr ""

#. (para)
msgid ""
"There are a number of optional switches which affect the way SubWCRev works."
" If you use more than one, they must be specified as a single group, e.g. "
"<literal>-nm</literal>, not <literal>-n -m</literal>. <placeholder-1/>"
msgstr ""

#. (title)
msgid "List of SubWCRev error codes"
msgstr ""

#. (entry)
msgid "Error Code"
msgstr ""

#. (entry)
msgid "Syntax error. One or more command line parameters are invalid."
msgstr ""

#. (entry)
msgid "The file or folder specified on the command line was not found."
msgstr ""

#. (entry)
msgid ""
"The input file could not be opened, or the target file could not be created."
msgstr ""

#. (entry)
msgid ""
"Could not allocate memory. This could happen if e.g. the source file is too "
"big."
msgstr ""

#. (entry)
msgid "The source file can not be scanned properly."
msgstr ""

#. (entry)
msgid ""
"SVN error: Subversion returned with an error when SubWCRev tried to find the"
" information from the working copy."
msgstr ""

#. (literal)
msgid "-n"
msgstr "-n"

#. (entry)
msgid ""
"The working copy has local modifications. This requires the <placeholder-1/>"
" switch."
msgstr ""

#. (literal)
msgid "-m"
msgstr "-m"

#. (entry)
msgid ""
"The working copy has mixed revisions. This requires the <placeholder-1/> "
"switch."
msgstr ""

#. (literal)
msgid "-d"
msgstr "-d"

#. (entry)
msgid ""
"The output file already exists. This requires the <placeholder-1/> switch."
msgstr ""

#. (entry)
msgid "The specified path is not a working copy or part or one."
msgstr ""

#. (literal)
msgid "-N"
msgstr ""

#. (entry)
msgid ""
"The working copy has unversioned files or folders in it. This requires the "
"<placeholder-1/> switch."
msgstr ""

#. (para)
msgid ""
"If there is no error, SubWCRev returns zero. But in case an error occurs, "
"the error message is written to stderr and shown in the console. And the "
"returned error codes are: <placeholder-1/>"
msgstr ""

#. (title)
msgid "Keyword Substitution"
msgstr ""

#. (title)
msgid "List of available keywords"
msgstr ""

#. (entry)
msgid "Keyword"
msgstr ""

#. (entry)
msgid "Replaced with the highest commit revision in the working copy."
msgstr ""

#. (literal)
msgid "$WCREV&amp;0xFFFF$"
msgstr "$WCREV&amp;0xFFFF$"

#. (entry)
msgid ""
"Replaced with the highest commit revision in the working copy, ANDed with "
"the value after the &amp; char. For example: <placeholder-1/>"
msgstr ""

#. (literal)
msgid "$WCREV-1000$"
msgstr "$WCREV-1000$"

#. (entry)
msgid ""
"Replaced with the highest commit revision in the working copy, with the "
"value after the + or - char added or subtracted. For example: "
"<placeholder-1/>"
msgstr ""

#. (literal)
msgid "yyyy-mm-dd hh:mm:ss"
msgstr "yyyy-mm-dd hh:mm:ss"

#. (literal)
msgid "strftime()"
msgstr "strftime()"

#. (literal)
msgid "$WCDATE=%a %b %d %I:%M:%S %p$"
msgstr "$WCDATE=%a %b %d %I:%M:%S %p$"

#. (citetitle)
msgid "online reference"
msgstr ""

#. (entry)
msgid ""
"Replaced with the commit date/time of the highest commit revision. By "
"default, international format is used: <placeholder-1/>. Alternatively, you "
"can specify a custom format which will be used with <placeholder-2/>, for "
"example: <placeholder-3/>. For a list of available formatting characters, "
"look at the <ulink url=\"http://msdn.microsoft.com/en-"
"us/library/fe06s4ak.aspx\"><placeholder-4/></ulink>."
msgstr ""

#. (literal)
#. (literal)
#. (literal)
msgid "$WCDATE$"
msgstr "$WCDATE$"

#. (entry)
msgid ""
"Replaced with the current system date/time. This can be used to indicate the"
" build time. Time formatting can be used as described for <placeholder-1/>."
msgstr ""

#. (entry)
msgid ""
"Replaced with the update revision range in the working copy. If the working "
"copy is in a consistent state, this will be a single revision. If the "
"working copy contains mixed revisions, either due to being out of date, or "
"due to a deliberate update-to-revision, then the range will be shown in the "
"form 100:200."
msgstr ""

#. (literal)
msgid "$WCMIXED?TText:FText$"
msgstr "$WCMIXED?TText:FText$"

#. (literal)
#. (literal)
#. (literal)
#. (literal)
#. (literal)
#. (literal)
#. (literal)
#. (literal)
msgid "TText"
msgstr ""

#. (literal)
#. (literal)
#. (literal)
#. (literal)
#. (literal)
#. (literal)
#. (literal)
#. (literal)
msgid "FText"
msgstr ""

#. (entry)
msgid ""
"<placeholder-1/> is replaced with <placeholder-2/> if there are mixed update"
" revisions, or <placeholder-3/> if not."
msgstr ""

#. (literal)
msgid "$WCMODS?TText:FText$"
msgstr "$WCMODS?TText:FText$"

#. (entry)
msgid ""
"<placeholder-1/> is replaced with <placeholder-2/> if there are local "
"modifications, or <placeholder-3/> if not."
msgstr ""

#. (literal)
msgid "$WCUNVER?TText:FText$"
msgstr ""

#. (entry)
msgid ""
"<placeholder-1/> is replaced with <placeholder-2/> if there are unversioned "
"items in the working copy, or <placeholder-3/> if not."
msgstr ""

#. (literal)
msgid "$WCEXTALLFIXED?TText:FText$"
msgstr "$WCEXTALLFIXED?TText:FText$"

#. (entry)
msgid ""
"<placeholder-1/> is replaced with <placeholder-2/> if all externals are "
"fixed to an explicit revision, or <placeholder-3/> if not."
msgstr ""

#. (literal)
msgid "$WCISTAGGED?TText:FText$"
msgstr "$WCISTAGGED?TText:FText$"

#. (entry)
msgid ""
"<placeholder-1/> is replaced with <placeholder-2/> if the repository URL "
"contains the tags classification pattern, or <placeholder-3/> if not."
msgstr ""

#. (entry)
msgid ""
"Replaced with the repository URL of the working copy path passed to "
"SubWCRev."
msgstr ""

#. (literal)
msgid "$WCINSVN?TText:FText$"
msgstr "$WCINSVN?TText:FText$"

#. (entry)
msgid ""
"<placeholder-1/> is replaced with <placeholder-2/> if the entry is "
"versioned, or <placeholder-3/> if not."
msgstr ""

#. (literal)
msgid "$WCNEEDSLOCK?TText:FText$"
msgstr "$WCNEEDSLOCK?TText:FText$"

#. (entry)
msgid ""
"<placeholder-1/> is replaced with <placeholder-2/> if the entry has the "
"<placeholder-3/> property set, or <placeholder-4/> if not."
msgstr ""

#. (literal)
msgid "$WCISLOCKED?TText:FText$"
msgstr "$WCISLOCKED?TText:FText$"

#. (entry)
msgid ""
"<placeholder-1/> is replaced with <placeholder-2/> if the entry is locked, "
"or <placeholder-3/> if not."
msgstr ""

#. (entry)
msgid ""
"Replaced with the lock date. Time formatting can be used as described for "
"<placeholder-1/>."
msgstr ""

#. (entry)
msgid "Replaced with the name of the lock owner."
msgstr ""

#. (entry)
msgid "Replaced with the comment of the lock."
msgstr ""

#. (para)
msgid ""
"If a source and destination files are supplied, SubWCRev copies source to "
"destination, performing keyword substitution as follows: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"SubWCRev does not directly support nesting of expressions, so for example you cannot use an expression like: <screen>\n"
"#define SVN_REVISION    \"$WCMIXED?$WCRANGE$:$WCREV$$\"\n"
"</screen> But you can usually work around it by other means, for example: <screen>\n"
"#define SVN_RANGE       $WCRANGE$\n"
"#define SVN_REV         $WCREV$\n"
"#define SVN_REVISION    \"$WCMIXED?SVN_RANGE:SVN_REV$\"\n"
"</screen>"
msgstr ""

#. (para)
msgid ""
"Some of these keywords apply to single files rather than to an entire "
"working copy, so it only makes sense to use these when SubWCRev is called to"
" scan a single file. This applies to <literal>$WCINSVN$</literal>, "
"<literal>$WCNEEDSLOCK$</literal>, <literal>$WCISLOCKED$</literal>, "
"<literal>$WCLOCKDATE$</literal>, <literal>$WCLOCKOWNER$</literal> and "
"<literal>$WCLOCKCOMMENT$</literal>."
msgstr ""

#. (title)
msgid "Keyword Example"
msgstr ""

#. (para)
msgid ""
"The example below shows how keywords in a template file are substituted in "
"the output file."
msgstr ""

#. (programlisting)
#, no-wrap
msgid ""
"\n"
"// Test file for SubWCRev\n"
"\n"
"char *Revision      = \"$WCREV$\";\n"
"char *Revision16    = \"$WCREV&amp;0xFF$\";\n"
"char *Revisionp100  = \"$WCREV+100$\";\n"
"char *Revisionm100  = \"$WCREV-100$\";\n"
"char *Modified      = \"$WCMODS?Modified:Not modified$\";\n"
"char *Unversioned   = \"$WCUNVER?Unversioned items found:no unversioned items$\";\n"
"char *Date          = \"$WCDATE$\";\n"
"char *CustDate      = \"$WCDATE=%a, %d %B %Y$\";\n"
"char *DateUTC       = \"$WCDATEUTC$\";\n"
"char *CustDateUTC   = \"$WCDATEUTC=%a, %d %B %Y$\";\n"
"char *TimeNow       = \"$WCNOW$\";\n"
"char *TimeNowUTC    = \"$WCNOWUTC$\";\n"
"char *RevRange      = \"$WCRANGE$\";\n"
"char *Mixed         = \"$WCMIXED?Mixed revision WC:Not mixed$\";\n"
"char *ExtAllFixed   = \"$WCEXTALLFIXED?All externals fixed:Not all externals fixed$\";\n"
"char *IsTagged      = \"$WCISTAGGED?Tagged:Not tagged$\";\n"
"char *URL           = \"$WCURL$\";\n"
"char *isInSVN       = \"$WCINSVN?versioned:not versioned$\";\n"
"char *needslck      = \"$WCNEEDSLOCK?TRUE:FALSE$\";\n"
"char *islocked      = \"$WCISLOCKED?locked:not locked$\";\n"
"char *lockdateutc   = \"$WCLOCKDATEUTC$\";\n"
"char *lockdate      = \"$WCLOCKDATE$\";\n"
"char *lockcustutc   = \"$WCLOCKDATEUTC=%a, %d %B %Y$\";\n"
"char *lockcust      = \"$WCLOCKDATE=%a, %d %B %Y$\";\n"
"char *lockown       = \"$WCLOCKOWNER$\";\n"
"char *lockcmt       = \"$WCLOCKCOMMENT$\";\n"
"\n"
"#if $WCMODS?1:0$\n"
"#error Source is modified\n"
"#endif\n"
"\n"
"// End of file\n"
msgstr ""

#. (para)
msgid ""
"After running <literal>SubWCRev.exe path\\to\\workingcopy testfile.tmpl "
"testfile.txt</literal>, the output file <literal>testfile.txt</literal> "
"would looks like this:"
msgstr ""

#. (programlisting)
#, no-wrap
msgid ""
"\n"
"// Test file for SubWCRev\n"
"\n"
"char *Revision      = \"22837\";\n"
"char *Revision16    = \"53\";\n"
"char *Revisionp100  = \"22937\";\n"
"char *Revisionm100  = \"22737\";\n"
"char *Modified      = \"Modified\";\n"
"char *Unversioned   = \"no unversioned items\";\n"
"char *Date          = \"2012/04/26 18:47:57\";\n"
"char *CustDate      = \"Thu, 26 April 2012\";\n"
"char *DateUTC       = \"2012/04/26 16:47:57\";\n"
"char *CustDateUTC   = \"Thu, 26 April 2012\";\n"
"char *TimeNow       = \"2012/04/26 20:51:17\";\n"
"char *TimeNowUTC    = \"2012/04/26 18:51:17\";\n"
"char *RevRange      = \"22836:22837\";\n"
"char *Mixed         = \"Mixed revision WC\";\n"
"char *ExtAllFixed   = \"All externals fixed\";\n"
"char *IsTagged      = \"Not tagged\";\n"
"char *URL           = \"https://tortoisesvn.googlecode.com/svn/trunk\";\n"
"char *isInSVN       = \"versioned\";\n"
"char *needslck      = \"FALSE\";\n"
"char *islocked      = \"not locked\";\n"
"char *lockdateutc   = \"1970/01/01 00:00:00\";\n"
"char *lockdate      = \"1970/01/01 01:00:00\";\n"
"char *lockcustutc   = \"Thu, 01 January 1970\";\n"
"char *lockcust      = \"Thu, 01 January 1970\";\n"
"char *lockown       = \"\";\n"
"char *lockcmt       = \"\";\n"
"\n"
"#if 1\n"
"#error Source is modified\n"
"#endif\n"
"\n"
"// End of file\n"
msgstr ""

#. (para)
msgid ""
"A file like this will be included in the build so you would expect it to be "
"versioned. Be sure to version the template file, not the generated file, "
"otherwise each time you regenerate the version file you need to commit the "
"change, which in turn means the version file needs to be updated."
msgstr ""

#. (title)
msgid "COM interface"
msgstr ""

#. (primary)
msgid "COM SubWCRev interface"
msgstr ""

#. (title)
msgid "COM/automation methods supported"
msgstr ""

#. (entry)
msgid "Method"
msgstr "Metoda"

#. (literal)
msgid "-f"
msgstr "-f"

#. (entry)
msgid ""
"This method traverses the working copy gathering the revision information. "
"Naturally you must call this before you can access the information using the"
" remaining methods. The first parameter is the path. The second parameter "
"should be true if you want to include folder revisions. Equivalent to the "
"<placeholder-1/> command line switch. The third parameter should be true if "
"you want to include svn:externals. Equivalent to the <placeholder-2/> "
"command line switch."
msgstr ""

#. (literal)
msgid "GetWCInfo()"
msgstr "GetWCInfo()"

#. (literal)
msgid "-E"
msgstr "-E"

#. (entry)
msgid ""
"The same as <placeholder-1/> but with a fourth parameter that sets the "
"equivalent to the <placeholder-2/> command line switch."
msgstr ""

#. (literal)
msgid "$WCREV$"
msgstr "$WCREV$"

#. (entry)
msgid ""
"The highest commit revision in the working copy. Equivalent to "
"<placeholder-1/>."
msgstr ""

#. (entry)
msgid ""
"The commit date/time of the highest commit revision. Equivalent to "
"<placeholder-1/>."
msgstr ""

#. (entry)
msgid ""
"The author of the highest commit revision, that is, the last person to "
"commit changes to the working copy."
msgstr ""

#. (literal)
#. (literal)
msgid "$WCRANGE$"
msgstr "$WCRANGE$"

#. (entry)
msgid "The minimum update revision, as shown in <placeholder-1/>"
msgstr ""

#. (row)
#. (row)
#. (row)
#. (row)
msgid "<placeholder-1/>."
msgstr "<placeholder-1/>."

#. (entry)
msgid "The maximum update revision, as shown in <placeholder-1/>"
msgstr ""

#. (entry)
msgid "True if there are local modifications"
msgstr ""

#. (entry)
msgid "True if there are unversioned items"
msgstr ""

#. (literal)
msgid "GetWCInfo"
msgstr "PranoWCInfo"

#. (literal)
msgid "$WCURL$"
msgstr "$WCURL$"

#. (entry)
msgid ""
"Replaced with the repository URL of the working copy path used in "
"<placeholder-1/>. Equivalent to <placeholder-2/>."
msgstr ""

#. (entry)
msgid "True if the item is versioned."
msgstr ""

#. (entry)
msgid "True if the item has the <placeholder-1/> property set."
msgstr ""

#. (entry)
msgid "True if the item is locked."
msgstr ""

#. (entry)
msgid ""
"String representing the date when the lock was created, or an empty string "
"if the item is not locked."
msgstr ""

#. (entry)
msgid ""
"String representing the lock owner, or an empty string if the item is not "
"locked."
msgstr ""

#. (entry)
msgid "The message entered when the lock was created."
msgstr ""

#. (para)
msgid ""
"If you need to access Subversion revision information from other programs, "
"you can use the COM interface of SubWCRev. The object to create is "
"<literal>SubWCRev.object</literal>, and the following methods are supported:"
" <placeholder-1/>"
msgstr ""

#. (programlisting)
#, no-wrap
msgid ""
"\n"
"// testCOM.js - javascript file\n"
"// test script for the SubWCRev COM/Automation-object\n"
"\n"
"filesystem = new ActiveXObject(\"Scripting.FileSystemObject\");\n"
"\n"
"revObject1 = new ActiveXObject(\"SubWCRev.object\");\n"
"revObject2 = new ActiveXObject(\"SubWCRev.object\");\n"
"revObject3 = new ActiveXObject(\"SubWCRev.object\");\n"
"revObject4 = new ActiveXObject(\"SubWCRev.object\");\n"
"\n"
"revObject1.GetWCInfo(\n"
"    filesystem.GetAbsolutePathName(\".\"), 1, 1);\n"
"revObject2.GetWCInfo(\n"
"    filesystem.GetAbsolutePathName(\"..\"), 1, 1);\n"
"revObject3.GetWCInfo(\n"
"    filesystem.GetAbsolutePathName(\"SubWCRev.cpp\"), 1, 1);\n"
"revObject4.GetWCInfo2(\n"
"    filesystem.GetAbsolutePathName(\"..\\\\..\"), 1, 1, 1);\n"
"\n"
"wcInfoString1 = \"Revision = \" + revObject1.Revision +\n"
"                \"\\nMin Revision = \" + revObject1.MinRev +\n"
"                \"\\nMax Revision = \" + revObject1.MaxRev +\n"
"                \"\\nDate = \" + revObject1.Date +\n"
"                \"\\nURL = \" + revObject1.Url + \"\\nAuthor = \" +\n"
"                revObject1.Author + \"\\nHasMods = \" +\n"
"                revObject1.HasModifications + \"\\nIsSvnItem = \" +\n"
"                revObject1.IsSvnItem + \"\\nNeedsLocking = \" +\n"
"                revObject1.NeedsLocking + \"\\nIsLocked = \" +\n"
"                revObject1.IsLocked + \"\\nLockCreationDate = \" +\n"
"                revObject1.LockCreationDate + \"\\nLockOwner = \" +\n"
"                revObject1.LockOwner + \"\\nLockComment = \" +\n"
"                revObject1.LockComment;\n"
"wcInfoString2 = \"Revision = \" + revObject2.Revision +\n"
"                \"\\nMin Revision = \" + revObject2.MinRev +\n"
"                \"\\nMax Revision = \" + revObject2.MaxRev +\n"
"                \"\\nDate = \" + revObject2.Date +\n"
"                \"\\nURL = \" + revObject2.Url + \"\\nAuthor = \" +\n"
"                revObject2.Author + \"\\nHasMods = \" +\n"
"                revObject2.HasModifications + \"\\nIsSvnItem = \" +\n"
"                revObject2.IsSvnItem + \"\\nNeedsLocking = \" +\n"
"                revObject2.NeedsLocking + \"\\nIsLocked = \" +\n"
"                revObject2.IsLocked + \"\\nLockCreationDate = \" +\n"
"                revObject2.LockCreationDate + \"\\nLockOwner = \" +\n"
"                revObject2.LockOwner + \"\\nLockComment = \" +\n"
"                revObject2.LockComment;\n"
"wcInfoString3 = \"Revision = \" + revObject3.Revision +\n"
"                \"\\nMin Revision = \" + revObject3.MinRev +\n"
"                \"\\nMax Revision = \" + revObject3.MaxRev +\n"
"                \"\\nDate = \" + revObject3.Date +\n"
"                \"\\nURL = \" + revObject3.Url + \"\\nAuthor = \" +\n"
"                revObject3.Author + \"\\nHasMods = \" +\n"
"                revObject3.HasModifications + \"\\nIsSvnItem = \" +\n"
"                revObject3.IsSvnItem + \"\\nNeedsLocking = \" +\n"
"                revObject3.NeedsLocking + \"\\nIsLocked = \" +\n"
"                revObject3.IsLocked + \"\\nLockCreationDate = \" +\n"
"                revObject3.LockCreationDate + \"\\nLockOwner = \" +\n"
"                revObject3.LockOwner + \"\\nLockComment = \" +\n"
"                revObject3.LockComment;\n"
"wcInfoString4 = \"Revision = \" + revObject4.Revision +\n"
"                \"\\nMin Revision = \" + revObject4.MinRev +\n"
"                \"\\nMax Revision = \" + revObject4.MaxRev +\n"
"                \"\\nDate = \" + revObject4.Date +\n"
"                \"\\nURL = \" + revObject4.Url + \"\\nAuthor = \" +\n"
"                revObject4.Author + \"\\nHasMods = \" +\n"
"                revObject4.HasModifications + \"\\nIsSvnItem = \" +\n"
"                revObject4.IsSvnItem + \"\\nNeedsLocking = \" +\n"
"                revObject4.NeedsLocking + \"\\nIsLocked = \" +\n"
"                revObject4.IsLocked + \"\\nLockCreationDate = \" +\n"
"                revObject4.LockCreationDate + \"\\nLockOwner = \" +\n"
"                revObject4.LockOwner + \"\\nLockComment = \" +\n"
"                revObject4.LockComment;\n"
"\n"
"WScript.Echo(wcInfoString1);\n"
"WScript.Echo(wcInfoString2);\n"
"WScript.Echo(wcInfoString3);\n"
"WScript.Echo(wcInfoString4);\n"
"\n"
msgstr "\n// testCOM.js - javascript skedë\n// test skripta për SubWCRev COM/Automation-object\n\nfilesystem = new ActiveXObject(\"Scripting.FileSystemObject\");\n\nrevObject1 = new ActiveXObject(\"SubWCRev.object\");\nrevObject2 = new ActiveXObject(\"SubWCRev.object\");\nrevObject3 = new ActiveXObject(\"SubWCRev.object\");\nrevObject4 = new ActiveXObject(\"SubWCRev.object\");\n\nrevObject1.GetWCInfo(\n    filesystem.GetAbsolutePathName(\".\"), 1, 1);\nrevObject2.GetWCInfo(\n    filesystem.GetAbsolutePathName(\"..\"), 1, 1);\nrevObject3.GetWCInfo(\n    filesystem.GetAbsolutePathName(\"SubWCRev.cpp\"), 1, 1);\nrevObject4.GetWCInfo2(\n    filesystem.GetAbsolutePathName(\"..\\\\..\"), 1, 1, 1);\n\nwcInfoString1 = \"Revision = \" + revObject1.Revision +\n                \"\\nMin Revision = \" + revObject1.MinRev +\n                \"\\nMax Revision = \" + revObject1.MaxRev +\n                \"\\nDate = \" + revObject1.Date +\n                \"\\nURL = \" + revObject1.Url + \"\\nAuthor = \" +\n                revObject1.Author + \"\\nHasMods = \" +\n                revObject1.HasModifications + \"\\nIsSvnItem = \" +\n                revObject1.IsSvnItem + \"\\nNeedsLocking = \" +\n                revObject1.NeedsLocking + \"\\nIsLocked = \" +\n                revObject1.IsLocked + \"\\nLockCreationDate = \" +\n                revObject1.LockCreationDate + \"\\nLockOwner = \" +\n                revObject1.LockOwner + \"\\nLockComment = \" +\n                revObject1.LockComment;\nwcInfoString2 = \"Revision = \" + revObject2.Revision +\n                \"\\nMin Revision = \" + revObject2.MinRev +\n                \"\\nMax Revision = \" + revObject2.MaxRev +\n                \"\\nDate = \" + revObject2.Date +\n                \"\\nURL = \" + revObject2.Url + \"\\nAuthor = \" +\n                revObject2.Author + \"\\nHasMods = \" +\n                revObject2.HasModifications + \"\\nIsSvnItem = \" +\n                revObject2.IsSvnItem + \"\\nNeedsLocking = \" +\n                revObject2.NeedsLocking + \"\\nIsLocked = \" +\n                revObject2.IsLocked + \"\\nLockCreationDate = \" +\n                revObject2.LockCreationDate + \"\\nLockOwner = \" +\n                revObject2.LockOwner + \"\\nLockComment = \" +\n                revObject2.LockComment;\nwcInfoString3 = \"Revision = \" + revObject3.Revision +\n                \"\\nMin Revision = \" + revObject3.MinRev +\n                \"\\nMax Revision = \" + revObject3.MaxRev +\n                \"\\nDate = \" + revObject3.Date +\n                \"\\nURL = \" + revObject3.Url + \"\\nAuthor = \" +\n                revObject3.Author + \"\\nHasMods = \" +\n                revObject3.HasModifications + \"\\nIsSvnItem = \" +\n                revObject3.IsSvnItem + \"\\nNeedsLocking = \" +\n                revObject3.NeedsLocking + \"\\nIsLocked = \" +\n                revObject3.IsLocked + \"\\nLockCreationDate = \" +\n                revObject3.LockCreationDate + \"\\nLockOwner = \" +\n                revObject3.LockOwner + \"\\nLockComment = \" +\n                revObject3.LockComment;\nwcInfoString4 = \"Revision = \" + revObject4.Revision +\n                \"\\nMin Revision = \" + revObject4.MinRev +\n                \"\\nMax Revision = \" + revObject4.MaxRev +\n                \"\\nDate = \" + revObject4.Date +\n                \"\\nURL = \" + revObject4.Url + \"\\nAuthor = \" +\n                revObject4.Author + \"\\nHasMods = \" +\n                revObject4.HasModifications + \"\\nIsSvnItem = \" +\n                revObject4.IsSvnItem + \"\\nNeedsLocking = \" +\n                revObject4.NeedsLocking + \"\\nIsLocked = \" +\n                revObject4.IsLocked + \"\\nLockCreationDate = \" +\n                revObject4.LockCreationDate + \"\\nLockOwner = \" +\n                revObject4.LockOwner + \"\\nLockComment = \" +\n                revObject4.LockComment;\n\nWScript.Echo(wcInfoString1);\nWScript.Echo(wcInfoString2);\nWScript.Echo(wcInfoString3);\nWScript.Echo(wcInfoString4);\n"

#. (para)
msgid ""
"The following example shows how the interface might be used. "
"<placeholder-1/>"
msgstr ""

#. (programlisting)
#, no-wrap
msgid ""
"\n"
"using LibSubWCRev;\n"
"SubWCRev sub = new SubWCRev();\n"
"sub.GetWCInfo(\"C:\\\\PathToMyFile\\\\MyFile.cc\", true, true);\n"
"if (sub.IsSvnItem == true)\n"
"{\n"
"    MessageBox.Show(\"versioned\");\n"
"}\n"
"else\n"
"{\n"
"    MessageBox.Show(\"not versioned\");\n"
"}\n"
msgstr "\nusing LibSubWCRev;\nSubWCRev sub = new SubWCRev();\nsub.GetWCInfo(\"C:\\\\PathToMyFile\\\\MyFile.cc\", true, true);\nif (sub.IsSvnItem == true)\n{\n    MessageBox.Show(\"versioned\");\n}\nelse\n{\n    MessageBox.Show(\"not versioned\");\n}\n"

#. (para)
msgid ""
"The following listing is an example on how to use the SubWCRev COM object "
"from C#: <placeholder-1/>"
msgstr ""

#. (title)
msgid "IBugtraqProvider interface"
msgstr ""

#. (primary)
msgid "plugin"
msgstr "shtojca"

#. (primary)
msgid "IBugtraqProvider"
msgstr ""

#. (para)
msgid ""
"To get a tighter integration with issue trackers than by simply using the "
"<literal>bugtraq:</literal> properties, TortoiseSVN can make use of COM "
"plugins. With such plugins it is possible to fetch information directly from"
" the issue tracker, interact with the user and provide information back to "
"TortoiseSVN about open issues, verify log messages entered by the user and "
"even run actions after a successful commit to e.g, close an issue."
msgstr ""

#. (para)
msgid ""
"We can't provide information and tutorials on how you have to implement a "
"COM object in your preferred programming language, but we have example "
"plugins in C++/ATL and C# in our repository in the <filename>contrib/issue-"
"tracker-plugins</filename> folder. In that folder you can also find the "
"required include files you need to build your plugin. (<xref linkend=\"tsvn-"
"preface-source\"/> explains how to access the repository.)"
msgstr ""

#. (para)
msgid ""
"You should provide both a 32-bit and 64-bit version of your plugin. Because "
"the x64-Version of TortoiseSVN can not use a 32-bit plugin and vice-versa."
msgstr ""

#. (title)
msgid "Naming conventions"
msgstr ""

#. (para)
msgid ""
"If you release an issue tracker plugin for TortoiseSVN, please do "
"<emphasis>not</emphasis> name it "
"<emphasis>Tortoise&lt;Something&gt;</emphasis>. We'd like to reserve the "
"<emphasis>Tortoise</emphasis> prefix for a version control client integrated"
" into the windows shell. For example: TortoiseCVS, TortoiseSVN, TortoiseHg, "
"TortoiseGit and TortoiseBzr are all version control clients."
msgstr ""

#. (para)
msgid "Gurtle - An issue tracker plugin for Google code"
msgstr ""

#. (para)
msgid "TurtleMine - An issue tracker plugin for Redmine"
msgstr ""

#. (para)
msgid "VurtleOne - An issue tracker plugin for VersionOne"
msgstr ""

#. (para)
msgid ""
"Please name your plugin for a Tortoise client "
"<emphasis>Turtle&lt;Something&gt;</emphasis>, where "
"<emphasis>&lt;Something&gt;</emphasis> refers to the issue tracker that you "
"are connecting to. Alternatively choose a name that sounds like "
"<emphasis>Turtle</emphasis> but has a different first letter. Nice examples "
"are: <placeholder-1/>"
msgstr ""

#. (title)
msgid "The IBugtraqProvider interface"
msgstr ""

#. (para)
msgid ""
"TortoiseSVN 1.5 and later can use plugins which implement the "
"IBugtraqProvider interface. The interface provides a few methods which "
"plugins can use to interact with the issue tracker."
msgstr ""

#. (programlisting)
#, no-wrap
msgid ""
"\n"
"HRESULT ValidateParameters (\n"
"  // Parent window for any UI that needs to be\n"
"  // displayed during validation.\n"
"  [in] HWND hParentWnd,\n"
"\n"
"  // The parameter string that needs to be validated.\n"
"  [in] BSTR parameters,\n"
"\n"
"  // Is the string valid?\n"
"  [out, retval] VARIANT_BOOL *valid\n"
");\n"
msgstr ""

#. (para)
msgid ""
"This method is called from the settings dialog where the user can add and "
"configure the plugin. The <literal>parameters</literal> string can be used "
"by a plugin to get additional required information, e.g., the URL to the "
"issue tracker, login information, etc. The plugin should verify the "
"<literal>parameters</literal> string and show an error dialog if the string "
"is not valid. The <literal>hParentWnd</literal> parameter should be used for"
" any dialog the plugin shows as the parent window. The plugin must return "
"TRUE if the validation of the <literal>parameters</literal> string is "
"successful. If the plugin returns FALSE, the settings dialog won't allow the"
" user to add the plugin to a working copy path."
msgstr ""

#. (programlisting)
#, no-wrap
msgid ""
"\n"
"HRESULT GetLinkText (\n"
"  // Parent window for any (error) UI that needs to be displayed.\n"
"  [in] HWND hParentWnd,\n"
"\n"
"  // The parameter string, just in case you need to talk to your\n"
"  // web service (e.g.) to find out what the correct text is.\n"
"  [in] BSTR parameters,\n"
"\n"
"  // What text do you want to display?\n"
"  // Use the current thread locale.\n"
"  [out, retval] BSTR *linkText\n"
");\n"
msgstr ""

#. (para)
msgid ""
"The plugin can provide a string here which is used in the TortoiseSVN commit"
" dialog for the button which invokes the plugin, e.g., \"Choose issue\" or "
"\"Select ticket\". Make sure the string is not too long, otherwise it might "
"not fit into the button. If the method returns an error (e.g., "
"<literal>E_NOTIMPL</literal>), a default text is used for the button."
msgstr ""

#. (programlisting)
#, no-wrap
msgid ""
"\n"
"HRESULT GetCommitMessage (\n"
"  // Parent window for your provider's UI.\n"
"  [in] HWND hParentWnd,\n"
"\n"
"  // Parameters for your provider.\n"
"  [in] BSTR parameters,\n"
"  [in] BSTR commonRoot,\n"
"  [in] SAFEARRAY(BSTR) pathList,\n"
"\n"
"  // The text already present in the commit message.\n"
"  // Your provider should include this text in the new message,\n"
"  // where appropriate.\n"
"  [in] BSTR originalMessage,\n"
"\n"
"  // The new text for the commit message.\n"
"  // This replaces the original message.\n"
"  [out, retval] BSTR *newMessage\n"
");\n"
msgstr ""

#. (para)
msgid ""
"This is the main method of the plugin. This method is called from the "
"TortoiseSVN commit dialog when the user clicks on the plugin button."
msgstr ""

#. (para)
msgid ""
"The <literal>parameters</literal> string is the string the user has to enter"
" in the settings dialog when he configures the plugin. Usually a plugin "
"would use this to find the URL of the issue tracker and/or login information"
" or more."
msgstr ""

#. (para)
msgid ""
"The <literal>commonRoot</literal> string contains the parent path of all "
"items selected to bring up the commit dialog. Note that this is "
"<emphasis>not</emphasis> the root path of all items which the user has "
"selected in the commit dialog. For the branch/tag dialog, this is the path "
"which is to be copied."
msgstr ""

#. (para)
msgid ""
"The <literal>pathList</literal> parameter contains an array of paths (as "
"strings) which the user has selected for the commit."
msgstr ""

#. (para)
msgid ""
"The <literal>originalMessage</literal> parameter contains the text entered "
"in the log message box in the commit dialog. If the user has not yet entered"
" any text, this string will be empty."
msgstr ""

#. (para)
msgid ""
"The <literal>newMessage</literal> return string is copied into the log "
"message edit box in the commit dialog, replacing whatever is already there. "
"If a plugin does not modify the <literal>originalMessage</literal> string, "
"it must return the same string again here, otherwise any text the user has "
"entered will be lost."
msgstr ""

#. (title)
msgid "The IBugtraqProvider2 interface"
msgstr ""

#. (para)
msgid ""
"In TortoiseSVN 1.6 a new interface was added which provides more "
"functionality for plugins. This IBugtraqProvider2 interface inherits from "
"IBugtraqProvider."
msgstr ""

#. (programlisting)
#, no-wrap
msgid ""
"\n"
"HRESULT GetCommitMessage2 (\n"
"  // Parent window for your provider's UI.\n"
"  [in] HWND hParentWnd,\n"
"\n"
"  // Parameters for your provider.\n"
"  [in] BSTR parameters,\n"
"  // The common URL of the commit\n"
"  [in] BSTR commonURL,\n"
"  [in] BSTR commonRoot,\n"
"  [in] SAFEARRAY(BSTR) pathList,\n"
"\n"
"  // The text already present in the commit message.\n"
"  // Your provider should include this text in the new message,\n"
"  // where appropriate.\n"
"  [in] BSTR originalMessage,\n"
"\n"
"  // You can assign custom revision properties to a commit\n"
"  // by setting the next two params.\n"
"  // note: Both safearrays must be of the same length.\n"
"  //       For every property name there must be a property value!\n"
"\n"
"  // The content of the bugID field (if shown)\n"
"  [in] BSTR bugID,\n"
"\n"
"  // Modified content of the bugID field\n"
"  [out] BSTR * bugIDOut,\n"
"\n"
"  // The list of revision property names.\n"
"  [out] SAFEARRAY(BSTR) * revPropNames,\n"
"\n"
"  // The list of revision property values.\n"
"  [out] SAFEARRAY(BSTR) * revPropValues,\n"
"\n"
"  // The new text for the commit message.\n"
"  // This replaces the original message\n"
"  [out, retval] BSTR * newMessage\n"
");\n"
msgstr ""

#. (para)
msgid ""
"This method is called from the TortoiseSVN commit dialog when the user "
"clicks on the plugin button. This method is called instead of "
"<literal>GetCommitMessage()</literal>. Please refer to the documentation for"
" <literal>GetCommitMessage</literal> for the parameters that are also used "
"there."
msgstr ""

#. (para)
msgid ""
"The parameter <literal>commonURL</literal> is the parent URL of all items "
"selected to bring up the commit dialog. This is basically the URL of the "
"<literal>commonRoot</literal> path."
msgstr ""

#. (para)
msgid ""
"The parameter <literal>bugID</literal> contains the content of the bug-ID "
"field (if it is shown, configured with the property "
"<literal>bugtraq:message</literal>)."
msgstr ""

#. (para)
msgid ""
"The return parameter <literal>bugIDOut</literal> is used to fill the bug-ID "
"field when the method returns."
msgstr ""

#. (para)
msgid ""
"The <literal>revPropNames</literal> and <literal>revPropValues</literal> "
"return parameters can contain name/value pairs for revision properties that "
"the commit should set. A plugin must make sure that both arrays have the "
"same size on return! Each property name in <literal>revPropNames</literal> "
"must also have a corresponding value in <literal>revPropValues</literal>. If"
" no revision properties are to be set, the plugin must return empty arrays."
msgstr ""

#. (programlisting)
#, no-wrap
msgid ""
"\n"
"HRESULT CheckCommit (\n"
"  [in] HWND hParentWnd,\n"
"  [in] BSTR parameters,\n"
"  [in] BSTR commonURL,\n"
"  [in] BSTR commonRoot,\n"
"  [in] SAFEARRAY(BSTR) pathList,\n"
"  [in] BSTR commitMessage,\n"
"  [out, retval] BSTR * errorMessage\n"
");\n"
msgstr ""

#. (para)
msgid ""
"This method is called right before the commit dialog is closed and the "
"commit begins. A plugin can use this method to validate the selected "
"files/folders for the commit and/or the commit message entered by the user. "
"The parameters are the same as for <literal>GetCommitMessage2()</literal>, "
"with the difference that <literal>commonURL</literal> is now the common URL "
"of all <emphasis>checked</emphasis> items, and <literal>commonRoot</literal>"
" the root path of all checked items."
msgstr ""

#. (para)
msgid ""
"For the branch/tag dialog, the <literal>commonURL</literal> is the source "
"URL of the copy, and <literal>commonRoot</literal> is set to the target URL "
"of the copy."
msgstr ""

#. (para)
msgid ""
"The return parameter <literal>errorMessage</literal> must either contain an "
"error message which TortoiseSVN shows to the user or be empty for the commit"
" to start. If an error message is returned, TortoiseSVN shows the error "
"string in a dialog and keeps the commit dialog open so the user can correct "
"whatever is wrong. A plugin should therefore return an error string which "
"informs the user <emphasis>what</emphasis> is wrong and how to correct it."
msgstr ""

#. (programlisting)
#, no-wrap
msgid ""
"\n"
"HRESULT  OnCommitFinished (\n"
"  // Parent window for any (error) UI that needs to be displayed.\n"
"  [in] HWND hParentWnd,\n"
"\n"
"  // The common root of all paths that got committed.\n"
"  [in] BSTR commonRoot,\n"
"\n"
"  // All the paths that got committed.\n"
"  [in] SAFEARRAY(BSTR) pathList,\n"
"\n"
"\n"
"  // The text already present in the commit message.\n"
"  [in] BSTR logMessage,\n"
"\n"
"  // The revision of the commit.\n"
"  [in] ULONG revision,\n"
"\n"
"\n"
"  // An error to show to the user if this function\n"
"  // returns something else than S_OK\n"
"  [out, retval] BSTR * error\n"
");\n"
msgstr ""

#. (para)
msgid ""
"This method is called after a successful commit. A plugin can use this "
"method to e.g., close the selected issue or add information about the commit"
" to the issue. The parameters are the same as for "
"<literal>GetCommitMessage2</literal>."
msgstr ""

#. (programlisting)
#, no-wrap
msgid ""
"\n"
"HRESULT HasOptions(\n"
"  // Whether the provider provides options\n"
"  [out, retval] VARIANT_BOOL *ret\n"
");\n"
msgstr ""

#. (para)
msgid ""
"This method is called from the settings dialog where the user can configure "
"the plugins. If a plugin provides its own configuration dialog with "
"<literal>ShowOptionsDialog</literal>, it must return TRUE here, otherwise it"
" must return FALSE."
msgstr ""

#. (programlisting)
#, no-wrap
msgid ""
"\n"
"HRESULT ShowOptionsDialog(\n"
"  // Parent window for the options dialog\n"
"  [in] HWND hParentWnd,\n"
"\n"
"  // Parameters for your provider.\n"
"  [in] BSTR parameters,\n"
"\n"
"  // The parameters string\n"
"  [out, retval] BSTR * newparameters\n"
");\n"
msgstr ""

#. (para)
msgid ""
"This method is called from the settings dialog when the user clicks on the "
"\"Options\" button that is shown if <literal>HasOptions</literal> returns "
"TRUE. A plugin can show an options dialog to make it easier for the user to "
"configure the plugin."
msgstr ""

#. (para)
msgid ""
"The <literal>parameters</literal> string contains the plugin parameters "
"string that is already set/entered."
msgstr ""

#. (para)
msgid ""
"The <literal>newparameters</literal> return parameter must contain the "
"parameters string which the plugin constructed from the info it gathered in "
"its options dialog. That <literal>paramameters</literal> string is passed to"
" all other IBugtraqProvider and IBugtraqProvider2 methods."
msgstr ""

#. (title)
msgid "Frequently Asked Questions (FAQ)"
msgstr "Pyetjet e Shpeshta (FAQ)"

#. (primary)
msgid "FAQ"
msgstr "FAQ"

#. (para)
msgid ""
"Because TortoiseSVN is being developed all the time it is sometimes hard to "
"keep the documentation completely up to date. We maintain an <ulink "
"url=\"http://tortoisesvn.net/faq.html\"><citetitle>online "
"FAQ</citetitle></ulink> which contains a selection of the questions we are "
"asked the most on the TortoiseSVN mailing lists "
"<email>dev@tortoisesvn.tigris.org</email> and "
"<email>users@tortoisesvn.tigris.org</email>."
msgstr ""

#. (para)
msgid ""
"We also maintain a project <ulink "
"url=\"http://code.google.com/p/tortoisesvn/wiki/IssueTracker?tm=3\"><citetitle>Issue"
" Tracker</citetitle></ulink> which tells you about some of the things we "
"have on our To-Do list, and bugs which have already been fixed. If you think"
" you have found a bug, or want to request a new feature, check here first to"
" see if someone else got there before you."
msgstr ""

#. (para)
msgid ""
"<email>users@tortoisesvn.tigris.org</email> is the one to use if you have "
"questions about using TortoiseSVN."
msgstr ""

#. (para)
msgid ""
"If you want to help out with the development of TortoiseSVN, then you should"
" take part in discussions on <email>dev@tortoisesvn.tigris.org</email>."
msgstr ""

#. (para)
msgid ""
"If you want to help with the translation of the TortoiseSVN user interface "
"or the documentation, send an e-mail to "
"<email>translators@tortoisesvn.tigris.org</email>."
msgstr ""

#. (para)
msgid ""
"If you have a question which is not answered anywhere else, the best place "
"to ask it is on one of the mailing lists: <placeholder-1/>"
msgstr ""

#. (title)
msgid "How Do I..."
msgstr "Si të..."

#. (para)
msgid ""
"This appendix contains solutions to problems/questions you might have when "
"using TortoiseSVN."
msgstr ""

#. (title)
msgid "Move/copy a lot of files at once"
msgstr ""

#. (primary)
msgid "moving"
msgstr ""

#. (primary)
msgid "reorganize"
msgstr ""

#. (para)
msgid ""
"Moving/Copying single files can be done by using "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Rename...</guimenuitem></menuchoice>."
" But if you want to move/copy a lot of files, this way is just too slow and "
"too much work."
msgstr ""

#. (para)
msgid ""
"The recommended way is by <action>right dragging</action> the files to the "
"new location. Simply <action>right click</action> on the files you want to "
"move/copy without releasing the mouse button. Then drag the files to the new"
" location and release the mouse button. A context menu will appear where you"
" can either choose <menuchoice><guimenu>Context "
"Menu</guimenu><guimenuitem>SVN Copy versioned files "
"here</guimenuitem></menuchoice>. or <menuchoice><guimenu>Context "
"Menu</guimenu><guimenuitem>SVN Move versioned files "
"here</guimenuitem></menuchoice>."
msgstr ""

#. (title)
msgid "Force users to enter a log message"
msgstr ""

#. (primary)
msgid "log message"
msgstr ""

#. (primary)
msgid "commit message"
msgstr ""

#. (primary)
msgid "empty message"
msgstr ""

#. (para)
msgid ""
"There are two ways to prevent users from committing with an empty log "
"message. One is specific to TortoiseSVN, the other works for all Subversion "
"clients, but requires access to the server directly."
msgstr ""

#. (title)
msgid "Hook-script on the server"
msgstr ""

#. (para)
msgid ""
"If you have direct access to the repository server, you can install a pre-"
"commit hook script which rejects all commits with an empty or too short log "
"message."
msgstr ""

#. (para)
msgid ""
"In the repository folder on the server, there's a sub-folder "
"<filename>hooks</filename> which contains some example hook scripts you can "
"use. The file <filename>pre-commit.tmpl</filename> contains a sample script "
"which will reject commits if no log message is supplied, or the message is "
"too short. The file also contains comments on how to install/use this "
"script. Just follow the instructions in that file."
msgstr ""

#. (para)
msgid ""
"This method is the recommended way if your users also use other Subversion "
"clients than TortoiseSVN. The drawback is that the commit is rejected by the"
" server and therefore users will get an error message. The client can't know"
" before the commit that it will be rejected. If you want to make TortoiseSVN"
" have the <guibutton>OK</guibutton> button disabled until the log message is"
" long enough then please use the method described below."
msgstr ""

#. (title)
msgid "Project properties"
msgstr ""

#. (para)
msgid ""
"TortoiseSVN uses properties to control some of its features. One of those "
"properties is the <literal>tsvn:logminsize</literal> property."
msgstr ""

#. (para)
msgid ""
"If you set that property on a folder, then TortoiseSVN will disable the "
"<guibutton>OK</guibutton> button in all commit dialogs until the user has "
"entered a log message with at least the length specified in the property."
msgstr ""

#. (para)
msgid ""
"For detailed information on those project properties, please refer to <xref "
"linkend=\"tsvn-dug-propertypage\"/>."
msgstr ""

#. (title)
msgid "Update selected files from the repository"
msgstr ""

#. (para)
msgid ""
"Normally you update your working copy using "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Update</guimenuitem></menuchoice>."
" But if you only want to pick up some new files that a colleague has added "
"without merging in any changes to other files at the same time, you need a "
"different approach."
msgstr ""

#. (para)
msgid ""
"Use <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Check for "
"Modifications</guimenuitem></menuchoice>. and click on <guibutton>Check "
"repository</guibutton> to see what has changed in the repository. Select the"
" files you want to update locally, then use the context menu to update just "
"those files."
msgstr ""

#. (title)
msgid "Roll back (Undo) revisions in the repository"
msgstr ""

#. (primary)
msgid "rollback"
msgstr ""

#. (primary)
msgid "undo commit"
msgstr ""

#. (primary)
msgid "undo change"
msgstr "rikthe ndryshimin"

#. (title)
msgid "Use the revision log dialog"
msgstr ""

#. (para)
msgid ""
"By far the easiest way to revert the changes from one or more revisions, is "
"to use the revision log dialog."
msgstr ""

#. (para)
msgid ""
"Select the file or folder in which you need to revert the changes. If you "
"want to revert all changes, this should be the top level folder."
msgstr ""

#. (para)
msgid ""
"Select <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Show "
"Log</guimenuitem></menuchoice> to display a list of revisions. You may need "
"to use <guibutton>Show All</guibutton> or <guibutton>Next 100</guibutton> to"
" show the revision(s) you are interested in."
msgstr ""

#. (para)
msgid ""
"Select the revision you wish to revert. If you want to undo a range of "
"revisions, select the first one and hold the <keycap>Shift</keycap> key "
"while selecting the last one. If you want to pick out individual revisions "
"and ranges, use the <keycap>Ctrl</keycap> key while selecting revisions. "
"<action>Right click</action> on the selected revision(s), then select "
"<menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Revert changes from "
"this revision</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"Or if you want to make an earlier revision the new HEAD revision, "
"<action>right click</action> on the selected revision, then select "
"<menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Revert to this "
"revision</guimenuitem></menuchoice>. This will discard "
"<emphasis>all</emphasis> changes after the selected revision."
msgstr ""

#. (para)
msgid ""
"You have reverted the changes within your working copy. Check the results, "
"then commit the changes."
msgstr ""

#. (title)
msgid "Use the merge dialog"
msgstr ""

#. (para)
msgid ""
"If you want to enter revision numbers as a list, you can use the Merge "
"dialog. The previous method uses merging behind the scenes; this method uses"
" it explicitly."
msgstr ""

#. (para)
msgid ""
"In your working copy select "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Merge</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"In the <guilabel>Merge Type</guilabel> dialog select <guilabel>Merge a range"
" of revisions</guilabel>."
msgstr ""

#. (para)
msgid ""
"In the <guilabel>From:</guilabel> field enter the full repository URL of "
"your working copy folder. This should come up as the default URL."
msgstr ""

#. (para)
msgid ""
"In the <guilabel>Revision range to merge</guilabel> field enter the list of "
"revisions to roll back (or use the log dialog to select them as described "
"above)."
msgstr ""

#. (para)
msgid "Make sure the <guilabel>Reverse merge</guilabel> checkbox is checked."
msgstr ""

#. (para)
msgid "In the <guilabel>Merge options</guilabel> dialog accept the defaults."
msgstr ""

#. (para)
msgid "Click <guibutton>Merge</guibutton> to complete the merge."
msgstr ""

#. (para)
msgid ""
"You have reverted the changes within your working copy. Check that the "
"results are as expected, then commit the changes."
msgstr ""

#. (title)
msgid "Use <literal>svndumpfilter</literal>"
msgstr ""

#. (para)
msgid ""
"Since TortoiseSVN never loses data, your <quote>rolled back</quote> "
"revisions still exist as intermediate revisions in the repository. Only the "
"HEAD revision was changed to a previous state. If you want to make revisions"
" disappear completely from your repository, erasing all trace that they ever"
" existed, you have to use more extreme measures. Unless there is a really "
"good reason to do this, it is <emphasis>not recommended</emphasis>. One "
"possible reason would be that someone committed a confidential document to a"
" public repository."
msgstr ""

#. (para)
msgid ""
"The only way to remove data from the repository is to use the Subversion "
"command line tool <literal>svnadmin</literal>. You can find a description of"
" how this works in the <ulink url=\"http://svnbook.red-"
"bean.com/en/1.8/svn.reposadmin.maint.html\"><citetitle>Repository "
"Maintenance</citetitle></ulink>."
msgstr ""

#. (title)
msgid "Compare two revisions of a file or folder"
msgstr ""

#. (primary)
msgid "compare files"
msgstr "krahaso skedat"

#. (primary)
msgid "compare folders"
msgstr "krahaso dosjet"

#. (primary)
msgid "changes"
msgstr "ndryshimet"

#. (para)
msgid ""
"If you want to compare two revisions in an item's history, for example "
"revisions 100 and 200 of the same file, just use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Show "
"Log</guimenuitem></menuchoice> to list the revision history for that file. "
"Pick the two revisions you want to compare then use "
"<menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Compare "
"Revisions</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"If you want to compare the same item in two different trees, for example the"
" trunk and a branch, you can use the repository browser to open up both "
"trees, select the file in both places, then use <menuchoice><guimenu>Context"
" Menu</guimenu><guimenuitem>Compare Revisions</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"If you want to compare two trees to see what has changed, for example the "
"trunk and a tagged release, you can use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Revision "
"Graph</guimenuitem></menuchoice> Select the two nodes to compare, then use "
"<menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Compare HEAD "
"Revisions</guimenuitem></menuchoice>. This will show a list of changed "
"files, and you can then select individual files to view the changes in "
"detail. You can also export a tree structure containing all the changed "
"files, or simply a list of all changed files. Read <xref linkend=\"tsvn-dug-"
"compare-revs\"/> for more information. Alternatively use "
"<menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Unified Diff of HEAD"
" Revisions</guimenuitem></menuchoice> to see a summary of all differences, "
"with minimal context."
msgstr ""

#. (title)
msgid "Include a common sub-project"
msgstr ""

#. (primary)
msgid "common projects"
msgstr "projektet e përbashkëta"

#. (primary)
msgid "vendor projects"
msgstr ""

#. (para)
msgid ""
"Sometimes you will want to include another project within your working copy,"
" perhaps some library code. There are at least 4 ways of dealing with this."
msgstr ""

#. (title)
msgid "Use svn:externals"
msgstr ""

#. (para)
msgid ""
"Set the <literal>svn:externals</literal> property for a folder in your "
"project. This property consists of one or more lines; each line has the name"
" of a sub-folder which you want to use as the checkout folder for common "
"code, and the repository URL that you want to be checked out there. For full"
" details refer to <xref linkend=\"tsvn-dug-externals\"/>."
msgstr ""

#. (para)
msgid ""
"Commit the new folder. Now when you update, Subversion will pull a copy of "
"that project from its repository into your working copy. The sub-folders "
"will be created automatically if required. Each time you update your main "
"working copy, you will also receive the latest version of all external "
"projects."
msgstr ""

#. (para)
msgid ""
"Of the three methods described, this is the only one which needs no setup on"
" the client side. Once externals are specified in the folder properties, all"
" clients will get populated folders when they update."
msgstr ""

#. (title)
msgid "Use a nested working copy"
msgstr ""

#. (para)
msgid ""
"Create a new folder within your project to contain the common code, but do "
"not add it to Subversion."
msgstr ""

#. (para)
msgid ""
"Select "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Checkout</guimenuitem></menuchoice>"
" for the new folder and checkout a copy of the common code into it. You now "
"have a separate working copy nested within your main working copy."
msgstr ""

#. (para)
msgid ""
"The two working copies are independent. When you commit changes to the "
"parent, changes to the nested WC are ignored. Likewise when you update the "
"parent, the nested WC is not updated."
msgstr ""

#. (title)
msgid "Use a relative location"
msgstr ""

#. (para)
msgid ""
"If you use the same common core code in several projects, and you do not want to keep multiple working copies of it for every project that uses it, you can just check it out to a separate location which is related to all the other projects which use it. For example: <screen>\n"
"C:\\Projects\\Proj1\n"
"C:\\Projects\\Proj2\n"
"C:\\Projects\\Proj3\n"
"C:\\Projects\\Common\n"
"</screen> and refer to the common code using a relative path, e.g. <filename>..\\..\\Common\\DSPcore</filename>."
msgstr ""

#. (para)
msgid ""
"If your projects are scattered in unrelated locations you can use a variant of this, which is to put the common code in one location and use drive letter substitution to map that location to something you can hard code in your projects, e.g. Checkout the common code to <filename>D:\\Documents\\Framework</filename> or <filename>C:\\Documents and Settings\\{login}\\My Documents\\framework</filename> then use <screen>\n"
"SUBST X: \"D:\\Documents\\framework\"\n"
"</screen> to create the drive mapping used in your source code. Your code can then use absolute locations. <screen>\n"
"#include \"X:\\superio\\superio.h\"\n"
"</screen>"
msgstr ""

#. (para)
msgid ""
"This method will only work in an all-PC environment, and you will need to "
"document the required drive mappings so your team know where these "
"mysterious files are. This method is strictly for use in closed development "
"environments, and not recommended for general use."
msgstr ""

#. (title)
msgid "Add the project to the repository"
msgstr ""

#. (para)
msgid ""
"The maybe easiest way is to simply add the project in a subfolder to your "
"own project working copy. However this has the disadvantage that you have to"
" update and upgrade this external project manually."
msgstr ""

#. (para)
msgid ""
"To help with the upgrade, TortoiseSVN provides a command in the explorer "
"right-drag context menu. Simply right-drag the folder where you unzipped the"
" new version of the external library to the folder in your working copy, and"
" then select <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>SVN "
"Vendorbranch here</guimenuitem></menuchoice>. This will then copy the new "
"files over to the target folder while automatically adding new files and "
"removing files that aren't in the new version anymore."
msgstr ""

#. (title)
msgid "Create a shortcut to a repository"
msgstr ""

#. (primary)
msgid "shortcut"
msgstr "shkurtesë"

#. (para)
msgid ""
"If you frequently need to open the repository browser at a particular location, you can create a desktop shortcut using the automation interface to TortoiseProc. Just create a new shortcut and set the target to: <screen>\n"
"TortoiseProc.exe /command:repobrowser /path:\"url/to/repository\"\n"
"</screen> Of course you need to include the real repository URL."
msgstr ""

#. (title)
msgid "Ignore files which are already versioned"
msgstr ""

#. (primary)
msgid "remove versioning"
msgstr ""

#. (primary)
msgid "detach from repository"
msgstr ""

#. (para)
msgid ""
"If you accidentally added some files which should have been ignored, how do "
"you get them out of version control without losing them? Maybe you have your"
" own IDE configuration file which is not part of the project, but which took"
" you a long time to set up just the way you like it."
msgstr ""

#. (para)
msgid ""
"If you have not yet committed the add, then all you have to do is use "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Undo "
"Add...</guimenuitem></menuchoice> to undo the add. You should then add the "
"file(s) to the ignore list so they don't get added again later by mistake."
msgstr ""

#. (para)
msgid ""
"If the files are already in the repository, they have to be deleted from the"
" repository and added to the ignore list. Fortunately TortoiseSVN has a "
"convenient shortcut for doing this. "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Unversion and add to "
"ignore list</guimenuitem></menuchoice> will first mark the file/folder for "
"deletion from the repository, keeping the local copy. It also adds this item"
" to the ignore list so that it will not be added back into Subversion again "
"by mistake. Once this is done you just need to commit the parent folder."
msgstr ""

#. (title)
msgid "Unversion a working copy"
msgstr ""

#. (para)
msgid ""
"If you have a working copy which you want to convert back to a plain folder "
"tree without the <literal>.svn</literal> directories, you can simply export "
"it to itself. Read <xref linkend=\"tsvn-dug-export-unversion\"/> to find out"
" how."
msgstr ""

#. (title)
msgid "Remove a working copy"
msgstr ""

#. (para)
msgid ""
"If you have a working copy which you no longer need, how do you get rid of "
"it cleanly? Easy - just delete it in Windows Explorer! Working copies are "
"private local entities, and they are self-contained. Deleting a working copy"
" in Windows Explorer does not affect the data in the repository at all."
msgstr ""

#. (title)
msgid "Useful Tips For Administrators"
msgstr ""

#. (para)
msgid ""
"This appendix contains solutions to problems/questions you might have when "
"you are responsible for deploying TortoiseSVN to multiple client computers."
msgstr ""

#. (title)
msgid "Deploy TortoiseSVN via group policies"
msgstr ""

#. (primary)
#. (primary)
msgid "group policies"
msgstr ""

#. (primary)
#. (glossterm)
msgid "GPO"
msgstr "GPO"

#. (primary)
msgid "msi"
msgstr "msi"

#. (primary)
msgid "domain controller"
msgstr "kontrolluesi i domenit"

#. (primary)
msgid "deploy"
msgstr ""

#. (para)
msgid ""
"The TortoiseSVN installer comes as an MSI file, which means you should have "
"no problems adding that MSI file to the group policies of your domain "
"controller."
msgstr ""

#. (para)
msgid ""
"A good walk-through on how to do that can be found in the knowledge base "
"article 314934 from Microsoft: <ulink "
"url=\"http://support.microsoft.com/?kbid=314934\"><citetitle>http://support.microsoft.com/?kbid=314934</citetitle></ulink>."
msgstr ""

#. (para)
msgid ""
"TortoiseSVN must be installed under <emphasis>Computer "
"Configuration</emphasis> and not under <emphasis>User "
"Configuration</emphasis>. This is because TortoiseSVN needs the CRT and MFC "
"DLLs, which can only be deployed <emphasis>per computer</emphasis> and not "
"<emphasis>per user</emphasis>. If you really must install TortoiseSVN on a "
"per user basis, then you must first install the MFC and CRT package version "
"11 from Microsoft on each computer you want to install TortoiseSVN as per "
"user."
msgstr ""

#. (para)
msgid ""
"You can customize the MSI file if you wish so that all your users end up "
"with the same settings. TSVN settings are stored in the registry under "
"<filename>HKEY_CURRENT_USER\\Software\\TortoiseSVN</filename> and general "
"Subversion settings (which affect all Subversion clients) are stored in "
"config files under <filename>%APPDATA%\\Subversion</filename>. If you need "
"help with MSI customization, try one of the MSI transform forums or search "
"the web for <quote>MSI transform</quote>."
msgstr ""

#. (title)
msgid "Redirect the upgrade check"
msgstr ""

#. (primary)
msgid "upgrade check"
msgstr ""

#. (primary)
msgid "check new version"
msgstr "kontrollo version të ri"

#. (primary)
msgid "version"
msgstr "version"

#. (para)
msgid ""
"TortoiseSVN checks if there's a new version available every few days. If "
"there is a newer version available, a notification is shown in the commit "
"dialog."
msgstr ""

#. (title)
msgid "The commit dialog, showing the upgrade notification"
msgstr ""

#. (para)
msgid ""
"If you're responsible for a lot of users in your domain, you might want your"
" users to use only versions you have approved and not have them install "
"always the latest version. You probably don't want that upgrade notification"
" to show up so your users don't go and upgrade immediately."
msgstr ""

#. (para)
msgid ""
"Versions 1.4.0 and later of TortoiseSVN allow you to redirect that upgrade check to your intranet server. You can set the registry key <filename>HKCU\\Software\\TortoiseSVN\\UpdateCheckURL</filename> (string value) to an URL pointing to a text file in your intranet. That text file must have the following format: <screen>\n"
"1.4.1.6000\n"
"A new version of TortoiseSVN is available for you to download!\n"
"http://192.168.2.1/downloads/TortoiseSVN-1.4.1.6000-svn-1.4.0.msi\n"
"</screen> The first line in that file is the version string. You must make sure that it matches the exact version string of the TortoiseSVN installation package. The second line is a custom text, shown in the commit dialog. You can write there whatever you want. Just note that the space in the commit dialog is limited. Too long messages will get truncated! The third line is the URL to the new installation package. This URL is opened when the user clicks on the custom message label in the commit dialog. You can also just point the user to a web page instead of the MSI file directly. The URL is opened with the default web browser, so if you specify a web page, that page is opened and shown to the user. If you specify the MSI package, the browser will ask the user to save the MSI file locally."
msgstr ""

#. (title)
msgid ""
"Setting the <literal>SVN_ASP_DOT_NET_HACK</literal> environment variable"
msgstr ""

#. (primary)
msgid "SVN_ASP_DOT_NET_HACK"
msgstr "SVN_ASP_DOT_NET_HACK"

#. (primary)
msgid "VS2003"
msgstr "VS2003"

#. (primary)
msgid "ASP projects"
msgstr "ASP projektet"

#. (para)
msgid ""
"As of version 1.4.0 and later, the TortoiseSVN installer doesn't provide the"
" user with the option to set the <literal>SVN_ASP_DOT_NET_HACK</literal> "
"environment variable anymore, since that caused many problems and confusion "
"for users who always install <emphasis>everything</emphasis> no matter "
"whether they know what it is for."
msgstr ""

#. (para)
msgid ""
"But that option is only hidden for the user. You still can force the TortoiseSVN installer to set that environment variable by setting the <literal>ASPDOTNETHACK</literal> property to TRUE. For example, you can start the installer like this: <screen>\n"
"msiexec /i TortoiseSVN-1.4.0.msi ASPDOTNETHACK=TRUE\n"
"</screen>"
msgstr ""

#. (para)
msgid ""
"Please note that this hack is only necessary if you're still using "
"VS.NET2002. All later versions of Visual Studio do <emphasis>not</emphasis> "
"require this hack to be activated! So unless you're using that ancient tool,"
" DO NOT USE THIS!"
msgstr ""

#. (title)
msgid "Disable context menu entries"
msgstr ""

#. (primary)
msgid "context menu entries"
msgstr ""

#. (primary)
msgid "disable functions"
msgstr ""

#. (para)
msgid ""
"As of version 1.5.0 and later, TortoiseSVN allows you to disable (actually, "
"hide) context menu entries. Since this is a feature which should not be used"
" lightly but only if there is a compelling reason, there is no GUI for this "
"and it has to be done directly in the registry. This can be used to disable "
"certain commands for users who should not use them. But please note that "
"only the context menu entries in the <emphasis>explorer</emphasis> are "
"hidden, and the commands are still available through other means, e.g. the "
"command line or even other dialogs in TortoiseSVN itself!"
msgstr ""

#. (para)
msgid ""
"The registry keys which hold the information on which context menus to show "
"are "
"<filename>HKEY_CURRENT_USER\\Software\\TortoiseSVN\\ContextMenuEntriesMaskLow</filename>"
" and "
"<filename>HKEY_CURRENT_USER\\Software\\TortoiseSVN\\ContextMenuEntriesMaskHigh</filename>."
msgstr ""

#. (para)
msgid ""
"Each of these registry entries is a <literal>DWORD</literal> value, with "
"each bit corresponding to a specific menu entry. A set bit means the "
"corresponding menu entry is deactivated."
msgstr ""

#. (title)
msgid "Menu entries and their values"
msgstr ""

#. (entry)
msgid "Value"
msgstr "Vlera"

#. (entry)
msgid "Menu entry"
msgstr ""

#. (entry)
#. (title)
#. (glossterm)
msgid "Checkout"
msgstr ""

#. (entry)
#. (title)
#. (glossterm)
msgid "Update"
msgstr "Përditëso"

#. (entry)
#. (title)
#. (glossterm)
msgid "Commit"
msgstr "Parashtro"

#. (entry)
#. (title)
#. (glossterm)
msgid "Add"
msgstr "Shto"

#. (entry)
#. (title)
#. (glossterm)
msgid "Revert"
msgstr "Rikthe"

#. (entry)
#. (glossterm)
msgid "Resolve"
msgstr ""

#. (entry)
#. (title)
#. (glossterm)
msgid "Export"
msgstr "Eksporto"

#. (entry)
msgid "Create Repository here"
msgstr ""

#. (entry)
#. (title)
msgid "Branch/Tag"
msgstr ""

#. (entry)
#. (title)
#. (glossterm)
msgid "Merge"
msgstr "Bashko"

#. (entry)
#. (title)
#. (glossterm)
msgid "Delete"
msgstr "Grise"

#. (entry)
#. (title)
msgid "Rename"
msgstr "Riemëro"

#. (entry)
msgid "Update to revision"
msgstr ""

#. (entry)
#. (title)
#. (glossterm)
msgid "Diff"
msgstr ""

#. (entry)
#. (title)
msgid "Show Log"
msgstr ""

#. (entry)
#. (title)
msgid "Edit Conflicts"
msgstr ""

#. (entry)
#. (title)
#. (glossterm)
msgid "Relocate"
msgstr "Zhvendos"

#. (entry)
msgid "Check for modifications"
msgstr "Kontrollo për ndryshime"

#. (entry)
msgid "Ignore"
msgstr "Injoro"

#. (entry)
msgid "Repository Browser"
msgstr ""

#. (entry)
#. (title)
#. (glossterm)
msgid "Blame"
msgstr "Fajëso"

#. (entry)
#. (title)
msgid "Create Patch"
msgstr ""

#. (entry)
#. (title)
msgid "Apply Patch"
msgstr ""

#. (entry)
msgid "Revision graph"
msgstr ""

#. (entry)
#. (glossterm)
msgid "Lock"
msgstr "Blloko"

#. (entry)
msgid "Remove Lock"
msgstr ""

#. (entry)
msgid "Properties"
msgstr ""

#. (entry)
msgid "Diff with URL"
msgstr "Ndryshimi me URL"

#. (entry)
msgid "Delete unversioned items"
msgstr ""

#. (entry)
msgid "Merge All"
msgstr "Bashko të Gjitha"

#. (entry)
msgid "Diff with previous version"
msgstr ""

#. (entry)
msgid "Paste"
msgstr "Hidh"

#. (entry)
msgid "Upgrade working copy"
msgstr ""

#. (entry)
msgid "Settings"
msgstr ""

#. (entry)
msgid "Help"
msgstr "Ndihmë"

#. (entry)
msgid "About"
msgstr "Rreth"

#. (para)
msgid ""
"Example: to disable the <quote>Relocate</quote> the <quote>Delete unversioned items</quote> and the <quote>Settings</quote> menu entries, add the values assigned to the entries like this: <screen>\n"
"  0x0000000000080000\n"
"+ 0x0000000080000000\n"
"+ 0x2000000000000000\n"
"= 0x2000000080080000\n"
"</screen> The lower <literal>DWORD</literal> value (<literal>0x80080000</literal>) must then be stored in <filename>HKEY_CURRENT_USER\\Software\\TortoiseSVN\\ContextMenuEntriesMaskLow</filename>, the higher <literal>DWORD</literal> value (<literal>0x20000000</literal>) in <filename>HKEY_CURRENT_USER\\Software\\TortoiseSVN\\ContextMenuEntriesMaskHigh</filename>."
msgstr ""

#. (para)
msgid "To enable the menu entries again, simply delete the two registry keys."
msgstr ""

#. (title)
msgid "Automating TortoiseSVN"
msgstr ""

#. (para)
msgid ""
"Since all commands for TortoiseSVN are controlled through command line "
"parameters, you can automate it with batch scripts or start specific "
"commands and dialogs from other programs (e.g. your favourite text editor)."
msgstr ""

#. (para)
msgid ""
"Remember that TortoiseSVN is a GUI client, and this automation guide shows "
"you how to make the TortoiseSVN dialogs appear to collect user input. If you"
" want to write a script which requires no input, you should use the official"
" Subversion command line client instead."
msgstr ""

#. (title)
#. (title)
msgid "TortoiseSVN Commands"
msgstr ""

#. (primary)
#. (primary)
#. (primary)
msgid "automation"
msgstr "automatizim"

#. (primary)
#. (primary)
msgid "command line"
msgstr ""

#. (para)
msgid ""
"The TortoiseSVN GUI program is called <literal>TortoiseProc.exe</literal>. "
"All commands are specified with the parameter <option>/command:abcd</option>"
" where <literal>abcd</literal> is the required command name. Most of these "
"commands need at least one path argument, which is given with "
"<option>/path:\"some\\path\"</option>. In the following table the command "
"refers to the <option>/command:abcd</option> parameter and the path refers "
"to the <option>/path:\"some\\path\"</option> parameter."
msgstr ""

#. (para)
msgid ""
"Since some of the commands can take a list of target paths (e.g. committing "
"several specific files) the <option>/path</option> parameter can take "
"several paths, separated by a <literal>*</literal> character."
msgstr ""

#. (para)
msgid ""
"You can also specify a file which contains a list of paths, separated by "
"newlines. The file must be in UTF-16 format, without a <ulink "
"url=\"http://en.wikipedia.org/wiki/Byte-"
"order_mark\"><citetitle>BOM</citetitle></ulink>. If you pass such a file, "
"use <option>/pathfile</option> instead of <option>/path</option>. To have "
"TortoiseProc delete that file after the command is finished, you can pass "
"the parameter <option>/deletepathfile</option>."
msgstr ""

#. (para)
msgid ""
"The progress dialog which is used for commits, updates and many more "
"commands usually stays open after the command has finished until the user "
"presses the <guibutton>OK</guibutton> button. This can be changed by "
"checking the corresponding option in the settings dialog. But using that "
"setting will close the progress dialog, no matter if you start the command "
"from your batch file or from the TortoiseSVN context menu."
msgstr ""

#. (para)
msgid ""
"To specify a different location of the configuration file, use the parameter"
" <option>/configdir:\"path\\to\\config\\directory\"</option>. This will "
"override the default path, including any registry setting."
msgstr ""

#. (para)
msgid "<option>/closeonend:0</option> don't close the dialog automatically"
msgstr ""

#. (para)
msgid "<option>/closeonend:1</option> auto close if no errors"
msgstr ""

#. (para)
msgid "<option>/closeonend:2</option> auto close if no errors and conflicts"
msgstr ""

#. (para)
msgid ""
"<option>/closeonend:3</option> auto close if no errors, conflicts and merges"
msgstr ""

#. (para)
msgid ""
"To close the progress dialog at the end of a command automatically without "
"using the permanent setting you can pass the <option>/closeonend</option> "
"parameter. <placeholder-1/> To close the progress dialog for local "
"operations if there were no errors or conflicts, pass the "
"<option>/closeforlocal</option> parameter."
msgstr ""

#. (para)
msgid ""
"The table below lists all the commands which can be accessed using the "
"TortoiseProc.exe command line. As described above, these should be used in "
"the form <literal>/command:abcd</literal>. In the table, the "
"<literal>/command</literal> prefix is omitted to save space."
msgstr ""

#. (title)
msgid "List of available commands and options"
msgstr ""

#. (entry)
msgid "Command"
msgstr "Komanda"

#. (entry)
msgid "Shows the about dialog. This is also shown if no command is given."
msgstr ""

#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
#. (option)
msgid "/path"
msgstr "/path"

#. (option)
#. (option)
msgid "/startrev:xxx"
msgstr "/startrev:xxx"

#. (option)
#. (option)
msgid "/endrev:xxx"
msgstr "/endrev:xxx"

#. (option)
msgid "/strict"
msgstr "/strict"

#. (option)
msgid "/merge"
msgstr "/merge"

#. (option)
msgid "/findstring:\"filterstring\""
msgstr "/findstring:\"filterstring\""

#. (option)
msgid "/findtext"
msgstr "/findtext"

#. (option)
msgid "/findregex"
msgstr "/findregex"

#. (option)
msgid "/findtype:X"
msgstr "/findtype:X"

#. (para)
msgid "<option>/findtype:0</option> filter by everything"
msgstr ""

#. (para)
msgid "<option>/findtype:1</option> filter by messages"
msgstr ""

#. (para)
msgid "<option>/findtype:2</option> filter by path"
msgstr ""

#. (para)
msgid "<option>/findtype:4</option> filter by authors"
msgstr "<option>/findtype:4</option> filtrues nga autorët"

#. (para)
msgid "<option>/findtype:8</option> filter by revisions"
msgstr ""

#. (para)
msgid "<option>/findtype:16</option> not used"
msgstr ""

#. (para)
msgid "<option>/findtype:32</option> filter by bug ID"
msgstr ""

#. (para)
msgid "<option>/findtype:64</option> not used"
msgstr ""

#. (para)
msgid "<option>/findtype:128</option> filter by date"
msgstr ""

#. (para)
msgid "<option>/findtype:256</option> filter by date range"
msgstr ""

#. (option)
msgid "/outfile:path\\to\\file"
msgstr "/outfile:path\\to\\file"

#. (entry)
msgid ""
"Opens the log dialog. The <placeholder-1/> specifies the file or folder for "
"which the log should be shown. Additional options can be set: "
"<placeholder-2/>, <placeholder-3/>, <placeholder-4/> enables the 'stop-on-"
"copy' checkbox, <placeholder-5/> enables the 'include merged revisions' "
"checkbox, <placeholder-6/> fills in the filter text, <placeholder-7/> forces"
" the filter to use text, not regex, or <placeholder-8/> forces the filter to"
" use regex, not simple text search, and <placeholder-9/> with X being a "
"number between 0 and 511. The numbers are the sum of the following options: "
"<placeholder-10/> If <placeholder-11/> is specified, the selected revisions "
"are written to that file when the log dialog is closed. The revisions are "
"written in the same format as is used to specify revisions in the merge "
"dialog."
msgstr ""

#. (option)
#. (option)
#. (option)
msgid "/url"
msgstr "/url"

#. (option)
#. (option)
msgid "/blockpathadjustments"
msgstr "/blockpathadjustments"

#. (option)
msgid "/revision:XXX"
msgstr "/revision:XXX"

#. (entry)
msgid ""
"Opens the checkout dialog. The <placeholder-1/> specifies the target "
"directory and the <placeholder-2/> specifies the URL to checkout from. If "
"you specify the key <placeholder-3/>, the automatic checkout path "
"adjustments are blocked. The <placeholder-4/> specifies the revision to "
"check out."
msgstr ""

#. (option)
#. (option)
#. (option)
msgid "/logmsg"
msgstr "/logmsg"

#. (option)
#. (option)
#. (option)
msgid "/logmsgfile:path"
msgstr "/logmsgfile:path"

#. (option)
#. (option)
#. (option)
msgid "path"
msgstr ""

#. (entry)
msgid ""
"Opens the import dialog. The <placeholder-1/> specifies the directory with "
"the data to import. You can also specify the <placeholder-2/> switch to pass"
" a predefined log message to the import dialog. Or, if you don't want to "
"pass the log message on the command line, use <placeholder-3/>, where "
"<placeholder-4/> points to a file containing the log message."
msgstr ""

#. (option)
msgid "/rev"
msgstr "/rev"

#. (option)
msgid "/rev:1234"
msgstr "/rev:1234"

#. (option)
msgid "/nonrecursive"
msgstr "/nonrecursive"

#. (option)
msgid "/ignoreexternals"
msgstr "/ignoreexternals"

#. (option)
msgid "/includeexternals"
msgstr "/includeexternals"

#. (option)
msgid "/stickydepth"
msgstr "/stickydepth"

#. (option)
msgid "/skipprechecks"
msgstr "/skipprechecks"

#. (entry)
msgid ""
"Updates the working copy in <placeholder-1/> to HEAD. If the option "
"<placeholder-2/> is given then a dialog is shown to ask the user to which "
"revision the update should go. To avoid the dialog specify a revision number"
" <placeholder-3/>. Other options are <placeholder-4/>, <placeholder-5/> and "
"<placeholder-6/>. The <placeholder-7/> indicates that the specified depth "
"should be sticky, creating a sparse checkout. The <placeholder-8/> can be "
"set to skip all checks that are done before an update. If this is specified,"
" then the <placeholder-9/> button is disabled, and the context menu to show "
"diffs is also disabled after the update."
msgstr ""

#. (option)
msgid "/bugid:\"the bug id here\""
msgstr "/bugid:\"the bug id here\""

#. (entry)
msgid ""
"Opens the commit dialog. The <placeholder-1/> specifies the target directory"
" or the list of files to commit. You can also specify the <placeholder-2/> "
"switch to pass a predefined log message to the commit dialog. Or, if you "
"don't want to pass the log message on the command line, use "
"<placeholder-3/>, where <placeholder-4/> points to a file containing the log"
" message. To pre-fill the bug ID box (in case you've set up integration with"
" bug trackers properly), you can use the <placeholder-5/> to do that."
msgstr ""

#. (entry)
msgid "Adds the files in <placeholder-1/> to version control."
msgstr ""

#. (entry)
msgid ""
"Reverts local modifications of a working copy. The <placeholder-1/> tells "
"which items to revert."
msgstr ""

#. (option)
msgid "/noui"
msgstr "/noui"

#. (option)
msgid "/noprogressui"
msgstr ""

#. (option)
msgid "/nodlg"
msgstr ""

#. (option)
msgid "/cleanup"
msgstr ""

#. (option)
msgid "/revert"
msgstr "/revert"

#. (option)
msgid "/delunversioned"
msgstr "/delunversioned"

#. (option)
msgid "/delignored"
msgstr "/delignored"

#. (option)
msgid "/refreshshell"
msgstr "/refreshshell"

#. (option)
msgid "/externals"
msgstr "/externals"

#. (entry)
msgid ""
"Cleans up interrupted or aborted operations and unlocks the working copy in "
"<placeholder-1/>. Use <placeholder-2/> to prevent the result dialog from "
"popping up (either telling about the cleanup being finished or showing an "
"error message). <placeholder-3/> also disables the progress dialog. "
"<placeholder-4/> disables showing the cleanup dialog where the user can "
"choose what exactly should be done in the cleanup. The available actions can"
" be specified with the options <placeholder-5/> for status cleanup, "
"<placeholder-6/>, <placeholder-7/>, <placeholder-8/>, <placeholder-9/> and "
"<placeholder-10/>."
msgstr ""

#. (option)
#. (option)
#. (option)
msgid "/noquestion"
msgstr "/noquestion"

#. (entry)
msgid ""
"Marks a conflicted file specified in <placeholder-1/> as resolved. If "
"<placeholder-2/> is given, then resolving is done without asking the user "
"first if it really should be done."
msgstr ""

#. (entry)
msgid "Creates a repository in <placeholder-1/>"
msgstr ""

#. (entry)
msgid ""
"Opens the switch dialog. The <placeholder-1/> specifies the target directory"
" and <placeholder-2/> the URL to switch to."
msgstr ""

#. (entry)
msgid ""
"Exports the working copy in <placeholder-1/> to another directory. If the "
"<placeholder-2/> points to an unversioned directory, a dialog will ask for "
"an URL to export to the directory in <placeholder-3/>. If you specify the "
"key <placeholder-4/>, the automatic export path adjustments are blocked."
msgstr ""

#. (option)
#. (option)
msgid "/droptarget"
msgstr "/droptarget"

#. (option)
msgid "/overwrite"
msgstr "/overwrite"

#. (option)
msgid "/autorename"
msgstr "/autorename"

#. (option)
msgid "/extended"
msgstr "/extended"

#. (literal)
msgid "localchanges"
msgstr ""

#. (literal)
msgid "unversioned"
msgstr ""

#. (entry)
msgid ""
"Exports the working copy in <placeholder-1/> to the directory specified in "
"<placeholder-2/>. This exporting does not use the export dialog but executes"
" directly. The option <placeholder-3/> specifies that existing files are "
"overwritten without user confirmation, and the option <placeholder-4/> "
"specifies that if files already exist, the exported files get automatically "
"renamed to avoid overwriting them. The option <placeholder-5/> can specify "
"either <placeholder-6/> to only export files that got changed locally, or "
"<placeholder-7/> to also export all unversioned items as well."
msgstr ""

#. (entry)
msgid ""
"Copies the folder in <placeholder-1/> recursively to the directory specified"
" in <placeholder-2/>. New files are added automatically, and missing files "
"get removed in the target working copy, basically ensuring that source and "
"destination are exactly the same."
msgstr ""

#. (option)
#. (option)
msgid "/fromurl:URL"
msgstr "/fromurl:URL"

#. (option)
msgid "/revrange:string"
msgstr "/revrange:string"

#. (option)
msgid "/tourl:URL"
msgstr "/tourl:URL"

#. (option)
msgid "/fromrev:xxx"
msgstr "/fromrev:xxx"

#. (option)
msgid "/torev:xxx"
msgstr "/torev:xxx"

#. (entry)
msgid ""
"Opens the merge dialog. The <placeholder-1/> specifies the target directory."
" For merging a revision range, the following options are available: "
"<placeholder-2/>, <placeholder-3/>. For merging two repository trees, the "
"following options are available: <placeholder-4/>, <placeholder-5/>, "
"<placeholder-6/> and <placeholder-7/>."
msgstr ""

#. (entry)
msgid ""
"Opens the merge all dialog. The <placeholder-1/> specifies the target "
"directory."
msgstr ""

#. (literal)
msgid "Switch working copy to new branch/tag"
msgstr ""

#. (option)
msgid "/switchaftercopy"
msgstr "/switchaftercopy"

#. (entry)
msgid ""
"Brings up the branch/tag dialog. The <placeholder-1/> is the working copy to"
" branch/tag from. And the <placeholder-2/> is the target URL. To already "
"check the option <placeholder-3/> you can pass the <placeholder-4/> switch. "
"You can also specify the <placeholder-5/> switch to pass a predefined log "
"message to the branch/tag dialog. Or, if you don't want to pass the log "
"message on the command line, use <placeholder-6/>, where <placeholder-7/> "
"points to a file containing the log message."
msgstr ""

#. (entry)
msgid "Opens the settings dialog."
msgstr ""

#. (entry)
msgid "Removes the file(s) in <placeholder-1/> from version control."
msgstr ""

#. (entry)
msgid ""
"Renames the file in <placeholder-1/>. The new name for the file is asked "
"with a dialog. To avoid the question about renaming similar files in one "
"step, pass <placeholder-2/>."
msgstr ""

#. (option)
#. (option)
#. (option)
msgid "/path2"
msgstr "/path2"

#. (option)
msgid "/ignoreprops"
msgstr ""

#. (option)
msgid "/pegrevision:xxx"
msgstr "/pegrevision:xxx"

#. (option)
msgid "/blame"
msgstr "/blame"

#. (option)
msgid "/line:xxx"
msgstr "/line:xxx"

#. (entry)
msgid ""
"Starts the external diff program specified in the TortoiseSVN settings. The "
"<placeholder-1/> specifies the first file. If the option <placeholder-2/> is"
" set, then the diff program is started with those two files. If "
"<placeholder-3/> is omitted, then the diff is done between the file in "
"<placeholder-4/> and its BASE. If the specified file also has property "
"modifications, the external diff tool is also started for each modified "
"property. To prevent that, pass the option <placeholder-5/>. To explicitly "
"set the revision numbers use <placeholder-6/> and <placeholder-7/>, and for "
"the optional peg revision use <placeholder-8/>. If <placeholder-9/> is set "
"and <placeholder-10/> is not set, then the diff is done by first blaming the"
" files with the given revisions. The parameter <placeholder-11/> specifies "
"the line to jump to when the diff is shown."
msgstr ""

#. (para)
msgid ""
"Depending on the URLs and revisions to compare, this either shows a unified "
"diff (if the option <option>unified</option> is set), a dialog with a list "
"of files that have changed or if the URLs point to files starts the diff "
"viewer for those two files."
msgstr ""

#. (para)
msgid ""
"The options <option>url1</option>, <option>url2</option>, "
"<option>revision1</option> and <option>revision2</option> must be specified."
" The options <option>pegrevision</option>, <option>ignoreancestry</option>, "
"<option>blame</option> and <option>unified</option> are optional."
msgstr ""

#. (para)
msgid ""
"If the specified url also has property modifications, the external diff tool"
" is also started for each modified property. To prevent that, pass the "
"option <option>/ignoreprops</option>."
msgstr ""

#. (entry)
msgid ""
"Starts the conflict editor specified in the TortoiseSVN settings with the "
"correct files for the conflicted file in <placeholder-1/>."
msgstr ""

#. (entry)
msgid ""
"Opens the relocate dialog. The <placeholder-1/> specifies the working copy "
"path to relocate."
msgstr ""

#. (entry)
msgid "Opens the help file."
msgstr ""

#. (option)
msgid "/remote"
msgstr "/remote"

#. (guilabel)
msgid "Check repository"
msgstr ""

#. (entry)
msgid ""
"Opens the check-for-modifications dialog. The <placeholder-1/> specifies the"
" working copy directory. If <placeholder-2/> is specified, the dialog "
"contacts the repository immediately on startup, as if the user clicked on "
"the <placeholder-3/> button."
msgstr ""

#. (para)
msgid ""
"Starts the repository browser dialog, pointing to the URL of the working "
"copy given in <option>/path</option> or <option>/path</option> points "
"directly to an URL."
msgstr ""

#. (para)
msgid ""
"An additional option <option>/rev:xxx</option> can be used to specify the "
"revision which the repository browser should show. If the "
"<option>/rev:xxx</option> is omitted, it defaults to HEAD."
msgstr ""

#. (para)
msgid ""
"If <option>/path</option> points to an URL, the "
"<option>/projectpropertiespath:path/to/wc</option> specifies the path from "
"where to read and use the project properties."
msgstr ""

#. (para)
msgid ""
"If <option>/outfile:path\\to\\file</option> is specified, the selected URL "
"and revision are written to that file when the repository browser is closed."
" The first line in that text file contains the URL, the second line the "
"revision in text format."
msgstr ""

#. (literal)
msgid "svn:ignore"
msgstr ""

#. (entry)
msgid ""
"Adds all targets in <placeholder-1/> to the ignore list, i.e. adds the "
"<placeholder-2/> property to those files."
msgstr ""

#. (para)
msgid ""
"Opens the blame dialog for the file specified in <option>/path</option>."
msgstr ""

#. (para)
msgid ""
"If the options <option>/startrev</option> and <option>/endrev</option> are "
"set, then the dialog asking for the blame range is not shown but the "
"revision values of those options are used instead."
msgstr ""

#. (para)
msgid ""
"If the option <option>/line:nnn</option> is set, TortoiseBlame will open "
"with the specified line number showing."
msgstr ""

#. (para)
msgid ""
"The options <option>/ignoreeol</option>, <option>/ignorespaces</option> and "
"<option>/ignoreallspaces</option> are also supported."
msgstr "Mundësitv <option>/ignoreeol</option>, <option>/ignorespaces</option> dhe <option>/ignoreallspaces</option>, gjithashtu mbështeten."

#. (option)
#. (option)
msgid "/savepath:path"
msgstr "/savepath:path"

#. (option)
msgid "/revision:xxx"
msgstr "/revision:xxx"

#. (entry)
msgid ""
"Saves a file from an URL or working copy path given in <placeholder-1/> to "
"the location given in <placeholder-2/>. The revision is given in "
"<placeholder-3/>. This can be used to get a file with a specific revision."
msgstr ""

#. (option)
msgid "/noview"
msgstr ""

#. (entry)
msgid ""
"Creates a patch file for the path given in <placeholder-1/>. To skip the "
"file Save-As dialog you can pass <placeholder-2/> to specify the path where "
"to save the patch file to directly. To prevent the unified diff viewer from "
"being started showing the patch file, pass <placeholder-3/>."
msgstr ""

#. (para)
msgid "Shows the revision graph for the path given in <option>/path</option>."
msgstr ""

#. (para)
msgid ""
"To create an image file of the revision graph for a specific path, but "
"without showing the graph window, pass <option>/output:path</option> with "
"the path to the output file. The output file must have an extension that the"
" revision graph can actually export to. These are: <literal>.svg</literal>, "
"<literal>.wmf</literal>, <literal>.png</literal>, <literal>.jpg</literal>, "
"<literal>.bmp</literal> and <literal>.gif</literal>."
msgstr ""

#. (para)
msgid ""
"Since the revision graph has many options that affect how it is shown, you "
"can also set the options to use when creating the output image file. Pass "
"these options with <option>/options:XXXX</option>, where "
"<literal>XXXX</literal> is a decimal value. The best way to find the "
"required options is to start the revision graph the usual way, set all user-"
"interface options and close the graph. Then the options you need to pass on "
"the command line can be read from the registry "
"<literal>HKCU\\Software\\TortoiseSVN\\RevisionGraphOptions</literal>."
msgstr ""

#. (entry)
msgid ""
"Locks a file or all files in a directory given in <placeholder-1/>. The "
"'lock' dialog is shown so the user can enter a comment for the lock."
msgstr ""

#. (entry)
msgid "Unlocks a file or all files in a directory given in <placeholder-1/>."
msgstr ""

#. (entry)
msgid ""
"Rebuilds the windows icon cache. Only use this in case the windows icons are"
" corrupted. A side effect of this (which can't be avoided) is that the icons"
" on the desktop get rearranged. To suppress the message box, pass "
"<placeholder-1/>."
msgstr ""

#. (para)
msgid ""
"Shows the properties dialog for the path given in <option>/path</option>."
msgstr ""

#. (para)
msgid ""
"For dealing with versioned properties this command requires a working copy."
msgstr ""

#. (para)
msgid ""
"Revision properties can be viewed/changed if <option>/path</option> is an "
"URL and <option>/rev:XXX</option> is specified."
msgstr ""

#. (para)
msgid ""
"To open the properties dialog directly for a specific property, pass the "
"property name as <option>/property:name</option>."
msgstr ""

#. (para)
msgid ""
"Examples (which should be entered on one line): <screen>\n"
"TortoiseProc.exe /command:commit\n"
"                 /path:\"c:\\svn_wc\\file1.txt*c:\\svn_wc\\file2.txt\"\n"
"                 /logmsg:\"test log message\" /closeonend:0\n"
"\n"
"TortoiseProc.exe /command:update /path:\"c:\\svn_wc\\\" /closeonend:0\n"
"\n"
"TortoiseProc.exe /command:log /path:\"c:\\svn_wc\\file1.txt\"\n"
"                 /startrev:50 /endrev:60 /closeonend:0\n"
"</screen>"
msgstr ""

#. (title)
msgid "Tsvncmd URL handler"
msgstr ""

#. (primary)
msgid "URL handler"
msgstr ""

#. (para)
msgid ""
"Using special URLs, it is also possible to call TortoiseProc from a web "
"page."
msgstr ""

#. (para)
msgid ""
"TortoiseSVN registers a new protocol <literal>tsvncmd:</literal> which can "
"be used to create hyperlinks that execute TortoiseSVN commands. The commands"
" and parameters are the same as when automating TortoiseSVN from the command"
" line."
msgstr ""

#. (para)
msgid "The format of the <literal>tsvncmd:</literal> URL is like this:"
msgstr ""

#. (literal)
msgid "tsvncmd:command:cmd?parameter:paramvalue?parameter:paramvalue"
msgstr ""

#. (para)
msgid ""
"with <literal>cmd</literal> being one of the allowed commands, "
"<literal>parameter</literal> being the name of a parameter like "
"<literal>path</literal> or <literal>revision</literal>, and "
"<literal>paramvalue</literal> being the value to use for that parameter. The"
" list of parameters allowed depends on the command used."
msgstr ""

#. (para)
msgid ""
"The following commands are allowed with <literal>tsvncmd:</literal> URLs: "
"<placeholder-1/>"
msgstr ""

#. (programlisting)
#, no-wrap
msgid ""
"\n"
"&lt;a href=\"tsvncmd:command:update?path:c:\\svn_wc?rev:1234\"&gt;Update&lt;/a&gt;\n"
msgstr "\n&lt;a href=\"tsvncmd:command:update?path:c:\\svn_wc?rev:1234\"&gt;Update&lt;/a&gt;\n"

#. (programlisting)
#, no-wrap
msgid ""
"\n"
"&lt;a href=\"tsvncmd:command:showcompare?\n"
"url1:https://stexbar.googlecode.com/svn/trunk/StExBar/src/setup/Setup.wxs?\n"
"url2:https://stexbar.googlecode.com/svn/trunk/StExBar/src/setup/Setup.wxs?\n"
"revision1:188?revision2:189\"&gt;compare&lt;/a&gt;\n"
msgstr "\n&lt;a href=\"tsvncmd:command:showcompare?\nurl1:https://stexbar.googlecode.com/svn/trunk/StExBar/src/setup/Setup.wxs?\nurl2:https://stexbar.googlecode.com/svn/trunk/StExBar/src/setup/Setup.wxs?\nrevision1:188?revision2:189\"&gt;compare&lt;/a&gt;\n"

#. (para)
msgid ""
"A simple example URL might look like this: <placeholder-1/> or in a more "
"complex case: <placeholder-2/>"
msgstr ""

#. (title)
msgid "TortoiseIDiff Commands"
msgstr ""

#. (para)
msgid ""
"The image diff tool has a few command line options which you can use to "
"control how the tool is started. The program is called "
"<literal>TortoiseIDiff.exe</literal>."
msgstr ""

#. (para)
msgid ""
"The table below lists all the options which can be passed to the image diff "
"tool on the command line."
msgstr ""

#. (title)
msgid "List of available options"
msgstr ""

#. (entry)
msgid "Option"
msgstr "Alternativa"

#. (entry)
msgid "Path to the file shown on the left."
msgstr ""

#. (entry)
#. (entry)
msgid ""
"A title string. This string is used in the image view title instead of the "
"full path to the image file."
msgstr ""

#. (entry)
msgid "Path to the file shown on the right."
msgstr ""

#. (entry)
msgid ""
"If specified, the image diff tool switches to the overlay mode (alpha "
"blend)."
msgstr ""

#. (entry)
msgid "If specified, the image diff tool fits both images together."
msgstr ""

#. (entry)
msgid "Shows the image info box."
msgstr ""

#. (para)
msgid ""
"Example (which should be entered on one line): <screen>\n"
"TortoiseIDiff.exe /left:\"c:\\images\\img1.jpg\" /lefttitle:\"image 1\"\n"
"                  /right:\"c:\\images\\img2.jpg\" /righttitle:\"image 2\"\n"
"                  /fit /overlay\n"
"</screen>"
msgstr ""

#. (title)
msgid "Command Line Interface Cross Reference"
msgstr ""

#. (primary)
msgid "command line client"
msgstr ""

#. (primary)
msgid "CLI"
msgstr "CLI"

#. (para)
msgid ""
"Sometimes this manual refers you to the main Subversion documentation, which"
" describes Subversion in terms of the Command Line Interface (CLI). To help "
"you understand what TortoiseSVN is doing behind the scenes, we have compiled"
" a list showing the equivalent CLI commands for each of TortoiseSVN's GUI "
"operations."
msgstr ""

#. (para)
msgid ""
"Even though there are CLI equivalents to what TortoiseSVN does, remember "
"that TortoiseSVN does <emphasis>not</emphasis> call the CLI but uses the "
"Subversion library directly."
msgstr ""

#. (para)
msgid ""
"If you think you have found a bug in TortoiseSVN, we may ask you to try to "
"reproduce it using the CLI, so that we can distinguish TortoiseSVN issues "
"from Subversion issues. This reference tells you which command to try."
msgstr ""

#. (title)
msgid "Conventions and Basic Rules"
msgstr ""

#. (para)
msgid ""
"In the descriptions which follow, the URL for a repository location is shown"
" simply as <literal>URL</literal>, and an example might be <systemitem "
"class=\"url\">http://tortoisesvn.googlecode.com/svn/trunk/</systemitem>. The"
" working copy path is shown simply as <literal>PATH</literal>, and an "
"example might be <filename>C:\\TortoiseSVN\\trunk</filename>."
msgstr ""

#. (para)
msgid ""
"Because TortoiseSVN is a Windows Shell Extension, it is not able to use the "
"notion of a current working directory. All working copy paths must be given "
"using the absolute path, not a relative path."
msgstr ""

#. (para)
msgid ""
"Certain items are optional, and these are often controlled by checkboxes or "
"radio buttons in TortoiseSVN. These options are shown in [square brackets] "
"in the command line definitions."
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn checkout [-depth ARG] [--ignore-externals] [-r rev] URL PATH\n"
msgstr "\nsvn checkout [-depth ARG] [--ignore-externals] [-r rev] URL PATH\n"

#. (para)
#. (para)
msgid ""
"The depth combo box items relate to the <literal>-depth</literal> argument."
msgstr ""

#. (para)
#. (para)
msgid ""
"If <guilabel>Omit externals</guilabel> is checked, use the <literal"
">--ignore-externals</literal> switch."
msgstr ""

#. (para)
msgid ""
"If you are checking out a specific revision, specify that after the URL "
"using <literal>-r</literal> switch."
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn info URL_of_WC\n"
"svn update [-r rev] PATH\n"
msgstr "\nsvn info URL_of_WC\nsvn update [-r rev] PATH\n"

#. (para)
msgid ""
"Updating multiple items is currently not an atomic operation in Subversion. "
"So TortoiseSVN first finds the HEAD revision of the repository, and then "
"updates all items to that particular revision number to avoid creating a "
"mixed revision working copy."
msgstr ""

#. (para)
msgid ""
"If only one item is selected for updating or the selected items are not all "
"from the same repository, TortoiseSVN just updates to HEAD."
msgstr ""

#. (para)
msgid ""
"No command line options are used here. <guilabel>Update to "
"revision</guilabel> also implements the update command, but offers more "
"options."
msgstr ""

#. (title)
msgid "Update to Revision"
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn info URL_of_WC\n"
"svn update [-r rev] [-depth ARG] [--ignore-externals] PATH\n"
msgstr "\nsvn info URL_of_WC\nsvn update [-r rev] [-depth ARG] [--ignore-externals] PATH\n"

#. (para)
msgid ""
"In TortoiseSVN, the commit dialog uses several Subversion commands. The "
"first stage is a status check which determines the items in your working "
"copy which can potentially be committed. You can review the list, diff files"
" against BASE and select the items you want to be included in the commit."
msgstr ""

#. (screen)
#. (screen)
#. (screen)
#, no-wrap
msgid ""
"\n"
"svn status -v PATH\n"
msgstr "\nsvn status -v PATH\n"

#. (para)
#. (para)
msgid ""
"If <guilabel>Show unversioned files</guilabel> is checked, TortoiseSVN will "
"also show all unversioned files and folders in the working copy hierarchy, "
"taking account of the ignore rules. This particular feature has no direct "
"equivalent in Subversion, as the <literal>svn status</literal> command does "
"not descend into unversioned folders."
msgstr ""

#. (para)
msgid ""
"If you check any unversioned files and folders, those items will first be "
"added to your working copy."
msgstr ""

#. (screen)
#. (screen)
#, no-wrap
msgid ""
"\n"
"svn add PATH...\n"
msgstr "\nsvn add PATH...\n"

#. (para)
msgid ""
"When you click on OK, the Subversion commit takes place. If you have left "
"all the file selection checkboxes in their default state, TortoiseSVN uses a"
" single recursive commit of the working copy. If you deselect some files, "
"then a non-recursive commit (<literal>-N</literal>) must be used, and every "
"path must be specified individually on the commit command line."
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn commit -m \"LogMessage\" [-depth ARG] [--no-unlock] PATH...\n"
msgstr "\nsvn commit -m \"LogMessage\" [-depth ARG] [--no-unlock] PATH...\n"

#. (para)
#. (para)
#. (para)
msgid ""
"<literal>LogMessage</literal> here represents the contents of the log "
"message edit box. This can be empty."
msgstr ""

#. (para)
msgid ""
"If <guilabel>Keep locks</guilabel> is checked, use the <literal>--no-"
"unlock</literal> switch."
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn diff PATH\n"
msgstr "\nsvn diff PATH\n"

#. (para)
msgid ""
"If you use Diff from the main context menu, you are diffing a modified file "
"against its BASE revision. The output from the CLI command above also does "
"this and produces output in unified-diff format. However, this is not what "
"TortoiseSVN is using. TortoiseSVN uses TortoiseMerge (or a diff program of "
"your choosing) to display differences visually between full-text files, so "
"there is no direct CLI equivalent."
msgstr ""

#. (para)
msgid ""
"You can also diff any 2 files using TortoiseSVN, whether or not they are "
"version controlled. TortoiseSVN just feeds the two files into the chosen "
"diff program and lets it work out where the differences lie."
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn log -v -r 0:N --limit 100 [--stop-on-copy] PATH\n"
"  or\n"
"svn log -v -r M:N [--stop-on-copy] PATH\n"
msgstr "\nsvn log -v -r 0:N --limit 100 [--stop-on-copy] PATH\n  or\nsvn log -v -r M:N [--stop-on-copy] PATH\n"

#. (para)
msgid ""
"By default, TortoiseSVN tries to fetch 100 log messages using the --limit "
"method. If the settings instruct it to use old APIs, then the second form is"
" used to fetch the log messages for 100 repository revisions."
msgstr ""

#. (para)
msgid ""
"If <guilabel>Stop on copy/rename</guilabel> is checked, use the <literal"
">--stop-on-copy</literal> switch."
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn status -v PATH\n"
"  or\n"
"svn status -u -v PATH\n"
msgstr "\nsvn status -v PATH\n  or\nsvn status -u -v PATH\n"

#. (para)
msgid ""
"The initial status check looks only at your working copy. If you click on "
"<guibutton>Check repository</guibutton> then the repository is also checked "
"to see which files would be changed by an update, which requires the "
"<literal>-u</literal> switch."
msgstr ""

#. (title)
msgid "Revision Graph"
msgstr ""

#. (para)
msgid ""
"The revision graph is a feature of TortoiseSVN only. There's no equivalent "
"in the command line client."
msgstr ""

#. (para)
msgid ""
"What TortoiseSVN does is an <screen>\n"
"svn info URL_of_WC\n"
"svn log -v URL\n"
"</screen> where URL is the repository <emphasis>root</emphasis> and then analyzes the data returned."
msgstr ""

#. (title)
msgid "Repo Browser"
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn info URL_of_WC\n"
"svn list [-r rev] -v URL\n"
msgstr "\nsvn info URL_of_WC\nsvn list [-r rev] -v URL\n"

#. (para)
msgid ""
"You can use <literal>svn info</literal> to determine the repository root, "
"which is the top level shown in the repository browser. You cannot navigate "
"<literal>Up</literal> above this level. Also, this command returns all the "
"locking information shown in the repository browser."
msgstr ""

#. (para)
msgid ""
"The <literal>svn list</literal> call will list the contents of a directory, "
"given a URL and revision."
msgstr ""

#. (para)
msgid ""
"This command has no CLI equivalent. It invokes TortoiseMerge or an external "
"3-way diff/merge tool to look at the files involved in the conflict and sort"
" out which lines to use."
msgstr ""

#. (title)
msgid "Resolved"
msgstr "Vendosur"

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn resolved PATH\n"
msgstr "\nsvn resolved PATH\n"

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn rename CURR_PATH NEW_PATH\n"
msgstr "\nsvn rename CURR_PATH NEW_PATH\n"

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn delete PATH\n"
msgstr "\nsvn delete PATH\n"

#. (para)
msgid ""
"The first stage is a status check which determines the items in your working"
" copy which can potentially be reverted. You can review the list, diff files"
" against BASE and select the items you want to be included in the revert."
msgstr ""

#. (para)
msgid ""
"When you click on OK, the Subversion revert takes place. If you have left "
"all the file selection checkboxes in their default state, TortoiseSVN uses a"
" single recursive (<literal>-R</literal>) revert of the working copy. If you"
" deselect some files, then every path must be specified individually on the "
"revert command line."
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn revert [-R] PATH...\n"
msgstr "\nsvn revert [-R] PATH...\n"

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn cleanup PATH\n"
msgstr "\nsvn cleanup PATH\n"

#. (title)
msgid "Get Lock"
msgstr ""

#. (para)
msgid ""
"The first stage is a status check which determines the files in your working"
" copy which can potentially be locked. You can select the items you want to "
"be locked."
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn lock -m \"LockMessage\" [--force] PATH...\n"
msgstr "\nsvn lock -m \"LockMessage\" [--force] PATH...\n"

#. (para)
msgid ""
"<literal>LockMessage</literal> here represents the contents of the lock "
"message edit box. This can be empty."
msgstr ""

#. (para)
msgid ""
"If <guilabel>Steal the locks</guilabel> is checked, use the "
"<literal>--force</literal> switch."
msgstr ""

#. (title)
msgid "Release Lock"
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn unlock PATH\n"
msgstr "\nsvn unlock PATH\n"

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn copy -m \"LogMessage\" URL URL\n"
"  or\n"
"svn copy -m \"LogMessage\" URL@rev URL@rev\n"
"  or\n"
"svn copy -m \"LogMessage\" PATH URL\n"
msgstr "\nsvn copy -m \"LogMessage\" URL URL\n  or\nsvn copy -m \"LogMessage\" URL@rev URL@rev\n  or\nsvn copy -m \"LogMessage\" PATH URL\n"

#. (listitem)
msgid "Specific revision in repository"
msgstr ""

#. (para)
msgid ""
"The Branch/Tag dialog performs a copy to the repository. There are 3 radio "
"button options: <placeholder-1/> which correspond to the 3 command line "
"variants above."
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn info URL_of_WC\n"
"svn switch [-r rev] URL PATH\n"
msgstr "\nsvn info URL_of_WC\nsvn switch [-r rev] URL PATH\n"

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn merge [--dry-run] --force From_URL@revN To_URL@revM PATH\n"
msgstr ""

#. (para)
msgid ""
"The <guibutton>Test Merge</guibutton> performs the same merge with the "
"<literal>--dry-run</literal> switch."
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn diff From_URL@revN To_URL@revM\n"
msgstr "\nsvn diff From_URL@revN To_URL@revM\n"

#. (para)
msgid ""
"The <guibutton>Unified diff</guibutton> shows the diff operation which will "
"be used to do the merge."
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn export [-r rev] [--ignore-externals] URL Export_PATH\n"
msgstr "\nsvn export [-r rev] [--ignore-externals] URL Export_PATH\n"

#. (para)
msgid ""
"This form is used when accessed from an unversioned folder, and the folder "
"is used as the destination."
msgstr ""

#. (para)
msgid ""
"Exporting a working copy to a different location is done without using the "
"Subversion library, so there's no matching command line equivalent."
msgstr ""

#. (para)
msgid ""
"What TortoiseSVN does is to copy all files to the new location while showing"
" you the progress of the operation. Unversioned files/folders can optionally"
" be exported too."
msgstr ""

#. (para)
msgid ""
"In both cases, if <guilabel>Omit externals</guilabel> is checked, use the "
"<literal>--ignore-externals</literal> switch."
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn switch --relocate From_URL To_URL\n"
msgstr "\nsvn switch --relocate From_URL To_URL\n"

#. (title)
msgid "Create Repository Here"
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"svnadmin create --fs-type fsfs PATH\n"
msgstr "\nsvnadmin create --fs-type fsfs PATH\n"

#. (para)
msgid ""
"If you selected a folder, TortoiseSVN first scans it recursively for items "
"which can be added."
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn import -m LogMessage PATH URL\n"
msgstr "\nsvn import -m LogMessage PATH URL\n"

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn blame -r N:M -v PATH\n"
"svn log -r N:M PATH\n"
msgstr "\nsvn blame -r N:M -v PATH\nsvn log -r N:M PATH\n"

#. (para)
msgid ""
"If you use TortoiseBlame to view the blame info, the file log is also "
"required to show log messages in a tooltip. If you view blame as a text "
"file, this information is not required."
msgstr ""

#. (title)
msgid "Add to Ignore List"
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn propget svn:ignore PATH &gt; tempfile\n"
"{edit new ignore item into tempfile}\n"
"svn propset svn:ignore -F tempfile PATH\n"
msgstr "\nsvn propget svn:ignore PATH &gt; tempfile\n{edit new ignore item into tempfile}\nsvn propset svn:ignore -F tempfile PATH\n"

#. (para)
msgid ""
"Because the <literal>svn:ignore</literal> property is often a multi-line "
"value, it is shown here as being changed via a text file rather than "
"directly on the command line."
msgstr ""

#. (screen)
#, no-wrap
msgid ""
"\n"
"svn diff PATH &gt; patch-file\n"
msgstr "\nsvn diff PATH &gt; patch-file\n"

#. (para)
msgid ""
"TortoiseSVN creates a patch file in unified diff format by comparing the "
"working copy with its BASE version."
msgstr ""

#. (para)
msgid ""
"Applying patches is a tricky business unless the patch and working copy are "
"at the same revision. Luckily for you, you can use TortoiseMerge, which has "
"no direct equivalent in Subversion."
msgstr ""

#. (title)
msgid "Implementation Details"
msgstr ""

#. (para)
msgid ""
"This appendix contains a more detailed discussion of the implementation of "
"some of TortoiseSVN's features."
msgstr ""

#. (primary)
msgid "overlay priority"
msgstr ""

#. (para)
msgid ""
"Every file and folder has a Subversion status value as reported by the "
"Subversion library. In the command line client, these are represented by "
"single letter codes, but in TortoiseSVN they are shown graphically using the"
" icon overlays. Because the number of overlays is very limited, each overlay"
" may represent one of several status values."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"images/ConflictIcon.png\"/> The "
"<emphasis>Conflicted</emphasis> overlay is used to represent the "
"<literal>conflicted</literal> state, where an update or switch results in "
"conflicts between local changes and changes downloaded from the repository. "
"It is also used to indicate the <literal>obstructed</literal> state, which "
"can occur when an operation is unable to complete."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"images/ModifiedIcon.png\"/> The "
"<emphasis>Modified</emphasis> overlay represents the "
"<literal>modified</literal> state, where you have made local modifications, "
"the <literal>merged</literal> state, where changes from the repository have "
"been merged with local changes, and the <literal>replaced</literal> state, "
"where a file has been deleted and replaced by another different file with "
"the same name."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"images/DeletedIcon.png\"/> The "
"<emphasis>Deleted</emphasis> overlay represents the "
"<literal>deleted</literal> state, where an item is scheduled for deletion, "
"or the <literal>missing</literal> state, where an item is not present. "
"Naturally an item which is missing cannot have an overlay itself, but the "
"parent folder can be marked if one of its child items is missing."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"images/AddedIcon.png\"/> The <emphasis>Added</emphasis> "
"overlay is simply used to represent the <literal>added</literal> status when"
" an item has been added to version control."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"images/InSubVersionIcon.png\"/> The <emphasis>In "
"Subversion</emphasis> overlay is used to represent an item which is in the "
"<literal>normal</literal> state, or a versioned item whose state is not yet "
"known. Because TortoiseSVN uses a background caching process to gather "
"status, it may take a few seconds before the overlay updates."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"images/ReadOnlyIcon.png\"/> The <emphasis>Needs "
"Lock</emphasis> overlay is used to indicate when a file has the <literal>svn"
":needs-lock</literal> property set."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"images/LockedIcon.png\"/> The <emphasis>Locked</emphasis>"
" overlay is used when the local working copy holds a lock for that file."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"images/IgnoredIcon.png\"/> The "
"<emphasis>Ignored</emphasis> overlay is used to represent an item which is "
"in the <literal>ignored</literal> state, either due to a global ignore "
"pattern, or the <literal>svn:ignore</literal> property of the parent folder."
" This overlay is optional."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"images/UnversionedIcon.png\"/> The "
"<emphasis>Unversioned</emphasis> overlay is used to represent an item which "
"is in the <literal>unversioned</literal> state. This is an item in a "
"versioned folder, but which is not under version control itself. This "
"overlay is optional."
msgstr ""

#. (para)
msgid ""
"If an item has Subversion status <literal>none</literal> (the item is not "
"within a working copy) then no overlay is shown. If you have chosen to "
"disable the <emphasis>Ignored</emphasis> and "
"<emphasis>Unversioned</emphasis> overlays then no overlay will be shown for "
"those files either."
msgstr ""

#. (para)
msgid ""
"An item can only have one Subversion status value. For example a file could "
"be locally modified and it could be marked for deletion at the same time. "
"Subversion returns a single status value - in this case "
"<literal>deleted</literal>. Those priorities are defined within Subversion "
"itself."
msgstr ""

#. (para)
msgid ""
"When TortoiseSVN displays the status recursively (the default setting), each"
" folder displays an overlay reflecting its own status and the status of all "
"its children. In order to display a single <emphasis>summary</emphasis> "
"overlay, we use the priority order shown above to determine which overlay to"
" use, with the <emphasis>Conflicted</emphasis> overlay taking highest "
"priority."
msgstr ""

#. (para)
msgid ""
"In fact, you may find that not all of these icons are used on your system. "
"This is because the number of overlays allowed by Windows is limited to 15. "
"Windows uses 4 of those, and the remaining 11 can be used by other "
"applications. If there are not enough overlay slots available, TortoiseSVN "
"tries to be a <emphasis>Good Citizen (TM)</emphasis> and limits its use of "
"overlays to give other apps a chance."
msgstr ""

#. (para)
msgid ""
"Since there are Tortoise clients available for other version control "
"systems, we've created a shared component which is responsible for showing "
"the overlay icons. The technical details are not important here, all you "
"need to know is that this shared component allows all Tortoise clients to "
"use the same overlays and therefore the limit of 11 available slots isn't "
"used up by installing more than one Tortoise client. Of course there's one "
"small drawback: all Tortoise clients use the same overlay icons, so you "
"can't figure out by the overlay icons what version control system a working "
"copy is using."
msgstr ""

#. (para)
msgid ""
"<emphasis>Normal</emphasis>, <emphasis>Modified</emphasis> and "
"<emphasis>Conflicted</emphasis> are always loaded and visible."
msgstr ""

#. (para)
msgid ""
"<emphasis>Deleted</emphasis> is loaded if possible, but falls back to "
"<emphasis>Modified</emphasis> if there are not enough slots."
msgstr ""

#. (para)
msgid ""
"<emphasis>Read-Only</emphasis> is loaded if possible, but falls back to "
"<emphasis>Normal</emphasis> if there are not enough slots."
msgstr ""

#. (para)
msgid ""
"<emphasis>Locked</emphasis> is loaded if possible, but falls back to "
"<emphasis>Normal</emphasis> if there are not enough slots."
msgstr ""

#. (para)
msgid ""
"<emphasis>Added</emphasis> is loaded if possible, but falls back to "
"<emphasis>Modified</emphasis> if there are not enough slots."
msgstr ""

#. (title)
msgid "Language Packs and Spell Checkers"
msgstr ""

#. (para)
msgid ""
"The standard installer has support only for English, but you can download "
"separate language packs and spell check dictionaries separately after "
"installation."
msgstr ""

#. (title)
msgid "Language Packs"
msgstr "Paketat e Gjuhës"

#. (primary)
msgid "language packs"
msgstr "paketat e gjuhës"

#. (primary)
msgid "translations"
msgstr "përkthimet"

#. (para)
msgid ""
"The TortoiseSVN user interface has been translated into many different "
"languages, so you may be able to download a language pack to suit your "
"needs. You can find the language packs on our <ulink "
"url=\"http://tortoisesvn.net/translation_status\"><citetitle>translation "
"status page</citetitle></ulink>. And if there is no language pack available,"
" why not join the team and submit your own translation ;-)"
msgstr ""

#. (para)
msgid ""
"Each language pack is packaged as a <literal>.msi</literal> installer. Just "
"run the install program and follow the instructions. After the installation "
"finishes, the translation will be available."
msgstr ""

#. (para)
msgid ""
"The documentation has also been translated into several different languages."
" You can download translated manuals from the <ulink "
"url=\"http://tortoisesvn.net/support\"><citetitle>support "
"page</citetitle></ulink> on our website."
msgstr ""

#. (title)
msgid "Spellchecker"
msgstr "Kontrolluesi gjuhësor"

#. (primary)
msgid "spellchecker"
msgstr "kontrolluesi gjuhësor"

#. (primary)
msgid "dictionary"
msgstr "Fjalori"

#. (para)
msgid ""
"TortoiseSVN includes a spell checker which allows you to check your commit "
"log messages. This is especially useful if the project language is not your "
"native language. The spell checker uses the same dictionary files as <ulink "
"url=\"http://openoffice.org\"><citetitle>OpenOffice</citetitle></ulink> and "
"<ulink url=\"http://mozilla.org\"><citetitle>Mozilla</citetitle></ulink>."
msgstr ""

#. (para)
msgid ""
"The installer automatically adds the US and UK English dictionaries. If you "
"want other languages, the easiest option is simply to install one of "
"TortoiseSVN's language packs. This will install the appropriate dictionary "
"files as well as the TortoiseSVN local user interface. After the "
"installation finishes, the dictionary will be available too."
msgstr ""

#. (para)
msgid ""
"Or you can install the dictionaries yourself. If you have OpenOffice or "
"Mozilla installed, you can copy those dictionaries, which are located in the"
" installation folders for those applications. Otherwise, you need to "
"download the required dictionary files from <ulink "
"url=\"http://wiki.services.openoffice.org/wiki/Dictionaries\"><citetitle>http://wiki.services.openoffice.org/wiki/Dictionaries</citetitle></ulink>."
msgstr ""

#. (filename)
msgid "en_US.aff"
msgstr "en_US.aff"

#. (filename)
msgid "en_US.dic"
msgstr "en_US.dic"

#. (para)
msgid ""
"Once you have got the dictionary files, you probably need to rename them so "
"that the filenames only have the locale chars in it. Example: "
"<placeholder-1/> Then just copy them to the <filename>bin</filename> sub-"
"folder of the TortoiseSVN installation folder. Normally this will be "
"<filename>C:\\Program Files\\TortoiseSVN\\bin</filename>. If you don't want "
"to litter the <filename>bin</filename> sub-folder, you can instead place "
"your spell checker files in <filename>C:\\Program "
"Files\\TortoiseSVN\\Languages</filename>. If that folder isn't there, you "
"have to create it first. The next time you start TortoiseSVN, the spell "
"checker will be available."
msgstr ""

#. (para)
msgid ""
"Check the <literal>tsvn:projectlanguage</literal> setting. Refer to <xref "
"linkend=\"tsvn-dug-propertypage\"/> for information about setting project "
"properties."
msgstr ""

#. (para)
msgid ""
"If no project language is set, or that language is not installed, try the "
"language corresponding to the Windows locale."
msgstr ""

#. (para)
msgid ""
"If the exact Windows locale doesn't work, try the <quote>Base</quote> "
"language, e.g. <literal>de_CH</literal> (Swiss-German) falls back to "
"<literal>de_DE</literal> (German)."
msgstr ""

#. (para)
msgid ""
"If none of the above works, then the default language is English, which is "
"included with the standard installation."
msgstr ""

#. (para)
msgid ""
"If you install multiple dictionaries, TortoiseSVN uses these rules to select"
" which one to use. <placeholder-1/>"
msgstr ""

#. (title)
msgid "Glossary"
msgstr ""

#. (para)
msgid ""
"A Subversion command that is used to add a file or directory to your working"
" copy. The new items are added to the repository when you commit."
msgstr ""

#. (glossterm)
msgid "BASE revision"
msgstr ""

#. (para)
msgid ""
"The current base revision of a file or folder in your <emphasis>working "
"copy</emphasis>. This is the revision the file or folder was in, when the "
"last checkout, update or commit was run. The BASE revision is normally not "
"equal to the HEAD revision."
msgstr ""

#. (para)
msgid ""
"This command is for text files only, and it annotates every line to show the"
" repository revision in which it was last changed, and the author who made "
"that change. Our GUI implementation is called TortoiseBlame and it also "
"shows the commit date/time and the log message when you hover the mouse of "
"the revision number."
msgstr ""

#. (glossterm)
msgid "BDB"
msgstr "BDB"

#. (para)
msgid ""
"Berkeley DB. A well tested database backend for repositories, that cannot be"
" used on network shares. Default for pre 1.2 repositories."
msgstr ""

#. (glossterm)
msgid "Branch"
msgstr ""

#. (para)
msgid ""
"A term frequently used in revision control systems to describe what happens "
"when development forks at a particular point and follows 2 separate paths. "
"You can create a branch off the main development line so as to develop a new"
" feature without rendering the main line unstable. Or you can branch a "
"stable release to which you make only bug fixes, while new developments take"
" place on the unstable trunk. In Subversion a branch is implemented as a "
"<quote>cheap copy</quote>."
msgstr ""

#. (para)
msgid ""
"A Subversion command which creates a local working copy in an empty "
"directory by downloading versioned files from the repository."
msgstr ""

#. (para)
msgid ""
"To quote from the Subversion book: <quote> Recursively clean up the working "
"copy, removing locks and resuming unfinished operations. If you ever get a "
"<emphasis>working copy locked</emphasis> error, run this command to remove "
"stale locks and get your working copy into a usable state again. </quote> "
"Note that in this context <emphasis>lock</emphasis> refers to local "
"filesystem locking, not repository locking."
msgstr ""

#. (para)
msgid ""
"This Subversion command is used to pass the changes in your local working "
"copy back into the repository, creating a new repository revision."
msgstr ""

#. (glossterm)
msgid "Conflict"
msgstr "Konflikt"

#. (para)
msgid ""
"When changes from the repository are merged with local changes, sometimes "
"those changes occur on the same lines. In this case Subversion cannot "
"automatically decide which version to use and the file is said to be in "
"conflict. You have to edit the file manually and resolve the conflict before"
" you can commit any further changes."
msgstr ""

#. (glossterm)
msgid "Copy"
msgstr "Kopjo"

#. (para)
msgid ""
"In a Subversion repository you can create a copy of a single file or an "
"entire tree. These are implemented as <quote>cheap copies</quote> which act "
"a bit like a link to the original in that they take up almost no space. "
"Making a copy preserves the history of the item in the copy, so you can "
"trace changes made before the copy was made."
msgstr ""

#. (para)
msgid ""
"When you delete a versioned item (and commit the change) the item no longer "
"exists in the repository after the committed revision. But of course it "
"still exists in earlier repository revisions, so you can still access it. If"
" necessary, you can copy a deleted item and <quote>resurrect</quote> it "
"complete with history."
msgstr ""

#. (para)
msgid ""
"Shorthand for <quote>Show Differences</quote>. Very useful when you want to "
"see exactly what changes have been made."
msgstr ""

#. (para)
msgid ""
"This command produces a copy of a versioned folder, just like a working "
"copy, but without the local <literal>.svn</literal> folders."
msgstr ""

#. (glossterm)
msgid "FSFS"
msgstr "FSFS"

#. (para)
msgid ""
"A proprietary Subversion filesystem backend for repositories. Can be used on"
" network shares. Default for 1.2 and newer repositories."
msgstr ""

#. (para)
msgid "Group policy object."
msgstr ""

#. (glossterm)
msgid "HEAD revision"
msgstr ""

#. (para)
msgid ""
"The latest revision of a file or folder in the "
"<emphasis>repository</emphasis>."
msgstr ""

#. (para)
msgid ""
"Subversion command to import an entire folder hierarchy into the repository "
"in a single revision."
msgstr ""

#. (para)
msgid ""
"When you take out a lock on a versioned item, you mark it in the repository "
"as non-committable, except from the working copy where the lock was taken "
"out."
msgstr ""

#. (glossterm)
msgid "Log"
msgstr ""

#. (para)
msgid ""
"Show the revision history of a file or folder. Also known as "
"<quote>History</quote>."
msgstr ""

#. (glossterm)
msgid "History"
msgstr "Historia"

#. (para)
msgid ""
"Show the revision history of a file or folder. Also known as "
"<quote>Log</quote>."
msgstr ""

#. (para)
msgid ""
"The process by which changes from the repository are added to your working "
"copy without disrupting any changes you have already made locally. Sometimes"
" these changes cannot be reconciled automatically and the working copy is "
"said to be in conflict."
msgstr ""

#. (para)
msgid ""
"Merging happens automatically when you update your working copy. You can "
"also merge specific changes from another branch using TortoiseSVN's Merge "
"command."
msgstr ""

#. (glossterm)
msgid "Patch"
msgstr ""

#. (para)
msgid ""
"If a working copy has changes to text files only, it is possible to use "
"Subversion's Diff command to generate a single file summary of those changes"
" in Unified Diff format. A file of this type is often referred to as a "
"<quote>Patch</quote>, and it can be emailed to someone else (or to a mailing"
" list) and applied to another working copy. Someone without commit access "
"can make changes and submit a patch file for an authorized committer to "
"apply. Or if you are unsure about a change you can submit a patch for others"
" to review."
msgstr ""

#. (glossterm)
msgid "Property"
msgstr ""

#. (para)
msgid ""
"In addition to versioning your directories and files, Subversion allows you "
"to add versioned metadata - referred to as <quote>properties</quote> to each"
" of your versioned directories and files. Each property has a name and a "
"value, rather like a registry key. Subversion has some special properties "
"which it uses internally, such as <literal>svn:eol-style</literal>. "
"TortoiseSVN has some too, such as <literal>tsvn:logminsize</literal>. You "
"can add your own properties with any name and value you choose."
msgstr ""

#. (para)
msgid ""
"If your repository moves, perhaps because you have moved it to a different "
"directory on your server, or the server domain name has changed, you need to"
" <quote>relocate</quote> your working copy so that its repository URLs point"
" to the new location."
msgstr ""

#. (para)
msgid ""
"Note: you should only use this command if your working copy is referring to "
"the same location in the same repository, but the repository itself has "
"moved. In any other circumstance you probably need the <quote>Switch</quote>"
" command instead."
msgstr ""

#. (glossterm)
msgid "Repository"
msgstr ""

#. (para)
msgid ""
"A repository is a central place where data is stored and maintained. A "
"repository can be a place where multiple databases or files are located for "
"distribution over a network, or a repository can be a location that is "
"directly accessible to the user without having to travel across a network."
msgstr ""

#. (para)
msgid ""
"When files in a working copy are left in a conflicted state following a "
"merge, those conflicts must be sorted out by a human using an editor (or "
"perhaps TortoiseMerge). This process is referred to as <quote>Resolving "
"Conflicts</quote>. When this is complete you can mark the conflicted files "
"as being resolved, which allows them to be committed."
msgstr ""

#. (para)
msgid ""
"Subversion keeps a local <quote>pristine</quote> copy of each file as it was"
" when you last updated your working copy. If you have made changes and "
"decide you want to undo them, you can use the <quote>revert</quote> command "
"to go back to the pristine copy."
msgstr ""

#. (glossterm)
msgid "Revision"
msgstr ""

#. (para)
msgid ""
"Every time you commit a set of changes, you create one new "
"<quote>revision</quote> in the repository. Each revision represents the "
"state of the repository tree at a certain point in its history. If you want "
"to go back in time you can examine the repository as it was at revision N."
msgstr ""

#. (para)
msgid ""
"In another sense, a revision can refer to the set of changes that were made "
"when that revision was created."
msgstr ""

#. (glossterm)
msgid "Revision Property (revprop)"
msgstr ""

#. (para)
msgid ""
"Just as files can have properties, so can each revision in the repository. "
"Some special revprops are added automatically when the revision is created, "
"namely: <literal>svn:date svn:author svn:log</literal> which represent the "
"commit date/time, the committer and the log message respectively. These "
"properties can be edited, but they are not versioned, so any change is "
"permanent and cannot be undone."
msgstr ""

#. (glossterm)
msgid "SVN"
msgstr "SVN"

#. (para)
msgid "A frequently-used abbreviation for Subversion."
msgstr ""

#. (para)
msgid ""
"The name of the Subversion custom protocol used by the "
"<quote>svnserve</quote> repository server."
msgstr ""

#. (para)
msgid ""
"Just as <quote>Update-to-revision</quote> changes the time window of a "
"working copy to look at a different point in history, so "
"<quote>Switch</quote> changes the space window of a working copy so that it "
"points to a different part of the repository. It is particularly useful when"
" working on trunk and branches where only a few files differ. You can switch"
" your working copy between the two and only the changed files will be "
"transferred."
msgstr ""

#. (para)
msgid ""
"This Subversion command pulls down the latest changes from the repository "
"into your working copy, merging any changes made by others with local "
"changes in the working copy."
msgstr ""

#. (para)
msgid ""
"This is your local <quote>sandbox</quote>, the area where you work on the "
"versioned files, and it normally resides on your local hard disk. You create"
" a working copy by doing a <quote>Checkout</quote> from a repository, and "
"you feed your changes back into the repository using <quote>Commit</quote>."
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>.
#. (None)
msgid "translator-credits"
msgstr ""

#. Place the translation of 'translation' here.
#. (None)
msgid "translator-translation"
msgstr ""

#. (title)
msgid "TortoiseMerge"
msgstr "TortoiseMerge"

#. (subtitle)
msgid "A diff/merge tool for Windows"
msgstr ""

#. (para)
msgid ""
"When working on a project, either an open-source project where several "
"people review your code, or a commercial project where you sell a component "
"with your source code, there will be people and customers who find bugs or "
"want to improve your project. To do that they send you patches which you "
"have to review and decide if you want to apply them."
msgstr ""

#. (para)
msgid "Reviewing patches"
msgstr ""

#. (para)
msgid "Applying the patches"
msgstr ""

#. (para)
msgid "TortoiseMerge helps you with both those tasks: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"TortoiseMerge also helps you to sort out conflicted files which can occur if"
" you're working with a source control system and others are working on the "
"same files as you."
msgstr ""

#. (title)
msgid "TortoiseMerge is free!"
msgstr "TortoiseMerge është falas!"

#. (para)
msgid ""
"TortoiseMerge is free. You don't have to pay for it, you can use it any way "
"you want. It is developed under the GP license (GPL)."
msgstr ""

#. (para)
msgid ""
"TortoiseMerge is an Open Source project. That means you have full read "
"access to the source code of this program. You can browse it on this link "
"<ulink "
"url=\"http://code.google.com/p/tortoisesvn/source/browse/\"><citetitle>http://code.google.com/p/tortoisesvn/source/browse/</citetitle></ulink>."
" The most recent version (where we're currently working) is located under "
"<filename>/trunk/</filename>, and the released versions are located under "
"<filename>/tags/</filename>."
msgstr ""

#. (para)
msgid "for the hard work on TortoiseMerge"
msgstr ""

#. (para)
msgid ""
"for the beautiful icons, logo, bug hunting and taking care of the "
"documentation"
msgstr ""

#. (para)
msgid ""
"for the patches, bug reports and new ideas, and for helping others by "
"answering questions on our mailing list."
msgstr ""

#. (title)
msgid "Introduction"
msgstr "Hyrje"

#. (title)
msgid "Overview"
msgstr ""

#. (para)
msgid ""
"TortoiseMerge is a free/open-source application. It lets you see differences"
" in text files, merge those changes and even review and apply unified diff "
"files, often called <firstterm>patches</firstterm>."
msgstr ""

#. (para)
msgid ""
"While working on text files, e.g. source files in your favourite programming"
" language, or html/xml files for your documentation or website, you will "
"often have a situation where you need to compare different versions of those"
" files. Sometimes you get a different version from someone else, sometimes "
"you just want to see the changes you've made."
msgstr ""

#. (para)
msgid ""
"If you're working with a version control system (e.g. Subversion) then you "
"sometimes get <emphasis>conflicts</emphasis> when you update your working "
"copy. This happens if someone else changed the same parts of the file you're"
" currently working on as you did. Then you have to resolve those conflicts "
"manually. This is where TortoiseMerge can help you."
msgstr ""

#. (para)
msgid ""
"The following diagram shows you the relationships between the files involved"
" in a conflict:"
msgstr ""

#. (title)
#. (title)
msgid "File Conflict"
msgstr ""

#. (para)
msgid ""
"A conflict can also occur if you try to apply an outdated patch file. In "
"such cases, without TortoiseMerge, you would either have to ask the person "
"you got that patch file from for a current version or try to apply that "
"patch file manually."
msgstr ""

#. (para)
msgid ""
"But now with TortoiseMerge this isn't necessary anymore - at least not if "
"you're working with a version control system like Subversion. TortoiseMerge "
"parses the patch file for the revision/version the patch was created for and"
" automatically tries to fetch that specific version from your source-"
"control. Then it applies the patch and lets you review both your changes to "
"the file, and theirs. Then you can decide which changes you want to keep."
msgstr ""

#. (title)
msgid "TortoiseMerge's History"
msgstr "Historia e TortoiseMerge"

#. (para)
msgid ""
"While working on <ulink "
"url=\"http://tortoisesvn.net\"><citetitle>TortoiseSVN</citetitle></ulink> we"
" found that whenever users sent in patches to enhance the project or just to"
" fix bugs, we had a lot of work just applying those patches. And many times "
"those patches were outdated and couldn't be applied with the command line "
"patch tool <ulink "
"url=\"http://unxutils.sourceforge.net/\"><citetitle>http://unxutils.sourceforge.net/</citetitle></ulink>"
" because we were working on those files and had sometimes changed those "
"files already."
msgstr ""

#. (para)
msgid ""
"This was also the main reason why TortoiseSVN did not originally have a "
"<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Create "
"Patch</guimenuitem></menuchoice> implemented: we preferred users to send us "
"the whole files because with those it was easier to apply patches."
msgstr ""

#. (para)
msgid ""
"So we spent a lot of time, searching the Internet for a GUI tool which could"
" apply patch files, but all we found was that such a tool didn't exist. So "
"to cut a long story short: We decided that if no-one else could provide such"
" a tool we would have to write our own. That's when TortoiseMerge was born."
msgstr ""

#. (para)
msgid ""
"Since TortoiseSVN already uses the Subversion library, which has a nice "
"diffing engine built in, it was just natural to use this library instead of "
"the GNU diff."
msgstr ""

#. (para)
msgid ""
"Viewing the difference between two files and merging changes into one of "
"them, or removing unwanted changes."
msgstr ""

#. (para)
msgid ""
"Editing conflicts between local changes and changes in the Subversion "
"repository following an update."
msgstr ""

#. (para)
msgid "Applying patch files. This is the reason TortoiseMerge was created :)"
msgstr ""

#. (para)
msgid "TortoiseMerge has several different uses: <placeholder-1/>"
msgstr ""

#. (title)
msgid "Viewing and Merging Differences"
msgstr ""

#. (para)
msgid ""
"In this mode you are comparing two files. The file in the left pane is "
"considered to be the original file (sometimes referred to as "
"<emphasis>Theirs</emphasis>, and the file in the right pane is the modified "
"file (sometimes referred to as <emphasis>Mine</emphasis>."
msgstr ""

#. (para)
msgid "Reverting changed lines back to the text shown in the left pane."
msgstr ""

#. (para)
msgid ""
"Using a combination of both blocks, either <emphasis>Theirs</emphasis> "
"before <emphasis>Mine</emphasis> or <emphasis>Mine</emphasis> before "
"<emphasis>Theirs</emphasis>."
msgstr ""

#. (para)
msgid ""
"You can make simple line-based changes to the file in the right pane which "
"include: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"You can also edit the file in the right pane just as you would in a text "
"editor. Such lines are marked using a pencil icon. Please note that if you "
"want to make any of the line/block-based changes described above, it is "
"better to do those first since once you start editing the file yourself it "
"becomes impossible for TortoiseMerge to keep track of the relationship to "
"the original files."
msgstr ""

#. (title)
msgid "Editing Conflicts"
msgstr "Duke Redaktuar Konfliktet"

#. (para)
msgid ""
"This is sometimes referred to as a three-way merge, and is shown in three "
"panes. However there are actually four files involved. The file which is not"
" shown is the common base file, the last common ancestor of the two files "
"which are now in conflict. The relationships between the three files are "
"explained in the diagram below:"
msgstr ""

#. (para)
msgid ""
"The base file represents the oldest version of a file, from where "
"<emphasis>You</emphasis> and <emphasis>They</emphasis> start making changes."
" <emphasis>Mine</emphasis> represents the base file with all the changes "
"<emphasis>you</emphasis> made, and <emphasis>Theirs</emphasis> is the file "
"with all the changes <emphasis>someone else</emphasis> made to the file. The"
" left pane shows the changes in <emphasis>Theirs</emphasis> relative to the "
"base file and the right pane shows the changes in <emphasis>Mine</emphasis> "
"relative to the base file. The bottom pane is the output file which is where"
" you are trying to resolve the conflicts."
msgstr ""

#. (para)
msgid ""
"In conflict resolution view, you can choose to use blocks from "
"<emphasis>Mine</emphasis> or <emphasis>Theirs</emphasis> or both. But in "
"this case, the changes are shown in the bottom pane."
msgstr ""

#. (title)
#. (title)
#. (title)
msgid "Applying Patches"
msgstr ""

#. (para)
msgid ""
"A patch file is a Subversion unified diff file, which contains the "
"information required to apply changes to a set of files. The patch may have "
"been supplied by another developer so that you can see changes he has made "
"and possibly commit them to the repository. Or it may have been generated "
"internally by TortoiseSVN when comparing two folders. This happens when you "
"compare a repository revision with your working copy folder, or if you "
"compare two different repository revisions, or if you compare two different "
"repository paths."
msgstr ""

#. (para)
msgid ""
"In either case TortoiseMerge will show a small window listing the files "
"included in the patch. By double clicking on one of these files you fetch "
"the relevant file and apply the changes. The left pane shows the original "
"file content and the right pane shows it after the patch is applied."
msgstr ""

#. (para)
msgid ""
"You can edit the file in the right pane exactly as you would in compare/edit"
" mode."
msgstr ""

#. (title)
msgid "Using TortoiseMerge"
msgstr ""

#. (title)
msgid "Viewing Modes"
msgstr ""

#. (para)
msgid ""
"TortoiseMerge has three main viewing modes: one-pane, two-pane and three-"
"pane view. One/two-pane view is used to view changes and three-pane view is "
"used to resolve conflicts."
msgstr ""

#. (title)
#. (title)
msgid "Viewing / Merging"
msgstr ""

#. (title)
msgid "One Pane View"
msgstr ""

#. (title)
msgid "Two Pane View"
msgstr ""

#. (para)
msgid ""
"Changes inside the modified lines are shown in different colors. Added "
"string parts are shown with a lighter color, but you can of course configure"
" the colors used here. Removed parts are indicated with a dark brown "
"vertical line in the string. Check out the screenshot above to see how this "
"works."
msgstr ""

#. (para)
msgid ""
"Code reorganization usually means a lot of changes in whitespaces (space, "
"tab, newlines) but no actual code change. For example, you split up a very "
"long line into several lines, or you sometimes compact several lines "
"together into one."
msgstr ""

#. (para)
msgid ""
"Such changes are marked with a white circle symbol on the left side of the "
"views. If you see such a white circle, you know immediately that no real "
"code change is there and you don't have to check the changed block further."
msgstr ""

#. (para)
msgid ""
"Hand editing of the file in the right pane is possible in two-pane view. "
"Such changes are marked with a pencil symbol. Hand editing of the file in "
"the left pane is also possible, only when <guibutton>Enable Edit "
"</guibutton> is pressed when the left pane is active."
msgstr ""

#. (para)
msgid ""
"The two pane view has some features which are not available in the one pane "
"view: <placeholder-1/>"
msgstr ""

#. (para)
msgid ""
"If you want to compare/merge three files, TortoiseMerge will show you the "
"differences in a three pane view. This view is also used if you need to "
"resolve conflicted files."
msgstr ""

#. (title)
msgid "Three Pane View"
msgstr ""

#. (para)
msgid ""
"The left pane shows you the differences between <emphasis>Their</emphasis> "
"file and the <emphasis>Base</emphasis> file, while the right pane shows you "
"the differences between <emphasis>Mine</emphasis> file and the "
"<emphasis>Base</emphasis> file. The bottom pane shows you the result of "
"merging <emphasis>Base</emphasis>, <emphasis>Mine</emphasis> and "
"<emphasis>Theirs</emphasis> with possible conflicts."
msgstr ""

#. (para)
msgid ""
"If you hover the mouse over the pane title, a tooltip will show the "
"filenames used for the diff in each pane."
msgstr ""

#. (para)
msgid ""
"Hand editing of the file in the left pane or right pane is also possible, "
"only when <guibutton>Enable Edit </guibutton> is pressed when that pane is "
"active."
msgstr ""

#. (title)
msgid "Patch File List"
msgstr ""

#. (para)
msgid ""
"After TortoiseMerge parses the patch file it will show you a small window "
"with all the files which have changes according to the patch file. "
"<placeholder-1/> If the filename is shown in black, then the patch can be "
"applied without any problems. That means the file is not outdated according "
"to the patch. However, if the filename is shown in red, then the patch can't"
" get applied directly because you already changed that file."
msgstr ""

#. (para)
msgid ""
"The patch file window has a context menu which allows you to preview the "
"effect of the patch on the current file (apply without saving), to apply and"
" save the changes for the selected file, or to apply and save changes to "
"<emphasis>all</emphasis> files in the list. The double click action is to "
"preview."
msgstr ""

#. (title)
msgid "Buttons and Other Controls"
msgstr ""

#. (para)
msgid ""
"Depending on your setting, you either see a toolbar or a ribbon with many "
"buttons. The buttons all show a tooltip explaining their function when you "
"hover the mouse pointer over them."
msgstr ""

#. (para)
msgid ""
"On the left side of the window is a locator bar. This provides a quick "
"visual reference as to where the changes lie within the file. The bar has "
"three columns. The left column refers to the left pane, the right column to "
"the right pane, and the centre column to the bottom pane (if present). In "
"one-pane view only the left column is used. The locator bar can also be used"
" as a scroll bar to scroll all the windows simultaneously."
msgstr ""

#. (para)
msgid ""
"If you double click on a word then every occurrence of that word will be "
"highlighted throughout the document, both in the main panes and the locator "
"bar. Double click on the word again to remove the highlighting."
msgstr ""

#. (para)
msgid ""
"If you click in the left margin, or if you triple click within a line, that "
"whole line will be selected."
msgstr ""

#. (para)
msgid ""
"Below the bottom window is the status bar. This shows the number of lines "
"added and deleted in <literal>Theirs</literal> and <literal>Mine</literal>, "
"and the number of unresolved conflicts remaining. You can also see which "
"line-ending style is in use, what encoding (ASCII, UTF-8, etc) is assumed by"
" TortoiseMerge, and whether there is a byte-order-mark (BOM) present in "
"UTF-8 files. You can change line-ending style and encoding by double-"
"clicking the corresponding column of that view. A dialog box will be "
"displayed. The left side of the status bar is used to display hints when you"
" hover the mouse over a control."
msgstr ""

#. (title)
msgid "Line Status Icons"
msgstr ""

#. (para)
msgid ""
"Changed lines are marked with an icon to indicate what type of change has "
"occurred."
msgstr ""

#. (para)
msgid "<graphic fileref=\"images/TMerge_lineadded.png\"/> A line has been added."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"images/TMerge_lineremoved.png\"/> A line has been "
"removed."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"images/TMerge_lineequal.png\"/> A change has been undone "
"by reverting to the original content of the line."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"images/TMerge_linewhitespace.png\"/> This line contains "
"only whitespace changes. Where several consecutive lines are marked, the "
"paragraph may have been re-wrapped, causing words to shuffle onto adjacent "
"lines."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"images/TMerge_lineedited.png\"/> A line has been edited "
"by hand, using TortoiseMerge as a text editor."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"images/TMerge_lineconflicted.png\"/> This line is in "
"conflict."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"images/TMerge_lineconflictedignored.png\"/> This line is "
"conflicted, but the effect is hidden by whitespace or line-ending settings."
msgstr ""

#. (para)
msgid ""
"<graphic fileref=\"images/TMerge_linemoved.png\"/> This line is detected as "
"being moved from / to another location."
msgstr ""

#. (title)
msgid "Merging / Editing Conflicts"
msgstr ""

#. (para)
msgid ""
"TortoiseMerge not only <emphasis>shows</emphasis> you the differences "
"between files but also lets you resolve conflicts or apply changes."
msgstr ""

#. (para)
msgid ""
"If you're in two pane view, then you can only edit the file in the right "
"pane (<literal>Mine</literal>). To apply changes made in the left file "
"(<literal>Theirs</literal>), <action>right click</action> on the changed "
"lines and select <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Use"
" text block from 'theirs' </guimenuitem></menuchoice>. Then the changes from"
" the left file are added to the right file."
msgstr ""

#. (para)
msgid ""
"Sometimes you actually want both text blocks, and the context menu also "
"offers you <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Use both "
"text blocks (this one first)</guimenuitem></menuchoice> and "
"<menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Use both text blocks"
" (this one last)</guimenuitem></menuchoice>."
msgstr ""

#. (para)
msgid ""
"You can also edit the output file just as you would in a text editor. Such "
"lines are marked using a pencil icon. Please note that if you want to make "
"any of the line/block-based changes described above, it is better to do "
"those first since once you start editing the file yourself it becomes "
"impossible for TortoiseMerge to keep track of the relationship to the "
"original files."
msgstr ""

#. (para)
msgid ""
"If you're in three pane view (sometimes called <emphasis>merge "
"view</emphasis>) you can only edit the file in the bottom view "
"(<literal>Merged</literal>). As in two pane view, you can <action>right "
"click</action> on conflicted lines and either select "
"<menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Use text block from "
"'theirs' </guimenuitem></menuchoice> or <menuchoice><guimenu>Context "
"Menu</guimenu><guimenuitem>Use text block from 'mine' "
"</guimenuitem></menuchoice>. In addition, if you want "
"<emphasis>both</emphasis> blocks, you can select "
"<menuchoice><guimenu>Context Menu</guimenu><guimenuitem> Use text block from"
" 'mine' before 'theirs' </guimenuitem></menuchoice> or "
"<menuchoice><guimenu>Context Menu</guimenu><guimenuitem> Use text block from"
" 'theirs' before 'mine' </guimenuitem></menuchoice>. According to the "
"command you've selected, the changes are used in the resulting "
"<literal>Merged</literal> file."
msgstr ""

#. (para)
msgid ""
"Sometimes a file will be marked as conflicted in Subversion, yet when you "
"view it using TortoiseMerge there are no conflicts shown. This may be due to"
" the whitespace handling you have chosen. If you choose to ignore line-"
"endings or whitespace changes, those lines will be marked using the "
"<emphasis>Conflict-Ignored</emphasis> icon. To resolve the conflict you "
"still need to pick which version you want to use."
msgstr ""

#. (para)
msgid ""
"Note that if you use TortoiseMerge on the same files again, any changes to "
"your working copy, whether in TortoiseMerge, or by hand-editing, "
"<emphasis>will be discarded</emphasis> and the file will appear as it did "
"when conflict-editing first started."
msgstr ""

#. (title)
msgid "Open Files"
msgstr "Hap Skedat"

#. (para)
msgid ""
"When you start TortoiseMerge without any command line switches then you have"
" to open the files manually, using "
"<menuchoice><guimenu>File</guimenu><guimenuitem>Open</guimenuitem></menuchoice>."
msgstr ""

#. (title)
msgid "The Open Dialog"
msgstr ""

#. (para)
msgid ""
"The first thing you have to do is to decide whether you just want to "
"compare/merge files, or whether you want to apply a patch file. Depending on"
" what you choose, the corresponding edit boxes and browse buttons are "
"activated."
msgstr ""

#. (para)
msgid ""
"If you want to compare / merge files you have to set at least two of the "
"three possible paths for <literal>Base</literal>, <literal>Mine</literal> "
"and <literal>Theirs</literal>. If you select only two files, then "
"TortoiseMerge will show you the differences between those two files, either "
"in a two pane view or in a one pane view."
msgstr ""

#. (para)
msgid ""
"If you want to merge three files, TortoiseMerge will show you the "
"differences in a three pane view. This view is generally used if you need to"
" resolve conflicted files. The output file is not named in this case and you"
" will have to use the <menuchoice><guimenu>File</guimenu><guimenuitem>Save "
"As...</guimenuitem></menuchoice>. to save the results."
msgstr ""

#. (para)
msgid ""
"If you want to apply a patch file you have to set both the path to the patch"
" file itself and the path to the folder where the patch file should be "
"applied."
msgstr ""

#. (para)
msgid ""
"Currently, only patch files in <emphasis>Unified Diff Format</emphasis> are "
"supported. And only files which were generated from a Subversion working "
"copy. Other formats like patch files generated by CVS are currently not "
"supported!"
msgstr ""

#. (title)
msgid "Main Settings Page"
msgstr ""

#. (title)
msgid "The Settings Main Page"
msgstr ""

#. (para)
msgid ""
"Most of the options here are self-explanatory, but a few points need "
"clarifying."
msgstr ""

#. (para)
msgid ""
"<guilabel>Backup original file</guilabel> renames the original file in the "
"WC to <literal>filename.bak</literal> before saving the modified version."
msgstr ""

#. (para)
msgid ""
"<guilabel>Default to UTF-8 encoding</guilabel> when set, ANSI files are "
"loaded as UTF-8 encoded and saved as such when edited."
msgstr ""

#. (para)
msgid ""
"<guilabel>Max line length for inline diffs</guilabel> TortoiseMerge can get "
"slow when showing inline diffs for very long lines. Because of that only "
"lines that are shorter than 3000 chars are shown with inline diffs. You can "
"change this value here."
msgstr ""

#. (para)
msgid ""
"<guilabel>Ignore line endings</guilabel> hides changes which are due solely "
"to difference in line-end style."
msgstr ""

#. (para)
msgid ""
"<guilabel>Ignore case changes</guilabel> hides changes which are due solely "
"to case changes within the text. This can be useful with apps such as Visual"
" Basic, which changes case in variables without warning."
msgstr ""

#. (title)
msgid "Colour Settings Page"
msgstr ""

#. (title)
msgid "The Settings Color Page"
msgstr ""

#. (para)
msgid ""
"This dialog allows you to select the background color coding used to "
"highlight the different line changes."
msgstr ""

#. (term)
msgid "Normal"
msgstr "Normal"

#. (listitem)
msgid "All lines which are unchanged, or where changes are hidden."
msgstr ""

#. (term)
msgid "Added"
msgstr "Shtuar"

#. (listitem)
msgid "Lines which have been added."
msgstr ""

#. (term)
msgid "Removed"
msgstr "Larguar"

#. (listitem)
msgid "Lines which have been deleted."
msgstr ""

#. (term)
msgid "Modified"
msgstr "Ndryshuar"

#. (emphasis)
msgid "unchanged"
msgstr "pandryshuar"

#. (guilabel)
msgid "Colour code in-line changes"
msgstr ""

#. (listitem)
msgid ""
"Lines which have relatively small changes, and are shown using inline diff. "
"This colour is used for the <placeholder-1/> portion of the line content. "
"Changed portions will be shown using the inline added and deleted colours "
"described below. If <placeholder-2/> is not enabled, this colour will not be"
" used and changed lines will always be shown as replacements."
msgstr ""

#. (term)
msgid "Conflicted"
msgstr "Në Konflikt"

#. (listitem)
msgid "Where the same line has been changed in both files."
msgstr ""

#. (term)
msgid "Conflict resolved"
msgstr "Konflikti u zgjodh"

#. (listitem)
msgid ""
"Where the same line has been changed in both files, and you have now "
"selected which version should be used."
msgstr ""

#. (term)
msgid "Empty"
msgstr "Zbrazët"

#. (listitem)
msgid ""
"Where lines have been added in the opposite pane, and no such line existed "
"in this pane."
msgstr ""

#. (term)
msgid "Inline added text"
msgstr ""

#. (listitem)
msgid "When inline diffs are shown, added text is shown in this colour."
msgstr ""

#. (term)
msgid "Inline removed text"
msgstr ""

#. (listitem)
msgid "When inline diffs are shown, deleted text is shown in this colour."
msgstr ""

#. (term)
msgid "Misc whitespaces"
msgstr ""

#. (listitem)
msgid ""
"Characters used to indicate Whitespace are shown in a different colour from "
"normal text."
msgstr ""

#. (title)
msgid "keyboard shortcuts"
msgstr ""

#. (para)
msgid "List of keyboard shortcuts and commands."
msgstr ""

#. (title)
msgid "Keyboard shortcuts"
msgstr ""

#. (term)
msgid "Ctrl-Q, Ctrl-W, Escape"
msgstr "Ctrl-Q, Ctrl-W, Escape"

#. (para)
msgid "Quit the program"
msgstr "Mbylle programin"

#. (para)
msgid "Copy the selected text to the clipboard"
msgstr ""

#. (term)
msgid "Ctrl-X, Shift-Del"
msgstr "Ctrl-X, Shift-Del"

#. (para)
msgid "Cut the selected text to the clipboard"
msgstr ""

#. (term)
msgid "Ctrl-V, Shift-Insert"
msgstr "Ctrl-V, Shift-Insert"

#. (para)
msgid "Paste the selected text from the clipboard"
msgstr ""

#. (term)
msgid "Ctrl-Z, Alt-Backspace"
msgstr "Ctrl-Z, Alt-Backspace"

#. (para)
msgid "Undo the last edits"
msgstr "Përditëso redaktimet e fundit"

#. (term)
msgid "Ctrl-F"
msgstr "Ctrl-F"

#. (para)
msgid "Open the Find dialog for text searches"
msgstr ""

#. (term)
msgid "Ctrl-O"
msgstr "Ctrl-O"

#. (para)
msgid "Open files to diff/merge"
msgstr ""

#. (term)
msgid "Ctrl-S"
msgstr "Ctrl-S"

#. (para)
msgid "Save the changes"
msgstr "Ruaj ndryshimet"

#. (term)
msgid "Ctrl-Shift-S"
msgstr "Ctrl-Shift-S"

#. (para)
msgid "Save as..."
msgstr "Ruaje si..."

#. (term)
msgid "F7"
msgstr "F7"

#. (para)
msgid "Go to next difference"
msgstr ""

#. (term)
msgid "Shift-F7"
msgstr "Shift-F7"

#. (para)
msgid "Go to previous difference"
msgstr ""

#. (term)
msgid "F8"
msgstr "F8"

#. (para)
msgid "Go to next conflict"
msgstr "Kalo tek konflikti i radhës"

#. (term)
msgid "Shift-F8"
msgstr ""

#. (para)
msgid "Go to previous conflict"
msgstr "Kalo tek konflikti paraprak"

#. (term)
msgid "Ctrl-D"
msgstr "Ctrl-D"

#. (para)
msgid "Toggle between one-pane diff and two-pane diff"
msgstr ""

#. (term)
msgid "Ctrl-R"
msgstr "Ctrl-R"

#. (para)
msgid "Reload the files and revert all changes made"
msgstr ""

#. (term)
msgid "Ctrl-T"
msgstr ""

#. (para)
msgid "Toggles between showing whitespaces or not"
msgstr ""

#. (term)
msgid "Ctrl-L"
msgstr "Ctrl-L"

#. (para)
msgid "Toggles between collapsing unchanged sections or not"
msgstr ""

#. (term)
#. (term)
msgid "Ctrl-P"
msgstr "Ctrl-P"

#. (para)
#. (para)
msgid "Toggles between line wrapping"
msgstr ""

#. (term)
msgid "Ctrl-G"
msgstr "Ctrl-G"

#. (para)
msgid "Go to line"
msgstr "Kalo tek vija"

#. (para)
msgid "Select all text"
msgstr "Selekto tërë tekstin"

#. (term)
msgid "Ctrl-U"
msgstr "Ctrl-U"

#. (para)
msgid "Switches views"
msgstr ""

#. (term)
msgid "Ctrl-mousewheel"
msgstr "Ctrl-rrota e miut"

#. (para)
msgid "Scroll the display left/right"
msgstr ""

#. (term)
msgid "Ctrl-Tab"
msgstr ""

#. (para)
msgid "Switch between left/right/bottom view"
msgstr ""

#. (title)
msgid "Automating TortoiseMerge"
msgstr ""

#. (para)
msgid ""
"TortoiseMerge can be started with command line parameters to avoid having to"
" go through the <guilabel>Open</guilabel> dialog to select the files "
"yourself. This is useful also if you want to use TortoiseMerge from another "
"application."
msgstr ""

#. (title)
msgid "TortoiseMerge Command Line Switches"
msgstr ""

#. (para)
msgid ""
"Most switches require additional information like a path or some other string. In those cases, append an ':' to the switch and put the string/path after it. Example: <screen>\n"
"/base:\"c:\\folder\\my base file.txt\"\n"
"</screen>"
msgstr ""

#. (title)
msgid "List of available command line options"
msgstr ""

#. (entry)
msgid "Shows a dialog box with the most important command line switches."
msgstr ""

#. (entry)
msgid "The same as <placeholder-1/>."
msgstr "Njëjt sikur <placeholder-1/>."

#. (emphasis)
msgid "base"
msgstr "baza"

#. (entry)
msgid ""
"Specifies the <placeholder-1/> file used in three way diffs. This is the "
"common ancestor of the files being diffed, although it is not shown in a "
"separate window. For two way diffs, this is the left file."
msgstr ""

#. (entry)
msgid ""
"The name of the base file. This is shown in the view title instead of the "
"file path. For three way diffs it is shown in a tooltip for the view title."
msgstr ""

#. (emphasis)
msgid "theirs"
msgstr "i tyre"

#. (entry)
msgid ""
"Specifies the <placeholder-1/> file used in three way diffs, displayed in "
"the left pane."
msgstr ""

#. (entry)
msgid ""
"The name of the theirs file. This is shown in the view title instead of the "
"file path."
msgstr ""

#. (emphasis)
msgid "mine"
msgstr "i imi"

#. (entry)
msgid ""
"Specifies the <placeholder-1/> file used in three way diffs, displayed in "
"the right pane. For two way diffs, this is the right file."
msgstr ""

#. (entry)
msgid ""
"The name of the mine file. This is shown in the view title instead of the "
"file path."
msgstr ""

#. (para)
msgid ""
"Specifies the resulting <emphasis>merged</emphasis> file used in diffs. This"
" is the file path where the result of the merge/conflict resolving is saved."
msgstr ""

#. (para)
msgid ""
"If this is not set for a three-way diff, then TortoiseMerge will ask the "
"user where to save the result."
msgstr ""

#. (para)
msgid ""
"If this is not set for a two-way diff, then TortoiseMerge will automatically"
" use the path of the file shown in the right view as the save path."
msgstr ""

#. (entry)
msgid ""
"The name of the merged file. This is shown in the view title instead of the "
"file path."
msgstr ""

#. (emphasis)
msgid "very long"
msgstr ""

#. (entry)
msgid ""
"The path where a patch should be applied to. If you don't set this path, "
"then TortoiseMerge will try to find the path itself to match the paths in "
"the patch file, but that can take <placeholder-1/>."
msgstr ""

#. (entry)
msgid "The name of the original file to patch. Used for the view title."
msgstr ""

#. (entry)
msgid "The name of the resulting patched file. Used for the view title."
msgstr ""

#. (entry)
msgid "The path to the patch/diff file to apply to a directory."
msgstr ""

#. (entry)
msgid ""
"Forces TortoiseMerge to start with the one-way view instead of the view the "
"user specified in the settings."
msgstr ""

#. (entry)
msgid "Switches the left and right view of the specified two files to diff."
msgstr ""

#. (literal)
msgid "/origfile:\"path_to_original_file\""
msgstr "/origfile:\"path_to_original_file\""

#. (literal)
msgid "/modifiedfile:\"path_to_modified_file\""
msgstr "/modifiedfile:\"path_to_modified_file\""

#. (literal)
msgid "/outfile:\"path_to_resulting_patchfile\""
msgstr "/outfile:\"path_to_resulting_patchfile\""

#. (literal)
msgid "/outfile"
msgstr "/outfile"

#. (literal)
msgid "/createunifieddiff"
msgstr "/createunifieddiff"

#. (entry)
msgid ""
"Creates a unified diff file (patch file) of two files specified with "
"<placeholder-1/> and <placeholder-2/>. The target path is set with "
"<placeholder-3/>. If <placeholder-4/> is not set, a file save dialog is "
"shown so the user can choose the location to save the patch file. Note: If "
"<placeholder-5/> is set, all other parameters are ignored."
msgstr ""

#. (entry)
msgid "Specifies a line number to jump to after loading the files."
msgstr ""

#. (entry)
msgid ""
"Prevents the file from being edited. That means the editing capabilities of "
"TortoiseMerge are disabled."
msgstr ""

#. (para)
msgid ""
"You can also supply simple filenames on the command line for compatibility with other diff programs. In this simplified form the command line is <screen>\n"
"TortoiseMerge BaseFilePath MyFilePath [ TheirFilePath ]\n"
"</screen> If two files are given they will be compared with each other. If three files are given, the first is taken as the BASE file, and the other two are compared with it in a three-way diff."
msgstr ""
