// TortoiseSVN - a Windows shell extension for easy version control
// 
// Copyright (C) 2008 - TortoiseSVN
//
// IMPORTANT: While the rest of TortoiseSVN is licensed under the GPL,
// this portion is public domain

midl_pragma warning(disable:2111) // identifier length exceeds 31 characters
import "oaidl.idl";
import "ocidl.idl";
midl_pragma warning(default:2111) // identifier length exceeds 31 characters

[
	object,
	uuid(298B927C-7220-423C-B7B4-6E241F00CD93),
	helpstring("IBugTraqProvider Interface"),
	pointer_default(unique)
]
interface IBugTraqProvider : IUnknown
{
	/** A provider might need some parameters (e.g. a web service URL or a database connection string).
	 * This information is passed as a simple string. It's up to the individual provider to parse and
	 * validate it.
	 *
	 * The ValidateParameters method is called from the settings dialog. This allows the provider to check
	 * that the parameters are OK. The provider can do basic syntax checking, it can check that the server
	 * is reachable, or it can do nothing.
	 *
	 * If the provider needs to report a validation error, it should do this itself, using hParentWnd as
	 * the parent of any displayed UI.
	 */
	HRESULT ValidateParameters (
		[in] HWND hParentWnd,					// Parent window for any UI that needs to be displayed during validation.
		[in] BSTR parameters,					// The parameter string that needs to be validated.
		[out, retval] VARIANT_BOOL *valid		// Is the string valid?
	);

	/** In the commit dialog, the provider is accessed from a button. It needs to know what text to
	 * display (e.g. "Choose Bug" or "Select Ticket").
	 */
	HRESULT GetLinkText (
		[in] HWND hParentWnd,					// Parent window for any (error) UI that needs to be displayed.
		[in] BSTR parameters,					// The parameter string, just in case you need to talk to your web
												// service (e.g.) to find out what the correct text is.
		[out, retval] BSTR *linkText			// What text do you want to display? Use the current thread locale.
	);

	/** Get the commit message. This would normally involve displaying a dialog with a list of the
	 * issues assigned to the current user.
	 */
	HRESULT GetCommitMessage (
		[in] HWND hParentWnd,					// Parent window for your provider's UI.
		[in] BSTR parameters,					// Parameters for your provider.
		[in] BSTR commonRoot,
		[in] SAFEARRAY(BSTR) pathList,
		[in] BSTR originalMessage,				// The text already present in the commit message.
												// Your provider should include this text in the new message, where appropriate.
		[out, retval] BSTR *newMessage			// The new text for the commit message. This replaces the original message.
	);			
};
