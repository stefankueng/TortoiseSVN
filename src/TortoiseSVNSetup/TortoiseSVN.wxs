<?xml version="1.0" encoding="utf-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
    <?include Includes.wxi?>
    <Product
    UpgradeCode="$(var.UpgradeGuid)"
    Name="$(var.ProductName) $(var.VersionNumberUserVisible) $(var.PlatformUserVisible)"
    Id="*"
    Version="$(var.VersionNumberInternal)"
    Manufacturer="TortoiseSVN"
    Language="1033"
    Codepage="1252">
        <Package
        Id="*"
        Keywords="$(var.PackageKeywords)"
        Description="$(var.PackageDescription)"
        Comments="$(var.PackageComments)"
        Manufacturer="$(var.PackageManufacturer)"
        InstallerVersion="405"
        Platform="$(var.PackagePlatforms)"
        Languages="1033"
        Compressed="yes"
        SummaryCodepage="1252"
        InstallPrivileges="elevated"/>

        <MajorUpgrade AllowDowngrades="yes" Schedule="afterInstallValidate" />

        <Media Id="1" Cabinet="TSVN.cab" EmbedCab="yes" CompressionLevel="high" />

        <Icon Id="TSVNIcon" SourceFile="..\Resources\Tortoise.ico" />

        <!-- Launch Condition related properties ................................................................................. -->
        <Property Id="ALLUSERS" Secure="yes">1</Property>

        <Condition Message="[ProductName] requires Windows 8.1 or later."><![CDATA[(VersionNT >= 603)]]></Condition>
        <?if $(env.Platform) = "win32" ?>
          <Condition Message="You are attempting to run the 32-bit installer on a 64-bit version of Windows. Please install the 64-bit version of TortoiseSVN instead.">NOT Msix64</Condition>
        <?endif ?>

        <?if $(env.Platform) = "x64" ?>
          <Upgrade Id="$(var.UpgradeGuid32)">
              <UpgradeVersion Minimum="0.0.0.0" OnlyDetect="yes" Property="WIN32TSVNFOUND" />
          </Upgrade>
          <Condition Message="Please uninstall all 32-bit versions of TortoiseSVN before installing [ProductName].">NOT WIN32TSVNFOUND</Condition>
        <?endif ?>

        <!-- test for the universal CRT -->
        <Property Id="UCRTVERSION" Secure="yes">
            <?if $(env.Platform) = "x64" or $(env.Platform) = "arm64" ?>
              <DirectorySearch Id="SystemFolder64V" Path="[System64Folder]">
                  <FileSearch Name="ucrtbase.dll" MinVersion="0.0.0.0"/>
              </DirectorySearch>
              <?else?>
              <DirectorySearch Id="SystemFolder32V" Path="[SystemFolder]">
                  <FileSearch Name="ucrtbase.dll" MinVersion="0.0.0.0"/>
              </DirectorySearch>
            <?endif?>
        </Property>
        <Condition Message="Please install the Universal CRT first. You can install it via Windows-Update (kb2999226). Or you can manually download it from Microsoft by doing a search for 'vcredist 2019 download'">UCRTVERSION</Condition>

        <!-- Show/Don't-show changelog related properties and custom actions ..................................................... -->
        <Property Id="TEXTEDITOR" Secure="yes">
            <DirectorySearch Id="FileSearchTextEditorExe" Path="[WindowsFolder]">
                <FileSearch Id="FileSearchTextEditorExe" Name="notepad.exe" />
            </DirectorySearch>
        </Property>
        <CustomAction Id="ShowChangelogAction" Property="TEXTEDITOR" ExeCommand="[INSTALLDIR]changelog.txt" Return="asyncNoWait" />
        <CustomAction Id="ShowDonatePage" BinaryKey="CustomActionsDLL" DllEntry="OpenDonatePage" />
        <CustomAction Id="KillCache" BinaryKey="CustomActionsDLL" DllEntry="TerminateCache" />
        <Binary Id="CustomActionsDLL" SourceFile="..\..\bin\$(var.ReleasePath)\bin\CustomActions.dll" />
        <?if $(env.HasSparse) = "yes" ?>
          <Binary Id="CustomActionsDLL11" SourceFile="..\..\bin\$(var.ReleasePath)\bin\CustomActions11.dll" />
          <CustomAction Id="RegisterSparsePackage" Impersonate="yes" BinaryKey="CustomActionsDLL11" DllEntry="RegisterSparsePackage"/>
          <CustomAction Id="UnregisterSparsePackage" Impersonate="yes" BinaryKey="CustomActionsDLL11" DllEntry="UnregisterSparsePackage"/>
        <?endif?>

        <!-- Unsafe-check properties and custom actions .......................................................................... -->
        <Property Id="VSDUIANDADVERTISED" Secure="yes">This advertised application will not be installed because it might be unsafe. Contact your administrator to change the installation user interface option of the package to basic.</Property>
        <CustomAction Id="ERRCA_UIANDADVERTISED" Error="[VSDUIANDADVERTISED]" />

        <!-- Figure out where a previous installation was, if any ................................................................ -->
        <?if $(env.Platform) = "x64" or $(env.Platform) = "arm64" ?>
        <CustomAction Id="DefaultTargetDir" Property="INSTALLDIR" Value="[ProgramFiles64Folder]$(var.ProductName)" Execute="immediate" />
        <Property Id="INSTALLDIR" Secure="yes">
            <RegistrySearch Id="PreviousInstallLocationRegistrySearch" Root="HKLM" Key="Software\[Manufacturer]" Name="Directory" Type="raw" Win64="$(var.Win64YesNo)"/>
        </Property>
        <?else ?>
        <CustomAction Id="DefaultTargetDir" Property="INSTALLDIR" Value="[ProgramFilesFolder]$(var.ProductName)" Execute="immediate" />
        <Property Id="INSTALLDIR" Secure="yes">
            <RegistrySearch Id="PreviousInstallLocationRegistrySearch" Root="HKLM" Key="Software\[Manufacturer]" Name="Directory" Type="raw" Win64="$(var.Win64YesNo)"/>
        </Property>
        <?endif ?>

        <Property Id="LANGUAGEFOLDER" Secure="yes">
            <RegistrySearch Key="SOFTWARE\[Manufacturer]" Root="HKLM" Type="raw" Id="LANGUAGEFOLDER_REGSEARCH" Name="LanguageFolderPath" Win64="$(var.Win64YesNo)"/>
        </Property>

        <!-- msiexec does not have a manifest, so it always reports the version of system dlls as
         for Win7 (6.3.x.x). So we check for 6.3 but use the build number to actually check
         for Win11 -->
        <Property Id="WIN11FOUND" Secure="yes">
            <DirectorySearch Id="searchSystem" Path="[System64Folder]" AssignToProperty="yes">
                <FileSearch Id="searchFile" Name="shell32.dll" MinVersion="6.3.21999.0"/>
            </DirectorySearch>
        </Property>

        <!-- properties for the custom actions to (un)register the sparse package -->
        <Property Id="SPARSEPACKAGEFILE" Value="package.msix"  Secure="yes"/>
        <Property Id="SPARSEPACKAGENAME" Value="3A48D7FC-AEE2-4CBC-91D1-0007951B8006"  Secure="yes"/>


        <!-- Specify the REINSTALLMODE property to allow proper installation of downgraded components. -->
        <Property Id="REINSTALLMODE" Value="dmus" />

        <DirectoryRef Id="TARGETDIR"/>

        <FeatureRef Id="DefaultFeature" />

        <UIRef Id="UIFrag" />

        <!-- Execute Sequencing ................................................................................................. -->
        <AdminExecuteSequence />
        <InstallExecuteSequence>
            <!-- AppSearch must be done before RemoveExistingProducts and before FindRelatedProducts -->
            <AppSearch Sequence="1"></AppSearch>
            <LaunchConditions After="AppSearch" />
            <Custom Action="DefaultTargetDir" After="LaunchConditions">INSTALLDIR=""</Custom>
            <Custom Action="KillCache" After="ValidateProductID">Installed OR REMOVE</Custom>
            <?if $(env.HasSparse) = "yes" ?>
              <Custom Action="RegisterSparsePackage" After="InstallFinalize">NOT (REMOVE~="ALL") AND (NOT WIN11FOUND="")</Custom>
              <Custom Action="UnregisterSparsePackage" Before="RemoveFiles">(REMOVE~="ALL") AND (NOT WIN11FOUND="")</Custom>
            <?endif ?>
        </InstallExecuteSequence>

        <!-- UI Sequencing ...................................................................................................... -->
        <AdminUISequence>
            <Show Dialog="FatalErrorDlg" OnExit="error" />
            <Show Dialog="UserExit" OnExit="cancel" />
            <Show Dialog="ExitDlg" OnExit="success" />
            <Show Dialog="PrepareDlg" Before="CostInitialize"><![CDATA[]]></Show>
            <Show Dialog="AdminWelcomeDlg" After="CostFinalize" />
            <Show Dialog="ProgressDlg" After="AdminWelcomeDlg" />
        </AdminUISequence>
        <InstallUISequence>
            <Show Dialog="FatalErrorDlg" OnExit="error" />
            <Show Dialog="UserExit" OnExit="cancel" />
            <Show Dialog="ExitDlg" OnExit="success" />
            <Show Dialog="PrepareDlg" After="LaunchConditions" />
            <Show Dialog="WelcomeDlg" After="MigrateFeatureStates"><![CDATA[NOT Installed]]></Show>
            <Show Dialog="ResumeDlg" After="WelcomeDlg"><![CDATA[Installed AND (RESUME OR Preselected)]]></Show>
            <Show Dialog="MaintenanceWelcomeDlg" After="ResumeDlg"><![CDATA[Installed AND NOT RESUME AND NOT Preselected]]></Show>
            <Show Dialog="ProgressDlg" After="MaintenanceWelcomeDlg" />

            <FindRelatedProducts Suppress="no">1</FindRelatedProducts>

            <Custom Action="DefaultTargetDir" After="PrepareDlg">INSTALLDIR=""</Custom>
            <Custom Action="ERRCA_UIANDADVERTISED" Before="AppSearch">ProductState=1</Custom>
        </InstallUISequence>
    </Product>
</Wix>
