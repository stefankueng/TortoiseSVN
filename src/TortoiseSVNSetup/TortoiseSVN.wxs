<?xml version="1.0" encoding="utf-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
  <?include Includes.wxi?>
  <Product
  UpgradeCode="$(var.UpgradeGuid)"
  Name="$(var.ProductName) $(var.VersionNumberUserVisible) $(var.PlatformUserVisible)"
  Id="*"
  Version="$(var.VersionNumberInternal)"
  Manufacturer="TortoiseSVN"
  Language="1033"
  Codepage="1252">
    <Package
    Id="*"
    Keywords="$(var.PackageKeywords)"
    Description="$(var.PackageDescription)"
    Comments="$(var.PackageComments)"
    Manufacturer="$(var.PackageManufacturer)"
    InstallerVersion="405"
    Platform="$(var.PackagePlatforms)"
    Languages="1033"
    Compressed="yes"
    SummaryCodepage="1252"
    InstallPrivileges="elevated"/>

    <MajorUpgrade AllowDowngrades="yes" Schedule="afterInstallValidate" />

    <Media Id="1" Cabinet="TSVN.cab" EmbedCab="yes" CompressionLevel="high" />

    <Icon Id="TSVNIcon" SourceFile="..\Resources\Tortoise.ico" />

    <!-- Launch Condition related properties ................................................................................. -->
    <Property Id="ALLUSERS" Secure="yes">1</Property>

    <Condition Message="[ProductName] requires Windows Vista or later."><![CDATA[(VersionNT >= 600)]]></Condition>
    <?if $(env.Platform) = "win32" ?>
    <Condition Message="You are attempting to run the 32-bit installer on a 64-bit version of Windows. Please install the 64-bit version of TortoiseSVN instead.">NOT Msix64</Condition>
    <?endif ?>

    <?if $(env.Platform) = "x64" ?>
    <Upgrade Id="$(var.UpgradeGuid32)">
      <UpgradeVersion Minimum="0.0.0.0" OnlyDetect="yes" Property="WIN32TSVNFOUND" />
    </Upgrade>
    <Condition Message="Please uninstall all 32-bit versions of TortoiseSVN before installing [ProductName].">NOT WIN32TSVNFOUND</Condition>
    <?endif ?>

    <!-- Show/Don't-show changelog related properties and custom actions ..................................................... -->
    <Property Id="TEXTEDITOR" Secure="yes">
      <DirectorySearch Id="FileSearchTextEditorExe" Path="[WindowsFolder]">
        <FileSearch Id="FileSearchTextEditorExe" Name="notepad.exe" />
      </DirectorySearch>
    </Property>
    <CustomAction Id="ShowChangelogAction" Property="TEXTEDITOR" ExeCommand="[INSTALLDIR]changelog.txt" Return="asyncNoWait" />
    <CustomAction Id="ShowDonatePage" BinaryKey="CustomActionsDLL" DllEntry="OpenDonatePage" />
    <CustomAction Id="KillCache" BinaryKey="CustomActionsDLL" DllEntry="TerminateCache" />
    <Binary Id="CustomActionsDLL" SourceFile="..\..\bin\$(var.ReleasePath)\bin\CustomActions.dll" />

    <!-- Unsafe-check properties and custom actions .......................................................................... -->
    <Property Id="VSDUIANDADVERTISED" Secure="yes">This advertised application will not be installed because it might be unsafe. Contact your administrator to change the installation user interface option of the package to basic.</Property>
    <CustomAction Id="ERRCA_UIANDADVERTISED" Error="[VSDUIANDADVERTISED]" />

    <!-- Figure out where a previous installation was, if any ................................................................ -->
    <?if $(env.Platform) = "x64" ?>
    <CustomAction Id="DefaultTargetDir" Property="INSTALLDIR" Value="[ProgramFiles64Folder]$(var.ProductName)" Execute="immediate" />
    <Property Id="INSTALLDIR" Secure="yes">
      <RegistrySearch Id="PreviousInstallLocationRegistrySearch" Root="HKLM" Key="Software\[Manufacturer]" Name="Directory" Type="raw" Win64="$(var.Win64YesNo)"/>
    </Property>
    <?else ?>
    <CustomAction Id="DefaultTargetDir" Property="INSTALLDIR" Value="[ProgramFilesFolder]$(var.ProductName)" Execute="immediate" />
    <Property Id="INSTALLDIR" Secure="yes">
      <RegistrySearch Id="PreviousInstallLocationRegistrySearch" Root="HKLM" Key="Software\[Manufacturer]" Name="Directory" Type="raw" Win64="$(var.Win64YesNo)"/>
    </Property>
    <?endif ?>

    <DirectoryRef Id="TARGETDIR"/>

    <FeatureRef Id="DefaultFeature" />

    <UIRef Id="UIFrag" />

    <!-- Execute Sequencing ................................................................................................. -->
    <AdminExecuteSequence />
    <InstallExecuteSequence>
      <!-- AppSearch must be done before RemoveExistingProducts and before FindRelatedProducts -->
      <AppSearch Sequence="1"></AppSearch>
      <LaunchConditions After="AppSearch" />
      <Custom Action="DefaultTargetDir" After="LaunchConditions">INSTALLDIR=""</Custom>
      <Custom Action="KillCache" After="RemoveExistingProducts">Installed</Custom>
    </InstallExecuteSequence>

    <!-- UI Sequencing ...................................................................................................... -->
    <AdminUISequence>
      <Show Dialog="FatalErrorDlg" OnExit="error" />
      <Show Dialog="UserExit" OnExit="cancel" />
      <Show Dialog="ExitDlg" OnExit="success" />
      <Show Dialog="PrepareDlg" Before="CostInitialize"><![CDATA[]]></Show>
      <Show Dialog="AdminWelcomeDlg" After="CostFinalize" />
      <Show Dialog="ProgressDlg" After="AdminWelcomeDlg" />
    </AdminUISequence>
    <InstallUISequence>
      <Show Dialog="FatalErrorDlg" OnExit="error" />
      <Show Dialog="UserExit" OnExit="cancel" />
      <Show Dialog="ExitDlg" OnExit="success" />
      <Show Dialog="PrepareDlg" After="LaunchConditions" />
      <Show Dialog="WelcomeDlg" After="MigrateFeatureStates"><![CDATA[NOT Installed]]></Show>
      <Show Dialog="ResumeDlg" After="WelcomeDlg"><![CDATA[Installed AND (RESUME OR Preselected)]]></Show>
      <Show Dialog="MaintenanceWelcomeDlg" After="ResumeDlg"><![CDATA[Installed AND NOT RESUME AND NOT Preselected]]></Show>
      <Show Dialog="ProgressDlg" After="MaintenanceWelcomeDlg" />

      <FindRelatedProducts Suppress="no">1</FindRelatedProducts>

      <Custom Action="DefaultTargetDir" After="PrepareDlg">INSTALLDIR=""</Custom>
      <Custom Action="ERRCA_UIANDADVERTISED" Before="AppSearch">ProductState=1</Custom>
    </InstallUISequence>
  </Product>
</Wix>
