<?xml version="1.0"?>
<project name="TortoiseSVN" default="all">

    <property name="solutionname" value="TortoiseSVN.sln" />
    <property name="solutionname" value="TortoiseSVN8.sln" if="${vsversion == '8'}" />

	<target name="clean">

		<if test="${cleanup == 'yes'}">
			<if test="${static != 'static'}">
				<delete>
					<fileset>
						<include name="utils\scintilla\bin\*.dll" />
						<include name="utils\scintilla\bin\*.exp" />
						<include name="utils\scintilla\bin\*.lib" />
						<include name="utils\scintilla\bin\*.pdb" />
						<include name="utils\scintilla\win32\*.obj" />
						<include name="utils\scintilla\win32\*.res" />
						<include name="utils\scintilla\win32\*.pdb" />
					</fileset>
				</delete>
				<exec program="devenv.com" >
					<arg value="${solutionname}" />
					<arg value="/clean" />
					<arg value="${configuration}|${platform}" />
				</exec>
			</if>
			<if test="${static == 'static'}">
				<exec program="devenv.com" >
					<arg value="${solutionname}" />
					<arg value="/clean" />
					<arg value="${configuration}_static|${platform}" />
				</exec>
			</if>
		</if>
	</target>

	<target name="scintilla">
        <if test="${static != 'static'}">
            <exec program="nmake" workingdir="utils\scintilla\win32">
                <arg value="-f" />
                <arg value="scintilla.mak" />
            </exec>
            <property name="platformfoldername" value=""   if="${platform == 'win32'}"/>
            <property name="platformfoldername" value="64" if="${platform == 'x64'}"/>
            <copy
                file="utils\scintilla\bin\SciLexer.dll"
                tofile="..\bin\${configuration}${platformfoldername}\bin\SciLexer.dll"
                overwrite="true"
            />
            <delete>
                <fileset>
                    <include name="utils\scintilla\bin\*.dll" />
                    <include name="utils\scintilla\bin\*.exp" />
                    <include name="utils\scintilla\bin\*.lib" />
                    <include name="utils\scintilla\bin\*.pdb" />
                    <include name="utils\scintilla\win32\*.obj" />
                    <include name="utils\scintilla\win32\*.res" />
                    <include name="utils\scintilla\win32\*.pdb" />
                </fileset>
            </delete>
        </if>
	</target>

	<target name="versioninfo">
		<copy todir="..\bin\${configuration}${bindirextension}\bin" overwrite="true" flatten="true" failonerror="false">
			<fileset>
				<include name="TortoiseSVNSetup\include\autolist.txt" />
				<include name="..\ext\apr\${configuration}_${platform}\libapr_tsvn.dll"/>
				<include name="..\ext\apr-util\${configuration}_${platform}\libaprutil_tsvn.dll" />
				<include name="..\ext\cyrus-SASL\${configuration}_${platform}\libsasl.dll" />
			</fileset>
		</copy>
		<copy todir="..\bin\${configuration}${bindirextension}\bin" overwrite="true" flatten="true" failonerror="false" if="${vsversion != '8'}" >
			<fileset>
				<include name="..\ext\libintl\libintl3-${platform}\bin\intl3_tsvn.dll" />
				<include name="..\ext\berkeley-db\db4.4-${platform}\bin\libdb44.dll"/>
				<include name="..\ext\berkeley-db\db4.4-${platform}\bin\libdb44d.dll"/>
			</fileset>
		</copy>
		<if test="${vsversion == '8'}" >
			<copy file="..\ext\libintl\libintl3-${platform}\bin\intl3_tsvn8.dll" 
			      tofile="..\bin\${configuration}${bindirextension}\bin\intl3_tsvn.dll" 
			      overwrite="true" failonerror="false" />
			<copy file="..\ext\berkeley-db\db4.4-${platform}\bin\libdb44_8.dll" 
			      tofile="..\bin\${configuration}${bindirextension}\bin\libdb44.dll" 
			      overwrite="true" failonerror="false" />
			<copy file="..\ext\berkeley-db\db4.4-${platform}\bin\libdb44d_8.dll" 
			      tofile="..\bin\${configuration}${bindirextension}\bin\libdb44d.dll" 
			      overwrite="true" failonerror="false" />
		</if>
		<nant target="versioninfo">
			<buildfiles>
				<include name="..\versioninfo.build" />
			</buildfiles>
		</nant>
		<loadfile file="version.in" property="versionheaderfile">
			<filterchain>
				<replacetokens begintoken="$" endtoken="$">
					<token key="MajorVersion" value="${environment::get-variable('MajorVersion')}" />
					<token key="MinorVersion" value="${environment::get-variable('MinorVersion')}" />
					<token key="MicroVersion" value="${environment::get-variable('Microversion')}" />
					<token key="WCREV" value="${environment::get-variable('WCREV')}" />
					<token key="WCDATE" value="${environment::get-variable('WCDATE')}" />
					<token key="DEVBUILD" value="${devrelease}" />
				</replacetokens>
			</filterchain>
		</loadfile>
		<echo file="version.h" message="${versionheaderfile}" />
	</target>

	<target name="TortoiseSVN" depends="clean,versioninfo,scintilla">
        <if test="${static != 'static'}">
            <exec program="devenv.com" >
                <arg value="${solutionname}" />
                <arg value="/rebuild" />
                <arg value="${configuration}|${platform}" />
            </exec>
        </if>
        <if test="${static == 'static'}">
            <exec program="devenv.com" >
                <arg value="${solutionname}" />
                <arg value="/rebuild" />
                <arg value="${configuration}_static|${platform}" />
            </exec>
        </if>
	</target>

</project>
