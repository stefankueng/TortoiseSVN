// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* DumpUploader.h
   Generated by wsdl2h 2.8.17r from http://localhost:59175/Service/DumpUploader3.svc?WSDL
   2014-08-13 22:23:36 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2013 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on DumpUploader.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   https://www.drdump.com/services                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "https://www.drdump.com/services"
ns2 = "https://www.drdump.com/services/Imports"
ns3 = "http://schemas.microsoft.com/2003/10/Serialization/"
ns4 = "http://schemas.datacontract.org/2004/07/DumpUploadService3"
ns5 = "http://schemas.microsoft.com/2003/10/Serialization/Arrays"

*/

#define SOAP_NAMESPACE_OF_ns2   "https://www.drdump.com/services/Imports"
//gsoap ns2   schema namespace: https://www.drdump.com/services/Imports
//gsoap ns2   schema form:  unqualified

#define SOAP_NAMESPACE_OF_ns1   "https://www.drdump.com/services"
//gsoap ns1   schema namespace: https://www.drdump.com/services
//gsoap ns1   schema elementForm:   qualified
//gsoap ns1   schema attributeForm: unqualified

#define SOAP_NAMESPACE_OF_ns3   "http://schemas.microsoft.com/2003/10/Serialization/"
//gsoap ns3   schema namespace: http://schemas.microsoft.com/2003/10/Serialization/
//gsoap ns3   schema form:  qualified

#define SOAP_NAMESPACE_OF_ns4   "http://schemas.datacontract.org/2004/07/DumpUploadService3"
//gsoap ns4   schema namespace: http://schemas.datacontract.org/2004/07/DumpUploadService3
//gsoap ns4   schema elementForm:   qualified
//gsoap ns4   schema attributeForm: unqualified

#define SOAP_NAMESPACE_OF_ns5   "http://schemas.microsoft.com/2003/10/Serialization/Arrays"
//gsoap ns5   schema namespace: http://schemas.microsoft.com/2003/10/Serialization/Arrays
//gsoap ns5   schema elementForm:   qualified
//gsoap ns5   schema attributeForm: unqualified
class xsd__anyType { _XML __item; struct soap *soap; };

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/// Built-in type "xs:QName".
typedef std::string xsd__QName;

/// Built-in type "xs:base64Binary".
#import "xop.h"

/// Built-in type "xs:byte".
typedef char xsd__byte;

/// Built-in type "xs:unsignedByte".
typedef unsigned char xsd__unsignedByte;

/// Primitive built-in type "xs:ID"
typedef std::wstring xsd__ID;

/// Class wrapper for built-in type "xs:ID" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__ID_ to check runtime type (see soapStub.h)
class xsd__ID_ : public xsd__anyType
{ public:
    xsd__ID                              __item;
};

/// Primitive built-in type "xs:IDREF"
typedef std::wstring xsd__IDREF;

/// Class wrapper for built-in type "xs:IDREF" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__IDREF_ to check runtime type (see soapStub.h)
class xsd__IDREF_ : public xsd__anyType
{ public:
    xsd__IDREF                           __item;
};

/// Class wrapper for built-in type "xs:QName" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__QName_ to check runtime type (see soapStub.h)
class xsd__QName_ : public xsd__anyType
{ public:
    xsd__QName                           __item;
};

/// Primitive built-in type "xs:anyURI"
typedef std::wstring xsd__anyURI;

/// Class wrapper for built-in type "xs:anyURI" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__anyURI_ to check runtime type (see soapStub.h)
class xsd__anyURI_ : public xsd__anyType
{ public:
    xsd__anyURI                          __item;
};

/// Class wrapper for built-in type "xs:base64Binary" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__base64Binary to check runtime type (see soapStub.h)
class xsd__base64Binary : public xsd__anyType
{ public:
    _xop__Include                        __item;
};

/// Class wrapper for built-in type "xs:boolean" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__boolean to check runtime type (see soapStub.h)
class xsd__boolean : public xsd__anyType
{ public:
    bool                                 __item;
};

/// Class wrapper for built-in type "xs:byte" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__byte_ to check runtime type (see soapStub.h)
class xsd__byte_ : public xsd__anyType
{ public:
    xsd__byte                            __item;
};

/// Class wrapper for built-in type "xs:dateTime" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__dateTime to check runtime type (see soapStub.h)
class xsd__dateTime : public xsd__anyType
{ public:
    time_t                               __item;
};

/// Primitive built-in type "xs:decimal"
typedef std::wstring xsd__decimal;

/// Class wrapper for built-in type "xs:decimal" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__decimal_ to check runtime type (see soapStub.h)
class xsd__decimal_ : public xsd__anyType
{ public:
    xsd__decimal                         __item;
};

/// Class wrapper for built-in type "xs:double" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__double to check runtime type (see soapStub.h)
class xsd__double : public xsd__anyType
{ public:
    double                               __item;
};

/// Primitive built-in type "xs:duration"
typedef std::wstring xsd__duration;

/// Class wrapper for built-in type "xs:duration" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__duration_ to check runtime type (see soapStub.h)
class xsd__duration_ : public xsd__anyType
{ public:
    xsd__duration                        __item;
};

/// Class wrapper for built-in type "xs:float" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__float to check runtime type (see soapStub.h)
class xsd__float : public xsd__anyType
{ public:
    float                                __item;
};

/// Class wrapper for built-in type "xs:int" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__int to check runtime type (see soapStub.h)
class xsd__int : public xsd__anyType
{ public:
    int                                  __item;
};

/// Class wrapper for built-in type "xs:long" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__long to check runtime type (see soapStub.h)
class xsd__long : public xsd__anyType
{ public:
    LONG64                               __item;
};

/// Class wrapper for built-in type "xs:short" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__short to check runtime type (see soapStub.h)
class xsd__short : public xsd__anyType
{ public:
    short                                __item;
};

/// Class wrapper for built-in type "xs:string" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__string to check runtime type (see soapStub.h)
class xsd__string : public xsd__anyType
{ public:
    std::wstring                         __item;
};

/// Class wrapper for built-in type "xs:unsignedByte" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__unsignedByte_ to check runtime type (see soapStub.h)
class xsd__unsignedByte_ : public xsd__anyType
{ public:
    xsd__unsignedByte                    __item;
};

/// Class wrapper for built-in type "xs:unsignedInt" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__unsignedInt to check runtime type (see soapStub.h)
class xsd__unsignedInt : public xsd__anyType
{ public:
    unsigned int                         __item;
};

/// Class wrapper for built-in type "xs:unsignedLong" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__unsignedLong to check runtime type (see soapStub.h)
class xsd__unsignedLong : public xsd__anyType
{ public:
    ULONG64                              __item;
};

/// Class wrapper for built-in type "xs:unsignedShort" derived from xsd__anyType
/// Use virtual method soap_type() == SOAP_TYPE_xsd__unsignedShort to check runtime type (see soapStub.h)
class xsd__unsignedShort : public xsd__anyType
{ public:
    unsigned short                       __item;
};

/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class ns1__ClientLib.
class ns1__ClientLib;

//  Forward declaration of class ns1__Application.
class ns1__Application;

//  Forward declaration of class ns1__AppAdditionalInfo.
class ns1__AppAdditionalInfo;

//  Forward declaration of class ns1__DumpAdditionalInfo.
class ns1__DumpAdditionalInfo;

//  Forward declaration of class ns1__ArrayOfModuleSymbolInfo.
class ns1__ArrayOfModuleSymbolInfo;

//  Forward declaration of class ns1__ModuleSymbolInfo.
class ns1__ModuleSymbolInfo;

//  Forward declaration of class ns1__Pdb70File.
class ns1__Pdb70File;

//  Forward declaration of class ns1__Response.
class ns1__Response;

//  Forward declaration of class ns1__StopResponse.
class ns1__StopResponse;

//  Forward declaration of class ns1__ErrorResponse.
class ns1__ErrorResponse;

//  Forward declaration of class ns1__HaveSolutionResponse.
class ns1__HaveSolutionResponse;

//  Forward declaration of class ns1__NeedSymbolsThenMiniDumpResponse.
class ns1__NeedSymbolsThenMiniDumpResponse;

//  Forward declaration of class ns1__NeedMiniDumpResponse.
class ns1__NeedMiniDumpResponse;

//  Forward declaration of class ns1__NeedFullDumpResponse.
class ns1__NeedFullDumpResponse;

//  Forward declaration of class ns1__NeedMoreInfoResponse.
class ns1__NeedMoreInfoResponse;

//  Forward declaration of class _ns1__Hello.
class _ns1__Hello;

//  Forward declaration of class _ns1__HelloResponse.
class _ns1__HelloResponse;

//  Forward declaration of class _ns1__UploadMiniDump.
class _ns1__UploadMiniDump;

//  Forward declaration of class _ns1__UploadMiniDumpResponse.
class _ns1__UploadMiniDumpResponse;

//  Forward declaration of class _ns1__UploadFullDump.
class _ns1__UploadFullDump;

//  Forward declaration of class _ns1__UploadFullDumpResponse.
class _ns1__UploadFullDumpResponse;

//  Forward declaration of class _ns1__UploadAdditionalInfo.
class _ns1__UploadAdditionalInfo;

//  Forward declaration of class _ns1__UploadAdditionalInfoResponse.
class _ns1__UploadAdditionalInfoResponse;

//  Forward declaration of class _ns1__RejectedToSendAdditionalInfo.
class _ns1__RejectedToSendAdditionalInfo;

//  Forward declaration of class _ns1__RejectedToSendAdditionalInfoResponse.
class _ns1__RejectedToSendAdditionalInfoResponse;

//  Forward declaration of class _ns1__UploadSymbol.
class _ns1__UploadSymbol;

//  Forward declaration of class _ns1__UploadSymbolResponse.
class _ns1__UploadSymbolResponse;

//  Forward declaration of class ns5__ArrayOfstring.
class ns5__ArrayOfstring;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   https://www.drdump.com/services/Imports                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   https://www.drdump.com/services                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.datacontract.org/2004/07/DumpUploadService3               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.microsoft.com/2003/10/Serialization/Arrays                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/


/// "http://schemas.microsoft.com/2003/10/Serialization/":char is a simpleType restriction of xs:int.
typedef int ns3__char;

/// Class wrapper
class ns3__char__ : public xsd__anyType
{ public:
    ns3__char                            __item;
};

/// "http://schemas.microsoft.com/2003/10/Serialization/":duration is a simpleType restriction of xs:duration.
/// Content pattern is "\\-?P(\\d*D)?(T(\\d*H)?(\\d*M)?(\\d*(\\.\\d*)?S)?)?" (note: not automatically enforced)
/// Value range is [-P10675199DT2H48M5.4775808S..P10675199DT2H48M5.4775807S]
typedef xsd__duration ns3__duration "\\-?P(\\d*D)?(T(\\d*H)?(\\d*M)?(\\d*(\\.\\d*)?S)?)?";

/// Class wrapper
class ns3__duration__ : public xsd__anyType
{ public:
    ns3__duration                        __item;
};

/// "http://schemas.microsoft.com/2003/10/Serialization/":guid is a simpleType restriction of xs:string.
/// Content pattern is "[\\da-fA-F]{8}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{12}" (note: not automatically enforced)
typedef std::wstring ns3__guid "[\\da-fA-F]{8}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{12}";

/// Class wrapper
class ns3__guid__ : public xsd__anyType
{ public:
    ns3__guid                            __item;
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.datacontract.org/2004/07/DumpUploadService3               *
 *                                                                            *
\******************************************************************************/


/// "http://schemas.datacontract.org/2004/07/DumpUploadService3":ClientLib.Architecture is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns4__ClientLib_Architecture' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns4__ClientLib_Architecture
{
    ns4__ClientLib_Architecture__x86,   ///< xs:string value="x86"
    ns4__ClientLib_Architecture__x64,   ///< xs:string value="x64"
    ns4__ClientLib_Architecture__DotNet,    ///< xs:string value="DotNet"
};

/// Class wrapper
class ns4__ClientLib_Architecture_ : public xsd__anyType
{ public:
    enum ns4__ClientLib_Architecture  __item;
};

/// "http://schemas.datacontract.org/2004/07/DumpUploadService3":ClientLib.ClientType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns4__ClientLib_ClientType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns4__ClientLib_ClientType
{
    ns4__ClientLib_ClientType__CrashHandler_1_0,    ///< xs:string value="CrashHandler_1_0"
    ns4__ClientLib_ClientType__WebCrashRptGate, ///< xs:string value="WebCrashRptGate"
    ns4__ClientLib_ClientType__DumpUploader,    ///< xs:string value="DumpUploader"
    ns4__ClientLib_ClientType__CrashHandler_2_0_CrashRptBased,  ///< xs:string value="CrashHandler_2_0_CrashRptBased"
    ns4__ClientLib_ClientType__SymbolUploader,  ///< xs:string value="SymbolUploader"
};

/// Class wrapper
class ns4__ClientLib_ClientType_ : public xsd__anyType
{ public:
    enum ns4__ClientLib_ClientType  __item;
};

/// "http://schemas.datacontract.org/2004/07/DumpUploadService3":HaveSolutionResponse.SolutionType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns4__HaveSolutionResponse_SolutionType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns4__HaveSolutionResponse_SolutionType
{
    ns4__HaveSolutionResponse_SolutionType__Url,    ///< xs:string value="Url"
    ns4__HaveSolutionResponse_SolutionType__Exe,    ///< xs:string value="Exe"
};

/// Class wrapper
class ns4__HaveSolutionResponse_SolutionType_ : public xsd__anyType
{ public:
    enum ns4__HaveSolutionResponse_SolutionType  __item;
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.microsoft.com/2003/10/Serialization/Arrays                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   https://www.drdump.com/services/Imports                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   https://www.drdump.com/services                                          *
 *                                                                            *
\******************************************************************************/


/// "https://www.drdump.com/services":ClientLib is a complexType.
/// class ns1__ClientLib operations:
/// - soap_new_ns1__ClientLib(soap*) allocate
/// - soap_new_ns1__ClientLib(soap*, int num) allocate array
/// - soap_new_req_ns1__ClientLib(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ClientLib(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ClientLib(soap*, ns1__ClientLib*) deserialize from a stream
/// - int soap_write_ns1__ClientLib(soap, ns1__ClientLib*) serialize to a stream
class ns1__ClientLib : public xsd__anyType
{ public:
/// Element arch of type "http://schemas.datacontract.org/2004/07/DumpUploadService3":ClientLib.Architecture.
    enum ns4__ClientLib_Architecture  arch                           1; ///< Required element.
/// Element type of type "http://schemas.datacontract.org/2004/07/DumpUploadService3":ClientLib.ClientType.
    enum ns4__ClientLib_ClientType  type                           1;   ///< Required element.
/// Element v1 of type xs:unsignedShort.
    unsigned short                       v1                             1;  ///< Required element.
/// Element v2 of type xs:unsignedShort.
    unsigned short                       v2                             1;  ///< Required element.
/// Element v3 of type xs:unsignedShort.
    unsigned short                       v3                             1;  ///< Required element.
/// Element v4 of type xs:unsignedShort.
    unsigned short                       v4                             1;  ///< Required element.
};

/// "https://www.drdump.com/services":Application is a complexType.
/// class ns1__Application operations:
/// - soap_new_ns1__Application(soap*) allocate
/// - soap_new_ns1__Application(soap*, int num) allocate array
/// - soap_new_req_ns1__Application(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Application(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Application(soap*, ns1__Application*) deserialize from a stream
/// - int soap_write_ns1__Application(soap, ns1__Application*) serialize to a stream
class ns1__Application : public xsd__anyType
{ public:
/// Element applicationGUID of type "http://schemas.microsoft.com/2003/10/Serialization/":guid.
    ns3__guid                            applicationGUID                1;  ///< Required element.
/// Element hotfix of type xs:unsignedShort.
    unsigned short                       hotfix                         1;  ///< Required element.
/// Element mainModule of type xs:string.
    std::wstring*                        mainModule                    ;    ///< Nillable pointer.
/// Element v1 of type xs:unsignedShort.
    unsigned short                       v1                             1;  ///< Required element.
/// Element v2 of type xs:unsignedShort.
    unsigned short                       v2                             1;  ///< Required element.
/// Element v3 of type xs:unsignedShort.
    unsigned short                       v3                             1;  ///< Required element.
/// Element v4 of type xs:unsignedShort.
    unsigned short                       v4                             1;  ///< Required element.
};

/// "https://www.drdump.com/services":AppAdditionalInfo is a complexType.
/// class ns1__AppAdditionalInfo operations:
/// - soap_new_ns1__AppAdditionalInfo(soap*) allocate
/// - soap_new_ns1__AppAdditionalInfo(soap*, int num) allocate array
/// - soap_new_req_ns1__AppAdditionalInfo(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__AppAdditionalInfo(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__AppAdditionalInfo(soap*, ns1__AppAdditionalInfo*) deserialize from a stream
/// - int soap_write_ns1__AppAdditionalInfo(soap, ns1__AppAdditionalInfo*) serialize to a stream
class ns1__AppAdditionalInfo : public xsd__anyType
{ public:
/// Element appName of type xs:string.
    std::wstring*                        appName                       ;    ///< Nillable pointer.
/// Element companyName of type xs:string.
    std::wstring*                        companyName                   ;    ///< Nillable pointer.
};

/// "https://www.drdump.com/services":DumpAdditionalInfo is a complexType.
/// class ns1__DumpAdditionalInfo operations:
/// - soap_new_ns1__DumpAdditionalInfo(soap*) allocate
/// - soap_new_ns1__DumpAdditionalInfo(soap*, int num) allocate array
/// - soap_new_req_ns1__DumpAdditionalInfo(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DumpAdditionalInfo(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DumpAdditionalInfo(soap*, ns1__DumpAdditionalInfo*) deserialize from a stream
/// - int soap_write_ns1__DumpAdditionalInfo(soap, ns1__DumpAdditionalInfo*) serialize to a stream
class ns1__DumpAdditionalInfo : public xsd__anyType
{ public:
/// Element PCID of type xs:int.
    int                                  PCID                           1;  ///< Required element.
/// Element crashDate of type xs:dateTime.
    time_t                               crashDate                      1;  ///< Required element.
/// Element description of type xs:string.
    std::wstring*                        description                    0;  ///< Nillable pointer.
/// Element group of type xs:string.
    std::wstring*                        group                          0;  ///< Nillable pointer.
/// Element submitterID of type xs:int.
    int                                  submitterID                    1;  ///< Required element.
};

/// "https://www.drdump.com/services":ArrayOfModuleSymbolInfo is a complexType.
/// class ns1__ArrayOfModuleSymbolInfo operations:
/// - soap_new_ns1__ArrayOfModuleSymbolInfo(soap*) allocate
/// - soap_new_ns1__ArrayOfModuleSymbolInfo(soap*, int num) allocate array
/// - soap_new_req_ns1__ArrayOfModuleSymbolInfo(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ArrayOfModuleSymbolInfo(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ArrayOfModuleSymbolInfo(soap*, ns1__ArrayOfModuleSymbolInfo*) deserialize from a stream
/// - int soap_write_ns1__ArrayOfModuleSymbolInfo(soap, ns1__ArrayOfModuleSymbolInfo*) serialize to a stream
class ns1__ArrayOfModuleSymbolInfo : public xsd__anyType
{ public:
/// Vector of ns1__ModuleSymbolInfo* with length 0..unbounded
    std::vector<ns1__ModuleSymbolInfo* > ModuleSymbolInfo               0;  ///< Nillable pointer.
};

/// "https://www.drdump.com/services":ModuleSymbolInfo is a complexType.
/// class ns1__ModuleSymbolInfo operations:
/// - soap_new_ns1__ModuleSymbolInfo(soap*) allocate
/// - soap_new_ns1__ModuleSymbolInfo(soap*, int num) allocate array
/// - soap_new_req_ns1__ModuleSymbolInfo(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ModuleSymbolInfo(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ModuleSymbolInfo(soap*, ns1__ModuleSymbolInfo*) deserialize from a stream
/// - int soap_write_ns1__ModuleSymbolInfo(soap, ns1__ModuleSymbolInfo*) serialize to a stream
class ns1__ModuleSymbolInfo : public xsd__anyType
{ public:
/// Element isMicrosoftModule of type xs:boolean.
    bool                                 isMicrosoftModule              1;  ///< Required element.
/// Element path of type xs:string.
    std::wstring*                        path                          ;    ///< Nillable pointer.
/// Element pdb of type "https://www.drdump.com/services":Pdb70File.
    ns1__Pdb70File*                      pdb                            0;  ///< Nillable pointer.
/// Element sizeOfImage of type xs:unsignedInt.
    unsigned int                         sizeOfImage                    1;  ///< Required element.
/// Element timeDateStamp of type xs:unsignedInt.
    unsigned int                         timeDateStamp                  1;  ///< Required element.
};

/// "https://www.drdump.com/services":Pdb70File is a complexType.
/// class ns1__Pdb70File operations:
/// - soap_new_ns1__Pdb70File(soap*) allocate
/// - soap_new_ns1__Pdb70File(soap*, int num) allocate array
/// - soap_new_req_ns1__Pdb70File(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Pdb70File(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Pdb70File(soap*, ns1__Pdb70File*) deserialize from a stream
/// - int soap_write_ns1__Pdb70File(soap, ns1__Pdb70File*) serialize to a stream
class ns1__Pdb70File : public xsd__anyType
{ public:
/// Element age of type xs:unsignedInt.
    unsigned int                         age                            1;  ///< Required element.
/// Element path of type xs:string.
    std::wstring*                        path                          ;    ///< Nillable pointer.
/// Element signature of type "http://schemas.microsoft.com/2003/10/Serialization/":guid.
    ns3__guid                            signature                      1;  ///< Required element.
};

/// "https://www.drdump.com/services":Response is a complexType.
/// class ns1__Response operations:
/// - soap_new_ns1__Response(soap*) allocate
/// - soap_new_ns1__Response(soap*, int num) allocate array
/// - soap_new_req_ns1__Response(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Response(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Response(soap*, ns1__Response*) deserialize from a stream
/// - int soap_write_ns1__Response(soap, ns1__Response*) serialize to a stream
class ns1__Response : public xsd__anyType
{ public:
/// Element clientID of type xs:string.
    std::wstring*                        clientID                       0;  ///< Nillable pointer.
/// Element context of type xs:base64Binary.
    _xop__Include*                       context                        0;  ///< Nillable pointer.
/// Element dumpGroupID of type xs:int.
    int*                                 dumpGroupID                    0;  ///< Optional element.
/// Element dumpID of type xs:int.
    int*                                 dumpID                         0;  ///< Optional element.
/// Element garbage of type xs:base64Binary.
    _xop__Include*                       garbage                        0;  ///< Nillable pointer.
/// Element problemID of type xs:int.
    int*                                 problemID                      0;  ///< Optional element.
/// Element urlToProblem of type xs:string.
    std::wstring*                        urlToProblem                   0;  ///< Nillable pointer.
};


/// Top-level root element "https://www.drdump.com/services":Hello

/// "https://www.drdump.com/services":Hello is a complexType.
/// class _ns1__Hello operations:
/// - soap_new__ns1__Hello(soap*) allocate
/// - soap_new__ns1__Hello(soap*, int num) allocate array
/// - soap_new_req__ns1__Hello(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__Hello(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__Hello(soap*, _ns1__Hello*) deserialize from a stream
/// - int soap_write__ns1__Hello(soap, _ns1__Hello*) serialize to a stream
class _ns1__Hello
{ public:
/// Element clientLib of type "https://www.drdump.com/services":ClientLib.
    ns1__ClientLib*                      clientLib                      0;  ///< Nillable pointer.
/// Element app of type "https://www.drdump.com/services":Application.
    ns1__Application*                    app                            0;  ///< Nillable pointer.
/// Element appAddInfo of type "https://www.drdump.com/services":AppAdditionalInfo.
    ns1__AppAdditionalInfo*              appAddInfo                     0;  ///< Nillable pointer.
/// Element addInfo of type "https://www.drdump.com/services":DumpAdditionalInfo.
    ns1__DumpAdditionalInfo*             addInfo                        0;  ///< Nillable pointer.
/// Element availableSymbols of type "https://www.drdump.com/services":ArrayOfModuleSymbolInfo.
    ns1__ArrayOfModuleSymbolInfo*        availableSymbols               0;  ///< Nillable pointer.
/// Element stack of type xs:base64Binary.
    _xop__Include*                       stack                          0;  ///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "https://www.drdump.com/services":HelloResponse

/// "https://www.drdump.com/services":HelloResponse is a complexType.
/// class _ns1__HelloResponse operations:
/// - soap_new__ns1__HelloResponse(soap*) allocate
/// - soap_new__ns1__HelloResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__HelloResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__HelloResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__HelloResponse(soap*, _ns1__HelloResponse*) deserialize from a stream
/// - int soap_write__ns1__HelloResponse(soap, _ns1__HelloResponse*) serialize to a stream
class _ns1__HelloResponse
{ public:
/// Element HelloResult of type "https://www.drdump.com/services":Response.
    ns1__Response*                       HelloResult                    0;  ///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "https://www.drdump.com/services":UploadMiniDump

/// "https://www.drdump.com/services":UploadMiniDump is a complexType.
/// class _ns1__UploadMiniDump operations:
/// - soap_new__ns1__UploadMiniDump(soap*) allocate
/// - soap_new__ns1__UploadMiniDump(soap*, int num) allocate array
/// - soap_new_req__ns1__UploadMiniDump(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__UploadMiniDump(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__UploadMiniDump(soap*, _ns1__UploadMiniDump*) deserialize from a stream
/// - int soap_write__ns1__UploadMiniDump(soap, _ns1__UploadMiniDump*) serialize to a stream
class _ns1__UploadMiniDump
{ public:
/// Element client of type "https://www.drdump.com/services":ClientLib.
    ns1__ClientLib*                      client                         0;  ///< Nillable pointer.
/// Element app of type "https://www.drdump.com/services":Application.
    ns1__Application*                    app                            0;  ///< Nillable pointer.
/// Element addInfo of type "https://www.drdump.com/services":DumpAdditionalInfo.
    ns1__DumpAdditionalInfo*             addInfo                        0;  ///< Nillable pointer.
/// Element dump of type xs:base64Binary.
    _xop__Include*                       dump                           0;  ///< Nillable pointer.
/// Element context of type xs:base64Binary.
    _xop__Include*                       context                        0;  ///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "https://www.drdump.com/services":UploadMiniDumpResponse

/// "https://www.drdump.com/services":UploadMiniDumpResponse is a complexType.
/// class _ns1__UploadMiniDumpResponse operations:
/// - soap_new__ns1__UploadMiniDumpResponse(soap*) allocate
/// - soap_new__ns1__UploadMiniDumpResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__UploadMiniDumpResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__UploadMiniDumpResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__UploadMiniDumpResponse(soap*, _ns1__UploadMiniDumpResponse*) deserialize from a stream
/// - int soap_write__ns1__UploadMiniDumpResponse(soap, _ns1__UploadMiniDumpResponse*) serialize to a stream
class _ns1__UploadMiniDumpResponse
{ public:
/// Element UploadMiniDumpResult of type "https://www.drdump.com/services":Response.
    ns1__Response*                       UploadMiniDumpResult           0;  ///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "https://www.drdump.com/services":UploadFullDump

/// "https://www.drdump.com/services":UploadFullDump is a complexType.
/// class _ns1__UploadFullDump operations:
/// - soap_new__ns1__UploadFullDump(soap*) allocate
/// - soap_new__ns1__UploadFullDump(soap*, int num) allocate array
/// - soap_new_req__ns1__UploadFullDump(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__UploadFullDump(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__UploadFullDump(soap*, _ns1__UploadFullDump*) deserialize from a stream
/// - int soap_write__ns1__UploadFullDump(soap, _ns1__UploadFullDump*) serialize to a stream
class _ns1__UploadFullDump
{ public:
/// Element client of type "https://www.drdump.com/services":ClientLib.
    ns1__ClientLib*                      client                         0;  ///< Nillable pointer.
/// Element app of type "https://www.drdump.com/services":Application.
    ns1__Application*                    app                            0;  ///< Nillable pointer.
/// Element miniDumpID of type xs:int.
    int*                                 miniDumpID                     0;  ///< Optional element.
/// Element dumpInZip of type xs:base64Binary.
    _xop__Include*                       dumpInZip                      0;  ///< Nillable pointer.
/// Element context of type xs:base64Binary.
    _xop__Include*                       context                        0;  ///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "https://www.drdump.com/services":UploadFullDumpResponse

/// "https://www.drdump.com/services":UploadFullDumpResponse is a complexType.
/// class _ns1__UploadFullDumpResponse operations:
/// - soap_new__ns1__UploadFullDumpResponse(soap*) allocate
/// - soap_new__ns1__UploadFullDumpResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__UploadFullDumpResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__UploadFullDumpResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__UploadFullDumpResponse(soap*, _ns1__UploadFullDumpResponse*) deserialize from a stream
/// - int soap_write__ns1__UploadFullDumpResponse(soap, _ns1__UploadFullDumpResponse*) serialize to a stream
class _ns1__UploadFullDumpResponse
{ public:
/// Element UploadFullDumpResult of type "https://www.drdump.com/services":Response.
    ns1__Response*                       UploadFullDumpResult           0;  ///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "https://www.drdump.com/services":UploadAdditionalInfo

/// "https://www.drdump.com/services":UploadAdditionalInfo is a complexType.
/// class _ns1__UploadAdditionalInfo operations:
/// - soap_new__ns1__UploadAdditionalInfo(soap*) allocate
/// - soap_new__ns1__UploadAdditionalInfo(soap*, int num) allocate array
/// - soap_new_req__ns1__UploadAdditionalInfo(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__UploadAdditionalInfo(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__UploadAdditionalInfo(soap*, _ns1__UploadAdditionalInfo*) deserialize from a stream
/// - int soap_write__ns1__UploadAdditionalInfo(soap, _ns1__UploadAdditionalInfo*) serialize to a stream
class _ns1__UploadAdditionalInfo
{ public:
/// Element client of type "https://www.drdump.com/services":ClientLib.
    ns1__ClientLib*                      client                         0;  ///< Nillable pointer.
/// Element app of type "https://www.drdump.com/services":Application.
    ns1__Application*                    app                            0;  ///< Nillable pointer.
/// Element miniDumpID of type xs:int.
    int*                                 miniDumpID                     0;  ///< Optional element.
/// Element info of type xs:base64Binary.
    _xop__Include*                       info                           0;  ///< Nillable pointer.
/// Element context of type xs:base64Binary.
    _xop__Include*                       context                        0;  ///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "https://www.drdump.com/services":UploadAdditionalInfoResponse

/// "https://www.drdump.com/services":UploadAdditionalInfoResponse is a complexType.
/// class _ns1__UploadAdditionalInfoResponse operations:
/// - soap_new__ns1__UploadAdditionalInfoResponse(soap*) allocate
/// - soap_new__ns1__UploadAdditionalInfoResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__UploadAdditionalInfoResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__UploadAdditionalInfoResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__UploadAdditionalInfoResponse(soap*, _ns1__UploadAdditionalInfoResponse*) deserialize from a stream
/// - int soap_write__ns1__UploadAdditionalInfoResponse(soap, _ns1__UploadAdditionalInfoResponse*) serialize to a stream
class _ns1__UploadAdditionalInfoResponse
{ public:
/// Element UploadAdditionalInfoResult of type "https://www.drdump.com/services":Response.
    ns1__Response*                       UploadAdditionalInfoResult     0;  ///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "https://www.drdump.com/services":RejectedToSendAdditionalInfo

/// "https://www.drdump.com/services":RejectedToSendAdditionalInfo is a complexType.
/// class _ns1__RejectedToSendAdditionalInfo operations:
/// - soap_new__ns1__RejectedToSendAdditionalInfo(soap*) allocate
/// - soap_new__ns1__RejectedToSendAdditionalInfo(soap*, int num) allocate array
/// - soap_new_req__ns1__RejectedToSendAdditionalInfo(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__RejectedToSendAdditionalInfo(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__RejectedToSendAdditionalInfo(soap*, _ns1__RejectedToSendAdditionalInfo*) deserialize from a stream
/// - int soap_write__ns1__RejectedToSendAdditionalInfo(soap, _ns1__RejectedToSendAdditionalInfo*) serialize to a stream
class _ns1__RejectedToSendAdditionalInfo
{ public:
/// Element client of type "https://www.drdump.com/services":ClientLib.
    ns1__ClientLib*                      client                         0;  ///< Nillable pointer.
/// Element app of type "https://www.drdump.com/services":Application.
    ns1__Application*                    app                            0;  ///< Nillable pointer.
/// Element miniDumpID of type xs:int.
    int*                                 miniDumpID                     0;  ///< Optional element.
/// Element context of type xs:base64Binary.
    _xop__Include*                       context                        0;  ///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "https://www.drdump.com/services":RejectedToSendAdditionalInfoResponse

/// "https://www.drdump.com/services":RejectedToSendAdditionalInfoResponse is a complexType.
/// class _ns1__RejectedToSendAdditionalInfoResponse operations:
/// - soap_new__ns1__RejectedToSendAdditionalInfoResponse(soap*) allocate
/// - soap_new__ns1__RejectedToSendAdditionalInfoResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__RejectedToSendAdditionalInfoResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__RejectedToSendAdditionalInfoResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__RejectedToSendAdditionalInfoResponse(soap*, _ns1__RejectedToSendAdditionalInfoResponse*) deserialize from a stream
/// - int soap_write__ns1__RejectedToSendAdditionalInfoResponse(soap, _ns1__RejectedToSendAdditionalInfoResponse*) serialize to a stream
class _ns1__RejectedToSendAdditionalInfoResponse
{ public:
/// Element RejectedToSendAdditionalInfoResult of type "https://www.drdump.com/services":Response.
    ns1__Response*                       RejectedToSendAdditionalInfoResult 0;  ///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "https://www.drdump.com/services":UploadSymbol

/// "https://www.drdump.com/services":UploadSymbol is a complexType.
/// class _ns1__UploadSymbol operations:
/// - soap_new__ns1__UploadSymbol(soap*) allocate
/// - soap_new__ns1__UploadSymbol(soap*, int num) allocate array
/// - soap_new_req__ns1__UploadSymbol(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__UploadSymbol(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__UploadSymbol(soap*, _ns1__UploadSymbol*) deserialize from a stream
/// - int soap_write__ns1__UploadSymbol(soap, _ns1__UploadSymbol*) serialize to a stream
class _ns1__UploadSymbol
{ public:
/// Element client of type "https://www.drdump.com/services":ClientLib.
    ns1__ClientLib*                      client                         0;  ///< Nillable pointer.
/// Element app of type "https://www.drdump.com/services":Application.
    ns1__Application*                    app                            0;  ///< Nillable pointer.
/// Element publish of type xs:boolean.
    bool*                                publish                        0;  ///< Optional element.
/// Element sym of type xs:base64Binary.
    _xop__Include*                       sym                            0;  ///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "https://www.drdump.com/services":UploadSymbolResponse

/// "https://www.drdump.com/services":UploadSymbolResponse is a complexType.
/// class _ns1__UploadSymbolResponse operations:
/// - soap_new__ns1__UploadSymbolResponse(soap*) allocate
/// - soap_new__ns1__UploadSymbolResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__UploadSymbolResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__UploadSymbolResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__UploadSymbolResponse(soap*, _ns1__UploadSymbolResponse*) deserialize from a stream
/// - int soap_write__ns1__UploadSymbolResponse(soap, _ns1__UploadSymbolResponse*) serialize to a stream
class _ns1__UploadSymbolResponse
{ public:
/// Element UploadSymbolResult of type xs:string.
    std::wstring*                        UploadSymbolResult             0;  ///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://schemas.datacontract.org/2004/07/DumpUploadService3               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://schemas.microsoft.com/2003/10/Serialization/Arrays                *
 *                                                                            *
\******************************************************************************/


/// "http://schemas.microsoft.com/2003/10/Serialization/Arrays":ArrayOfstring is a complexType.
/// class ns5__ArrayOfstring operations:
/// - soap_new_ns5__ArrayOfstring(soap*) allocate
/// - soap_new_ns5__ArrayOfstring(soap*, int num) allocate array
/// - soap_new_req_ns5__ArrayOfstring(soap*, ...) allocate, set required members
/// - soap_new_set_ns5__ArrayOfstring(soap*, ...) allocate, set all public members
/// - int soap_read_ns5__ArrayOfstring(soap*, ns5__ArrayOfstring*) deserialize from a stream
/// - int soap_write_ns5__ArrayOfstring(soap, ns5__ArrayOfstring*) serialize to a stream
class ns5__ArrayOfstring : public xsd__anyType
{ public:
/// Vector of std::wstring with length 0..unbounded
    std::vector<std::wstring           > string                         0;  ///< Nillable pointer.
};

/// "https://www.drdump.com/services":StopResponse is a complexType with complexContent extension of "https://www.drdump.com/services":Response.
/// class ns1__StopResponse operations:
/// - soap_new_ns1__StopResponse(soap*) allocate
/// - soap_new_ns1__StopResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__StopResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__StopResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__StopResponse(soap*, ns1__StopResponse*) deserialize from a stream
/// - int soap_write_ns1__StopResponse(soap, ns1__StopResponse*) serialize to a stream
class ns1__StopResponse : public ns1__Response
{ public:
/*  INHERITED FROM ns1__Response:
/// Element clientID of type xs:string.
    std::wstring*                        clientID                       0;  ///< Nillable pointer.
/// Element context of type xs:base64Binary.
    _xop__Include*                       context                        0;  ///< Nillable pointer.
/// Element dumpGroupID of type xs:int.
    int*                                 dumpGroupID                    0;  ///< Optional element.
/// Element dumpID of type xs:int.
    int*                                 dumpID                         0;  ///< Optional element.
/// Element garbage of type xs:base64Binary.
    _xop__Include*                       garbage                        0;  ///< Nillable pointer.
/// Element problemID of type xs:int.
    int*                                 problemID                      0;  ///< Optional element.
/// Element urlToProblem of type xs:string.
    std::wstring*                        urlToProblem                   0;  ///< Nillable pointer.
    END OF INHERITED FROM ns1__Response */
};

/// "https://www.drdump.com/services":ErrorResponse is a complexType with complexContent extension of "https://www.drdump.com/services":Response.
/// class ns1__ErrorResponse operations:
/// - soap_new_ns1__ErrorResponse(soap*) allocate
/// - soap_new_ns1__ErrorResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__ErrorResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__ErrorResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__ErrorResponse(soap*, ns1__ErrorResponse*) deserialize from a stream
/// - int soap_write_ns1__ErrorResponse(soap, ns1__ErrorResponse*) serialize to a stream
class ns1__ErrorResponse : public ns1__Response
{ public:
/*  INHERITED FROM ns1__Response:
/// Element clientID of type xs:string.
    std::wstring*                        clientID                       0;  ///< Nillable pointer.
/// Element context of type xs:base64Binary.
    _xop__Include*                       context                        0;  ///< Nillable pointer.
/// Element dumpGroupID of type xs:int.
    int*                                 dumpGroupID                    0;  ///< Optional element.
/// Element dumpID of type xs:int.
    int*                                 dumpID                         0;  ///< Optional element.
/// Element garbage of type xs:base64Binary.
    _xop__Include*                       garbage                        0;  ///< Nillable pointer.
/// Element problemID of type xs:int.
    int*                                 problemID                      0;  ///< Optional element.
/// Element urlToProblem of type xs:string.
    std::wstring*                        urlToProblem                   0;  ///< Nillable pointer.
    END OF INHERITED FROM ns1__Response */
/// Element error of type xs:string.
    std::wstring*                        error                         ;    ///< Nillable pointer.
};

/// "https://www.drdump.com/services":HaveSolutionResponse is a complexType with complexContent extension of "https://www.drdump.com/services":Response.
/// class ns1__HaveSolutionResponse operations:
/// - soap_new_ns1__HaveSolutionResponse(soap*) allocate
/// - soap_new_ns1__HaveSolutionResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__HaveSolutionResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__HaveSolutionResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__HaveSolutionResponse(soap*, ns1__HaveSolutionResponse*) deserialize from a stream
/// - int soap_write_ns1__HaveSolutionResponse(soap, ns1__HaveSolutionResponse*) serialize to a stream
class ns1__HaveSolutionResponse : public ns1__Response
{ public:
/*  INHERITED FROM ns1__Response:
/// Element clientID of type xs:string.
    std::wstring*                        clientID                       0;  ///< Nillable pointer.
/// Element context of type xs:base64Binary.
    _xop__Include*                       context                        0;  ///< Nillable pointer.
/// Element dumpGroupID of type xs:int.
    int*                                 dumpGroupID                    0;  ///< Optional element.
/// Element dumpID of type xs:int.
    int*                                 dumpID                         0;  ///< Optional element.
/// Element garbage of type xs:base64Binary.
    _xop__Include*                       garbage                        0;  ///< Nillable pointer.
/// Element problemID of type xs:int.
    int*                                 problemID                      0;  ///< Optional element.
/// Element urlToProblem of type xs:string.
    std::wstring*                        urlToProblem                   0;  ///< Nillable pointer.
    END OF INHERITED FROM ns1__Response */
/// Element askConfirmation of type xs:boolean.
    bool                                 askConfirmation                1;  ///< Required element.
/// Element exe of type xs:base64Binary.
    _xop__Include*                       exe                            0;  ///< Nillable pointer.
/// Element type of type "http://schemas.datacontract.org/2004/07/DumpUploadService3":HaveSolutionResponse.SolutionType.
    enum ns4__HaveSolutionResponse_SolutionType  type                           1;  ///< Required element.
/// Element url of type xs:string.
    std::wstring*                        url                            0;  ///< Nillable pointer.
};

/// "https://www.drdump.com/services":NeedSymbolsThenMiniDumpResponse is a complexType with complexContent extension of "https://www.drdump.com/services":Response.
/// class ns1__NeedSymbolsThenMiniDumpResponse operations:
/// - soap_new_ns1__NeedSymbolsThenMiniDumpResponse(soap*) allocate
/// - soap_new_ns1__NeedSymbolsThenMiniDumpResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__NeedSymbolsThenMiniDumpResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__NeedSymbolsThenMiniDumpResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__NeedSymbolsThenMiniDumpResponse(soap*, ns1__NeedSymbolsThenMiniDumpResponse*) deserialize from a stream
/// - int soap_write_ns1__NeedSymbolsThenMiniDumpResponse(soap, ns1__NeedSymbolsThenMiniDumpResponse*) serialize to a stream
class ns1__NeedSymbolsThenMiniDumpResponse : public ns1__Response
{ public:
/*  INHERITED FROM ns1__Response:
/// Element clientID of type xs:string.
    std::wstring*                        clientID                       0;  ///< Nillable pointer.
/// Element context of type xs:base64Binary.
    _xop__Include*                       context                        0;  ///< Nillable pointer.
/// Element dumpGroupID of type xs:int.
    int*                                 dumpGroupID                    0;  ///< Optional element.
/// Element dumpID of type xs:int.
    int*                                 dumpID                         0;  ///< Optional element.
/// Element garbage of type xs:base64Binary.
    _xop__Include*                       garbage                        0;  ///< Nillable pointer.
/// Element problemID of type xs:int.
    int*                                 problemID                      0;  ///< Optional element.
/// Element urlToProblem of type xs:string.
    std::wstring*                        urlToProblem                   0;  ///< Nillable pointer.
    END OF INHERITED FROM ns1__Response */
/// Element askConfirmation of type xs:boolean.
    bool                                 askConfirmation                1;  ///< Required element.
/// Element msSymbols of type "http://schemas.microsoft.com/2003/10/Serialization/Arrays":ArrayOfstring.
    ns5__ArrayOfstring*                  msSymbols                     ;    ///< Nillable pointer.
/// Element symbols of type "http://schemas.microsoft.com/2003/10/Serialization/Arrays":ArrayOfstring.
    ns5__ArrayOfstring*                  symbols                       ;    ///< Nillable pointer.
};

/// "https://www.drdump.com/services":NeedMiniDumpResponse is a complexType with complexContent extension of "https://www.drdump.com/services":Response.
/// class ns1__NeedMiniDumpResponse operations:
/// - soap_new_ns1__NeedMiniDumpResponse(soap*) allocate
/// - soap_new_ns1__NeedMiniDumpResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__NeedMiniDumpResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__NeedMiniDumpResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__NeedMiniDumpResponse(soap*, ns1__NeedMiniDumpResponse*) deserialize from a stream
/// - int soap_write_ns1__NeedMiniDumpResponse(soap, ns1__NeedMiniDumpResponse*) serialize to a stream
class ns1__NeedMiniDumpResponse : public ns1__Response
{ public:
/*  INHERITED FROM ns1__Response:
/// Element clientID of type xs:string.
    std::wstring*                        clientID                       0;  ///< Nillable pointer.
/// Element context of type xs:base64Binary.
    _xop__Include*                       context                        0;  ///< Nillable pointer.
/// Element dumpGroupID of type xs:int.
    int*                                 dumpGroupID                    0;  ///< Optional element.
/// Element dumpID of type xs:int.
    int*                                 dumpID                         0;  ///< Optional element.
/// Element garbage of type xs:base64Binary.
    _xop__Include*                       garbage                        0;  ///< Nillable pointer.
/// Element problemID of type xs:int.
    int*                                 problemID                      0;  ///< Optional element.
/// Element urlToProblem of type xs:string.
    std::wstring*                        urlToProblem                   0;  ///< Nillable pointer.
    END OF INHERITED FROM ns1__Response */
};

/// "https://www.drdump.com/services":NeedFullDumpResponse is a complexType with complexContent extension of "https://www.drdump.com/services":Response.
/// class ns1__NeedFullDumpResponse operations:
/// - soap_new_ns1__NeedFullDumpResponse(soap*) allocate
/// - soap_new_ns1__NeedFullDumpResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__NeedFullDumpResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__NeedFullDumpResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__NeedFullDumpResponse(soap*, ns1__NeedFullDumpResponse*) deserialize from a stream
/// - int soap_write_ns1__NeedFullDumpResponse(soap, ns1__NeedFullDumpResponse*) serialize to a stream
class ns1__NeedFullDumpResponse : public ns1__Response
{ public:
/*  INHERITED FROM ns1__Response:
/// Element clientID of type xs:string.
    std::wstring*                        clientID                       0;  ///< Nillable pointer.
/// Element context of type xs:base64Binary.
    _xop__Include*                       context                        0;  ///< Nillable pointer.
/// Element dumpGroupID of type xs:int.
    int*                                 dumpGroupID                    0;  ///< Optional element.
/// Element dumpID of type xs:int.
    int*                                 dumpID                         0;  ///< Optional element.
/// Element garbage of type xs:base64Binary.
    _xop__Include*                       garbage                        0;  ///< Nillable pointer.
/// Element problemID of type xs:int.
    int*                                 problemID                      0;  ///< Optional element.
/// Element urlToProblem of type xs:string.
    std::wstring*                        urlToProblem                   0;  ///< Nillable pointer.
    END OF INHERITED FROM ns1__Response */
/// Element attachUserInfo of type xs:boolean.
    bool                                 attachUserInfo                 1;  ///< Required element.
/// Element restrictedDumpType of type xs:unsignedInt.
    unsigned int                         restrictedDumpType             1;  ///< Required element.
};

/// "https://www.drdump.com/services":NeedMoreInfoResponse is a complexType with complexContent extension of "https://www.drdump.com/services":Response.
/// class ns1__NeedMoreInfoResponse operations:
/// - soap_new_ns1__NeedMoreInfoResponse(soap*) allocate
/// - soap_new_ns1__NeedMoreInfoResponse(soap*, int num) allocate array
/// - soap_new_req_ns1__NeedMoreInfoResponse(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__NeedMoreInfoResponse(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__NeedMoreInfoResponse(soap*, ns1__NeedMoreInfoResponse*) deserialize from a stream
/// - int soap_write_ns1__NeedMoreInfoResponse(soap, ns1__NeedMoreInfoResponse*) serialize to a stream
class ns1__NeedMoreInfoResponse : public ns1__Response
{ public:
/*  INHERITED FROM ns1__Response:
/// Element clientID of type xs:string.
    std::wstring*                        clientID                       0;  ///< Nillable pointer.
/// Element context of type xs:base64Binary.
    _xop__Include*                       context                        0;  ///< Nillable pointer.
/// Element dumpGroupID of type xs:int.
    int*                                 dumpGroupID                    0;  ///< Optional element.
/// Element dumpID of type xs:int.
    int*                                 dumpID                         0;  ///< Optional element.
/// Element garbage of type xs:base64Binary.
    _xop__Include*                       garbage                        0;  ///< Nillable pointer.
/// Element problemID of type xs:int.
    int*                                 problemID                      0;  ///< Optional element.
/// Element urlToProblem of type xs:string.
    std::wstring*                        urlToProblem                   0;  ///< Nillable pointer.
    END OF INHERITED FROM ns1__Response */
/// Element infoModule of type xs:base64Binary.
    _xop__Include*                       infoModule                     0;  ///< Nillable pointer.
/// Element infoModuleCfg of type xs:string.
    std::wstring*                        infoModuleCfg                  0;  ///< Nillable pointer.
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   https://www.drdump.com/services/Imports                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   https://www.drdump.com/services/Imports                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   https://www.drdump.com/services                                          *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "https://www.drdump.com/services":ClientLib of type "https://www.drdump.com/services":ClientLib.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "https://www.drdump.com/services":Application of type "https://www.drdump.com/services":Application.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "https://www.drdump.com/services":AppAdditionalInfo of type "https://www.drdump.com/services":AppAdditionalInfo.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "https://www.drdump.com/services":DumpAdditionalInfo of type "https://www.drdump.com/services":DumpAdditionalInfo.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "https://www.drdump.com/services":ArrayOfModuleSymbolInfo of type "https://www.drdump.com/services":ArrayOfModuleSymbolInfo.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "https://www.drdump.com/services":ModuleSymbolInfo of type "https://www.drdump.com/services":ModuleSymbolInfo.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "https://www.drdump.com/services":Pdb70File of type "https://www.drdump.com/services":Pdb70File.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "https://www.drdump.com/services":Response of type "https://www.drdump.com/services":Response.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "https://www.drdump.com/services":StopResponse of type "https://www.drdump.com/services":StopResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "https://www.drdump.com/services":ErrorResponse of type "https://www.drdump.com/services":ErrorResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "https://www.drdump.com/services":HaveSolutionResponse of type "https://www.drdump.com/services":HaveSolutionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "https://www.drdump.com/services":NeedSymbolsThenMiniDumpResponse of type "https://www.drdump.com/services":NeedSymbolsThenMiniDumpResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "https://www.drdump.com/services":NeedMiniDumpResponse of type "https://www.drdump.com/services":NeedMiniDumpResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "https://www.drdump.com/services":NeedFullDumpResponse of type "https://www.drdump.com/services":NeedFullDumpResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "https://www.drdump.com/services":NeedMoreInfoResponse of type "https://www.drdump.com/services":NeedMoreInfoResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   https://www.drdump.com/services                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":anyType of type xs:anyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":anyURI of type xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":base64Binary of type xs:base64Binary.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":boolean of type xs:boolean.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":byte of type xs:byte.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":dateTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":decimal of type xs:decimal.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":double of type xs:double.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":float of type xs:float.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":int of type xs:int.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":long of type xs:long.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":QName of type xs:QName.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":short of type xs:short.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":string of type xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedByte of type xs:unsignedByte.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedInt of type xs:unsignedInt.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedLong of type xs:unsignedLong.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedShort of type xs:unsignedShort.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":char of type "http://schemas.microsoft.com/2003/10/Serialization/":char.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":duration of type "http://schemas.microsoft.com/2003/10/Serialization/":duration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":guid of type "http://schemas.microsoft.com/2003/10/Serialization/":guid.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/


/// Top-level attribute "http://schemas.microsoft.com/2003/10/Serialization/":FactoryType of simpleType xs:QName.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/// Top-level attribute "http://schemas.microsoft.com/2003/10/Serialization/":Id of simpleType xs:ID.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/// Top-level attribute "http://schemas.microsoft.com/2003/10/Serialization/":Ref of simpleType xs:IDREF.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://schemas.datacontract.org/2004/07/DumpUploadService3               *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://schemas.datacontract.org/2004/07/DumpUploadService3":ClientLib.Architecture of type "http://schemas.datacontract.org/2004/07/DumpUploadService3":ClientLib.Architecture.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.datacontract.org/2004/07/DumpUploadService3":ClientLib.ClientType of type "http://schemas.datacontract.org/2004/07/DumpUploadService3":ClientLib.ClientType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.datacontract.org/2004/07/DumpUploadService3":HaveSolutionResponse.SolutionType of type "http://schemas.datacontract.org/2004/07/DumpUploadService3":HaveSolutionResponse.SolutionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://schemas.datacontract.org/2004/07/DumpUploadService3               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://schemas.microsoft.com/2003/10/Serialization/Arrays                *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/Arrays":ArrayOfstring of type "http://schemas.microsoft.com/2003/10/Serialization/Arrays":ArrayOfstring.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://schemas.microsoft.com/2003/10/Serialization/Arrays                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap ns1  service name:  CustomBinding_DumpUploadService3_Uploader
//gsoap ns1  service type:  DumpUploadService3_Uploader
//gsoap ns1  service port:  http://localhost:59175/Service/DumpUploader3.svc
//gsoap ns1  service namespace: https://www.drdump.com/services
//gsoap ns1  service transport: http://schemas.xmlsoap.org/soap/http

/** @mainpage Uploader Definitions

@section Uploader_bindings Service Bindings

  - @ref CustomBinding_DumpUploadService3_Uploader

@section Uploader_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page CustomBinding_DumpUploadService3_Uploader Binding "CustomBinding_DumpUploadService3_Uploader"

@section CustomBinding_DumpUploadService3_Uploader_operations Operations of Binding  "CustomBinding_DumpUploadService3_Uploader"

  - @ref __ns1__Hello

  - @ref __ns1__UploadMiniDump

  - @ref __ns1__UploadFullDump

  - @ref __ns1__UploadAdditionalInfo

  - @ref __ns1__RejectedToSendAdditionalInfo

  - @ref __ns1__UploadSymbol

@section CustomBinding_DumpUploadService3_Uploader_ports Endpoints of Binding  "CustomBinding_DumpUploadService3_Uploader"

  - http://localhost:59175/Service/DumpUploader3.svc

@section CustomBinding_DumpUploadService3_Uploader_policy Policy of Binding  "CustomBinding_DumpUploadService3_Uploader"

See Section @ref CustomBinding_DumpUploadService3_Uploader_policy_enablers

  - WS-Policy applicable to the service endpoint ports:
    - Exactly one of the following:
        - All of the following:
            - Other policy requirements:
    @verbatim
<wsoma:OptimizedMimeSerialization xmlns:wsoma="http://schemas.xmlsoap.org/ws/2004/09/policy/optimizedmimeserialization"/>
    @endverbatim

Note: use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   CustomBinding_DumpUploadService3_Uploader                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Hello                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Hello" of service binding "CustomBinding_DumpUploadService3_Uploader"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "https://www.drdump.com/services/DumpUploadService3.Uploader/Hello"

  - Addressing input action: "https://www.drdump.com/services/DumpUploadService3.Uploader/Hello"

  - Addressing output action: "https://www.drdump.com/services/DumpUploadService3.Uploader/HelloResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Hello(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__Hello*                        ns1__Hello,
    // output parameters:
    _ns1__HelloResponse*                ns1__HelloResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Hello(
    struct soap *soap,
    // input parameters:
    _ns1__Hello*                        ns1__Hello,
    // output parameters:
    _ns1__HelloResponse*                ns1__HelloResponse
  );
@endcode

C++ proxy class (defined in soapCustomBinding_DumpUploadService3_UploaderProxy.h):
@code
  class CustomBinding_DumpUploadService3_UploaderProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCustomBinding_DumpUploadService3_UploaderService.h):
@code
  class CustomBinding_DumpUploadService3_UploaderService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:   Hello SOAP
//gsoap ns1  service method-style:  Hello document
//gsoap ns1  service method-encoding:   Hello literal
//gsoap ns1  service method-input-action:   Hello https://www.drdump.com/services/DumpUploadService3.Uploader/Hello
//gsoap ns1  service method-output-action:  Hello https://www.drdump.com/services/DumpUploadService3.Uploader/HelloResponse
int __ns1__Hello(
    _ns1__Hello*                        ns1__Hello, ///< Input parameter
    _ns1__HelloResponse*                ns1__HelloResponse  ///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UploadMiniDump                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UploadMiniDump" of service binding "CustomBinding_DumpUploadService3_Uploader"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "https://www.drdump.com/services/DumpUploadService3.Uploader/UploadMiniDump"

  - Addressing input action: "https://www.drdump.com/services/DumpUploadService3.Uploader/UploadMiniDump"

  - Addressing output action: "https://www.drdump.com/services/DumpUploadService3.Uploader/UploadMiniDumpResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UploadMiniDump(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__UploadMiniDump*               ns1__UploadMiniDump,
    // output parameters:
    _ns1__UploadMiniDumpResponse*       ns1__UploadMiniDumpResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UploadMiniDump(
    struct soap *soap,
    // input parameters:
    _ns1__UploadMiniDump*               ns1__UploadMiniDump,
    // output parameters:
    _ns1__UploadMiniDumpResponse*       ns1__UploadMiniDumpResponse
  );
@endcode

C++ proxy class (defined in soapCustomBinding_DumpUploadService3_UploaderProxy.h):
@code
  class CustomBinding_DumpUploadService3_UploaderProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCustomBinding_DumpUploadService3_UploaderService.h):
@code
  class CustomBinding_DumpUploadService3_UploaderService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:   UploadMiniDump SOAP
//gsoap ns1  service method-style:  UploadMiniDump document
//gsoap ns1  service method-encoding:   UploadMiniDump literal
//gsoap ns1  service method-input-action:   UploadMiniDump https://www.drdump.com/services/DumpUploadService3.Uploader/UploadMiniDump
//gsoap ns1  service method-output-action:  UploadMiniDump https://www.drdump.com/services/DumpUploadService3.Uploader/UploadMiniDumpResponse
int __ns1__UploadMiniDump(
    _ns1__UploadMiniDump*               ns1__UploadMiniDump,    ///< Input parameter
    _ns1__UploadMiniDumpResponse*       ns1__UploadMiniDumpResponse ///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UploadFullDump                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UploadFullDump" of service binding "CustomBinding_DumpUploadService3_Uploader"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "https://www.drdump.com/services/DumpUploadService3.Uploader/UploadFullDump"

  - Addressing input action: "https://www.drdump.com/services/DumpUploadService3.Uploader/UploadFullDump"

  - Addressing output action: "https://www.drdump.com/services/DumpUploadService3.Uploader/UploadFullDumpResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UploadFullDump(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__UploadFullDump*               ns1__UploadFullDump,
    // output parameters:
    _ns1__UploadFullDumpResponse*       ns1__UploadFullDumpResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UploadFullDump(
    struct soap *soap,
    // input parameters:
    _ns1__UploadFullDump*               ns1__UploadFullDump,
    // output parameters:
    _ns1__UploadFullDumpResponse*       ns1__UploadFullDumpResponse
  );
@endcode

C++ proxy class (defined in soapCustomBinding_DumpUploadService3_UploaderProxy.h):
@code
  class CustomBinding_DumpUploadService3_UploaderProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCustomBinding_DumpUploadService3_UploaderService.h):
@code
  class CustomBinding_DumpUploadService3_UploaderService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:   UploadFullDump SOAP
//gsoap ns1  service method-style:  UploadFullDump document
//gsoap ns1  service method-encoding:   UploadFullDump literal
//gsoap ns1  service method-input-action:   UploadFullDump https://www.drdump.com/services/DumpUploadService3.Uploader/UploadFullDump
//gsoap ns1  service method-output-action:  UploadFullDump https://www.drdump.com/services/DumpUploadService3.Uploader/UploadFullDumpResponse
int __ns1__UploadFullDump(
    _ns1__UploadFullDump*               ns1__UploadFullDump,    ///< Input parameter
    _ns1__UploadFullDumpResponse*       ns1__UploadFullDumpResponse ///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UploadAdditionalInfo                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UploadAdditionalInfo" of service binding "CustomBinding_DumpUploadService3_Uploader"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "https://www.drdump.com/services/DumpUploadService3.Uploader/UploadAdditionalInfo"

  - Addressing input action: "https://www.drdump.com/services/DumpUploadService3.Uploader/UploadAdditionalInfo"

  - Addressing output action: "https://www.drdump.com/services/DumpUploadService3.Uploader/UploadAdditionalInfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UploadAdditionalInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__UploadAdditionalInfo*         ns1__UploadAdditionalInfo,
    // output parameters:
    _ns1__UploadAdditionalInfoResponse* ns1__UploadAdditionalInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UploadAdditionalInfo(
    struct soap *soap,
    // input parameters:
    _ns1__UploadAdditionalInfo*         ns1__UploadAdditionalInfo,
    // output parameters:
    _ns1__UploadAdditionalInfoResponse* ns1__UploadAdditionalInfoResponse
  );
@endcode

C++ proxy class (defined in soapCustomBinding_DumpUploadService3_UploaderProxy.h):
@code
  class CustomBinding_DumpUploadService3_UploaderProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCustomBinding_DumpUploadService3_UploaderService.h):
@code
  class CustomBinding_DumpUploadService3_UploaderService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:   UploadAdditionalInfo SOAP
//gsoap ns1  service method-style:  UploadAdditionalInfo document
//gsoap ns1  service method-encoding:   UploadAdditionalInfo literal
//gsoap ns1  service method-input-action:   UploadAdditionalInfo https://www.drdump.com/services/DumpUploadService3.Uploader/UploadAdditionalInfo
//gsoap ns1  service method-output-action:  UploadAdditionalInfo https://www.drdump.com/services/DumpUploadService3.Uploader/UploadAdditionalInfoResponse
int __ns1__UploadAdditionalInfo(
    _ns1__UploadAdditionalInfo*         ns1__UploadAdditionalInfo,  ///< Input parameter
    _ns1__UploadAdditionalInfoResponse* ns1__UploadAdditionalInfoResponse   ///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__RejectedToSendAdditionalInfo                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__RejectedToSendAdditionalInfo" of service binding "CustomBinding_DumpUploadService3_Uploader"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "https://www.drdump.com/services/DumpUploadService3.Uploader/RejectedToSendAdditionalInfo"

  - Addressing input action: "https://www.drdump.com/services/DumpUploadService3.Uploader/RejectedToSendAdditionalInfo"

  - Addressing output action: "https://www.drdump.com/services/DumpUploadService3.Uploader/RejectedToSendAdditionalInfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__RejectedToSendAdditionalInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__RejectedToSendAdditionalInfo* ns1__RejectedToSendAdditionalInfo,
    // output parameters:
    _ns1__RejectedToSendAdditionalInfoResponse* ns1__RejectedToSendAdditionalInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__RejectedToSendAdditionalInfo(
    struct soap *soap,
    // input parameters:
    _ns1__RejectedToSendAdditionalInfo* ns1__RejectedToSendAdditionalInfo,
    // output parameters:
    _ns1__RejectedToSendAdditionalInfoResponse* ns1__RejectedToSendAdditionalInfoResponse
  );
@endcode

C++ proxy class (defined in soapCustomBinding_DumpUploadService3_UploaderProxy.h):
@code
  class CustomBinding_DumpUploadService3_UploaderProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCustomBinding_DumpUploadService3_UploaderService.h):
@code
  class CustomBinding_DumpUploadService3_UploaderService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:   RejectedToSendAdditionalInfo SOAP
//gsoap ns1  service method-style:  RejectedToSendAdditionalInfo document
//gsoap ns1  service method-encoding:   RejectedToSendAdditionalInfo literal
//gsoap ns1  service method-input-action:   RejectedToSendAdditionalInfo https://www.drdump.com/services/DumpUploadService3.Uploader/RejectedToSendAdditionalInfo
//gsoap ns1  service method-output-action:  RejectedToSendAdditionalInfo https://www.drdump.com/services/DumpUploadService3.Uploader/RejectedToSendAdditionalInfoResponse
int __ns1__RejectedToSendAdditionalInfo(
    _ns1__RejectedToSendAdditionalInfo* ns1__RejectedToSendAdditionalInfo,  ///< Input parameter
    _ns1__RejectedToSendAdditionalInfoResponse* ns1__RejectedToSendAdditionalInfoResponse   ///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__UploadSymbol                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__UploadSymbol" of service binding "CustomBinding_DumpUploadService3_Uploader"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "https://www.drdump.com/services/DumpUploadService3.Uploader/UploadSymbol"

  - Addressing input action: "https://www.drdump.com/services/DumpUploadService3.Uploader/UploadSymbol"

  - Addressing output action: "https://www.drdump.com/services/DumpUploadService3.Uploader/UploadSymbolResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__UploadSymbol(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__UploadSymbol*                 ns1__UploadSymbol,
    // output parameters:
    _ns1__UploadSymbolResponse*         ns1__UploadSymbolResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__UploadSymbol(
    struct soap *soap,
    // input parameters:
    _ns1__UploadSymbol*                 ns1__UploadSymbol,
    // output parameters:
    _ns1__UploadSymbolResponse*         ns1__UploadSymbolResponse
  );
@endcode

C++ proxy class (defined in soapCustomBinding_DumpUploadService3_UploaderProxy.h):
@code
  class CustomBinding_DumpUploadService3_UploaderProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCustomBinding_DumpUploadService3_UploaderService.h):
@code
  class CustomBinding_DumpUploadService3_UploaderService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:   UploadSymbol SOAP
//gsoap ns1  service method-style:  UploadSymbol document
//gsoap ns1  service method-encoding:   UploadSymbol literal
//gsoap ns1  service method-input-action:   UploadSymbol https://www.drdump.com/services/DumpUploadService3.Uploader/UploadSymbol
//gsoap ns1  service method-output-action:  UploadSymbol https://www.drdump.com/services/DumpUploadService3.Uploader/UploadSymbolResponse
int __ns1__UploadSymbol(
    _ns1__UploadSymbol*                 ns1__UploadSymbol,  ///< Input parameter
    _ns1__UploadSymbolResponse*         ns1__UploadSymbolResponse   ///< Output parameter
);

/**

@page CustomBinding_DumpUploadService3_Uploader Binding "CustomBinding_DumpUploadService3_Uploader"

@section CustomBinding_DumpUploadService3_Uploader_policy_enablers Policy Enablers of Binding  "CustomBinding_DumpUploadService3_Uploader"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
    @code
    #import "wsa5.h" // to be added to this header file for the soapcpp2 build step
    @endcode
    @code
    #include "plugin/wsaapi.h"
    soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
    // See the user guide gsoap/doc/wsa/html/index.html
    @endcode
    - WS-Addressing (2004/08):
    @code
    #import "wsa.h" // to be added to this header file for the soapcpp2 build step
    @endcode
    @code
    #include "plugin/wsaapi.h"
    soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
    // See the user guide gsoap/doc/wsa/html/index.html
    @endcode
    - WS-ReliableMessaging 1.0:
    @code
    #import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
    @endcode
    @code
    #include "plugin/wsrmapi.h"
    soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
    soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
    // See the user guide gsoap/doc/wsrm/html/index.html
    @endcode
    - WS-ReliableMessaging 1.1:
    @code
    #import "wsrm.h" // to be added to this header file for the soapcpp2 build step
    @endcode
    @code
    #include "plugin/wsrmapi.h"
    soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
    soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
    // See the user guide gsoap/doc/wsrm/html/index.html
    @endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
    @code
    #import "wsse.h" // to be added to this header file for the soapcpp2 build step
    @endcode
    @code
    #include "plugin/wsseapi.h"
    soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
    // See the user guide gsoap/doc/wsse/html/index.html
    @endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
    @code
    #import "wsse11.h" // to be added to this header file for the soapcpp2 build step
    @endcode
    @code
    #include "plugin/wsseapi.h"
    soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
    // See the user guide gsoap/doc/wsse/html/index.html
    @endcode
    - HTTP Digest Authentication:
    @code
    #include "plugin/httpda.h"
    soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
    // See the user guide gsoap/doc/httpda/html/index.html
    @endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section ns2 Top-level root elements of schema "https://www.drdump.com/services/Imports"

@section ns1 Top-level root elements of schema "https://www.drdump.com/services"

  - <ns1:Hello> @ref _ns1__Hello
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__Hello(struct soap*, _ns1__Hello*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__Hello(struct soap*, _ns1__Hello*);
    @endcode

  - <ns1:ClientLib> (use wsdl2h option -g to auto-generate)

  - <ns1:Application> (use wsdl2h option -g to auto-generate)

  - <ns1:AppAdditionalInfo> (use wsdl2h option -g to auto-generate)

  - <ns1:DumpAdditionalInfo> (use wsdl2h option -g to auto-generate)

  - <ns1:ArrayOfModuleSymbolInfo> (use wsdl2h option -g to auto-generate)

  - <ns1:ModuleSymbolInfo> (use wsdl2h option -g to auto-generate)

  - <ns1:Pdb70File> (use wsdl2h option -g to auto-generate)

  - <ns1:HelloResponse> @ref _ns1__HelloResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__HelloResponse(struct soap*, _ns1__HelloResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__HelloResponse(struct soap*, _ns1__HelloResponse*);
    @endcode

  - <ns1:Response> (use wsdl2h option -g to auto-generate)

  - <ns1:StopResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:ErrorResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:HaveSolutionResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:NeedSymbolsThenMiniDumpResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:NeedMiniDumpResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:NeedFullDumpResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:NeedMoreInfoResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:UploadMiniDump> @ref _ns1__UploadMiniDump
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UploadMiniDump(struct soap*, _ns1__UploadMiniDump*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UploadMiniDump(struct soap*, _ns1__UploadMiniDump*);
    @endcode

  - <ns1:UploadMiniDumpResponse> @ref _ns1__UploadMiniDumpResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UploadMiniDumpResponse(struct soap*, _ns1__UploadMiniDumpResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UploadMiniDumpResponse(struct soap*, _ns1__UploadMiniDumpResponse*);
    @endcode

  - <ns1:UploadFullDump> @ref _ns1__UploadFullDump
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UploadFullDump(struct soap*, _ns1__UploadFullDump*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UploadFullDump(struct soap*, _ns1__UploadFullDump*);
    @endcode

  - <ns1:UploadFullDumpResponse> @ref _ns1__UploadFullDumpResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UploadFullDumpResponse(struct soap*, _ns1__UploadFullDumpResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UploadFullDumpResponse(struct soap*, _ns1__UploadFullDumpResponse*);
    @endcode

  - <ns1:UploadAdditionalInfo> @ref _ns1__UploadAdditionalInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UploadAdditionalInfo(struct soap*, _ns1__UploadAdditionalInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UploadAdditionalInfo(struct soap*, _ns1__UploadAdditionalInfo*);
    @endcode

  - <ns1:UploadAdditionalInfoResponse> @ref _ns1__UploadAdditionalInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UploadAdditionalInfoResponse(struct soap*, _ns1__UploadAdditionalInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UploadAdditionalInfoResponse(struct soap*, _ns1__UploadAdditionalInfoResponse*);
    @endcode

  - <ns1:RejectedToSendAdditionalInfo> @ref _ns1__RejectedToSendAdditionalInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__RejectedToSendAdditionalInfo(struct soap*, _ns1__RejectedToSendAdditionalInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__RejectedToSendAdditionalInfo(struct soap*, _ns1__RejectedToSendAdditionalInfo*);
    @endcode

  - <ns1:RejectedToSendAdditionalInfoResponse> @ref _ns1__RejectedToSendAdditionalInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__RejectedToSendAdditionalInfoResponse(struct soap*, _ns1__RejectedToSendAdditionalInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__RejectedToSendAdditionalInfoResponse(struct soap*, _ns1__RejectedToSendAdditionalInfoResponse*);
    @endcode

  - <ns1:UploadSymbol> @ref _ns1__UploadSymbol
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UploadSymbol(struct soap*, _ns1__UploadSymbol*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UploadSymbol(struct soap*, _ns1__UploadSymbol*);
    @endcode

  - <ns1:UploadSymbolResponse> @ref _ns1__UploadSymbolResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UploadSymbolResponse(struct soap*, _ns1__UploadSymbolResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UploadSymbolResponse(struct soap*, _ns1__UploadSymbolResponse*);
    @endcode

@section ns3 Top-level root elements of schema "http://schemas.microsoft.com/2003/10/Serialization/"

  - <ns3:anyType> (use wsdl2h option -g to auto-generate)

  - <ns3:anyURI> (use wsdl2h option -g to auto-generate)

  - <ns3:base64Binary> (use wsdl2h option -g to auto-generate)

  - <ns3:boolean> (use wsdl2h option -g to auto-generate)

  - <ns3:byte> (use wsdl2h option -g to auto-generate)

  - <ns3:dateTime> (use wsdl2h option -g to auto-generate)

  - <ns3:decimal> (use wsdl2h option -g to auto-generate)

  - <ns3:double> (use wsdl2h option -g to auto-generate)

  - <ns3:float> (use wsdl2h option -g to auto-generate)

  - <ns3:int> (use wsdl2h option -g to auto-generate)

  - <ns3:long> (use wsdl2h option -g to auto-generate)

  - <ns3:QName> (use wsdl2h option -g to auto-generate)

  - <ns3:short> (use wsdl2h option -g to auto-generate)

  - <ns3:string> (use wsdl2h option -g to auto-generate)

  - <ns3:unsignedByte> (use wsdl2h option -g to auto-generate)

  - <ns3:unsignedInt> (use wsdl2h option -g to auto-generate)

  - <ns3:unsignedLong> (use wsdl2h option -g to auto-generate)

  - <ns3:unsignedShort> (use wsdl2h option -g to auto-generate)

  - <ns3:char> (use wsdl2h option -g to auto-generate)

  - <ns3:duration> (use wsdl2h option -g to auto-generate)

  - <ns3:guid> (use wsdl2h option -g to auto-generate)

@section ns4 Top-level root elements of schema "http://schemas.datacontract.org/2004/07/DumpUploadService3"

  - <ns4:ClientLib.Architecture> (use wsdl2h option -g to auto-generate)

  - <ns4:ClientLib.ClientType> (use wsdl2h option -g to auto-generate)

  - <ns4:HaveSolutionResponse.SolutionType> (use wsdl2h option -g to auto-generate)

@section ns5 Top-level root elements of schema "http://schemas.microsoft.com/2003/10/Serialization/Arrays"

  - <ns5:ArrayOfstring> (use wsdl2h option -g to auto-generate)

*/

/* End of DumpUploader.h */
