/* soapH.h
   Generated by gSOAP 2.8.0 from DumpUploader.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_short
#define SOAP_TYPE_short (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_short(struct soap*, short *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_short(struct soap*, const char*, int, const short *, const char*);
SOAP_FMAC3 short * SOAP_FMAC4 soap_in_short(struct soap*, const char*, short *, const char*);

#ifndef soap_write_short
#define soap_write_short(soap, data) ( soap_begin_send(soap) || soap_put_short(soap, data, "short", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_short(struct soap*, const short *, const char*, const char*);

#ifndef soap_read_short
#define soap_read_short(soap, data) ( soap_begin_recv(soap) || !soap_get_short(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 short * SOAP_FMAC4 soap_get_short(struct soap*, short *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_begin_send(soap) || soap_put_unsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef SOAP_TYPE_unsignedShort
#define SOAP_TYPE_unsignedShort (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedShort(struct soap*, unsigned short *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedShort(struct soap*, const char*, int, const unsigned short *, const char*);
SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_in_unsignedShort(struct soap*, const char*, unsigned short *, const char*);

#ifndef soap_write_unsignedShort
#define soap_write_unsignedShort(soap, data) ( soap_begin_send(soap) || soap_put_unsignedShort(soap, data, "unsignedShort", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedShort(struct soap*, const unsigned short *, const char*, const char*);

#ifndef soap_read_unsignedShort
#define soap_read_unsignedShort(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedShort(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_get_unsignedShort(struct soap*, unsigned short *, const char*, const char*);

#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_begin_send(soap) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_begin_send(soap) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__AdditionalInfoType
#define SOAP_TYPE_ns1__AdditionalInfoType (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__AdditionalInfoType(struct soap*, enum ns1__AdditionalInfoType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__AdditionalInfoType(struct soap*, const char*, int, const enum ns1__AdditionalInfoType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns1__AdditionalInfoType2s(struct soap*, enum ns1__AdditionalInfoType);
SOAP_FMAC3 enum ns1__AdditionalInfoType * SOAP_FMAC4 soap_in_ns1__AdditionalInfoType(struct soap*, const char*, enum ns1__AdditionalInfoType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns1__AdditionalInfoType(struct soap*, const char*, enum ns1__AdditionalInfoType *);

#ifndef soap_write_ns1__AdditionalInfoType
#define soap_write_ns1__AdditionalInfoType(soap, data) ( soap_begin_send(soap) || soap_put_ns1__AdditionalInfoType(soap, data, "ns1:AdditionalInfoType", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__AdditionalInfoType(struct soap*, const enum ns1__AdditionalInfoType *, const char*, const char*);

#ifndef soap_read_ns1__AdditionalInfoType
#define soap_read_ns1__AdditionalInfoType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__AdditionalInfoType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum ns1__AdditionalInfoType * SOAP_FMAC4 soap_get_ns1__AdditionalInfoType(struct soap*, enum ns1__AdditionalInfoType *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__SolutionType
#define SOAP_TYPE_ns1__SolutionType (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__SolutionType(struct soap*, enum ns1__SolutionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__SolutionType(struct soap*, const char*, int, const enum ns1__SolutionType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns1__SolutionType2s(struct soap*, enum ns1__SolutionType);
SOAP_FMAC3 enum ns1__SolutionType * SOAP_FMAC4 soap_in_ns1__SolutionType(struct soap*, const char*, enum ns1__SolutionType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns1__SolutionType(struct soap*, const char*, enum ns1__SolutionType *);

#ifndef soap_write_ns1__SolutionType
#define soap_write_ns1__SolutionType(soap, data) ( soap_begin_send(soap) || soap_put_ns1__SolutionType(soap, data, "ns1:SolutionType", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__SolutionType(struct soap*, const enum ns1__SolutionType *, const char*, const char*);

#ifndef soap_read_ns1__SolutionType
#define soap_read_ns1__SolutionType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__SolutionType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum ns1__SolutionType * SOAP_FMAC4 soap_get_ns1__SolutionType(struct soap*, enum ns1__SolutionType *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__ResponseType
#define SOAP_TYPE_ns1__ResponseType (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__ResponseType(struct soap*, enum ns1__ResponseType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ResponseType(struct soap*, const char*, int, const enum ns1__ResponseType *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns1__ResponseType2s(struct soap*, enum ns1__ResponseType);
SOAP_FMAC3 enum ns1__ResponseType * SOAP_FMAC4 soap_in_ns1__ResponseType(struct soap*, const char*, enum ns1__ResponseType *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns1__ResponseType(struct soap*, const char*, enum ns1__ResponseType *);

#ifndef soap_write_ns1__ResponseType
#define soap_write_ns1__ResponseType(soap, data) ( soap_begin_send(soap) || soap_put_ns1__ResponseType(soap, data, "ns1:ResponseType", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__ResponseType(struct soap*, const enum ns1__ResponseType *, const char*, const char*);

#ifndef soap_read_ns1__ResponseType
#define soap_read_ns1__ResponseType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__ResponseType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum ns1__ResponseType * SOAP_FMAC4 soap_get_ns1__ResponseType(struct soap*, enum ns1__ResponseType *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__Architecture
#define SOAP_TYPE_ns1__Architecture (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__Architecture(struct soap*, enum ns1__Architecture *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__Architecture(struct soap*, const char*, int, const enum ns1__Architecture *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns1__Architecture2s(struct soap*, enum ns1__Architecture);
SOAP_FMAC3 enum ns1__Architecture * SOAP_FMAC4 soap_in_ns1__Architecture(struct soap*, const char*, enum ns1__Architecture *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns1__Architecture(struct soap*, const char*, enum ns1__Architecture *);

#ifndef soap_write_ns1__Architecture
#define soap_write_ns1__Architecture(soap, data) ( soap_begin_send(soap) || soap_put_ns1__Architecture(soap, data, "ns1:Architecture", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__Architecture(struct soap*, const enum ns1__Architecture *, const char*, const char*);

#ifndef soap_read_ns1__Architecture
#define soap_read_ns1__Architecture(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__Architecture(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum ns1__Architecture * SOAP_FMAC4 soap_get_ns1__Architecture(struct soap*, enum ns1__Architecture *, const char*, const char*);

#ifndef SOAP_TYPE_ns2__guid
#define SOAP_TYPE_ns2__guid (29)
#endif

#define soap_default_ns2__guid(soap, a) soap_default_std__wstring(soap, a)


#define soap_serialize_ns2__guid(soap, a) soap_serialize_std__wstring(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__guid(struct soap*, const char*, int, const std::wstring*, const char*);
SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_in_ns2__guid(struct soap*, const char*, std::wstring*, const char*);

#ifndef soap_write_ns2__guid
#define soap_write_ns2__guid(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns2:guid", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__guid(struct soap*, const std::wstring *, const char*, const char*);

#ifndef soap_read_ns2__guid
#define soap_read_ns2__guid(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__guid(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_get_ns2__guid(struct soap*, std::wstring *, const char*, const char*);

#define soap_new_ns2__guid(soap, n) soap_instantiate_ns2__guid(soap, n, NULL, NULL, NULL)


#define soap_delete_ns2__guid(soap, p) soap_delete(soap, p)


#define soap_instantiate_ns2__guid soap_instantiate_std__wstring


#define soap_copy_ns2__guid soap_copy_std__wstring

#ifndef SOAP_TYPE_std__wstring
#define SOAP_TYPE_std__wstring (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__wstring(struct soap*, std::wstring *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__wstring(struct soap*, const std::wstring *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__wstring(struct soap*, const char*, int, const std::wstring*, const char*);
SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_in_std__wstring(struct soap*, const char*, std::wstring*, const char*);

#ifndef soap_write_std__wstring
#define soap_write_std__wstring(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "string", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__wstring(struct soap*, const std::wstring *, const char*, const char*);

#ifndef soap_read_std__wstring
#define soap_read_std__wstring(soap, data) ( soap_begin_recv(soap) || !soap_get_std__wstring(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_get_std__wstring(struct soap*, std::wstring *, const char*, const char*);

#define soap_new_std__wstring(soap, n) soap_instantiate_std__wstring(soap, n, NULL, NULL, NULL)


#define soap_delete_std__wstring(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::wstring * SOAP_FMAC2 soap_instantiate_std__wstring(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__wstring(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UploadSymbolResponse
#define SOAP_TYPE__ns1__UploadSymbolResponse (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UploadSymbolResponse(struct soap*, const char*, int, const _ns1__UploadSymbolResponse *, const char*);
SOAP_FMAC3 _ns1__UploadSymbolResponse * SOAP_FMAC4 soap_in__ns1__UploadSymbolResponse(struct soap*, const char*, _ns1__UploadSymbolResponse *, const char*);

#ifndef soap_write__ns1__UploadSymbolResponse
#define soap_write__ns1__UploadSymbolResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:UploadSymbolResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__UploadSymbolResponse
#define soap_read__ns1__UploadSymbolResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UploadSymbolResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__UploadSymbolResponse * SOAP_FMAC4 soap_get__ns1__UploadSymbolResponse(struct soap*, _ns1__UploadSymbolResponse *, const char*, const char*);

#define soap_new__ns1__UploadSymbolResponse(soap, n) soap_instantiate__ns1__UploadSymbolResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__UploadSymbolResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__UploadSymbolResponse * SOAP_FMAC2 soap_instantiate__ns1__UploadSymbolResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UploadSymbolResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UploadSymbol
#define SOAP_TYPE__ns1__UploadSymbol (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UploadSymbol(struct soap*, const char*, int, const _ns1__UploadSymbol *, const char*);
SOAP_FMAC3 _ns1__UploadSymbol * SOAP_FMAC4 soap_in__ns1__UploadSymbol(struct soap*, const char*, _ns1__UploadSymbol *, const char*);

#ifndef soap_write__ns1__UploadSymbol
#define soap_write__ns1__UploadSymbol(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:UploadSymbol", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__UploadSymbol
#define soap_read__ns1__UploadSymbol(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UploadSymbol(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__UploadSymbol * SOAP_FMAC4 soap_get__ns1__UploadSymbol(struct soap*, _ns1__UploadSymbol *, const char*, const char*);

#define soap_new__ns1__UploadSymbol(soap, n) soap_instantiate__ns1__UploadSymbol(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__UploadSymbol(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__UploadSymbol * SOAP_FMAC2 soap_instantiate__ns1__UploadSymbol(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UploadSymbol(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UploadAdditionalInfoResponse
#define SOAP_TYPE__ns1__UploadAdditionalInfoResponse (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UploadAdditionalInfoResponse(struct soap*, const char*, int, const _ns1__UploadAdditionalInfoResponse *, const char*);
SOAP_FMAC3 _ns1__UploadAdditionalInfoResponse * SOAP_FMAC4 soap_in__ns1__UploadAdditionalInfoResponse(struct soap*, const char*, _ns1__UploadAdditionalInfoResponse *, const char*);

#ifndef soap_write__ns1__UploadAdditionalInfoResponse
#define soap_write__ns1__UploadAdditionalInfoResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:UploadAdditionalInfoResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__UploadAdditionalInfoResponse
#define soap_read__ns1__UploadAdditionalInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UploadAdditionalInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__UploadAdditionalInfoResponse * SOAP_FMAC4 soap_get__ns1__UploadAdditionalInfoResponse(struct soap*, _ns1__UploadAdditionalInfoResponse *, const char*, const char*);

#define soap_new__ns1__UploadAdditionalInfoResponse(soap, n) soap_instantiate__ns1__UploadAdditionalInfoResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__UploadAdditionalInfoResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__UploadAdditionalInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__UploadAdditionalInfoResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UploadAdditionalInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UploadAdditionalInfo
#define SOAP_TYPE__ns1__UploadAdditionalInfo (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UploadAdditionalInfo(struct soap*, const char*, int, const _ns1__UploadAdditionalInfo *, const char*);
SOAP_FMAC3 _ns1__UploadAdditionalInfo * SOAP_FMAC4 soap_in__ns1__UploadAdditionalInfo(struct soap*, const char*, _ns1__UploadAdditionalInfo *, const char*);

#ifndef soap_write__ns1__UploadAdditionalInfo
#define soap_write__ns1__UploadAdditionalInfo(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:UploadAdditionalInfo", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__UploadAdditionalInfo
#define soap_read__ns1__UploadAdditionalInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UploadAdditionalInfo(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__UploadAdditionalInfo * SOAP_FMAC4 soap_get__ns1__UploadAdditionalInfo(struct soap*, _ns1__UploadAdditionalInfo *, const char*, const char*);

#define soap_new__ns1__UploadAdditionalInfo(soap, n) soap_instantiate__ns1__UploadAdditionalInfo(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__UploadAdditionalInfo(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__UploadAdditionalInfo * SOAP_FMAC2 soap_instantiate__ns1__UploadAdditionalInfo(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UploadAdditionalInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UploadMiniDumpResponse
#define SOAP_TYPE__ns1__UploadMiniDumpResponse (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UploadMiniDumpResponse(struct soap*, const char*, int, const _ns1__UploadMiniDumpResponse *, const char*);
SOAP_FMAC3 _ns1__UploadMiniDumpResponse * SOAP_FMAC4 soap_in__ns1__UploadMiniDumpResponse(struct soap*, const char*, _ns1__UploadMiniDumpResponse *, const char*);

#ifndef soap_write__ns1__UploadMiniDumpResponse
#define soap_write__ns1__UploadMiniDumpResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:UploadMiniDumpResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__UploadMiniDumpResponse
#define soap_read__ns1__UploadMiniDumpResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UploadMiniDumpResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__UploadMiniDumpResponse * SOAP_FMAC4 soap_get__ns1__UploadMiniDumpResponse(struct soap*, _ns1__UploadMiniDumpResponse *, const char*, const char*);

#define soap_new__ns1__UploadMiniDumpResponse(soap, n) soap_instantiate__ns1__UploadMiniDumpResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__UploadMiniDumpResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__UploadMiniDumpResponse * SOAP_FMAC2 soap_instantiate__ns1__UploadMiniDumpResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UploadMiniDumpResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__UploadMiniDump
#define SOAP_TYPE__ns1__UploadMiniDump (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__UploadMiniDump(struct soap*, const char*, int, const _ns1__UploadMiniDump *, const char*);
SOAP_FMAC3 _ns1__UploadMiniDump * SOAP_FMAC4 soap_in__ns1__UploadMiniDump(struct soap*, const char*, _ns1__UploadMiniDump *, const char*);

#ifndef soap_write__ns1__UploadMiniDump
#define soap_write__ns1__UploadMiniDump(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:UploadMiniDump", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__UploadMiniDump
#define soap_read__ns1__UploadMiniDump(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__UploadMiniDump(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__UploadMiniDump * SOAP_FMAC4 soap_get__ns1__UploadMiniDump(struct soap*, _ns1__UploadMiniDump *, const char*, const char*);

#define soap_new__ns1__UploadMiniDump(soap, n) soap_instantiate__ns1__UploadMiniDump(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__UploadMiniDump(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__UploadMiniDump * SOAP_FMAC2 soap_instantiate__ns1__UploadMiniDump(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__UploadMiniDump(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__HelloResponse
#define SOAP_TYPE__ns1__HelloResponse (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__HelloResponse(struct soap*, const char*, int, const _ns1__HelloResponse *, const char*);
SOAP_FMAC3 _ns1__HelloResponse * SOAP_FMAC4 soap_in__ns1__HelloResponse(struct soap*, const char*, _ns1__HelloResponse *, const char*);

#ifndef soap_write__ns1__HelloResponse
#define soap_write__ns1__HelloResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:HelloResponse", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__HelloResponse
#define soap_read__ns1__HelloResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__HelloResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__HelloResponse * SOAP_FMAC4 soap_get__ns1__HelloResponse(struct soap*, _ns1__HelloResponse *, const char*, const char*);

#define soap_new__ns1__HelloResponse(soap, n) soap_instantiate__ns1__HelloResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__HelloResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__HelloResponse * SOAP_FMAC2 soap_instantiate__ns1__HelloResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__HelloResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__Hello
#define SOAP_TYPE__ns1__Hello (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Hello(struct soap*, const char*, int, const _ns1__Hello *, const char*);
SOAP_FMAC3 _ns1__Hello * SOAP_FMAC4 soap_in__ns1__Hello(struct soap*, const char*, _ns1__Hello *, const char*);

#ifndef soap_write__ns1__Hello
#define soap_write__ns1__Hello(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:Hello", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read__ns1__Hello
#define soap_read__ns1__Hello(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__Hello(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__Hello * SOAP_FMAC4 soap_get__ns1__Hello(struct soap*, _ns1__Hello *, const char*, const char*);

#define soap_new__ns1__Hello(soap, n) soap_instantiate__ns1__Hello(soap, n, NULL, NULL, NULL)


#define soap_delete__ns1__Hello(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _ns1__Hello * SOAP_FMAC2 soap_instantiate__ns1__Hello(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__Hello(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__Solution
#define SOAP_TYPE_ns1__Solution (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__Solution(struct soap*, const char*, int, const ns1__Solution *, const char*);
SOAP_FMAC3 ns1__Solution * SOAP_FMAC4 soap_in_ns1__Solution(struct soap*, const char*, ns1__Solution *, const char*);

#ifndef soap_write_ns1__Solution
#define soap_write_ns1__Solution(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:Solution", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__Solution
#define soap_read_ns1__Solution(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__Solution(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__Solution * SOAP_FMAC4 soap_get_ns1__Solution(struct soap*, ns1__Solution *, const char*, const char*);

#define soap_new_ns1__Solution(soap, n) soap_instantiate_ns1__Solution(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__Solution(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__Solution * SOAP_FMAC2 soap_instantiate_ns1__Solution(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__Solution(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__Response
#define SOAP_TYPE_ns1__Response (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__Response(struct soap*, const char*, int, const ns1__Response *, const char*);
SOAP_FMAC3 ns1__Response * SOAP_FMAC4 soap_in_ns1__Response(struct soap*, const char*, ns1__Response *, const char*);

#ifndef soap_write_ns1__Response
#define soap_write_ns1__Response(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:Response", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__Response
#define soap_read_ns1__Response(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__Response(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__Response * SOAP_FMAC4 soap_get_ns1__Response(struct soap*, ns1__Response *, const char*, const char*);

#define soap_new_ns1__Response(soap, n) soap_instantiate_ns1__Response(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__Response(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__Response * SOAP_FMAC2 soap_instantiate_ns1__Response(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__Application
#define SOAP_TYPE_ns1__Application (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__Application(struct soap*, const char*, int, const ns1__Application *, const char*);
SOAP_FMAC3 ns1__Application * SOAP_FMAC4 soap_in_ns1__Application(struct soap*, const char*, ns1__Application *, const char*);

#ifndef soap_write_ns1__Application
#define soap_write_ns1__Application(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:Application", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__Application
#define soap_read_ns1__Application(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__Application(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__Application * SOAP_FMAC4 soap_get_ns1__Application(struct soap*, ns1__Application *, const char*, const char*);

#define soap_new_ns1__Application(soap, n) soap_instantiate_ns1__Application(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__Application(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__Application * SOAP_FMAC2 soap_instantiate_ns1__Application(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__Application(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__ClientLib
#define SOAP_TYPE_ns1__ClientLib (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ClientLib(struct soap*, const char*, int, const ns1__ClientLib *, const char*);
SOAP_FMAC3 ns1__ClientLib * SOAP_FMAC4 soap_in_ns1__ClientLib(struct soap*, const char*, ns1__ClientLib *, const char*);

#ifndef soap_write_ns1__ClientLib
#define soap_write_ns1__ClientLib(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "ns1:ClientLib", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_ns1__ClientLib
#define soap_read_ns1__ClientLib(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__ClientLib(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__ClientLib * SOAP_FMAC4 soap_get_ns1__ClientLib(struct soap*, ns1__ClientLib *, const char*, const char*);

#define soap_new_ns1__ClientLib(soap, n) soap_instantiate_ns1__ClientLib(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__ClientLib(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__ClientLib * SOAP_FMAC2 soap_instantiate_ns1__ClientLib(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ClientLib(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns4__UploadSymbol
#define SOAP_TYPE___ns4__UploadSymbol (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns4__UploadSymbol(struct soap*, struct __ns4__UploadSymbol *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns4__UploadSymbol(struct soap*, const struct __ns4__UploadSymbol *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns4__UploadSymbol(struct soap*, const char*, int, const struct __ns4__UploadSymbol *, const char*);
SOAP_FMAC3 struct __ns4__UploadSymbol * SOAP_FMAC4 soap_in___ns4__UploadSymbol(struct soap*, const char*, struct __ns4__UploadSymbol *, const char*);

#ifndef soap_write___ns4__UploadSymbol
#define soap_write___ns4__UploadSymbol(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns4__UploadSymbol(soap, data), 0) || soap_put___ns4__UploadSymbol(soap, data, "-ns4:UploadSymbol", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns4__UploadSymbol(struct soap*, const struct __ns4__UploadSymbol *, const char*, const char*);

#ifndef soap_read___ns4__UploadSymbol
#define soap_read___ns4__UploadSymbol(soap, data) ( soap_begin_recv(soap) || !soap_get___ns4__UploadSymbol(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns4__UploadSymbol * SOAP_FMAC4 soap_get___ns4__UploadSymbol(struct soap*, struct __ns4__UploadSymbol *, const char*, const char*);

#define soap_new___ns4__UploadSymbol(soap, n) soap_instantiate___ns4__UploadSymbol(soap, n, NULL, NULL, NULL)


#define soap_delete___ns4__UploadSymbol(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns4__UploadSymbol * SOAP_FMAC2 soap_instantiate___ns4__UploadSymbol(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns4__UploadSymbol(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns4__UploadAdditionalInfo
#define SOAP_TYPE___ns4__UploadAdditionalInfo (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns4__UploadAdditionalInfo(struct soap*, struct __ns4__UploadAdditionalInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns4__UploadAdditionalInfo(struct soap*, const struct __ns4__UploadAdditionalInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns4__UploadAdditionalInfo(struct soap*, const char*, int, const struct __ns4__UploadAdditionalInfo *, const char*);
SOAP_FMAC3 struct __ns4__UploadAdditionalInfo * SOAP_FMAC4 soap_in___ns4__UploadAdditionalInfo(struct soap*, const char*, struct __ns4__UploadAdditionalInfo *, const char*);

#ifndef soap_write___ns4__UploadAdditionalInfo
#define soap_write___ns4__UploadAdditionalInfo(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns4__UploadAdditionalInfo(soap, data), 0) || soap_put___ns4__UploadAdditionalInfo(soap, data, "-ns4:UploadAdditionalInfo", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns4__UploadAdditionalInfo(struct soap*, const struct __ns4__UploadAdditionalInfo *, const char*, const char*);

#ifndef soap_read___ns4__UploadAdditionalInfo
#define soap_read___ns4__UploadAdditionalInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns4__UploadAdditionalInfo(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns4__UploadAdditionalInfo * SOAP_FMAC4 soap_get___ns4__UploadAdditionalInfo(struct soap*, struct __ns4__UploadAdditionalInfo *, const char*, const char*);

#define soap_new___ns4__UploadAdditionalInfo(soap, n) soap_instantiate___ns4__UploadAdditionalInfo(soap, n, NULL, NULL, NULL)


#define soap_delete___ns4__UploadAdditionalInfo(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns4__UploadAdditionalInfo * SOAP_FMAC2 soap_instantiate___ns4__UploadAdditionalInfo(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns4__UploadAdditionalInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns4__UploadMiniDump
#define SOAP_TYPE___ns4__UploadMiniDump (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns4__UploadMiniDump(struct soap*, struct __ns4__UploadMiniDump *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns4__UploadMiniDump(struct soap*, const struct __ns4__UploadMiniDump *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns4__UploadMiniDump(struct soap*, const char*, int, const struct __ns4__UploadMiniDump *, const char*);
SOAP_FMAC3 struct __ns4__UploadMiniDump * SOAP_FMAC4 soap_in___ns4__UploadMiniDump(struct soap*, const char*, struct __ns4__UploadMiniDump *, const char*);

#ifndef soap_write___ns4__UploadMiniDump
#define soap_write___ns4__UploadMiniDump(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns4__UploadMiniDump(soap, data), 0) || soap_put___ns4__UploadMiniDump(soap, data, "-ns4:UploadMiniDump", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns4__UploadMiniDump(struct soap*, const struct __ns4__UploadMiniDump *, const char*, const char*);

#ifndef soap_read___ns4__UploadMiniDump
#define soap_read___ns4__UploadMiniDump(soap, data) ( soap_begin_recv(soap) || !soap_get___ns4__UploadMiniDump(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns4__UploadMiniDump * SOAP_FMAC4 soap_get___ns4__UploadMiniDump(struct soap*, struct __ns4__UploadMiniDump *, const char*, const char*);

#define soap_new___ns4__UploadMiniDump(soap, n) soap_instantiate___ns4__UploadMiniDump(soap, n, NULL, NULL, NULL)


#define soap_delete___ns4__UploadMiniDump(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns4__UploadMiniDump * SOAP_FMAC2 soap_instantiate___ns4__UploadMiniDump(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns4__UploadMiniDump(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns4__Hello
#define SOAP_TYPE___ns4__Hello (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns4__Hello(struct soap*, struct __ns4__Hello *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns4__Hello(struct soap*, const struct __ns4__Hello *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns4__Hello(struct soap*, const char*, int, const struct __ns4__Hello *, const char*);
SOAP_FMAC3 struct __ns4__Hello * SOAP_FMAC4 soap_in___ns4__Hello(struct soap*, const char*, struct __ns4__Hello *, const char*);

#ifndef soap_write___ns4__Hello
#define soap_write___ns4__Hello(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns4__Hello(soap, data), 0) || soap_put___ns4__Hello(soap, data, "-ns4:Hello", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns4__Hello(struct soap*, const struct __ns4__Hello *, const char*, const char*);

#ifndef soap_read___ns4__Hello
#define soap_read___ns4__Hello(soap, data) ( soap_begin_recv(soap) || !soap_get___ns4__Hello(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns4__Hello * SOAP_FMAC4 soap_get___ns4__Hello(struct soap*, struct __ns4__Hello *, const char*, const char*);

#define soap_new___ns4__Hello(soap, n) soap_instantiate___ns4__Hello(soap, n, NULL, NULL, NULL)


#define soap_delete___ns4__Hello(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns4__Hello * SOAP_FMAC2 soap_instantiate___ns4__Hello(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns4__Hello(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns3__UploadSymbol
#define SOAP_TYPE___ns3__UploadSymbol (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns3__UploadSymbol(struct soap*, struct __ns3__UploadSymbol *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns3__UploadSymbol(struct soap*, const struct __ns3__UploadSymbol *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns3__UploadSymbol(struct soap*, const char*, int, const struct __ns3__UploadSymbol *, const char*);
SOAP_FMAC3 struct __ns3__UploadSymbol * SOAP_FMAC4 soap_in___ns3__UploadSymbol(struct soap*, const char*, struct __ns3__UploadSymbol *, const char*);

#ifndef soap_write___ns3__UploadSymbol
#define soap_write___ns3__UploadSymbol(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns3__UploadSymbol(soap, data), 0) || soap_put___ns3__UploadSymbol(soap, data, "-ns3:UploadSymbol", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns3__UploadSymbol(struct soap*, const struct __ns3__UploadSymbol *, const char*, const char*);

#ifndef soap_read___ns3__UploadSymbol
#define soap_read___ns3__UploadSymbol(soap, data) ( soap_begin_recv(soap) || !soap_get___ns3__UploadSymbol(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns3__UploadSymbol * SOAP_FMAC4 soap_get___ns3__UploadSymbol(struct soap*, struct __ns3__UploadSymbol *, const char*, const char*);

#define soap_new___ns3__UploadSymbol(soap, n) soap_instantiate___ns3__UploadSymbol(soap, n, NULL, NULL, NULL)


#define soap_delete___ns3__UploadSymbol(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns3__UploadSymbol * SOAP_FMAC2 soap_instantiate___ns3__UploadSymbol(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns3__UploadSymbol(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns3__UploadAdditionalInfo
#define SOAP_TYPE___ns3__UploadAdditionalInfo (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns3__UploadAdditionalInfo(struct soap*, struct __ns3__UploadAdditionalInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns3__UploadAdditionalInfo(struct soap*, const struct __ns3__UploadAdditionalInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns3__UploadAdditionalInfo(struct soap*, const char*, int, const struct __ns3__UploadAdditionalInfo *, const char*);
SOAP_FMAC3 struct __ns3__UploadAdditionalInfo * SOAP_FMAC4 soap_in___ns3__UploadAdditionalInfo(struct soap*, const char*, struct __ns3__UploadAdditionalInfo *, const char*);

#ifndef soap_write___ns3__UploadAdditionalInfo
#define soap_write___ns3__UploadAdditionalInfo(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns3__UploadAdditionalInfo(soap, data), 0) || soap_put___ns3__UploadAdditionalInfo(soap, data, "-ns3:UploadAdditionalInfo", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns3__UploadAdditionalInfo(struct soap*, const struct __ns3__UploadAdditionalInfo *, const char*, const char*);

#ifndef soap_read___ns3__UploadAdditionalInfo
#define soap_read___ns3__UploadAdditionalInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns3__UploadAdditionalInfo(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns3__UploadAdditionalInfo * SOAP_FMAC4 soap_get___ns3__UploadAdditionalInfo(struct soap*, struct __ns3__UploadAdditionalInfo *, const char*, const char*);

#define soap_new___ns3__UploadAdditionalInfo(soap, n) soap_instantiate___ns3__UploadAdditionalInfo(soap, n, NULL, NULL, NULL)


#define soap_delete___ns3__UploadAdditionalInfo(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns3__UploadAdditionalInfo * SOAP_FMAC2 soap_instantiate___ns3__UploadAdditionalInfo(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns3__UploadAdditionalInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns3__UploadMiniDump
#define SOAP_TYPE___ns3__UploadMiniDump (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns3__UploadMiniDump(struct soap*, struct __ns3__UploadMiniDump *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns3__UploadMiniDump(struct soap*, const struct __ns3__UploadMiniDump *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns3__UploadMiniDump(struct soap*, const char*, int, const struct __ns3__UploadMiniDump *, const char*);
SOAP_FMAC3 struct __ns3__UploadMiniDump * SOAP_FMAC4 soap_in___ns3__UploadMiniDump(struct soap*, const char*, struct __ns3__UploadMiniDump *, const char*);

#ifndef soap_write___ns3__UploadMiniDump
#define soap_write___ns3__UploadMiniDump(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns3__UploadMiniDump(soap, data), 0) || soap_put___ns3__UploadMiniDump(soap, data, "-ns3:UploadMiniDump", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns3__UploadMiniDump(struct soap*, const struct __ns3__UploadMiniDump *, const char*, const char*);

#ifndef soap_read___ns3__UploadMiniDump
#define soap_read___ns3__UploadMiniDump(soap, data) ( soap_begin_recv(soap) || !soap_get___ns3__UploadMiniDump(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns3__UploadMiniDump * SOAP_FMAC4 soap_get___ns3__UploadMiniDump(struct soap*, struct __ns3__UploadMiniDump *, const char*, const char*);

#define soap_new___ns3__UploadMiniDump(soap, n) soap_instantiate___ns3__UploadMiniDump(soap, n, NULL, NULL, NULL)


#define soap_delete___ns3__UploadMiniDump(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns3__UploadMiniDump * SOAP_FMAC2 soap_instantiate___ns3__UploadMiniDump(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns3__UploadMiniDump(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns3__Hello
#define SOAP_TYPE___ns3__Hello (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns3__Hello(struct soap*, struct __ns3__Hello *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns3__Hello(struct soap*, const struct __ns3__Hello *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns3__Hello(struct soap*, const char*, int, const struct __ns3__Hello *, const char*);
SOAP_FMAC3 struct __ns3__Hello * SOAP_FMAC4 soap_in___ns3__Hello(struct soap*, const char*, struct __ns3__Hello *, const char*);

#ifndef soap_write___ns3__Hello
#define soap_write___ns3__Hello(soap, data) ( soap_begin_send(soap) || (soap_serialize___ns3__Hello(soap, data), 0) || soap_put___ns3__Hello(soap, data, "-ns3:Hello", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns3__Hello(struct soap*, const struct __ns3__Hello *, const char*, const char*);

#ifndef soap_read___ns3__Hello
#define soap_read___ns3__Hello(soap, data) ( soap_begin_recv(soap) || !soap_get___ns3__Hello(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct __ns3__Hello * SOAP_FMAC4 soap_get___ns3__Hello(struct soap*, struct __ns3__Hello *, const char*, const char*);

#define soap_new___ns3__Hello(soap, n) soap_instantiate___ns3__Hello(soap, n, NULL, NULL, NULL)


#define soap_delete___ns3__Hello(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __ns3__Hello * SOAP_FMAC2 soap_instantiate___ns3__Hello(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns3__Hello(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__xop__Include
#define SOAP_TYPE__xop__Include (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__xop__Include(struct soap*, struct _xop__Include *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__xop__Include(struct soap*, struct _xop__Include const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__xop__Include(struct soap*, const char*, int, const struct _xop__Include *, const char*);
SOAP_FMAC3 struct _xop__Include * SOAP_FMAC4 soap_in__xop__Include(struct soap*, const char*, struct _xop__Include *, const char*);

#ifndef soap_write__xop__Include
#define soap_write__xop__Include(soap, data) ( soap_begin_send(soap) || (soap_serialize__xop__Include(soap, data), 0) || soap_put__xop__Include(soap, data, "xop:Include", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__xop__Include(struct soap*, const struct _xop__Include *, const char*, const char*);

#ifndef soap_read__xop__Include
#define soap_read__xop__Include(soap, data) ( soap_begin_recv(soap) || !soap_get__xop__Include(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _xop__Include * SOAP_FMAC4 soap_get__xop__Include(struct soap*, struct _xop__Include *, const char*, const char*);

#define soap_new__xop__Include(soap, n) soap_instantiate__xop__Include(soap, n, NULL, NULL, NULL)


#define soap_delete__xop__Include(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct _xop__Include * SOAP_FMAC2 soap_instantiate__xop__Include(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__xop__Include(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (73)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTo_ns1__UploadSymbolResponse
#define SOAP_TYPE_PointerTo_ns1__UploadSymbolResponse (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UploadSymbolResponse(struct soap*, _ns1__UploadSymbolResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UploadSymbolResponse(struct soap*, const char *, int, _ns1__UploadSymbolResponse *const*, const char *);
SOAP_FMAC3 _ns1__UploadSymbolResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__UploadSymbolResponse(struct soap*, const char*, _ns1__UploadSymbolResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__UploadSymbolResponse
#define soap_write_PointerTo_ns1__UploadSymbolResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__UploadSymbolResponse(soap, data), 0) || soap_put_PointerTo_ns1__UploadSymbolResponse(soap, data, "ns1:UploadSymbolResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UploadSymbolResponse(struct soap*, _ns1__UploadSymbolResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__UploadSymbolResponse
#define soap_read_PointerTo_ns1__UploadSymbolResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__UploadSymbolResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__UploadSymbolResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__UploadSymbolResponse(struct soap*, _ns1__UploadSymbolResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__UploadSymbol
#define SOAP_TYPE_PointerTo_ns1__UploadSymbol (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UploadSymbol(struct soap*, _ns1__UploadSymbol *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UploadSymbol(struct soap*, const char *, int, _ns1__UploadSymbol *const*, const char *);
SOAP_FMAC3 _ns1__UploadSymbol ** SOAP_FMAC4 soap_in_PointerTo_ns1__UploadSymbol(struct soap*, const char*, _ns1__UploadSymbol **, const char*);

#ifndef soap_write_PointerTo_ns1__UploadSymbol
#define soap_write_PointerTo_ns1__UploadSymbol(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__UploadSymbol(soap, data), 0) || soap_put_PointerTo_ns1__UploadSymbol(soap, data, "ns1:UploadSymbol", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UploadSymbol(struct soap*, _ns1__UploadSymbol *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__UploadSymbol
#define soap_read_PointerTo_ns1__UploadSymbol(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__UploadSymbol(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__UploadSymbol ** SOAP_FMAC4 soap_get_PointerTo_ns1__UploadSymbol(struct soap*, _ns1__UploadSymbol **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__UploadAdditionalInfoResponse
#define SOAP_TYPE_PointerTo_ns1__UploadAdditionalInfoResponse (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UploadAdditionalInfoResponse(struct soap*, _ns1__UploadAdditionalInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UploadAdditionalInfoResponse(struct soap*, const char *, int, _ns1__UploadAdditionalInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__UploadAdditionalInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__UploadAdditionalInfoResponse(struct soap*, const char*, _ns1__UploadAdditionalInfoResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__UploadAdditionalInfoResponse
#define soap_write_PointerTo_ns1__UploadAdditionalInfoResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__UploadAdditionalInfoResponse(soap, data), 0) || soap_put_PointerTo_ns1__UploadAdditionalInfoResponse(soap, data, "ns1:UploadAdditionalInfoResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UploadAdditionalInfoResponse(struct soap*, _ns1__UploadAdditionalInfoResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__UploadAdditionalInfoResponse
#define soap_read_PointerTo_ns1__UploadAdditionalInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__UploadAdditionalInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__UploadAdditionalInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__UploadAdditionalInfoResponse(struct soap*, _ns1__UploadAdditionalInfoResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__UploadAdditionalInfo
#define SOAP_TYPE_PointerTo_ns1__UploadAdditionalInfo (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UploadAdditionalInfo(struct soap*, _ns1__UploadAdditionalInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UploadAdditionalInfo(struct soap*, const char *, int, _ns1__UploadAdditionalInfo *const*, const char *);
SOAP_FMAC3 _ns1__UploadAdditionalInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__UploadAdditionalInfo(struct soap*, const char*, _ns1__UploadAdditionalInfo **, const char*);

#ifndef soap_write_PointerTo_ns1__UploadAdditionalInfo
#define soap_write_PointerTo_ns1__UploadAdditionalInfo(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__UploadAdditionalInfo(soap, data), 0) || soap_put_PointerTo_ns1__UploadAdditionalInfo(soap, data, "ns1:UploadAdditionalInfo", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UploadAdditionalInfo(struct soap*, _ns1__UploadAdditionalInfo *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__UploadAdditionalInfo
#define soap_read_PointerTo_ns1__UploadAdditionalInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__UploadAdditionalInfo(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__UploadAdditionalInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__UploadAdditionalInfo(struct soap*, _ns1__UploadAdditionalInfo **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__UploadMiniDumpResponse
#define SOAP_TYPE_PointerTo_ns1__UploadMiniDumpResponse (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UploadMiniDumpResponse(struct soap*, _ns1__UploadMiniDumpResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UploadMiniDumpResponse(struct soap*, const char *, int, _ns1__UploadMiniDumpResponse *const*, const char *);
SOAP_FMAC3 _ns1__UploadMiniDumpResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__UploadMiniDumpResponse(struct soap*, const char*, _ns1__UploadMiniDumpResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__UploadMiniDumpResponse
#define soap_write_PointerTo_ns1__UploadMiniDumpResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__UploadMiniDumpResponse(soap, data), 0) || soap_put_PointerTo_ns1__UploadMiniDumpResponse(soap, data, "ns1:UploadMiniDumpResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UploadMiniDumpResponse(struct soap*, _ns1__UploadMiniDumpResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__UploadMiniDumpResponse
#define soap_read_PointerTo_ns1__UploadMiniDumpResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__UploadMiniDumpResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__UploadMiniDumpResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__UploadMiniDumpResponse(struct soap*, _ns1__UploadMiniDumpResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__UploadMiniDump
#define SOAP_TYPE_PointerTo_ns1__UploadMiniDump (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__UploadMiniDump(struct soap*, _ns1__UploadMiniDump *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__UploadMiniDump(struct soap*, const char *, int, _ns1__UploadMiniDump *const*, const char *);
SOAP_FMAC3 _ns1__UploadMiniDump ** SOAP_FMAC4 soap_in_PointerTo_ns1__UploadMiniDump(struct soap*, const char*, _ns1__UploadMiniDump **, const char*);

#ifndef soap_write_PointerTo_ns1__UploadMiniDump
#define soap_write_PointerTo_ns1__UploadMiniDump(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__UploadMiniDump(soap, data), 0) || soap_put_PointerTo_ns1__UploadMiniDump(soap, data, "ns1:UploadMiniDump", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__UploadMiniDump(struct soap*, _ns1__UploadMiniDump *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__UploadMiniDump
#define soap_read_PointerTo_ns1__UploadMiniDump(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__UploadMiniDump(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__UploadMiniDump ** SOAP_FMAC4 soap_get_PointerTo_ns1__UploadMiniDump(struct soap*, _ns1__UploadMiniDump **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__HelloResponse
#define SOAP_TYPE_PointerTo_ns1__HelloResponse (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__HelloResponse(struct soap*, _ns1__HelloResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__HelloResponse(struct soap*, const char *, int, _ns1__HelloResponse *const*, const char *);
SOAP_FMAC3 _ns1__HelloResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__HelloResponse(struct soap*, const char*, _ns1__HelloResponse **, const char*);

#ifndef soap_write_PointerTo_ns1__HelloResponse
#define soap_write_PointerTo_ns1__HelloResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__HelloResponse(soap, data), 0) || soap_put_PointerTo_ns1__HelloResponse(soap, data, "ns1:HelloResponse", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__HelloResponse(struct soap*, _ns1__HelloResponse *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__HelloResponse
#define soap_read_PointerTo_ns1__HelloResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__HelloResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__HelloResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__HelloResponse(struct soap*, _ns1__HelloResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_ns1__Hello
#define SOAP_TYPE_PointerTo_ns1__Hello (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Hello(struct soap*, _ns1__Hello *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Hello(struct soap*, const char *, int, _ns1__Hello *const*, const char *);
SOAP_FMAC3 _ns1__Hello ** SOAP_FMAC4 soap_in_PointerTo_ns1__Hello(struct soap*, const char*, _ns1__Hello **, const char*);

#ifndef soap_write_PointerTo_ns1__Hello
#define soap_write_PointerTo_ns1__Hello(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__Hello(soap, data), 0) || soap_put_PointerTo_ns1__Hello(soap, data, "ns1:Hello", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Hello(struct soap*, _ns1__Hello *const*, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__Hello
#define soap_read_PointerTo_ns1__Hello(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__Hello(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 _ns1__Hello ** SOAP_FMAC4 soap_get_PointerTo_ns1__Hello(struct soap*, _ns1__Hello **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__Response
#define SOAP_TYPE_PointerTons1__Response (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__Response(struct soap*, ns1__Response *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__Response(struct soap*, const char *, int, ns1__Response *const*, const char *);
SOAP_FMAC3 ns1__Response ** SOAP_FMAC4 soap_in_PointerTons1__Response(struct soap*, const char*, ns1__Response **, const char*);

#ifndef soap_write_PointerTons1__Response
#define soap_write_PointerTons1__Response(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__Response(soap, data), 0) || soap_put_PointerTons1__Response(soap, data, "ns1:Response", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__Response(struct soap*, ns1__Response *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__Response
#define soap_read_PointerTons1__Response(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__Response(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__Response ** SOAP_FMAC4 soap_get_PointerTons1__Response(struct soap*, ns1__Response **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__Application
#define SOAP_TYPE_PointerTons1__Application (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__Application(struct soap*, ns1__Application *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__Application(struct soap*, const char *, int, ns1__Application *const*, const char *);
SOAP_FMAC3 ns1__Application ** SOAP_FMAC4 soap_in_PointerTons1__Application(struct soap*, const char*, ns1__Application **, const char*);

#ifndef soap_write_PointerTons1__Application
#define soap_write_PointerTons1__Application(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__Application(soap, data), 0) || soap_put_PointerTons1__Application(soap, data, "ns1:Application", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__Application(struct soap*, ns1__Application *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__Application
#define soap_read_PointerTons1__Application(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__Application(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__Application ** SOAP_FMAC4 soap_get_PointerTons1__Application(struct soap*, ns1__Application **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__ClientLib
#define SOAP_TYPE_PointerTons1__ClientLib (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ClientLib(struct soap*, ns1__ClientLib *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ClientLib(struct soap*, const char *, int, ns1__ClientLib *const*, const char *);
SOAP_FMAC3 ns1__ClientLib ** SOAP_FMAC4 soap_in_PointerTons1__ClientLib(struct soap*, const char*, ns1__ClientLib **, const char*);

#ifndef soap_write_PointerTons1__ClientLib
#define soap_write_PointerTons1__ClientLib(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__ClientLib(soap, data), 0) || soap_put_PointerTons1__ClientLib(soap, data, "ns1:ClientLib", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ClientLib(struct soap*, ns1__ClientLib *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__ClientLib
#define soap_read_PointerTons1__ClientLib(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__ClientLib(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__ClientLib ** SOAP_FMAC4 soap_get_PointerTons1__ClientLib(struct soap*, ns1__ClientLib **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_xop__Include
#define SOAP_TYPE_PointerTo_xop__Include (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_xop__Include(struct soap*, struct _xop__Include *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_xop__Include(struct soap*, const char *, int, struct _xop__Include *const*, const char *);
SOAP_FMAC3 struct _xop__Include ** SOAP_FMAC4 soap_in_PointerTo_xop__Include(struct soap*, const char*, struct _xop__Include **, const char*);

#ifndef soap_write_PointerTo_xop__Include
#define soap_write_PointerTo_xop__Include(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_xop__Include(soap, data), 0) || soap_put_PointerTo_xop__Include(soap, data, "xop:Include", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_xop__Include(struct soap*, struct _xop__Include *const*, const char*, const char*);

#ifndef soap_read_PointerTo_xop__Include
#define soap_read_PointerTo_xop__Include(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_xop__Include(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _xop__Include ** SOAP_FMAC4 soap_get_PointerTo_xop__Include(struct soap*, struct _xop__Include **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__Solution
#define SOAP_TYPE_PointerTons1__Solution (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__Solution(struct soap*, ns1__Solution *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__Solution(struct soap*, const char *, int, ns1__Solution *const*, const char *);
SOAP_FMAC3 ns1__Solution ** SOAP_FMAC4 soap_in_PointerTons1__Solution(struct soap*, const char*, ns1__Solution **, const char*);

#ifndef soap_write_PointerTons1__Solution
#define soap_write_PointerTons1__Solution(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__Solution(soap, data), 0) || soap_put_PointerTons1__Solution(soap, data, "ns1:Solution", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__Solution(struct soap*, ns1__Solution *const*, const char*, const char*);

#ifndef soap_read_PointerTons1__Solution
#define soap_read_PointerTons1__Solution(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__Solution(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 ns1__Solution ** SOAP_FMAC4 soap_get_PointerTons1__Solution(struct soap*, ns1__Solution **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTostd__wstring
#define SOAP_TYPE_PointerTostd__wstring (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__wstring(struct soap*, std::wstring *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__wstring(struct soap*, const char *, int, std::wstring *const*, const char *);
SOAP_FMAC3 std::wstring ** SOAP_FMAC4 soap_in_PointerTostd__wstring(struct soap*, const char*, std::wstring **, const char*);

#ifndef soap_write_PointerTostd__wstring
#define soap_write_PointerTostd__wstring(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTostd__wstring(soap, data), 0) || soap_put_PointerTostd__wstring(soap, data, "string", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__wstring(struct soap*, std::wstring *const*, const char*, const char*);

#ifndef soap_read_PointerTostd__wstring
#define soap_read_PointerTostd__wstring(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__wstring(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::wstring ** SOAP_FMAC4 soap_get_PointerTostd__wstring(struct soap*, std::wstring **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);

#ifndef soap_write_PointerTounsignedByte
#define soap_write_PointerTounsignedByte(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTounsignedByte(soap, data), 0) || soap_put_PointerTounsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);

#ifndef soap_read_PointerTounsignedByte
#define soap_read_PointerTounsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTounsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#endif

/* End of soapH.h */
