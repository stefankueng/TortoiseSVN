<?xml version="1.0"?>
<project name="subversion" default="build" basedir="..\subversion">

  <!-- ====================================================================== -->
  <!-- Project targets                                                        -->
  <!-- ====================================================================== -->
  <target name="rebuild" depends="clean,build" />

  <target name="clean">
    <description>
      Cleans previous built files.
    </description>

    <if test="${cleanup == 'yes'}">
      <delete>
        <fileset>
          <include name="${configuration}_${platform}\**" />
        </fileset>
      </delete>
    </if>
  </target>

  <target name="build" depends="clean">
    <mkdir dir="${configuration}_${platform}" />

    <exec program="python.exe">
      <arg value="build\transform_sql.py" />
      <arg value="subversion\libsvn_fs_fs\rep-cache-db.sql" />
      <arg value="subversion\libsvn_fs_fs\rep-cache-db.h" />
    </exec>
    <exec program="python.exe">
      <arg value="build\transform_sql.py" />
      <arg value="subversion\libsvn_wc\wc-metadata.sql" />
      <arg value="subversion\libsvn_wc\wc-metadata.h" />
    </exec>
    <exec program="python.exe">
      <arg value="build\transform_sql.py" />
      <arg value="subversion\libsvn_wc\wc-checks.sql" />
      <arg value="subversion\libsvn_wc\wc-checks.h" />
    </exec>
    <exec program="python.exe">
      <arg value="build\transform_sql.py" />
      <arg value="subversion\libsvn_wc\wc-queries.sql" />
      <arg value="subversion\libsvn_wc\wc-queries.h" />
    </exec>
    <exec program="python.exe">
      <arg value="build\transform_sql.py" />
      <arg value="subversion\libsvn_subr\internal_statements.sql" />
      <arg value="subversion\libsvn_subr\internal_statements.h" />
    </exec>

    <property name="machineoption" value="/MACHINE:X86" if="${platform == 'win32'}" />
    <property name="machineoption" value="/MACHINE:X64" if="${platform == 'x64'}" />
    <copy file="subversion\svn_private_config.hw" tofile="subversion\svn_private_config.h" overwrite="true" />
    <foreach item="Folder" property="foldername">
      <in>
        <items>
          <include name="subversion\libsvn*" />
          <exclude name="subversion\libsvn_fs_base" />
          <exclude name="subversion\libsvn_auth_gnome_keyring" />
          <exclude name="subversion\libsvn_auth_kwallet" />
        </items>
      </in>
      <do>
        <property name="fname" value="${path::get-file-name(foldername)}" />
        <property name="soname" value="${path::change-extension(fname, 'so')}" />
        <property name="libname" value="${path::change-extension(fname, 'lib')}" />
        <mkdir dir="${configuration}_${platform}\${fname}" />
        <cl outputdir="${configuration}_${platform}\${fname}">
          <arg value="/O2" if="${configuration == 'release'}" />
          <arg value="/Oy-" if="${configuration == 'release' and platform == 'win32'}" />
          <arg value="/Od" if="${configuration == 'debug'}" />
          <arg value="/EHsc" />
          <arg value="/MD" if="${configuration == 'release'}" />
          <arg value="/MDd" if="${configuration == 'debug'}" />
          <arg value="/Gy" />
          <arg value="/W0" />
          <arg value="/nologo" />
          <arg value="/c" />
          <arg value="/Zi" />
          <arg value="/MP" />
          <arg value="/GL" if="${configuration == 'release'}" />
          <arg value="/arch:IA32" if="${configuration == 'release' and platform == 'win32'}" />
          <sources>
            <include name="subversion\${fname}\**.c" />
            <exclude name="subversion\libsvn_subr\win32_crash**.c" />
          </sources>
          <includedirs>
            <include name="subversion" />
            <include name="subversion\include" />
            <include name="subversion\${fname}" />
            <include name="..\apr\include" />
            <include name="..\apr-util\include" />
            <include name="..\apr-util\xml\expat\lib" />
            <include name="..\libintl\gettext-0.14.6\gettext-runtime\intl" />
            <include name="..\serf" />
            <include name="..\zlib" />
            <include name="..\sqlite" />
            <include name="..\cyrus-sasl\include" />
          </includedirs>
          <defines>
            <define name="ENABLE_NLS" />
            <define name="SVN_LIBSVN_CLIENT_LINKS_RA_SERF=1" />
            <define name="SVN_HAVE_SERF" />
            <define name="SVN_LIBSVN_CLIENT_LINKS_RA_DAV=1" />
            <define name="SVN_DEBUG" if="${configuration == 'debug'}" />
            <define name="SVN_HAVE_SASL=1" />
            <define name="alloca=_alloca" />
            <define name="snprintf=_snprintf" />
            <define name="WIN32" />
            <define name="_WINDOWS" />
            <define name="_WIN32" />
            <define name="_WIN32_WINNT" value="0x0501" />
            <define name="APR_HAVE_IPV6" if="${ipv6 == 'enabled'}" />
            <define name="WIN64" if="${platform == 'x64'}" />
            <define name="NDEBUG" if="${configuration == 'release'}" />
            <define name="_DEBUG" if="${configuration == 'debug'}" />
            <define name="PSAPI_VERSION=1" />
            <define name="_USING_V110_SDK71_" />
          </defines>
        </cl>
      </do>
    </foreach>
    <property name="platext" value ="32" if="${platform == 'win32'}" />
    <property name="platext" value ="" if="${platform == 'x64'}" />

    <echo message="creating the svn dll" />
    <property name="deffilecontent" value ="" />
    <foreach item="File" property="headerfile">
      <in>
        <items>
          <include name="subversion\include\**.h" />
          <include name="subversion\libsvn*\**.h" />
          <!-- the next files are excluded because they contain functions
               in headers which have no implementation in a c file, which
               leads to an LNK2019 error. And we don't really need
               those exports anyway. -->
          <exclude name="subversion\libsvn_wc\conflicts.h" />
          <exclude name="subversion\libsvn_wc\wc_db.h" />
          <exclude name="subversion\libsvn_ra_serf\ra_serf.h" />
          <exclude name="subversion\libsvn_fs_fs\fs_fs.h" />
          <exclude name="subversion\libsvn_fs\fs-loader.h" />
          <exclude name="subversion\libsvn_fs_base\bdb\**.h" />
          <exclude name="subversion\libsvn_fs_base\revs-txns.h" />
          <exclude name="subversion\libsvn_fs_base\lock.h" />
          <exclude name="subversion\libsvn_fs_base\**.h" />
          <exclude name="subversion\libsvn_subr\win32_crashrpt.h" />
          <exclude name="subversion\libsvn_auth_gnome_keyring\**.h" />
          <exclude name="subversion\libsvn_auth_kwallet\**.h" />
        </items>
      </in>
      <do>
        <exec program="python.exe" output="${configuration}_${platform}\libsvn_tsvn${platext}.def">
          <arg value="build\generator\extractor.py" />
          <arg line="${headerfile}" />
        </exec>
        <loadfile file="${configuration}_${platform}\libsvn_tsvn${platext}.def" property="deffile">
          <filterchain>
            <!-- we need the exports from the fs_fs.h file, but this function doesn't have
                 and implementation and would lead to an LNK2019 error -->
            <replacestring from="svn_fs_fs__move_into_place" to="" />
            <!-- svn_hash__clear is only needed for apr < 1.3.0 - we use a hither
                 version so we don't have that function and therefore don't want
                 it exported -->
            <replacestring from="svn_hash__clear" to="" />
          </filterchain>
        </loadfile>
        <property name="deffilecontent" value ='${deffilecontent} ${deffile}' />
      </do>
    </foreach>
    <property name="deffilecontent" value ='${deffilecontent}
  EXPORTS
ERR_free_strings
EVP_cleanup
CRYPTO_cleanup_all_ex_data
TSVN_ClearLastUsedAuthCache' />
    <echo file="${configuration}_${platform}\libsvn_tsvn${platext}.def" message="${deffilecontent}" />

    <property name="ssldbg" value="" if="${configuration == 'release'}" />
    <property name="ssldbg" value=".dbg" if="${configuration == 'debug'}" />
    <property name="sslplat" value="32" if="${platform == 'win32'}" />
    <property name="sslplat" value="64" if="${platform == 'x64'}" />

    <delete file="${configuration}_${platform}\svn.res" />
    <rc rcfile="build\win32\svn.rc" output="${configuration}_${platform}\svn.res">
      <includedirs>
        <include name="..\apr\include" />
        <include name="..\apr-util\include" />
        <include name="subversion\include" />
      </includedirs>
      <defines>
        <define name="SVN_FILE_DESCRIPTION" value='"Subversion library dll built for TortoiseSVN"' />
        <define name="SVN_FILE_NAME" value="libsvn_tsvn${platext}.dll" />
      </defines>
    </rc>
    <link
      output="${configuration}_${platform}\libsvn_tsvn${platext}.dll"
      options='/INCREMENTAL:NO /ERRORREPORT:QUEUE /NOLOGO /DYNAMICBASE /NXCOMPAT /MANIFEST /DEF:"${configuration}_${platform}\libsvn_tsvn${platext}.def" /MANIFESTFILE:"${configuration}_${platform}\libsvn_tsvn${platext}.dll.intermediate.manifest" /DEBUG /PDB:"${configuration}_${platform}\libsvn_tsvn${platext}.pdb" /DLL ${subsystem} /IMPLIB:"${configuration}_${platform}\libsvn_tsvn${platext}.lib" ${machineoption} ${configuration}_${platform}\svn.res ..\apr\${configuration}_${platform}\libapr_tsvn.lib ..\apr-util\${configuration}_${platform}\libaprutil_tsvn.lib ..\serf\${configuration}_${platform}\libserf.lib ..\zlib\${configuration}_${platform}\zlibstat.lib ..\openssl\out${sslplat}${ssldbg}\libeay32.lib ..\openssl\out${sslplat}${ssldbg}\ssleay32.lib ..\libintl\${configuration}_${platform}\lib\intl3_tsvn.lib ..\cyrus-SASL\${configuration}_${platform}\libsasl.lib ..\sqlite\${configuration}_${platform}\sqlite.lib ws2_32.lib mswsock.lib rpcrt4.lib kernel32.lib advapi32.lib gdi32.lib user32.lib shell32.lib ole32.lib Secur32.lib Crypt32.lib Psapi.lib Version.lib'>
      <arg line="/LTCG /RELEASE /OPT:REF /OPT:ICF" if="${configuration == 'release'}" />
      <sources>
        <include name="${configuration}_${platform}\libsvn_*\**.obj" />
      </sources>
      <libdirs>
        <include name="..\openssl\out${sslplat}${ssldbg}" />
      </libdirs>
    </link>
    <foreach item="Folder" property="foldername">
      <in>
        <items>
          <include name="subversion\svn" />
          <include name="subversion\svnadmin" />
          <include name="subversion\svndumpfilter" />
          <include name="subversion\svnlook" />
          <include name="subversion\svnmucc" />
          <include name="subversion\svnrdump" />
          <include name="subversion\svnserve" />
          <include name="subversion\svnsync" />
          <include name="subversion\svnversion" />
          <include name="tools\client-side\svn-bench" />
        </items>
      </in>
      <do>
        <property name="toolname" value="${path::get-file-name(foldername)}" />
        <mkdir dir="${configuration}_${platform}\${toolname}" />
        <echo message="now building ${toolname}" />
        <cl outputdir="${configuration}_${platform}\${toolname}">
          <arg value="/O2" if="${configuration == 'release'}" />
          <arg value="/Oy-" if="${configuration == 'release' and platform == 'win32'}" />
          <arg value="/Od" if="${configuration == 'debug'}" />
          <arg value="/EHsc" />
          <arg value="/MD" if="${configuration == 'release'}" />
          <arg value="/MDd" if="${configuration == 'debug'}" />
          <arg value="/Gy" />
          <arg value="/W0" />
          <arg value="/nologo" />
          <arg value="/c" />
          <arg value="/Zi" />
          <arg value="/MP" />
          <arg value="/GL" if="${configuration == 'release'}" />
          <arg value="/arch:IA32" if="${configuration == 'release' and platform == 'win32'}" />
          <sources>
            <include name="subversion\${toolname}\*.c" />
            <include name="tools\client-side\${toolname}\*.c" />
            <exclude name="subversion\libsvn_subr\win32_crash**.c" />
          </sources>
          <includedirs>
            <include name="subversion" />
            <include name="subversion\include" />
            <include name="subversion\${toolname}" />
            <include name="..\apr\include" />
            <include name="..\apr-util\include" />
            <include name="..\apr-util\xml\expat\lib" />
            <include name="..\libintl\gettext-0.14.6\gettext-runtime\intl" />
            <include name="..\serf" />
            <include name="..\sqlite" />
            <include name="..\cyrus-sasl\include" />
          </includedirs>
          <defines>
            <define name="APR_DECLARE_EXPORT" />
            <define name="APU_DECLARE_EXPORT" />
            <define name="ENABLE_NLS" />
            <define name="SVN_LIBSVN_CLIENT_LINKS_RA_DAV=1" />
            <define name="SVN_LIBSVN_CLIENT_LINKS_RA_SERF=1" />
            <define name="SVN_HAVE_SERF" />
            <define name="SVN_DEBUG" if="${configuration == 'debug'}" />
            <define name="alloca=_alloca" />
            <define name="SVN_HAVE_SASL" />
            <define name="snprintf=_snprintf" />
            <define name="WIN32" />
            <define name="_WINDOWS" />
            <define name="_WIN32" />
            <define name="_WIN32_WINNT" value="0x0501" />
            <define name="APR_HAVE_IPV6" if="${ipv6 == 'enabled'}" />
            <define name="WIN64" if="${platform == 'x64'}" />
            <define name="NDEBUG" if="${configuration == 'release'}" />
            <define name="_DEBUG" if="${configuration == 'debug'}" />
            <define name="PSAPI_VERSION=1" />
            <define name="_USING_V110_SDK71_" />
          </defines>
        </cl>
        <delete file="${configuration}_${platform}\svn.res" />
        <rc rcfile="build\win32\svn.rc" output="${configuration}_${platform}\svn.res">
          <includedirs>
            <include name="..\apr\include" />
            <include name="..\apr-util\include" />
            <include name="subversion\include" />
          </includedirs>
          <defines>
            <define name="SVN_FILE_DESCRIPTION" value="${toolname}" />
            <define name="SVN_FILE_NAME" value="${toolname}.exe" />
          </defines>
        </rc>
        <echo message="now linking ${toolname}" />
        <link
          output="${configuration}_${platform}\${toolname}.exe"
          options='/INCREMENTAL:NO /NOLOGO /DYNAMICBASE /NXCOMPAT /MANIFEST /MANIFESTFILE:"${configuration}_${platform}\${toolname}.exe.intermediate.manifest" /DEBUG /PDB:"${configuration}_${platform}\${toolname}.pdb" ${subsystemcl} ${configuration}_${platform}\libsvn_tsvn${platext}.lib ..\apr\${configuration}_${platform}\libapr_tsvn.lib ..\apr-util\${configuration}_${platform}\libaprutil_tsvn.lib ..\serf\${configuration}_${platform}\libserf.lib ..\zlib\${configuration}_${platform}\zlibstat.lib ..\openssl\out${sslplat}${ssldbg}\libeay32.lib ..\openssl\out${sslplat}${ssldbg}\ssleay32.lib ..\libintl\${configuration}_${platform}\lib\intl3_tsvn.lib ..\cyrus-SASL\${configuration}_${platform}\libsasl.lib ${machineoption} ${configuration}_${platform}\svn.res ${machineoption} ws2_32.lib mswsock.lib rpcrt4.lib kernel32.lib advapi32.lib gdi32.lib user32.lib shell32.lib ole32.lib Secur32.lib Crypt32.lib Psapi.lib Version.lib setargv.obj'>
          <arg line="/LTCG /RELEASE /OPT:REF /OPT:ICF" if="${configuration == 'release'}" />
          <sources>
            <include name="${configuration}_${platform}\${toolname}\*.obj" />
            <include name="${configuration}_${platform}\libsvn_ra_svn\*.obj" if="${toolname == 'svnserve'}" />
          </sources>
        </link>
        <exec program="mt.exe">
          <arg value="-nologo" />
          <arg value="-manifest" />
          <arg value="${configuration}_${platform}\${toolname}.exe.intermediate.manifest" />
          <arg value='/outputresource:"${configuration}_${platform}\${toolname}.exe;#1"' />
        </exec>
      </do>
    </foreach>
  </target>

</project>
