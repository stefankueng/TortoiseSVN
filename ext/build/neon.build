<?xml version="1.0"?>
<project name="neon" default="build" basedir="..\neon">

<!-- ====================================================================== -->
<!-- Project targets														-->
<!-- ====================================================================== -->
	<target name="rebuild" depends="clean,build" />
	
	<target name="clean">
		<description>
			Cleans previous built files.
		</description>
		
		<if test="${cleanup == 'yes'}">
			<delete>
				<fileset>
					<include name="${configuration}${static}_${platform}\**" />
					<include name=".version" />
					<include name="config.hw" />
					<include name="config.h" />
				</fileset>
			</delete>
		</if>
	</target>

	<target name="build" depends="clean">
		<mkdir dir="${configuration}${static}_${platform}" />
		<loadfile file="NEWS" property="versionfile" />
		<regex pattern="^Changes in release (?'NEON_MAJOR_VERSION'\d+)\.(?'NEON_MINOR_VERSION'\d+)\.(?'NEON_MICRO_VERSION'\d+):" input="${versionfile}" />
		<echo file=".version" message="${NEON_MAJOR_VERSION}.${NEON_MINOR_VERSION}.${NEON_MICRO_VERSION}" />
		<loadfile file="config.hw.in" property="configfile">
			<filterchain>
				<replacetokens begintoken="@" endtoken="@">
					<token key="VERSION" value="${NEON_MAJOR_VERSION}.${NEON_MINOR_VERSION}.${NEON_MICRO_VERSION}" />
					<token key="MAJOR" value="${NEON_MAJOR_VERSION}" />
					<token key="MINOR" value="${NEON_MINOR_VERSION}" />
				</replacetokens>
			</filterchain>
		</loadfile>
		<echo file="config.hw" message="${configfile}" unless="${file::exists('config.hw')}" />
		<echo file="config.h" message="${configfile}" unless="${file::exists('config.h')}" />
		<cl outputdir="${configuration}${static}_${platform}">
			<arg value="/Ox" if="${configuration == 'release'}" />
			<arg value="/Od" if="${configuration != 'release'}" />
			<arg value="/GF" if="${configuration == 'release'}" />
			<arg value="/Gs-" if="${configuration == 'release'}" />
			<arg value="/GS-" if="${configuration == 'release'}" />
			<arg value="/FD" />
			<arg value="/EHa-" />
			<arg value="/MT" if="${(configuration == 'release') and (static == 'static')}" />
			<arg value="/MTd" if="${(configuration != 'release') and (static == 'static')}" />
			<arg value="/MD" if="${(configuration == 'release') and (static != 'static')}" />
			<arg value="/MDd" if="${(configuration != 'release') and (static != 'static')}" />
			<arg value="/Gy" />
			<arg value="/W3" />
			<arg value="/nologo" />
			<arg value="/c" />
			<arg value="/Zi" />
			<arg value="/errorReport:prompt" />
			<sources>
				<include name="src\ne_207.c" />
				<include name="src\ne_acl.c" />
				<include name="src\ne_alloc.c" />
				<include name="src\ne_auth.c" />
				<include name="src\ne_basic.c" />
				<include name="src\ne_compress.c" />
				<include name="src\ne_dates.c" />
				<!-- <include name="src\ne_gnutls.c" /> -->
				<include name="src\ne_i18n.c" />
				<include name="src\ne_locks.c" />
				<include name="src\ne_md5.c" />
				<include name="src\ne_openssl.c" />
				<include name="src\ne_pkcs11.c" />
				<include name="src\ne_props.c" />
				<include name="src\ne_redirect.c" />
				<include name="src\ne_request.c" />
				<include name="src\ne_session.c" />
				<include name="src\ne_socket.c" />
				<include name="src\ne_sspi.c" />
				<include name="src\ne_socket.c" />
				<include name="src\ne_string.c" />
				<!-- <include name="src\ne_stubssl.c" /> -->
				<include name="src\ne_uri.c" />
				<include name="src\ne_utils.c" />
				<include name="src\ne_xml.c" />
				<include name="src\ne_xmlreq.c" />
			</sources>
			<includedirs>
				<include name="." />
				<include name="src" />
				<include name="..\apr-util\xml\expat\lib" />
				<include name="..\..\..\common\openssl\inc32" />
			</includedirs>
			<defines>
				<define name="_CRT_NONSTDC_NO_DEPRECATE" />
				<define name="_CRT_SECURE_NO_DEPRECATE" />
				<define name="_USE_32BIT_TIME_T" if="${platform == 'win32'}" />
				<define name="HAVE_CONFIG_H" />
				<define name="NE_HAVE_SSL" />
				<define name="HAVE_OPENSSL" />
				<define name="OPENSSL_STATIC" />
				<define name="HAVE_EXPAT" />
				<define name="HAVE_EXPAT_H" />
				<define name="NE_HAVE_DAV" />
				<define name="WIN32" />
				<define name="_WINDOWS" />
				<define name="_WIN32" />
				<define name="_WIN32_WINNT" value="0x0501" if="${ipv6 == 'enabled'}" />
				<define name="ENABLE_IPV6" value="1" if="${ipv6 == 'enabled'}" />
				<define name="WIN64" if="${platform == 'x64'}" />
				<define name="NDEBUG" if="${configuration == 'release'}"/>
				<define name="_DEBUG" if="${configuration != 'release'}"/>
				<define name="WIN32_LEAN_AND_MEAN" />
				<define name="NOUSER" />
				<define name="NOGDI" />
				<define name="NONLS" />
				<define name="NOCRYPT" />
			</defines>
		</cl>
		<property name="machineoption" value="/MACHINE:X86" if="${platform == 'win32'}" />
		<property name="machineoption" value="/MACHINE:x64" if="${platform == 'x64'}" />
		<lib 
			output="${configuration}${static}_${platform}\libneon.lib" 
			options='/NOLOGO /SUBSYSTEM:WINDOWS ${machineoption}'>
			<sources>
				<include name="${configuration}${static}_${platform}\*.obj" />
				<include name="..\..\..\common\zlib\${configuration}${static}_${platform}\zlibstat.lib" />
				<include name="..\..\..\common\openssl\out32\libeay32.lib" />
				<include name="..\..\..\common\openssl\out32\ssleay32.lib" />
			</sources>
		</lib>
	</target>

</project>
