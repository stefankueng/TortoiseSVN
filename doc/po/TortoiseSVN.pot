msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2006-02-18 23:30GMT Standard Time\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: source/TortoiseSVN_en.xml:4(title) source/TortoiseSVN_en.xml:2792(secondary) 
msgid "TortoiseSVN"
msgstr ""

#: source/TortoiseSVN_en.xml:5(subtitle) 
msgid "A Subversion client for Windows"
msgstr ""

#: source/TortoiseSVN_en.xml:8(edition) 
msgid "First"
msgstr ""

#: source/TortoiseSVN_en.xml:11(firstname) 
msgid "Stefan"
msgstr ""

#: source/TortoiseSVN_en.xml:12(surname) 
msgid "K端ng"
msgstr ""

#: source/TortoiseSVN_en.xml:15(firstname) 
msgid "L端bbe"
msgstr ""

#: source/TortoiseSVN_en.xml:16(surname) 
msgid "Onken"
msgstr ""

#: source/TortoiseSVN_en.xml:19(firstname) 
msgid "Simon"
msgstr ""

#: source/TortoiseSVN_en.xml:20(surname) 
msgid "Large"
msgstr ""

#: source/TortoiseSVN_en.xml:27(title) 
msgid "Preface"
msgstr ""

#: source/TortoiseSVN_en.xml:35(para) 
msgid "Do you work in a team?"
msgstr ""

#: source/TortoiseSVN_en.xml:40(para) 
msgid "Has it ever happened that you were working on a file, and someone else was working on the same file at the same time? Did you lose your changes to that file because of that?"
msgstr ""

#: source/TortoiseSVN_en.xml:47(para) 
msgid "Have you ever saved a file, and then wanted to revert the changes you made? Have you ever wished you could see what a file looked like some time ago?"
msgstr ""

#: source/TortoiseSVN_en.xml:54(para) 
msgid "Have you ever found a bug in your project and wanted to know when that bug got into your files?"
msgstr ""

#: source/TortoiseSVN_en.xml:61(para) 
msgid "If you answered <quote>yes</quote> to one of these questions, then TortoiseSVN is for you! Just read on to find out how TortoiseSVN can help you in your work. It's not that difficult."
msgstr ""

#: source/TortoiseSVN_en.xml:71(title) 
msgid "Audience"
msgstr ""

#: source/TortoiseSVN_en.xml:72(para) 
msgid "This book is written for computer literate folk who want to use Subversion to manage their data, but are uncomfortable using the command line client to do so. Since TortoiseSVN is a windows shell extension it's assumed that the user is familiar with the windows explorer and knows how to use it."
msgstr ""

#: source/TortoiseSVN_en.xml:84(title) 
msgid "Reading Guide"
msgstr ""

#: source/TortoiseSVN_en.xml:85(para) 
msgid "This <emphasis>Preface</emphasis> explains a little about the TortoiseSVN project, the community of people who work on it, and the licensing conditions for using it and distributing it."
msgstr ""

#: source/TortoiseSVN_en.xml:90(para) 
msgid "The <emphasis>Introduction</emphasis> explains what TortoiseSVN is, what it does, where it comes from and the basics for installing it on your PC."
msgstr ""

#: source/TortoiseSVN_en.xml:95(para) 
msgid "In <emphasis>Basic Concepts</emphasis> we give a short introduction to the <emphasis>Subversion</emphasis> revision control system which underlies TortoiseSVN. This is borrowed from the documentation for the Subversion project and explains the different approaches to version control, and how Subversion works."
msgstr ""

#: source/TortoiseSVN_en.xml:102(para) 
msgid "Even most Subversion users will never have to set up a server themselves. The next chapter deals with how to set up such a server, and is useful for administrators."
msgstr ""

#: source/TortoiseSVN_en.xml:107(para) 
msgid "The chapter on <emphasis>The Repository</emphasis> explains how to set up a local repository, which is useful for testing Subversion and TortoiseSVN using a single PC. It also explains a bit about repository administration which is also relevant to repositories located on a server."
msgstr ""

#: source/TortoiseSVN_en.xml:113(para) 
msgid "The <emphasis>Daily Use Guide</emphasis> is the most important section as it explains all the main features of TortoiseSVN and how to use them. It takes the form of a tutorial, starting with checking out a working copy, modifying it, committing your changes, etc. It then progresses to more advanced topics."
msgstr ""

#: source/TortoiseSVN_en.xml:120(para) 
msgid "<emphasis>SubWCRev</emphasis> is a separate program included with TortoiseSVN which can extract the information from your working copy and write it into a file. This is useful for including build information in your projects."
msgstr ""

#: source/TortoiseSVN_en.xml:125(para) 
msgid "The <emphasis>How Do I...</emphasis> section answers some common questions about performing tasks which are not explicitly covered elsewhere."
msgstr ""

#: source/TortoiseSVN_en.xml:129(para) 
msgid "The section on <emphasis>Automating TortoiseSVN</emphasis> shows how the TortoiseSVN GUI dialogs can be called from the command line. This is useful for scripting where you still need user interaction."
msgstr ""

#: source/TortoiseSVN_en.xml:134(para) 
msgid "The <emphasis>Command Line Cross Reference</emphasis> give a correlation between TortoiseSVN commands and their equivalents in the Subversion command line client <literal>svn.exe</literal>."
msgstr ""

#: source/TortoiseSVN_en.xml:144(title) 
msgid "TortoiseSVN is free!"
msgstr ""

#: source/TortoiseSVN_en.xml:145(para) 
msgid "TortoiseSVN is free. You don't have to pay to use it, and you can use it any way you want. It is developed under the GNU General Public License (GPL)."
msgstr ""

#: source/TortoiseSVN_en.xml:149(para) 
msgid "TortoiseSVN is an Open Source project. That means you have full access to the source code of this program. You can browse it on this link <ulink url=\"http://tortoisesvn.tigris.org/svn/tortoisesvn/\"><citetitle>http://tortoisesvn.tigris.org/svn/tortoisesvn/</citetitle></ulink>. (Username:guest, password:guest) The most recent version (where we're currently working) is located under <filename>/trunk/</filename> the released versions are located under <filename>/tags/</filename>."
msgstr ""

#: source/TortoiseSVN_en.xml:168(title) 
msgid "Community"
msgstr ""

#: source/TortoiseSVN_en.xml:169(para) 
msgid "Both TortoiseSVN and Subversion are developed by a community of people who are working on those projects. They come from different countries all over the world and joined together to create wonderful programs."
msgstr ""

#: source/TortoiseSVN_en.xml:180(title) 
msgid "Acknowledgments"
msgstr ""

#: source/TortoiseSVN_en.xml:183(term) 
msgid "Tim Kemp"
msgstr ""

#: source/TortoiseSVN_en.xml:185(para) 
msgid "for founding the TortoiseSVN project"
msgstr ""

#: source/TortoiseSVN_en.xml:191(term) 
msgid "Stefan K端ng"
msgstr ""

#: source/TortoiseSVN_en.xml:193(para) 
msgid "for the hard work to get TortoiseSVN to what it is now"
msgstr ""

#: source/TortoiseSVN_en.xml:199(term) 
msgid "L端bbe Onken"
msgstr ""

#: source/TortoiseSVN_en.xml:201(para) 
msgid "for the beautiful icons, logo, bughunting and taking care of the documentation"
msgstr ""

#: source/TortoiseSVN_en.xml:208(term) 
msgid "The Subversion Book"
msgstr ""

#: source/TortoiseSVN_en.xml:210(para) 
msgid "for the great introduction to Subversion and its chapter 2 which we copied here"
msgstr ""

#: source/TortoiseSVN_en.xml:217(term) 
msgid "The Tigris Style project"
msgstr ""

#: source/TortoiseSVN_en.xml:219(para) 
msgid "for some of the styles which are reused in this documentation"
msgstr ""

#: source/TortoiseSVN_en.xml:225(term) 
msgid "Our Contributors"
msgstr ""

#: source/TortoiseSVN_en.xml:227(para) 
msgid "for the patches, bug reports and new ideas, and for helping others by answering questions on our mailing list."
msgstr ""

#: source/TortoiseSVN_en.xml:234(term) 
msgid "Our Donators"
msgstr ""

#: source/TortoiseSVN_en.xml:236(para) 
msgid "for many hours of joy with the music they sent us"
msgstr ""

#: source/TortoiseSVN_en.xml:247(title) 
msgid "Terminology used in this document"
msgstr ""

#: source/TortoiseSVN_en.xml:248(para) 
msgid "To make reading the docs easier, the names of all the screens and Menus from TortoiseSVN are marked up in a different font. The <guilabel>Log Dialog</guilabel> for instance."
msgstr ""

#: source/TortoiseSVN_en.xml:253(para) 
msgid "A menu choice is indicated with an arrow. <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Show Log</guimenuitem></menuchoice> means: select <emphasis>Show Log</emphasis> from the <emphasis>TortoiseSVN</emphasis> context menu."
msgstr ""

#: source/TortoiseSVN_en.xml:262(para) 
msgid "Where a local context menu appears within one of the TortoiseSVN dialogs, it is shown like this: <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Save As ...</guimenuitem></menuchoice>"
msgstr ""

#: source/TortoiseSVN_en.xml:270(para) 
msgid "User Interface Buttons are indicated like this: Press <guibutton>OK</guibutton> to continue."
msgstr ""

#: source/TortoiseSVN_en.xml:274(para) 
msgid "User Actions are indicated using a bold font. <action>ALT+A</action>: press the <keycap>ALT</keycap>-Key on your keyboard and while holding it down press the <keycap>A</keycap>-Key as well. <action>Right-drag</action>: press the right mouse button and while holding it down <emphasis>drag</emphasis> the items to the new location."
msgstr ""

#: source/TortoiseSVN_en.xml:282(para) 
msgid "System output and keyboard input is indicated with a <literal>different</literal> font as well."
msgstr ""

#: source/TortoiseSVN_en.xml:287(para) 
msgid "Important notes are marked with an icon."
msgstr ""

#: source/TortoiseSVN_en.xml:292(para) 
msgid "Tips that make your life easier."
msgstr ""

#: source/TortoiseSVN_en.xml:297(para) 
msgid "Places where you have to be careful what you are doing."
msgstr ""

#: source/TortoiseSVN_en.xml:302(para) 
msgid "Where extreme care has to be taken, data corruption or other nasty things may occur if these warnings are ignored."
msgstr ""

#: source/TortoiseSVN_en.xml:311(title) source/TortoiseSVN_en.xml:1459(title) source/TortoiseSVN_en.xml:2437(title) 
msgid "Introduction"
msgstr ""

#: source/TortoiseSVN_en.xml:314(primary) 
msgid "version control"
msgstr ""

#: source/TortoiseSVN_en.xml:317(para) 
msgid "Version control is the art of managing changes to information. It has long been a critical tool for programmers, who typically spend their time making small changes to software and then undoing those changes the next day. Imagine a team of these programmers working concurrently - and perhaps even simultaneously at the very same files! - and you can see why a good system is needed to manage the potential chaos."
msgstr ""

#: source/TortoiseSVN_en.xml:331(title) 
msgid "What is TortoiseSVN?"
msgstr ""

#: source/TortoiseSVN_en.xml:332(para) 
msgid "TortoiseSVN is a free open-source client for the <firstterm>Subversion</firstterm> version control system. That is, TortoiseSVN manages files and directories over time. Files are stored in a central <firstterm>repository</firstterm>. The repository is much like an ordinary file server, except that it remembers every change ever made to your files and directories. This allows you to recover older versions of your files and examine the history of how and when your data changed. This is why many people think of Subversion and version control systems in general as a sort of <quote>time machine</quote>."
msgstr ""

#: source/TortoiseSVN_en.xml:344(para) 
msgid "Some version control systems are also software configuration management (SCM) systems. These systems are specifically tailored to manage trees of source code, and have many features that are specific to software development - such as natively understanding programming languages, or supplying tools for building software. Subversion, however, is not one of these systems; it is a general system that can be used to manage <emphasis>any</emphasis> collection of files, including source code."
msgstr ""

#: source/TortoiseSVN_en.xml:360(title) 
msgid "TortoiseSVN's History"
msgstr ""

#: source/TortoiseSVN_en.xml:361(para) 
msgid "In 2002, Tim Kemp found that Subversion was a very good version control system, but it lacked a good GUI client. The idea for a Subversion client as a Windows shell integration was inspired by the similar client for CVS named TortoiseCVS."
msgstr ""

#: source/TortoiseSVN_en.xml:367(para) 
msgid "Tim studied the sourcecode of TortoiseCVS and used it as a base for TortoiseSVN. He then started the project, registered the domain tortoisesvn.org and put the sourcecode online. During that time, Stefan K端ng was looking for a good and free version control system and found Subversion and the source for TortoiseSVN. Since TortoiseSVN was still not ready for use then he joined the project and started programming. Soon he rewrote most of the existing code and started adding commands and features, up to a point where nothing of the original code remained."
msgstr ""

#: source/TortoiseSVN_en.xml:378(para) 
msgid "As Subversion became more stable it attracted more and more users who also started using TortoiseSVN as their Subversion client. The userbase grew quickly (and is still growing every day). That's when L端bbe Onken offered to help out with some nice icons and a logo for TortoiseSVN. And he takes care of the website and manages the translation."
msgstr ""

#: source/TortoiseSVN_en.xml:391(title) 
msgid "TortoiseSVN's Features"
msgstr ""

#: source/TortoiseSVN_en.xml:392(para) 
msgid "What makes TortoiseSVN such a good Subversion client? Here's a short list of features."
msgstr ""

#: source/TortoiseSVN_en.xml:398(term) 
msgid "Shell integration"
msgstr ""

#: source/TortoiseSVN_en.xml:400(para) 
msgid "<indexterm significance=\"normal\"><primary>Windows shell</primary></indexterm><indexterm significance=\"normal\"><primary>explorer</primary></indexterm> TortoiseSVN integrates seamlessly into the Windows shell (i.e. the explorer). This means you can keep working with the tools you're already familiar with. And you do not have to change into a different application each time you need functions of the version control!"
msgstr ""

#: source/TortoiseSVN_en.xml:413(para) 
msgid "And you are not even forced to use the Windows Explorer. TortoiseSVN's context menus work in many other file managers, and in the File/Open dialog which is common to most standard Windows applications. You should, however, bear in mind that TortoiseSVN is intentionally developed as extension for the Windows Explorer. Thus it is possible that in other applications the integration is not as complete and e.g. the icon overlays may not be shown."
msgstr ""

#: source/TortoiseSVN_en.xml:427(term) 
msgid "Icon overlays"
msgstr ""

#: source/TortoiseSVN_en.xml:429(para) 
msgid "The status of every versioned file and folder is indicated by small overlay icons. That way you can see right away what the status of your working copy is."
msgstr ""

#: source/TortoiseSVN_en.xml:437(term) 
msgid "Easy access to Subversion commands"
msgstr ""

#: source/TortoiseSVN_en.xml:439(para) 
msgid "All Subversion commands are available from the explorer context menu. TortoiseSVN adds its own submenu there."
msgstr ""

#: source/TortoiseSVN_en.xml:446(para) 
msgid "Since TortoiseSVN is a Subversion client, we would also like to show you some of the features of Subversion itself:"
msgstr ""

#: source/TortoiseSVN_en.xml:452(term) 
msgid "Directory versioning"
msgstr ""

#: source/TortoiseSVN_en.xml:454(para) 
msgid "CVS only tracks the history of individual files, but Subversion implements a <quote>virtual</quote> versioned filesystem that tracks changes to whole directory trees over time. Files <emphasis>and</emphasis> directories are versioned. As a result, there are real client-side <command>move</command> and <command>copy</command> commands that operate on files and directories."
msgstr ""

#: source/TortoiseSVN_en.xml:467(term) 
msgid "Atomic commits"
msgstr ""

#: source/TortoiseSVN_en.xml:469(para) 
msgid "A commit either goes into the repository completely, or not at all. This allows developers to construct and commit changes as logical chunks."
msgstr ""

#: source/TortoiseSVN_en.xml:477(term) 
msgid "Versioned metadata"
msgstr ""

#: source/TortoiseSVN_en.xml:479(para) 
msgid "Each file and directory has an invisible set of <quote>properties</quote> attached. You can invent and store any arbitrary key/value pairs you wish. Properties are versioned over time, just like file contents."
msgstr ""

#: source/TortoiseSVN_en.xml:489(term) 
msgid "Choice of network layers"
msgstr ""

#: source/TortoiseSVN_en.xml:491(para) 
msgid "Subversion has an abstracted notion of repository access, making it easy for people to implement new network mechanisms. Subversion's <quote>advanced</quote> network server is a module for the Apache web server, which speaks a variant of HTTP called WebDAV/DeltaV. This gives Subversion a big advantage in stability and interoperability, and provides various key features for free: authentication, authorization, wire compression, and repository browsing, for example. A smaller, standalone Subversion server process is also available. This server speaks a custom protocol which can be easily tunneled over ssh."
msgstr ""

#: source/TortoiseSVN_en.xml:508(term) 
msgid "Consistent data handling"
msgstr ""

#: source/TortoiseSVN_en.xml:510(para) 
msgid "Subversion expresses file differences using a binary differencing algorithm, which works identically on both text (human-readable) and binary (human-unreadable) files. Both types of files are stored equally compressed in the repository, and differences are transmitted in both directions across the network."
msgstr ""

#: source/TortoiseSVN_en.xml:521(term) 
msgid "Efficient branching and tagging"
msgstr ""

#: source/TortoiseSVN_en.xml:523(para) 
msgid "The cost of branching and tagging need not be proportional to the project size. Subversion creates branches and tags by simply copying the project, using a mechanism similar to a hard-link. Thus these operations take only a very small, constant amount of time, and very little space in the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:534(term) 
msgid "Hackability"
msgstr ""

#: source/TortoiseSVN_en.xml:536(para) 
msgid "Subversion has no historical baggage; it is implemented as a collection of shared C libraries with well-defined APIs. This makes Subversion extremely maintainable and usable by other applications and languages."
msgstr ""

#: source/TortoiseSVN_en.xml:550(title) 
msgid "Installing TortoiseSVN"
msgstr ""

#: source/TortoiseSVN_en.xml:552(title) 
msgid "System requirements"
msgstr ""

#: source/TortoiseSVN_en.xml:553(para) 
msgid "TortoiseSVN runs on Win2k SP2, WinXP or higher. Windows 98, Windows ME and Windows NT4 are no longer supported since TortoiseSVN 1.2.0, but you can still download the older versions if you really need them."
msgstr ""

#: source/TortoiseSVN_en.xml:559(para) 
msgid "If you encounter any problems during or after installing TortoiseSVN please refer to <xref linkend=\"tsvn-faq\"/> first."
msgstr ""

#: source/TortoiseSVN_en.xml:567(title) 
msgid "Installation"
msgstr ""

#: source/TortoiseSVN_en.xml:569(primary) 
msgid "install"
msgstr ""

#: source/TortoiseSVN_en.xml:571(para) 
msgid "TortoiseSVN comes with an easy to use installer. Doubleclick on the installer file and follow the instructions. The installer will take care of the rest. Make sure to select the <literal>Install for all users</literal> option, unless you <emphasis>really</emphasis> want to restrict its use to the current user only."
msgstr ""

#: source/TortoiseSVN_en.xml:581(title) 
msgid "Language Packs"
msgstr ""

#: source/TortoiseSVN_en.xml:583(primary) 
msgid "language packs"
msgstr ""

#: source/TortoiseSVN_en.xml:586(primary) 
msgid "translations"
msgstr ""

#: source/TortoiseSVN_en.xml:588(para) 
msgid "The TortoiseSVN user interface has been translated into many different languages, so you may be able to download a language pack to suit your needs. You can find the language packs on our Translations page at <ulink url=\"http://tortoisesvn.sourceforge.net/?q=translation_status\"><citetitle>http://tortoisesvn.sourceforge.net/?q=translation_status</citetitle></ulink>. And if there is no language pack available yet, why not join the team and submit your own translation ;-)"
msgstr ""

#: source/TortoiseSVN_en.xml:599(para) 
msgid "Each language pack is packaged as a <literal>.exe</literal> installer. Just run the install program and follow the instructions. Next time you restart, the translation will be available."
msgstr ""

#: source/TortoiseSVN_en.xml:606(title) 
msgid "Spellchecker"
msgstr ""

#: source/TortoiseSVN_en.xml:608(primary) 
msgid "spellchecker"
msgstr ""

#: source/TortoiseSVN_en.xml:611(primary) 
msgid "dictionary"
msgstr ""

#: source/TortoiseSVN_en.xml:613(para) 
msgid "TortoiseSVN includes a spell checker which allows you to check your commit log messages. This is especially useful if the project language is not your native language. The spell checker uses the same dictionary files as <ulink url=\"http://openoffice.org\"><citetitle>OpenOffice</citetitle></ulink> and <ulink url=\"http://mozilla.org\"><citetitle>Mozilla</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:626(para) 
msgid "The installer automatically adds the US and UK english dictionaries. If you want other languages, the easiest option is simply to install one of TortoiseSVN's language packs. This will install the appropriate dictionary files as well as the TortoiseSVN local user interface. Next time you restart, the dictionary will be available too."
msgstr ""

#: source/TortoiseSVN_en.xml:634(para) 
msgid "Or you can install the dictionaries yourself. If you have OpenOffice or Mozilla installed, you can copy those dictionaries, which are located in the installation folders for those applications. Otherwise, you need to download the required dictionary files from <ulink url=\"http://lingucomponent.openoffice.org/spell_dic.html\"><citetitle>http://lingucomponent.openoffice.org/spell_dic.html</citetitle></ulink>"
msgstr ""

#: source/TortoiseSVN_en.xml:650(para) 
msgid "en_US.aff"
msgstr ""

#: source/TortoiseSVN_en.xml:655(para) 
msgid "en_US.dic"
msgstr ""

#: source/TortoiseSVN_en.xml:643(para) 
msgid "Once you have got the dictionary files, you probably need to rename them so that the filenames only have the locale chars in it. Example: <placeholder-1/> Then just copy them to the <filename>bin</filename> sub-folder of the TortoiseSVN installation folder. Normally this will be <filename>C:\\Program Files\\TortoiseSVN\\bin</filename>. If you don't want to litter the <filename>bin</filename> sub-folder, you can instead place your spell checker files in <filename>C:\\Program Files\\TortoiseSVN\\Languages</filename>. If that folder isn't there, you have to create it first. The next time you start TortoiseSVN, the spell checker will be available."
msgstr ""

#: source/TortoiseSVN_en.xml:674(para) 
msgid "Check the <literal>tsvn:projectlanguage</literal> setting. Refer to <xref linkend=\"tsvn-DUG-propertypage\"/> for information about setting project properties."
msgstr ""

#: source/TortoiseSVN_en.xml:681(para) 
msgid "If no project language is set, or that language is not installed, try the language corresponding to the Windows locale."
msgstr ""

#: source/TortoiseSVN_en.xml:687(para) 
msgid "If the exact Windows locale doesn't work, try the <quote>Base</quote> language, eg. <literal>de_CH</literal> (Swiss-German) falls back to <literal>de_DE</literal> (German)."
msgstr ""

#: source/TortoiseSVN_en.xml:695(para) 
msgid "If none of the above works, then the default language is english, which is included with the standard installation."
msgstr ""

#: source/TortoiseSVN_en.xml:669(para) 
msgid "If you install multiple dictionaries, TortoiseSVN uses these rules to select which one to use. <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:712(title) 
msgid "Basic Concepts"
msgstr ""

#: source/TortoiseSVN_en.xml:714(primary) 
msgid "Subversion book"
msgstr ""

#: source/TortoiseSVN_en.xml:717(para) 
msgid "This chapter is a slightly modified version of the same chapter in the Subversion book. You can read the Subversion book here: <ulink url=\"http://svnbook.red-bean.com/\"><citetitle>http://svnbook.red-bean.com/</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:724(para) 
msgid "This chapter is a short, casual introduction to Subversion. If you're new to version control, this chapter is definitely for you. We begin with a discussion of general version control concepts, work our way into the specific ideas behind Subversion, and show some simple examples of Subversion in use."
msgstr ""

#: source/TortoiseSVN_en.xml:732(para) 
msgid "Even though the examples in this chapter show people sharing collections of program source code, keep in mind that Subversion can manage any sort of file collection - it's not limited to helping computer programmers."
msgstr ""

#: source/TortoiseSVN_en.xml:740(title) source/TortoiseSVN_en.xml:1246(title) source/TortoiseSVN_en.xml:2720(title) 
msgid "The Repository"
msgstr ""

#: source/TortoiseSVN_en.xml:742(primary) 
msgid "repository"
msgstr ""

#: source/TortoiseSVN_en.xml:744(para) 
msgid "Subversion is a centralized system for sharing information. At its core is a <firstterm>repository</firstterm>, which is a central store of data. The repository stores information in the form of a <firstterm>filesystem tree</firstterm> - a typical hierarchy of files and directories. Any number of <firstterm>clients</firstterm> connect to the repository, and then read or write to these files. By writing data, a client makes the information available to others; by reading data, the client receives information from others."
msgstr ""

#: source/TortoiseSVN_en.xml:756(title) 
msgid "A Typical Client/Server System"
msgstr ""

#: source/TortoiseSVN_en.xml:759(para) 
msgid "So why is this interesting? So far, this sounds like the definition of a typical file server. And indeed, the repository <emphasis>is</emphasis> a kind of file server, but it's not your usual breed. What makes the Subversion repository special is that <emphasis>it remembers every change</emphasis> ever written to it: every change to every file, and even changes to the directory tree itself, such as the addition, deletion, and rearrangement of files and directories."
msgstr ""

#: source/TortoiseSVN_en.xml:769(para) 
msgid "When a client reads data from the repository, it normally sees only the latest version of the filesystem tree. But the client also has the ability to view <emphasis>previous</emphasis> states of the filesystem. For example, a client can ask historical questions like, \"what did this directory contain last Wednesday?\", or \"who was the last person to change this file, and what changes did they make?\" These are the sorts of questions that are at the heart of any <firstterm>version control system</firstterm>: systems that are designed to record and track changes to data over time."
msgstr ""

#: source/TortoiseSVN_en.xml:784(title) 
msgid "Versioning Models"
msgstr ""

#: source/TortoiseSVN_en.xml:785(para) 
msgid "All version control systems have to solve the same fundamental problem: how will the system allow users to share information, but prevent them from accidentally stepping on each other's feet? It's all too easy for users to accidentally overwrite each other's changes in the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:794(title) 
msgid "The Problem of File-Sharing"
msgstr ""

#: source/TortoiseSVN_en.xml:795(para) 
msgid "Consider this scenario: suppose we have two co-workers, Harry and Sally. They each decide to edit the same repository file at the same time. If Harry saves his changes to the repository first, then it's possible that (a few moments later) Sally could accidentally overwrite them with her own new version of the file. While Harry's version of the file won't be lost forever (because the system remembers every change), any changes Harry made <emphasis>won't</emphasis> be present in Sally's newer version of the file, because she never saw Harry's changes to begin with. Harry's work is still effectively lost - or at least missing from the latest version of the file - and probably by accident. This is definitely a situation we want to avoid!"
msgstr ""

#: source/TortoiseSVN_en.xml:811(title) 
msgid "The Problem to Avoid"
msgstr ""

#: source/TortoiseSVN_en.xml:816(title) source/TortoiseSVN_en.xml:832(title) 
msgid "The Lock-Modify-Unlock Solution"
msgstr ""

#: source/TortoiseSVN_en.xml:817(para) 
msgid "Many version control systems use a <firstterm>lock-modify-unlock</firstterm> model to address this problem, which is a very simple solution. In such a system, the repository allows only one person to change a file at a time. First Harry must \"lock\" the file before he can begin making changes to it. Locking a file is a lot like borrowing a book from the library; if Harry has locked a file, then Sally cannot make any changes to it. If she tries to lock the file, the repository will deny the request. All she can do is read the file, and wait for Harry to finish his changes and release his lock. After Harry unlocks the file, his turn is over, and now Sally can take her turn by locking and editing."
msgstr ""

#: source/TortoiseSVN_en.xml:835(para) 
msgid "The problem with the lock-modify-unlock model is that it's a bit restrictive, and often becomes a roadblock for users:"
msgstr ""

#: source/TortoiseSVN_en.xml:842(para) 
msgid "<emphasis>Locking may cause administrative problems.</emphasis> Sometimes Harry will lock a file and then forget about it. Meanwhile, because Sally is still waiting to edit the file, her hands are tied. And then Harry goes on vacation. Now Sally has to get an administrator to release Harry's lock. The situation ends up causing a lot of unnecessary delay and wasted time."
msgstr ""

#: source/TortoiseSVN_en.xml:853(para) 
msgid "<emphasis>Locking may cause unnecessary serialization.</emphasis> What if Harry is editing the beginning of a text file, and Sally simply wants to edit the end of the same file? These changes don't overlap at all. They could easily edit the file simultaneously, and no great harm would come, assuming the changes were properly merged together. There's no need for them to take turns in this situation."
msgstr ""

#: source/TortoiseSVN_en.xml:865(para) 
msgid "<emphasis>Locking may create a false sense of security.</emphasis> Pretend that Harry locks and edits file A, while Sally simultaneously locks and edits file B. But suppose that A and B depend on one another, and the changes made to each are semantically incompatible. Suddenly A and B don't work together anymore. The locking system was powerless to prevent the problem - yet it somehow provided a sense of false security. It's easy for Harry and Sally to imagine that by locking files, each is beginning a safe, insulated task, and thus inhibits them from discussing their incompatible changes early on."
msgstr ""

#: source/TortoiseSVN_en.xml:883(title) source/TortoiseSVN_en.xml:911(title) 
msgid "The Copy-Modify-Merge Solution"
msgstr ""

#: source/TortoiseSVN_en.xml:884(para) 
msgid "Subversion, CVS, and other version control systems use a <firstterm>copy-modify-merge</firstterm> model as an alternative to locking. In this model, each user's client reads the repository and creates a personal <firstterm>working copy</firstterm> of the file or project. Users then work in parallel, modifying their private copies. Finally, the private copies are merged together into a new, final version. The version control system often assists with the merging, but ultimately a human being is responsible for making it happen correctly."
msgstr ""

#: source/TortoiseSVN_en.xml:896(para) 
msgid "Here's an example. Say that Harry and Sally each create working copies of the same project, copied from the repository. They work concurrently, and make changes to the same file \"A\" within their copies. Sally saves her changes to the repository first. When Harry attempts to save his changes later, the repository informs him that his file A is <firstterm>out-of-date</firstterm>. In other words, that file A in the repository has somehow changed since he last copied it. So Harry asks his client to <firstterm>merge</firstterm> any new changes from the repository into his working copy of file A. Chances are that Sally's changes don't overlap with his own; so once he has both sets of changes integrated, he saves his working copy back to the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:915(title) 
msgid "...Copy-Modify-Merge Continued"
msgstr ""

#: source/TortoiseSVN_en.xml:918(para) 
msgid "<indexterm significance=\"normal\"><primary>conflict</primary></indexterm> But what if Sally's changes <emphasis>do</emphasis> overlap with Harry's changes? What then? This situation is called a <firstterm>conflict</firstterm>, and it's usually not much of a problem. When Harry asks his client to merge the latest repository changes into his working copy, his copy of file A is somehow flagged as being in a state of conflict: he'll be able to see both sets of conflicting changes, and manually choose between them. Note that software can't automatically resolve conflicts; only humans are capable of understanding and making the necessary intelligent choices. Once Harry has manually resolved the overlapping changes (perhaps by discussing the conflict with Sally!), he can safely save the merged file back to the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:936(para) 
msgid "The copy-modify-merge model may sound a bit chaotic, but in practice, it runs extremely smoothly. Users can work in parallel, never waiting for one another. When they work on the same files, it turns out that most of their concurrent changes don't overlap at all; conflicts are infrequent. And the amount of time it takes to resolve conflicts is far less than the time lost by a locking system."
msgstr ""

#: source/TortoiseSVN_en.xml:945(para) 
msgid "In the end, it all comes down to one critical factor: user communication. When users communicate poorly, both syntactic and semantic conflicts increase. No system can force users to communicate perfectly, and no system can detect semantic conflicts. So there's no point in being lulled into a false promise that a locking system will somehow prevent conflicts; in practice, locking seems to inhibit productivity more than anything else."
msgstr ""

#: source/TortoiseSVN_en.xml:955(para) 
msgid "There is one common situation where the lock-modify-unlock model comes out better, and that is where you have un-mergeable files. For example if your repository contains some graphic images, and two people change the image at the same time, there is no way for those changes to be merged together. Either Harry or Sally will lose their changes."
msgstr ""

#: source/TortoiseSVN_en.xml:965(title) 
msgid "What does Subversion Do?"
msgstr ""

#: source/TortoiseSVN_en.xml:966(para) 
msgid "Subversion uses the copy-modify-merge solution by default, and in many cases this is all you will ever need. However, as of Version 1.2, Subversion also supports file locking, so if you have unmergeable files, or if you are simply forced into a locking policy by management, Subversion will still provide the features you need."
msgstr ""

#: source/TortoiseSVN_en.xml:978(title) 
msgid "Subversion in Action"
msgstr ""

#: source/TortoiseSVN_en.xml:980(title) 
msgid "Working Copies"
msgstr ""

#: source/TortoiseSVN_en.xml:981(para) 
msgid "<indexterm significance=\"normal\"><primary>working copy</primary></indexterm> You've already read about working copies; now we'll demonstrate how the Subversion client creates and uses them."
msgstr ""

#: source/TortoiseSVN_en.xml:989(para) 
msgid "A Subversion working copy is an ordinary directory tree on your local system, containing a collection of files. You can edit these files however you wish, and if they're source code files, you can compile your program from them in the usual way. Your working copy is your own private work area: Subversion will never incorporate other people's changes, nor make your own changes available to others, until you explicitly tell it to do so."
msgstr ""

#: source/TortoiseSVN_en.xml:999(para) 
msgid "After you've made some changes to the files in your working copy and verified that they work properly, Subversion provides you with commands to \"publish\" your changes to the other people working with you on your project (by writing to the repository). If other people publish their own changes, Subversion provides you with commands to merge those changes into your working directory (by reading from the repository)."
msgstr ""

#: source/TortoiseSVN_en.xml:1009(para) 
msgid "A working copy also contains some extra files, created and maintained by Subversion, to help it carry out these commands. In particular, each directory in your working copy contains a subdirectory named <filename>.svn</filename>, also known as the working copy <firstterm>administrative directory</firstterm>. The files in each administrative directory help Subversion recognize which files contain unpublished changes, and which files are out-of-date with respect to others' work."
msgstr ""

#: source/TortoiseSVN_en.xml:1020(para) 
msgid "A typical Subversion repository often holds the files (or source code) for several projects; usually, each project is a subdirectory in the repository's filesystem tree. In this arrangement, a user's working copy will usually correspond to a particular subtree of the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:1027(para) 
msgid "For example, suppose you have a repository that contains two software projects."
msgstr ""

#: source/TortoiseSVN_en.xml:1032(title) 
msgid "The Repository's Filesystem"
msgstr ""

#: source/TortoiseSVN_en.xml:1035(para) 
msgid "In other words, the repository's root directory has two subdirectories: <filename>paint</filename> and <filename>calc</filename>."
msgstr ""

#: source/TortoiseSVN_en.xml:1040(para) 
msgid "To get a working copy, you must <firstterm>check out</firstterm> some subtree of the repository. (The term \"check out\" may sound like it has something to do with locking or reserving resources, but it doesn't; it simply creates a private copy of the project for you)."
msgstr ""

#: source/TortoiseSVN_en.xml:1048(title) 
msgid "Repository URLs"
msgstr ""

#: source/TortoiseSVN_en.xml:1049(para) 
msgid "Subversion repositories can be accessed through many different methods - on local disk, or through various network protocols. A repository location, however, is always a URL. The URL schema indicates the access method:"
msgstr ""

#: source/TortoiseSVN_en.xml:1057(title) 
msgid "Repository Access URLs"
msgstr ""

#: source/TortoiseSVN_en.xml:1063(entry) 
msgid "Schema"
msgstr ""

#: source/TortoiseSVN_en.xml:1064(entry) 
msgid "Access Method"
msgstr ""

#: source/TortoiseSVN_en.xml:1070(literal) 
msgid "file://"
msgstr ""

#: source/TortoiseSVN_en.xml:1072(entry) 
msgid "Direct repository access on local or network drive."
msgstr ""

#: source/TortoiseSVN_en.xml:1078(literal) source/TortoiseSVN_en.xml:1089(literal) 
msgid "http://"
msgstr ""

#: source/TortoiseSVN_en.xml:1080(entry) 
msgid "Access via WebDAV protocol to Subversion-aware Apache server."
msgstr ""

#: source/TortoiseSVN_en.xml:1086(literal) 
msgid "https://"
msgstr ""

#: source/TortoiseSVN_en.xml:1088(entry) 
msgid "Same as <placeholder-1/>, but with SSL encryption."
msgstr ""

#: source/TortoiseSVN_en.xml:1094(literal) 
msgid "svn://"
msgstr ""

#: source/TortoiseSVN_en.xml:1098(literal) source/TortoiseSVN_en.xml:1107(literal) source/TortoiseSVN_en.xml:2439(primary) 
msgid "svnserve"
msgstr ""

#: source/TortoiseSVN_en.xml:1096(entry) 
msgid "Unauthenticated TCP/IP access via custom protocol to an <placeholder-1/> server."
msgstr ""

#: source/TortoiseSVN_en.xml:1103(literal) 
msgid "svn+ssh://"
msgstr ""

#: source/TortoiseSVN_en.xml:1105(entry) 
msgid "authenticated, encrypted TCP/IP access via custom protocol to an <placeholder-1/> server"
msgstr ""

#: source/TortoiseSVN_en.xml:1114(para) 
msgid "For the most part, Subversion's URLs use the standard syntax, allowing for server names and port numbers to be specified as part of the URL. The <literal>file:</literal> access method is normally used for local access, although it can be used with UNC paths to a networked host. The URL therefore takes the form <literal>file://hostname/path/to/repos</literal>. For the local machine, the hostname portion of the URL is required to be either absent or <literal>localhost</literal>. For this reason, local paths normally appear with three slashes, <literal>file:///path/to/repos</literal>."
msgstr ""

#: source/TortoiseSVN_en.xml:1127(para) 
msgid "Also, users of the <literal>file:</literal> scheme on Windows platforms will need to use an unofficially <quote>standard</quote> syntax for accessing repositories that are on the same machine, but on a different drive than the client's current working drive. Either of the two following URL path syntaxes will work where <literal>X</literal> is the drive on which the repository resides:"
msgstr ""

#: source/TortoiseSVN_en.xml:1137(screen) 
#, no-wrap
msgid "\nfile:///X:/path/to/repos\n...\nfile:///X|/path/to/repos\n...\n"
msgstr ""

#: source/TortoiseSVN_en.xml:1143(para) 
msgid "Note that a URL uses ordinary slashes even though the native (non-URL) form of a path on Windows uses backslashes."
msgstr ""

#: source/TortoiseSVN_en.xml:1147(para) 
msgid "You can safely access an FSFS repository via a network share, but you <emphasis>cannot</emphasis> access a BDB repository in this way."
msgstr ""

#: source/TortoiseSVN_en.xml:1154(para) source/TortoiseSVN_en.xml:2542(para) source/TortoiseSVN_en.xml:2858(para) 
msgid "Do not create or access a Berkeley DB repository on a network share. It <emphasis>cannot</emphasis> exist on a remote filesystem. Not even if you have the network drive mapped to a drive letter. If you attempt to use Berkeley DB on a network share, the results are unpredictable - you may see mysterious errors right away, or it may be months before you discover that your repository database is subtly corrupted."
msgstr ""

#: source/TortoiseSVN_en.xml:1164(para) 
msgid "Suppose you make changes to <filename>button.c</filename>. Since the <filename>.svn</filename> directory remembers the file's modification date and original contents, Subversion can tell that you've changed the file. However, Subversion does not make your changes public until you explicitly tell it to. The act of publishing your changes is more commonly known as <firstterm>committing</firstterm> (or <firstterm>checking in</firstterm>) changes to the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:1174(para) 
msgid "To publish your changes to others, you can use Subversion's <command>commit</command> command."
msgstr ""

#: source/TortoiseSVN_en.xml:1178(para) 
msgid "Now your changes to <filename>button.c</filename> have been committed to the repository; if another user checks out a working copy of <filename>/calc</filename>, they will see your changes in the latest version of the file."
msgstr ""

#: source/TortoiseSVN_en.xml:1184(para) 
msgid "Suppose you have a collaborator, Sally, who checked out a working copy of <filename>/calc</filename> at the same time you did. When you commit your change to <filename>button.c</filename>, Sally's working copy is left unchanged; Subversion only modifies working copies at the user's request."
msgstr ""

#: source/TortoiseSVN_en.xml:1192(para) 
msgid "To bring her project up to date, Sally can ask Subversion to <firstterm>update</firstterm> her working copy, by using the Subversion <command>update</command> command. This will incorporate your changes into her working copy, as well as any others that have been committed since she checked it out."
msgstr ""

#: source/TortoiseSVN_en.xml:1200(para) 
msgid "Note that Sally didn't need to specify which files to update; Subversion uses the information in the <filename>.svn</filename> directory, and further information in the repository, to decide which files need to be brought up to date."
msgstr ""

#: source/TortoiseSVN_en.xml:1209(title) 
msgid "Revisions"
msgstr ""

#: source/TortoiseSVN_en.xml:1211(primary) source/TortoiseSVN_en.xml:6783(primary) 
msgid "revision"
msgstr ""

#: source/TortoiseSVN_en.xml:1213(para) 
msgid "An <command>svn commit</command> operation can publish changes to any number of files and directories as a single atomic transaction. In your working copy, you can change files' contents, create, delete, rename and copy files and directories, and then commit the complete set of changes as a unit."
msgstr ""

#: source/TortoiseSVN_en.xml:1221(para) 
msgid "In the repository, each commit is treated as an atomic transaction: either all the commit's changes take place, or none of them take place. Subversion tries to retain this atomicity in the face of program crashes, system crashes, network problems, and other users' actions."
msgstr ""

#: source/TortoiseSVN_en.xml:1228(para) 
msgid "Each time the repository accepts a commit, this creates a new state of the filesystem tree, called a <firstterm>revision</firstterm>. Each revision is assigned a unique natural number, one greater than the number of the previous revision. The initial revision of a freshly created repository is numbered zero, and consists of nothing but an empty root directory."
msgstr ""

#: source/TortoiseSVN_en.xml:1237(para) 
msgid "A nice way to visualize the repository is as a series of trees. Imagine an array of revision numbers, starting at 0, stretching from left to right. Each revision number has a filesystem tree hanging below it, and each tree is a <quote>snapshot</quote> of the way the repository looked after each commit."
msgstr ""

#: source/TortoiseSVN_en.xml:1250(title) 
msgid "Global Revision Numbers"
msgstr ""

#: source/TortoiseSVN_en.xml:1251(para) 
msgid "Unlike those of many other version control systems, Subversion's revision numbers apply to <emphasis>entire trees</emphasis>, not individual files. Each revision number selects an entire tree, a particular state of the repository after some committed change. Another way to think about it is that revision N represents the state of the repository filesystem after the Nth commit. When a Subversion user talks about ``revision 5 of <filename>foo.c</filename>'', they really mean ``<filename>foo.c</filename> as it appears in revision 5.'' Notice that in general, revisions N and M of a file do <emphasis>not</emphasis> necessarily differ!"
msgstr ""

#: source/TortoiseSVN_en.xml:1266(para) 
msgid "It's important to note that working copies do not always correspond to any single revision in the repository; they may contain files from several different revisions. For example, suppose you check out a working copy from a repository whose most recent revision is 4:"
msgstr ""

#: source/TortoiseSVN_en.xml:1273(screen) 
#, no-wrap
msgid "\ncalc/Makefile:4\n     integer.c:4\n     button.c:4\n"
msgstr ""

#: source/TortoiseSVN_en.xml:1278(para) 
msgid "At the moment, this working directory corresponds exactly to revision 4 in the repository. However, suppose you make a change to <filename>button.c</filename>, and commit that change. Assuming no other commits have taken place, your commit will create revision 5 of the repository, and your working copy will now look like this:"
msgstr ""

#: source/TortoiseSVN_en.xml:1286(screen) 
#, no-wrap
msgid "\ncalc/Makefile:4\n     integer.c:4\n     button.c:5\n"
msgstr ""

#: source/TortoiseSVN_en.xml:1291(para) 
msgid "Suppose that, at this point, Sally commits a change to <filename>integer.c</filename>, creating revision 6. If you use <command>svn update</command> to bring your working copy up to date, then it will look like this:"
msgstr ""

#: source/TortoiseSVN_en.xml:1297(screen) 
#, no-wrap
msgid "\ncalc/Makefile:6\n     integer.c:6\n     button.c:6\n"
msgstr ""

#: source/TortoiseSVN_en.xml:1302(para) 
msgid "Sally's changes to <filename>integer.c</filename> will appear in your working copy, and your change will still be present in <filename>button.c</filename>. In this example, the text of <filename>Makefile</filename> is identical in revisions 4, 5, and 6, but Subversion will mark your working copy of <filename>Makefile</filename> with revision 6 to indicate that it is still current. So, after you do a clean update at the top of your working copy, it will generally correspond to exactly one revision in the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:1315(title) 
msgid "How Working Copies Track the Repository"
msgstr ""

#: source/TortoiseSVN_en.xml:1316(para) 
msgid "For each file in a working directory, Subversion records two essential pieces of information in the <filename>.svn/</filename> administrative area:"
msgstr ""

#: source/TortoiseSVN_en.xml:1322(para) 
msgid "what revision your working file is based on (this is called the file's <firstterm>working revision</firstterm>), and"
msgstr ""

#: source/TortoiseSVN_en.xml:1329(para) 
msgid "a timestamp recording when the local copy was last updated by the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:1335(para) 
msgid "Given this information, by talking to the repository, Subversion can tell which of the following four states a working file is in:"
msgstr ""

#: source/TortoiseSVN_en.xml:1342(term) 
msgid "Unchanged, and current"
msgstr ""

#: source/TortoiseSVN_en.xml:1344(para) 
msgid "The file is unchanged in the working directory, and no changes to that file have been committed to the repository since its working revision. A <command>commit</command> of the file will do nothing, and an <command>update</command> of the file will do nothing."
msgstr ""

#: source/TortoiseSVN_en.xml:1355(term) 
msgid "Locally changed, and current"
msgstr ""

#: source/TortoiseSVN_en.xml:1357(para) 
msgid "The file has been changed in the working directory, and no changes to that file have been committed to the repository since its base revision. There are local changes that have not been committed to the repository, thus an <command>commit</command> of the file will succeed in publishing your changes, and an <command>update</command> of the file will do nothing."
msgstr ""

#: source/TortoiseSVN_en.xml:1369(term) 
msgid "Unchanged, and out-of-date"
msgstr ""

#: source/TortoiseSVN_en.xml:1371(para) 
msgid "The file has not been changed in the working directory, but it has been changed in the repository. The file should eventually be updated, to make it current with the public revision. An <command>commit</command> of the file will do nothing, and an <command>update</command> of the file will fold the latest changes into your working copy."
msgstr ""

#: source/TortoiseSVN_en.xml:1383(term) 
msgid "Locally changed, and out-of-date"
msgstr ""

#: source/TortoiseSVN_en.xml:1385(para) 
msgid "The file has been changed both in the working directory, and in the repository. An <command>commit </command> of the file will fail with an \"out-of-date\" error. The file should be updated first; an <command>update </command> command will attempt to merge the public changes with the local changes. If Subversion can't complete the merge in a plausible way automatically, it leaves it to the user to resolve the conflict."
msgstr ""

#: source/TortoiseSVN_en.xml:1402(title) 
msgid "Summary"
msgstr ""

#: source/TortoiseSVN_en.xml:1403(para) 
msgid "We've covered a number of fundamental Subversion concepts in this chapter:"
msgstr ""

#: source/TortoiseSVN_en.xml:1409(para) 
msgid "We've introduced the notions of the central repository, the client working copy, and the array of repository revision trees."
msgstr ""

#: source/TortoiseSVN_en.xml:1415(para) 
msgid "We've seen some simple examples of how two collaborators can use Subversion to publish and receive changes from one another, using the 'copy-modify-merge' model."
msgstr ""

#: source/TortoiseSVN_en.xml:1422(para) 
msgid "We've talked a bit about the way Subversion tracks and manages information in a working copy."
msgstr ""

#: source/TortoiseSVN_en.xml:1435(title) 
msgid "Setting Up A Server"
msgstr ""

#: source/TortoiseSVN_en.xml:1437(para) 
msgid "To use TortoiseSVN (or any other Subversion client), you need a place where your repositories are located. You can either store your repositories locally and access them using the <emphasis>file://</emphasis> protocol or you can place them on a server and access them with the <emphasis>http://</emphasis> or <emphasis>svn://</emphasis> protocols. The two server protocols can also be encrypted. You use <emphasis>https://</emphasis> or <emphasis>svn+ssh://</emphasis>. This chapter shows you step by step on how you can set up such a server on a Windows machine."
msgstr ""

#: source/TortoiseSVN_en.xml:1448(para) 
msgid "If you don't have a server and/or if you only work alone then local repositories are probably your best choice. You can skip this chapter and go directly to <xref linkend=\"tsvn_repository\"/>."
msgstr ""

#: source/TortoiseSVN_en.xml:1457(title) 
msgid "Apache Based Server"
msgstr ""

#: source/TortoiseSVN_en.xml:1461(primary) 
msgid "Apache"
msgstr ""

#: source/TortoiseSVN_en.xml:1463(para) 
msgid "The most flexible of all possible server setups for Subversion is the Apache based one. Although a bit more complicated to set up, it offers benefits that other servers cannot:"
msgstr ""

#: source/TortoiseSVN_en.xml:1469(primary) source/TortoiseSVN_en.xml:1473(term) 
msgid "WebDAV"
msgstr ""

#: source/TortoiseSVN_en.xml:1475(para) 
msgid "The Apache based Subversion server uses the WebDAV protocol which is supported by many other programs as well. You could e.g. mount such a repository as a \"Webfolder\" in the Windows explorer and then access it like any other folder in the filesystem"
msgstr ""

#: source/TortoiseSVN_en.xml:1486(term) 
msgid "Browsing The Repository"
msgstr ""

#: source/TortoiseSVN_en.xml:1488(para) 
msgid "You can point your browser to the URL of your repository and browse the contents of it without having a Subversion client installed. This gives access to your data to a much wider circle of users."
msgstr ""

#: source/TortoiseSVN_en.xml:1498(term) source/TortoiseSVN_en.xml:3093(title) 
msgid "Authentication"
msgstr ""

#: source/TortoiseSVN_en.xml:1500(para) 
msgid "You can use any authentication mechanism Apache supports, including SSPI and LDAP."
msgstr ""

#: source/TortoiseSVN_en.xml:1507(term) 
msgid "Security"
msgstr ""

#: source/TortoiseSVN_en.xml:1509(para) 
msgid "Since Apache is very stable and secure, you automatically get the same security for your repository. This includes SSL encryption."
msgstr ""

#: source/TortoiseSVN_en.xml:1519(title) 
msgid "Installing Apache"
msgstr ""

#: source/TortoiseSVN_en.xml:1524(para) 
msgid "Please note that Windows XP without the servicepack 1 will lead to bogus network data and could therefore corrupt your repository!"
msgstr ""

#: source/TortoiseSVN_en.xml:1532(para) 
msgid "Download the latest version of the Apache webserver from <ulink url=\"http://httpd.apache.org/download.cgi\"><citetitle>http://httpd.apache.org/download.cgi</citetitle></ulink>. Make sure that you download the version &gt; 2.0.54 - the version 1.3.xx won't work! Also, versions lower than 2.0.54 won't work with Subversion 1.2 because of a bug in how Apache &lt; 2.0.54 was built for Windows."
msgstr ""

#: source/TortoiseSVN_en.xml:1545(para) 
msgid "Once you have the Apache2 installer you can doubleclick on it and it will guide you through the installation process. Make sure that you enter the server-URL correctly (if you don't have a dns name for your server just enter the ip-address). I recommend to install apache <literal>for All Users, on Port 80, as a Service</literal>. Note: if you already have IIS or any other program running which listens on port 80 the installation might fail. If that happens, go to the programs directory, <filename>\\Apache Group\\Apache2\\conf</filename> and locate the file <filename>httpd.conf</filename>. Edit that file so that <literal>Listen 80</literal> is changed to a free port, e.g. <literal>Listen 81</literal>. Then restart the installation - this time it should finish without problems."
msgstr ""

#: source/TortoiseSVN_en.xml:1567(para) 
msgid "Now test if the Apache-webserver is running correctly by pointing your webbrowser to <systemitem class=\"url\">http://localhost/</systemitem> - a preconfigured Website should show up."
msgstr ""

#: source/TortoiseSVN_en.xml:1576(para) 
msgid "If you decide to install Apache as a service, be warned that by default it will run as the local system account. It would be a more secure practice for you to create a separate account for Apache to run as."
msgstr ""

#: source/TortoiseSVN_en.xml:1582(para) 
msgid "Make sure that the account on the server that Apache is running as has an explicit entry in the repository directory's access control list (right-click directory | properties | security), with full control. Otherwise, users will not be able to commit their changes."
msgstr ""

#: source/TortoiseSVN_en.xml:1588(para) 
msgid "Even if Apache runs as local system, you still need such an entry (which will be the SYSTEM account in this case)."
msgstr ""

#: source/TortoiseSVN_en.xml:1592(para) 
msgid "If Apache does not have this permission set up, your users will get \"Access denied\" error messages, which show up in the Apache error log as error 500."
msgstr ""

#: source/TortoiseSVN_en.xml:1520(para) 
msgid "The first thing you need before installing Apache is a computer with either Windows2000 / WinXP+SP1 or Windows2003. <warning><placeholder-1/></warning><placeholder-2/><caution><placeholder-3/><placeholder-4/><placeholder-5/><placeholder-6/></caution>"
msgstr ""

#: source/TortoiseSVN_en.xml:1601(title) 
msgid "Installing Subversion"
msgstr ""

#: source/TortoiseSVN_en.xml:1605(para) 
msgid "Download the latest version of Subversion from <ulink url=\"http://subversion.tigris.org/servlets/ProjectDocumentList?folderID=91\"><citetitle>http://subversion.tigris.org/servlets/ProjectDocumentList?folderID=91</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:1613(para) 
msgid "Run the Subversion installer and follow the instructions. If the Subversion installer recognized that you've installed Apache, then you're almost done. If it couldn't find an Apache server then you have to do some additional steps."
msgstr ""

#: source/TortoiseSVN_en.xml:1623(primary) source/TortoiseSVN_en.xml:1992(primary) 
msgid "mod_authz_svn"
msgstr ""

#: source/TortoiseSVN_en.xml:1625(para) 
msgid "Using the windows explorer, go to the installation directory of Subversion (usually <filename>c:\\program files\\Subversion</filename>) and find the files <filename>/httpd/mod_dav_svn.so</filename> and <filename>mod_authz_svn.so</filename>. Copy these files to the Apache modules directory (usually <filename>c:\\program files\\apache group\\apache2\\modules </filename>)."
msgstr ""

#: source/TortoiseSVN_en.xml:1638(para) 
msgid "Copy the file <filename>/bin/libdb43.dll</filename> from the Subversion installation directory to the Apache modules directory."
msgstr ""

#: source/TortoiseSVN_en.xml:1645(para) 
msgid "Edit Apache's configuration file (usually <filename> C:\\Program Files\\Apache Group\\Apache2\\conf\\httpd.conf</filename>) with a text editor such as Notepad and make the following changes:"
msgstr ""

#: source/TortoiseSVN_en.xml:1651(para) 
msgid "Uncomment (remove the '<literal>#</literal>' mark) the following lines: <screen>#LoadModule dav_fs_module modules/mod_dav_fs.so</screen><screen>#LoadModule dav_module modules/mod_dav.so</screen> Add the following two lines to the end of the <literal>LoadModule</literal> section. <screen>\nLoadModule dav_svn_module modules/mod_dav_svn.so\nLoadModule authz_svn_module modules/mod_authz_svn.so\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:1668(title) 
msgid "Configuration"
msgstr ""

#: source/TortoiseSVN_en.xml:1679(para) 
msgid "At the end of the Config file add the following lines: <screen>\n&lt;Location /svn&gt;\nDAV svn\nSVNListParentPath on\nSVNParentPath D:\\SVN\nAuthType Basic\nAuthName \"Subversion repositories\"\nAuthUserFile passwd\n#AuthzSVNAccessFile svnaccessfile\nRequire valid-user\n&lt;/Location&gt;\n</screen> This configures Apache so that all your Subversion repositories are physically located below <filename>D:\\SVN</filename>. The repositories are served to the outside world from the URL: <systemitem class=\"url\"> http://MyServer/svn/ </systemitem>. Access is restricted to known users/passwords listed in the <filename>passwd</filename> file."
msgstr ""

#: source/TortoiseSVN_en.xml:1705(para) 
msgid "To create the <filename>passwd</filename> file, open the command prompt (DOS-Box) again, change to the apache2 folder (usually <filename>c:\\program files\\apache group\\apache2</filename>) and create the file by entering <screen>\nbin\\htpasswd -c passwd &lt;username&gt;\n</screen> This will create a file with the name passwd which is used for authentication. Additional users can be added with <screen>\nbin\\htpasswd passwd &lt;username&gt;\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:1724(para) 
msgid "Restart the Apache service again."
msgstr ""

#: source/TortoiseSVN_en.xml:1729(para) 
msgid "Point your browser to <systemitem class=\"url\">http://MyServer/svn/MyNewRepository</systemitem> (where <filename>MyNewRepository</filename> is the name of the Subversion repository you created before). If all went well you should be prompted for a username and password, then you can see the contents of your repository."
msgstr ""

#: source/TortoiseSVN_en.xml:1669(para) 
msgid "Now you have set up Apache and Subversion, but Apache doesn't know how to handle Subversion clients like TortoiseSVN yet. To get Apache to know which URL shall be used for Subversion repositories you have to edit the Apache config file (usually located in <filename>c:\\program files\\apache group\\apache2\\conf\\httpd.conf</filename>) with any text editor you like (e.g. Notepad): <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:1750(title) 
msgid "Apache httpd.conf Settings"
msgstr ""

#: source/TortoiseSVN_en.xml:1756(entry) 
msgid "Setting"
msgstr ""

#: source/TortoiseSVN_en.xml:1757(entry) 
msgid "Explanation"
msgstr ""

#: source/TortoiseSVN_en.xml:1762(entry) 
msgid "&lt;Location /svn&gt;"
msgstr ""

#: source/TortoiseSVN_en.xml:1765(systemitem) 
msgid "http://MyServer/svn/"
msgstr ""

#: source/TortoiseSVN_en.xml:1763(entry) 
msgid "means that the Subversion repositories are available from the URL <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:1769(entry) 
msgid "DAV svn"
msgstr ""

#: source/TortoiseSVN_en.xml:1770(entry) 
msgid "tells Apache which module will be responsible to serve that URL - in this case the Subversion module."
msgstr ""

#: source/TortoiseSVN_en.xml:1776(entry) 
msgid "SVNListParentPath on"
msgstr ""

#: source/TortoiseSVN_en.xml:1777(entry) 
msgid "For Subversion version 1.3 and higher, this directive enables listing all the available repositories under SVNParentPath."
msgstr ""

#: source/TortoiseSVN_en.xml:1783(entry) 
msgid "SVNParentPath D:\\SVN"
msgstr ""

#: source/TortoiseSVN_en.xml:1786(filename) 
msgid "D:\\SVN"
msgstr ""

#: source/TortoiseSVN_en.xml:1784(entry) 
msgid "tells Subversion to look for repositories below <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:1790(entry) 
msgid "AuthType Basic"
msgstr ""

#: source/TortoiseSVN_en.xml:1791(entry) 
msgid "is to activate basic authentication, i.e. Username/password"
msgstr ""

#: source/TortoiseSVN_en.xml:1797(entry) 
msgid "AuthName \"Subversion repositories\""
msgstr ""

#: source/TortoiseSVN_en.xml:1798(entry) 
msgid "is used as an information whenever an authentication dialog pops up to tell the user what the authentication is for"
msgstr ""

#: source/TortoiseSVN_en.xml:1804(entry) 
msgid "AuthUserFile passwd"
msgstr ""

#: source/TortoiseSVN_en.xml:1805(entry) 
msgid "specifies which password file to use for authentication"
msgstr ""

#: source/TortoiseSVN_en.xml:1810(entry) 
msgid "AuthzSVNAccessFile"
msgstr ""

#: source/TortoiseSVN_en.xml:1811(entry) 
msgid "Location of the Access file for paths inside a Subversion repository"
msgstr ""

#: source/TortoiseSVN_en.xml:1817(entry) 
msgid "Require valid-user"
msgstr ""

#: source/TortoiseSVN_en.xml:1818(entry) 
msgid "specifies that only users who entered a correct username/password are allowed to access the URL"
msgstr ""

#: source/TortoiseSVN_en.xml:1830(para) 
msgid "If you want your repository to have read access for everyone but write access only for specific users you can change the line <screen>\nRequire valid-user\n</screen> to <screen>\n&lt;LimitExcept GET PROPFIND OPTIONS REPORT&gt;\nRequire valid-user\n&lt;/LimitExcept&gt;\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:1845(para) 
msgid "Using a <filename>passwd</filename> file limits and grants access to all of your repositories as a unit. If you want more control over which users have access to each folder inside a repository you can uncomment the line <screen>\n#AuthzSVNAccessFile svnaccessfile\n</screen> and create a Subversion access file. Apache will make sure that only valid users are able to access your <filename>/svn</filename> location, and will then pass the username to Subversion's AuthzSVNAccessFile module so that it can enforce more granular access based upon rules listed in the Subversion access file. Note that paths are specified either as <literal>repos:path</literal> or simply <literal>path</literal>. If you don't specify a particular repository, that access rule will apply to all repositories under <literal>SVNParentPath</literal>. The format of the authorization-policy file used by <literal>mod_authz_svn</literal> is described in <xref linkend=\"tsvn-serversetup-mod_authz_svn\"/>"
msgstr ""

#: source/TortoiseSVN_en.xml:1741(para) 
msgid "A short explanation of what you just entered: <indexterm significance=\"normal\"><primary>SVNPath</primary></indexterm><indexterm significance=\"normal\"><primary>SVNParentPath</primary></indexterm><placeholder-1/> But that's just an example. There are many, many more possibilities of what you can do with the Apache webserver. <placeholder-2/>"
msgstr ""

#: source/TortoiseSVN_en.xml:1875(title) 
msgid "Multiple Repositories"
msgstr ""

#: source/TortoiseSVN_en.xml:1877(primary) 
msgid "SVNParentPath"
msgstr ""

#: source/TortoiseSVN_en.xml:1880(primary) 
msgid "Index of projects"
msgstr ""

#: source/TortoiseSVN_en.xml:1882(para) 
msgid "If you used the SVNParentPath directive then you don't have to change the Apache config file everytime you add a new Subversion repository. Simply create the new repository under the same location as the first repository and you're done! In my company I have direct access to that specific folder on the server via SMB (normal windows file access). So I just create a new folder there, run the TortoiseSVN command <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Create repository here...</guimenuitem></menuchoice> and a new project has a home..."
msgstr ""

#: source/TortoiseSVN_en.xml:1896(para) 
msgid "If you are using Subversion 1.3 or later, you can use the <literal>SVNListParentPath on</literal> directive to allow Apache to produce a listing of all available projects if you point your browser at the parent path rather than at a specific repository."
msgstr ""

#: source/TortoiseSVN_en.xml:1902(para) 
msgid "If your Subversion server is earlier than 1.3 you will just get a nasty error page showing. To get a nice looking listing of all available projects instead, you can use the following PHP script which generates the index for you automatically. (You will need to install PHP on your server in order to use the script shown below)."
msgstr ""

#: source/TortoiseSVN_en.xml:1911(programlisting) 
#, no-wrap
msgid "\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Subversion Repositories&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;h2&gt;Subversion Repositories&lt;/h2&gt;\n&lt;p&gt;\n&lt;?php\n    $svnparentpath = \"C:/svn\";\n    $svnparenturl = \"/svn\";\n\n    $dh = opendir( $svnparentpath );\n    if( $dh ) {\n        while( $dir = readdir( $dh ) ) {\n            $svndir = $svnparentpath . \"/\" . $dir;\n            $svndbdir = $svndir . \"/db\";\n            $svnfstypefile = $svndbdir . \"/fs-type\";\n            if( is_dir( $svndir ) &amp;&amp; is_dir( $svndbdir ) ) {\n                echo \"&lt;a href=\\\"\" . $svnparenturl . \"/\" .\n                        $dir . \"\\\"&gt;\" . $dir . \"&lt;/a&gt;\\n\";\n                if( file_exists( $svnfstypefile ) ) {\n                    $handle = fopen (\"$svnfstypefile\", \"r\");\n                    $buffer = fgets($handle, 4096);\n                    fclose( $handle );\n                    $buffer = chop( $buffer );\n                    if( strcmp( $buffer, \"fsfs\" )==0 ) {\n                        echo \" (FSFS) &lt;br /&gt;\\n\";\n                    } else {\n                        echo \" (BDB) &lt;br /&gt;\\n\";\n                    }\n                } else {\n                    echo \" (BDB) &lt;br /&gt;\\n\";\n                }\n            }\n        }\n        closedir( $dh );\n    }\n?&gt;\n&lt;/p&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n"
msgstr ""

#: source/TortoiseSVN_en.xml:1962(para) 
msgid "Uncomment (remove the '#' char) from the following line in your Apache config file: <screen>\n#LoadModule rewrite_module modules/mod_rewrite.so\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:1971(para) 
msgid "Add the following lines just below your &lt;Location&gt; block where you define your Subversion stuff: <screen>\n    RewriteEngine on\n    RewriteRule ^/svn$ /svn_index.php [PT]\n    RewriteRule ^/svn/$ /svn_index.php [PT]\n    RewriteRule ^/svn/index.html$ /svn_index.php [PT] \n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:1956(para) 
msgid "Save the lines above to a file <filename>svn_index.php</filename> and store that file in your web root folder. Next you have to tell Apache to show that page instead of the error: <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:1987(title) 
msgid "Path-Based Authorization"
msgstr ""

#: source/TortoiseSVN_en.xml:1989(primary) 
msgid "Authorization"
msgstr ""

#: source/TortoiseSVN_en.xml:1994(para) 
msgid "The mod_authz_svn module permits fine-grained control of access permissions based on usernames and repository paths. This is available with the Apache server, and as of Subversion 1.3 it is available with svnserve as well."
msgstr ""

#: source/TortoiseSVN_en.xml:2000(para) 
msgid "An example file would look like this: <screen>\n[groups]\nadmin = john, kate\ndevteam1 = john, rachel, sally\ndevteam2 = kate, peter, mark\ndocs = bob, jane, mike\ntraining = zak\n# Default access rule for ALL repositories\n# Everyone can read, admins can write, Dan German is excluded.\n[/]\n* = r\n@admin = rw\ndangerman =\n# Allow developers complete access to their project repos\n[proj1:/]\n@devteam1 = rw\n[proj2:/]\n@devteam2 = rw\n[bigproj:/]\n@devteam1 = rw\n@devteam2 = rw\ntrevor = rw\n# Give the doc people write access to all the docs folders\n[/trunk/doc]\n@docs = rw\n# Give trainees write access in the training repository only\n[TrainingRepos:/]\n@training = rw\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:2032(para) 
msgid "Note that checking every path can be an expensive operation, particularly in the case of the revision log. The server checks every changed path in each revision and checks it for readability, which can be time-consuming on revisions which affect large numbers of files."
msgstr ""

#: source/TortoiseSVN_en.xml:2039(para) 
msgid "Authentication and authorizarion are separate processes. If a user wants to gain access to a repository path, she has to meet <emphasis>both</emphasis>, the usual authentication requirements and the authorization requirements of the access file."
msgstr ""

#: source/TortoiseSVN_en.xml:2047(title) 
msgid "Authentication With a Windows Domain"
msgstr ""

#: source/TortoiseSVN_en.xml:2049(primary) 
msgid "Windows domain"
msgstr ""

#: source/TortoiseSVN_en.xml:2052(primary) 
msgid "domaincontroller"
msgstr ""

#: source/TortoiseSVN_en.xml:2054(para) 
msgid "As you might have noticed you need to make a username/password entry in the <filename>passwd</filename> file for each user separately. And if (for security reasons) you want your users to periodically change their passwords you have to make the change manually."
msgstr ""

#: source/TortoiseSVN_en.xml:2061(para) 
msgid "But there's a solution for that problem - at least if you're accessing the repository from inside a LAN with a windows domain controller: mod_auth_sspi!"
msgstr ""

#: source/TortoiseSVN_en.xml:2066(para) 
msgid "<indexterm significance=\"normal\"><primary>SSPI</primary></indexterm> The original SSPI module was offered by Syneapps including sourcecode. But the development for it has been stopped. You can still find that module on the internet - just do a google search for it. We also have a compiled version of it on our website, supplied by Norbert Unterberg. This one is mod_auth_sspi 1.0.3 which supports a <literal>SSPIUsernameCase [upper|lower]</literal> directive. <ulink url=\"http://tortoisesvn.tigris.org/mod_auth_sspi.zip\"><citetitle>Get the mod_auth_sspi module</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:2083(para) 
msgid "Download the module, copy the file <filename>mod_auth_sspi.so</filename> into the Apache modules folder."
msgstr ""

#: source/TortoiseSVN_en.xml:2090(para) 
msgid "Edit the Apache config file: add the line <screen>\nLoadModule sspi_auth_module modules/mod_auth_sspi.so\n</screen> to the LoadModule's section. Make sure you insert this line <emphasis>before</emphasis> the line <screen>\nLoadModule auth_module modules/mod_auth.so\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:2103(para) 
msgid "To make the Subversion location use this type of authentication you have to change the line <screen>\nAuthType Basic\n</screen> to <screen>\nAuthType SSPI\n</screen> also you need to add <screen>\nSSPIAuth On\nSSPIAuthoritative On\nSSPIDomain &lt;domaincontroller&gt;\nSSPIOfferBasic On\n</screen> within the &lt;Location /svn&gt; block. If you don't have a domain controller, leave the name of the domain control as &lt;domaincontroller&gt;."
msgstr ""

#: source/TortoiseSVN_en.xml:2126(para) 
msgid "Note that if you are authenticating using SSPI, then you don't need the <filename>AuthUserFile</filename> line to define a password file any more. Apache authenticates your username and password against your windows domain instead. You will need to update the users list in your <filename>svnaccessfile</filename> to reference <literal>DOMAIN\\username</literal> as well."
msgstr ""

#: source/TortoiseSVN_en.xml:2136(para) 
msgid "Subversion AuthzSVNAccessFile files are case sensitive in regard to user names (\"JUser\" is different from \"juser\")."
msgstr ""

#: source/TortoiseSVN_en.xml:2140(para) 
msgid "In Microsoft's world, Windows domains and usernames are not case sensitive. Even so, some network administrators like to create user accounts in CamelCase (e.g. \"JUser\")."
msgstr ""

#: source/TortoiseSVN_en.xml:2145(para) 
msgid "This difference can bite you when using SSPI authentication as the windows domain and user names are passed to Subversion in the same case as the user types them in at the prompt. Internet Explorer often passes the username to Apache automatically using whatever case the account was created with."
msgstr ""

#: source/TortoiseSVN_en.xml:2153(para) 
msgid "The end result is that you may need at least two entries in your AuthzSVNAccessFile for each user -- a lowercase entry and an entry in the same case that Internet Explorer passes to Apache. You will also need to train your users to also type in their credentials using lower case when accessing repositories via TortoiseSVN."
msgstr ""

#: source/TortoiseSVN_en.xml:2161(para) 
msgid "Apache's Error and Access logs are your best friend in deciphering problems such as these as they will help you determine the username string passed onto Subversion's AuthzSVNAccessFile module. You may need to experiment with the exact format of the user string in the svnaccessfile (e.g. <literal>DOMAIN\\user</literal> vs. <literal>DOMAIN//user</literal>) in order to get everything working."
msgstr ""

#: source/TortoiseSVN_en.xml:2173(title) 
msgid "SSL and InternetExplorer"
msgstr ""

#: source/TortoiseSVN_en.xml:2174(para) 
msgid "If you're securing your server with SSL and use authentication against a windows domain you will encounter that browsing the repository with the Internet Explorer doesn't work anymore. Don't worry - this is only the Internet Explorer not able to authenticate. Other browsers don't have that problem and TortoiseSVN and any other Subversion client are still able to authenticate."
msgstr ""

#: source/TortoiseSVN_en.xml:2188(para) 
msgid "define a separate &lt;Location /path&gt; directive in the apache config file, and add the <literal>SSPIBasicPreferred On</literal>. This will allow IE to authenticate again, but other browsers and Subversion won't be able to authenticate against that location."
msgstr ""

#: source/TortoiseSVN_en.xml:2198(para) 
msgid "Offer browsing with unencrypted authentication (without SSL) too. Strangely IE doesn't have any problems with authenticating if the connection is not secured with SSL."
msgstr ""

#: source/TortoiseSVN_en.xml:2206(para) 
msgid "In the ssl \"standard\" setup there's often the following statement in apache's virtual ssl host: <screen>\nSetEnvIf User-Agent \".*MSIE.*\" \\\n             nokeepalive ssl-unclean-shutdown \\\n             downgrade-1.0 force-response-1.0\n</screen> There are (were?) good reasons for this configuration, see <ulink url=\"http://www.modssl.org/docs/2.8/ssl_faq.html#ToC49\"><citetitle>http://www.modssl.org/docs/2.8/ssl_faq.html#ToC49</citetitle></ulink> But if you want ntlm authentication you have to use keepalive: <ulink url=\"http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/qos_enablekeepalives.asp\"><citetitle>http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/qos_enablekeepalives.asp</citetitle></ulink> If You uncomment the whole \"SetEnvIf\" You should be able to authenticate IE with windows authentication over SSL against the apache on Win32 with included mod_auth_sspi."
msgstr ""

#: source/TortoiseSVN_en.xml:2183(para) 
msgid "If you still want to use IE to browse the repository you can either: <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:2233(title) 
msgid "Securing the server with SSL"
msgstr ""

#: source/TortoiseSVN_en.xml:2235(primary) 
msgid "SSL"
msgstr ""

#: source/TortoiseSVN_en.xml:2237(para) 
msgid "The apache server doesn't have SSL support installed by default due to US-export restrictions. But you can easily download the required module from somewhere else and install it yourself."
msgstr ""

#: source/TortoiseSVN_en.xml:2244(para) 
msgid "First you need the required files to enable SSL. You can find those in the package available at <ulink url=\"http://hunter.campbus.com/\"><citetitle>http://hunter.campbus.com/</citetitle></ulink>. Just unzip the package and then copy <filename>mod_ssl.so</filename> to the <filename>modules</filename> folder of Apache and the file <filename>openssl.exe</filename> to the <filename>bin</filename> folder. Also copy the file <filename>conf/ssl.conf</filename> to the <filename>conf</filename> folder of Apache."
msgstr ""

#: source/TortoiseSVN_en.xml:2260(para) 
msgid "Open the file <filename>ssl.conf</filename> in the Apache conf folder with a text editor."
msgstr ""

#: source/TortoiseSVN_en.xml:2267(para) 
msgid "Place a comment char (<literal>#</literal>) in front of the following lines: <screen>\nDocumentRoot \"c:/apache/htdocs\"\nServerName www.example.com:443\nServerAdmin you@example.com\nErrorLog logs/error_log\nTransferLog logs/access_log\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:2280(para) 
msgid "change the line <screen>\nSSLCertificateFile conf/ssl.crt/server.crt\n</screen> to <screen>\nSSLCertificateFile conf/ssl/my-server.cert\n</screen> the line <screen>\nSSLCertificateKeyFile conf/ssl.key/server.key\n</screen> to <screen>\nSSLCertificateKeyFile conf/ssl/my-server.key\n</screen> and the line <screen>\nSSLMutex  file:logs/ssl_mutex\n</screen> to <screen>\nSSLMutex  default\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:2308(para) 
msgid "Delete the lines <screen>\n&lt;IfDefine SSL&gt;\n</screen> and <screen>\n&lt;/IfDefine&gt;\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:2320(para) 
msgid "Open the Apache config file (<filename>httpd.conf</filename>) and uncomment the line <screen>\n#LoadModule ssl_module modules/mod_ssl.so\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:2329(para) 
msgid "Openssl needs a config file. You can download a working one from <ulink url=\"http://tud.at/programm/openssl.cnf\"><citetitle>http://tud.at/programm/openssl.cnf</citetitle></ulink>. Save the file to <filename>bin/openssl.cnf</filename>. Please note: the file has the type <filename>*.cnf</filename>. Windows treats such files in a special way but it really is just a text file!"
msgstr ""

#: source/TortoiseSVN_en.xml:2343(para) 
msgid "Next you need to create an SSL certificate. To do that open a command prompt (DOS-Box) and change to the apache folder (e.g. <filename>C:\\program files\\apache group\\apache2</filename>) and type the following command: <screen>\nbin\\openssl req -config bin\\openssl.cnf -new -out my-server.csr\n</screen> You will be asked for a passphrase. Please don't use simple words but whole sentences, e.g. a part of a poem. The longer the phrase the better. Also you have to enter the URL of your server. All other questions are optional but we recommend you fill those in too."
msgstr ""

#: source/TortoiseSVN_en.xml:2358(para) 
msgid "Normally the <filename>privkey.pem</filename> file is created automatically, but if it isn't you need to type this command to generate it: <screen>\nbin\\openssl genrsa -out privkey.pem 2048\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:2366(para) 
msgid "Next type the commands <screen>\nbin\\openssl rsa -in privkey.pem -out my-server.key\n</screen> and (on one line) <screen>\nbin\\openssl x509 -in my-server.csr -out my-server.cert\n                 -req -signkey my-server.key -days 4000\n</screen> This will create a certificate which will expire in 4000 days. And finally enter: <screen>\nbin\\openssl x509 -in my-server.cert -out my-server.der.crt -outform DER\n</screen> These commands created some files in the Apache folder (<filename>my-server.der.crt</filename>, <filename>my-server.csr</filename>, <filename>my-server.key</filename>, <filename>.rnd</filename>, <filename>privkey.pem</filename>, <filename>my-server.cert</filename>). Copy the files to the folder <filename>conf/ssl</filename> (e.g. <filename>C:\\program files\\apache group\\apache2\\conf\\ssl</filename>) - if this folder does not exist you have to create it first."
msgstr ""

#: source/TortoiseSVN_en.xml:2395(para) 
msgid "Restart the apache service."
msgstr ""

#: source/TortoiseSVN_en.xml:2400(para) 
msgid "Point your browser to <systemitem class=\"url\">https://servername/svn/project</systemitem> ..."
msgstr ""

#: source/TortoiseSVN_en.xml:2408(title) 
msgid "Forcing SSL access"
msgstr ""

#: source/TortoiseSVN_en.xml:2409(para) 
msgid "When you've set up SSL to make your repository more secure, you might want to disable the normal access via non-ssl (http) and only allow https access. To do this, you have to add another directive to the Subversion &lt;Location&gt; block: <literal>SSLRequireSSL</literal>."
msgstr ""

#: source/TortoiseSVN_en.xml:2416(para) 
msgid "An example &lt;Location&gt; block would look like this: <screen>\n&lt;Location /svn&gt;\nDAV svn\nSVNParentPath D:\\SVN\nSSLRequireSSL\nAuthType Basic\nAuthName \"Subversion repositories\"\nAuthUserFile passwd\n#AuthzSVNAccessFile svnaccessfile\nRequire valid-user\n&lt;/Location&gt;\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:2435(title) 
msgid "Svnserve Based Server"
msgstr ""

#: source/TortoiseSVN_en.xml:2441(para) 
msgid "There may be situations where it's not possible to use Apache as your server. Fortunately, Subversion includes Svnserve - a lightweight stand-alone server which uses a custom protocol over an ordinary TCP/IP connection."
msgstr ""

#: source/TortoiseSVN_en.xml:2447(para) 
msgid "In most cases svnserve is easier to setup and runs faster than the Apache based server."
msgstr ""

#: source/TortoiseSVN_en.xml:2453(title) 
msgid "Installing svnserve"
msgstr ""

#: source/TortoiseSVN_en.xml:2457(para) 
msgid "Get the latest version of Subversion from <ulink url=\"http://subversion.tigris.org/servlets/ProjectDocumentList?folderID=91\"><citetitle>http://subversion.tigris.org/servlets/ProjectDocumentList?folderID=91</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:2465(para) 
msgid "Run the Subversion installer. If you run the installer on your server you can skip step 3."
msgstr ""

#: source/TortoiseSVN_en.xml:2471(para) 
msgid "Open the windows-explorer, go to the installation directory of Subversion (usually <filename>C:\\Program Files\\Subversion</filename>) and in the <filename>bin</filename> directory, find the files <filename>svnserve.exe</filename>, <filename>libdb43.dll</filename>, <filename>libeay32.dll</filename> and <filename>ssleay32.dll</filename> - copy these files into a directory on your server e.g. <filename>c:\\svnserve</filename>"
msgstr ""

#: source/TortoiseSVN_en.xml:2488(title) 
msgid "Running svnserve"
msgstr ""

#: source/TortoiseSVN_en.xml:2489(para) 
msgid "Now that svnserve is installed, you need it running on your server. The simplest approach is to run the following from a DOS shell or create a windows shortcut: <screen>\nsvnserve.exe -d\n</screen> svnserve will now start waiting for incoming requests on port 3690. The -d switch tells svnserve to run as a daemon process, so it will always exist until it is manually terminated."
msgstr ""

#: source/TortoiseSVN_en.xml:2500(para) 
msgid "If you have not yet created a repository, follow the instructions given with the Apache server setup <xref linkend=\"tsvn-serversetup-apache-4\"/>."
msgstr ""

#: source/TortoiseSVN_en.xml:2505(para) 
msgid "To test that svnserve is working, use <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Repo-Browser</guimenuitem></menuchoice> to view a repository."
msgstr ""

#: source/TortoiseSVN_en.xml:2513(para) 
msgid "Assuming your repository is located in <filename>c:\\repos\\TestRepo</filename>, and your server is called <filename>localhost</filename>, enter: <screen>\nsvn://localhost/repos/TestRepo\n</screen> when prompted by the repo browser."
msgstr ""

#: source/TortoiseSVN_en.xml:2522(para) 
msgid "You can also increase security and save time entering Url's with svnserve by using the -r switch to set the root location and restrict access to a specified directory on the server: <screen>\nsvnserve.exe -d -r drive:\\path\\to\\repository\n</screen> Using the previous test as a guide, svnserve would now run as: <screen>\nsvnserve.exe -d -r c:\\repos\n</screen> And in TortoiseSVN our repo-browser Url is now shortened to: <screen>\nsvn://localhost/TestRepo\n</screen> Note that the -r switch is also needed if your repository is located on a different partition or drive than the location of svnserve on your server."
msgstr ""

#: source/TortoiseSVN_en.xml:2553(title) 
msgid "Run svnserve as a Service"
msgstr ""

#: source/TortoiseSVN_en.xml:2555(primary) 
msgid "svnservice"
msgstr ""

#: source/TortoiseSVN_en.xml:2557(para) 
msgid "If you are concerned about always having a user logged in on your server, or worried about someone shutting down svnserve or forgetting to restart it after a reboot, it is possible to run svnserve as a windows service using a wrapper."
msgstr ""

#: source/TortoiseSVN_en.xml:2563(para) 
msgid "One written specifically for svnserve is <literal>SvnService</literal>. Magnus Norddahl adapted some skeleton code from Microsoft, and further improvements have been made by Daniel Thompson. Daniel's version is available for download from <ulink url=\"http://tortoisesvn.tigris.org/files/documents/406/29202/SVNServiceDT.zip\"><citetitle>tigris.org</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:2572(para) 
msgid "More generic tools like <ulink url=\"http://www.firedaemon.com/\"><citetitle>firedaemon</citetitle></ulink> will also work. Note that you will still need to run svnserve with the -d switch."
msgstr ""

#: source/TortoiseSVN_en.xml:2580(para) 
msgid "Finally, if you have access to the Windows 2000/XP/2003 resource kit you can use <ulink url=\"http://support.microsoft.com/kb/q137890/\"><citetitle>SrvAny</citetitle></ulink> from Microsoft. This is the official Microsoft way of running programs as services, but it is a bit messy (requires registry editing) and if you stop the service it will kill svnserve immediately without letting it clean up. If you don't want to install the entire reskit, you can download <emphasis>just</emphasis> the SrvAny components from <ulink url=\"http://www.petri.co.il/software/srvany.zip\"><citetitle>Daniel Petri</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:2600(title) 
msgid "Authentication with svnserve"
msgstr ""

#: source/TortoiseSVN_en.xml:2601(para) 
msgid "The default svnserve setup provides anonymous read-only access. This means that you can use an <filename>svn://</filename> Url to checkout and update, or use the repo-browser in TortoiseSVN to view the repository, but you won't be able to commit any changes."
msgstr ""

#: source/TortoiseSVN_en.xml:2607(para) 
msgid "To enable write access to a repository, you need to edit the <filename>conf/svnserve.conf</filename> file in your repository directory. This file controls the configuration of the svnserve daemon, and also contains useful documentation."
msgstr ""

#: source/TortoiseSVN_en.xml:2613(para) 
msgid "You can enable anonymous write access by simply setting: <screen>\n[general]\nanon-access = write\n</screen> However, you will not know who has made changes to a repository, as the <literal>svn:author</literal> property will be empty. You will also be unable to control who makes changes to a repository. This is a somewhat risky setup!"
msgstr ""

#: source/TortoiseSVN_en.xml:2624(para) 
msgid "One way to overcome this is to create a password database: <screen>\n[general]\nanon-access = none\nauth-access = write\npassword-db = userfile\n</screen> Where <literal>userfile</literal> is a file which exists in the same directory as <filename>svnserve.conf</filename>. This file can live elsewhere in your filesytem (useful for when you have multiple repositories which require the same access rights) and may be referenced using an absolute path, or a path relative to the <filename>conf</filename> directory. If you include a path, it must be written <filename>/the/unix/way</filename>. Using \\ or drive letters will not work. The <filename>userfile</filename> should have a structure of: <screen>\n[users]\nusername = password\n...\n</screen> This example would deny all access for unauthenticated (anonymous) users, and give read-write access to users listed in <filename>userfile</filename>."
msgstr ""

#: source/TortoiseSVN_en.xml:2652(para) 
msgid "If you maintain multiple repositories using the same password database, the use of an authentication realm will make life easier for users, as TortoiseSVN can cache your credentials so that you only have to enter them once. More information can be found in the Subversion book, specifically in the sections <ulink url=\"http://svnbook.red-bean.com/en/1.1/ch06s03.html#svn-ch-6-sect-3.2.1\"><citetitle>Create a 'users' file and realm</citetitle></ulink> and <ulink url=\"http://svnbook.red-bean.com/en/1.1/ch06s02.html#svn-ch-6-sect-2.2\"><citetitle>Client Credentials Caching</citetitle></ulink>"
msgstr ""

#: source/TortoiseSVN_en.xml:2670(title) 
msgid "Authentication with svn+ssh"
msgstr ""

#: source/TortoiseSVN_en.xml:2671(para) 
msgid "Another way to authenticate users with a svnserve based server is to use a secure shell (SSH) to tunnel requests through."
msgstr ""

#: source/TortoiseSVN_en.xml:2676(para) 
msgid "With this approach, svnserve is not run as a daemon process, rather, the secure shell starts svnserve for you, running it as the SSH authenticated user. To enable this, you need a secure shell daemon on your server."
msgstr ""

#: source/TortoiseSVN_en.xml:2682(para) 
msgid "It is beyond the scope of this documentation to detail the installation and setup of a secure shell, however you can find further information in the <ulink url=\"http://tortoisesvn.sourceforge.net/?q=faq\"><citetitle>TortoiseSVN FAQ</citetitle></ulink>. Search for <quote>SSH</quote>."
msgstr ""

#: source/TortoiseSVN_en.xml:2691(para) 
msgid "Further information about svnserve can be found in the <ulink url=\"http://svnbook.red-bean.com\"><citetitle>SVN book</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:2699(title) 
msgid "Path-based Authorization with svnserve"
msgstr ""

#: source/TortoiseSVN_en.xml:2700(para) 
msgid "Starting with Subversion 1.3, svnserve supports the same <literal>mod_authz_svn</literal> path-based authorization scheme that is available with the Apache server. You need to edit the <filename>conf/svnserve.conf</filename> file in your repository directory and add a line referring to your authorization file. <screen>\n[general]\nauthz-db = authz\n</screen> Here, <filename>authz</filename> is a file you create to define the access permissions. You can use a separate file for each repository, or you can use the same file for several repositories. Read <xref linkend=\"tsvn-serversetup-mod_authz_svn\"/> for a description of the file format."
msgstr ""

#: source/TortoiseSVN_en.xml:2722(para) 
msgid "No matter which protocol you use to access your repositories, you always need to create at least one repository. This can either be done with the Subversion command line client or with TortoiseSVN."
msgstr ""

#: source/TortoiseSVN_en.xml:2727(para) 
msgid "If you haven't created a Subversion repository yet, it's time to do that now."
msgstr ""

#: source/TortoiseSVN_en.xml:2735(title) 
msgid "Repository Creation"
msgstr ""

#: source/TortoiseSVN_en.xml:2736(para) 
msgid "You can create a repository with the FSFS backend or with the old but stable Berkeley Database (BDB) format. The FSFS format is faster and it now works on network shares and Windows 98 without problems. The BDB format is more stable because it has been tested longer. Read <ulink url=\"http://svnbook.red-bean.com/en/1.1/ch05.html#svn-ch-5-sect-1.2.A\"><citetitle>Chapter 5, Repository Data-Stores</citetitle></ulink> in the SVN book for more information."
msgstr ""

#: source/TortoiseSVN_en.xml:2748(title) 
msgid "Creating a Repository with the Command Line Client"
msgstr ""

#: source/TortoiseSVN_en.xml:2750(primary) source/TortoiseSVN_en.xml:2791(primary) 
msgid "Create"
msgstr ""

#: source/TortoiseSVN_en.xml:2751(secondary) 
msgid "Command Line Client"
msgstr ""

#: source/TortoiseSVN_en.xml:2755(para) 
msgid "Create an empty folder with the name SVN (e.g. <filename>D:\\SVN\\</filename>), which is used as root for all your repositories."
msgstr ""

#: source/TortoiseSVN_en.xml:2762(para) 
msgid "Create another folder <filename>MyNewRepository</filename> inside <filename>D:\\SVN\\</filename>."
msgstr ""

#: source/TortoiseSVN_en.xml:2769(para) 
msgid "Open the command prompt (or DOS-Box), change into <filename>D:\\SVN\\</filename> and type <screen>\nsvnadmin create --fs-type bdb MyNewRepository\n</screen> or <screen>\nsvnadmin create --fs-type fsfs MyNewRepository\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:2782(para) 
msgid "Now you've got a new repository located at <filename>D:\\SVN\\MyNewRepository</filename>."
msgstr ""

#: source/TortoiseSVN_en.xml:2789(title) 
msgid "Creating The Repository With TortoiseSVN"
msgstr ""

#: source/TortoiseSVN_en.xml:2796(title) 
msgid "The TortoiseSVN menu for unversioned folders"
msgstr ""

#: source/TortoiseSVN_en.xml:2801(para) 
msgid "Open the windows explorer"
msgstr ""

#: source/TortoiseSVN_en.xml:2806(para) 
msgid "Create a new folder and name it e.g. <filename>SVNRepository</filename>"
msgstr ""

#: source/TortoiseSVN_en.xml:2812(para) 
msgid "<action>Right-click</action> on the newly created folder and select <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Create Repository here...</guimenuitem></menuchoice>."
msgstr ""

#: source/TortoiseSVN_en.xml:2820(para) 
msgid "A repository is then created inside the new folder. <emphasis>Don't edit those files yourself!!!</emphasis>. If you get any errors make sure that the folder is empty and not write protected."
msgstr ""

#: source/TortoiseSVN_en.xml:2831(title) 
msgid "Local Access to the Repository"
msgstr ""

#: source/TortoiseSVN_en.xml:2833(primary) 
msgid "Access"
msgstr ""

#: source/TortoiseSVN_en.xml:2836(primary) 
msgid "UNC paths"
msgstr ""

#: source/TortoiseSVN_en.xml:2838(para) 
msgid "To access your local repository you need the path to that folder. Just remember that Subversion expects all repository paths in the form <systemitem class=\"url\">file:///C:/SVNRepository/</systemitem>. Note the use of forward slashes throughout."
msgstr ""

#: source/TortoiseSVN_en.xml:2844(para) 
msgid "To access a repository located on a network share you can either use drive mapping, or you can use the UNC path. For UNC paths, the form is <systemitem class=\"url\">file://ServerName/path/to/repos/</systemitem>. Note that there are only 2 leading slashes here."
msgstr ""

#: source/TortoiseSVN_en.xml:2851(para) 
msgid "Prior to SVN 1.2, UNC paths had to be given in the more obscure form <systemitem class=\"url\">file:///\\ServerName/path/to/repos</systemitem>. This form is still supported, but not recommended."
msgstr ""

#: source/TortoiseSVN_en.xml:2869(para) 
msgid "If you really need to access a repository through a network share, create the repository with fsfs format. If you need to provide server access as well, you will need Subversion Server 1.1 or higher."
msgstr ""

#: source/TortoiseSVN_en.xml:2877(title) 
msgid "Repository Backup"
msgstr ""

#: source/TortoiseSVN_en.xml:2879(primary) 
msgid "backup"
msgstr ""

#: source/TortoiseSVN_en.xml:2881(para) 
msgid "Whichever type of repository you use, it is vitally important that you maintain regular backups, and that you verify the backup. If the server fails, you may be able to access a recent version of your files, but without the repository all your history is lost forever."
msgstr ""

#: source/TortoiseSVN_en.xml:2888(para) 
msgid "The simplest (but not recommended) way is just to copy the repository folder onto the backup medium. However, you have to be absolutely sure that no process is accessing the data. In this context, access means <emphasis>any</emphasis> access at all. A BDB repository is written to even when the operation only appears to require reading, such as getting status. If your repository is accessed at all during the copy, (web browser left open, WebSVN, etc.) the backup will be worthless."
msgstr ""

#: source/TortoiseSVN_en.xml:2898(para) 
msgid "The recommended method is to run <screen>\nsvnadmin hotcopy path/to/repository path/to/backup --clean-logs\n</screen> to create a copy of your repository in a safe manner. Then backup the copy. The <literal>--clean-logs</literal> option is not required, but removes any redundant log files when you backup a BDB repository, which may save some space."
msgstr ""

#: source/TortoiseSVN_en.xml:2908(para) 
msgid "The <literal>svnadmin</literal> tool is installed automatically when you install the Subversion command line client. If you are installing the command line tools on a Windows PC, the best way is to download the Windows installer version. It is compressed more efficiently than the <filename>.zip</filename> version, so the download is smaller, and it takes care of setting the paths for you. You can download the latest version of the Subversion command line client from <ulink url=\"http://subversion.tigris.org/servlets/ProjectDocumentList?folderID=91\"><citetitle>http://subversion.tigris.org/servlets/ProjectDocumentList?folderID=91</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:2923(title) 
msgid "Hook Scripts"
msgstr ""

#: source/TortoiseSVN_en.xml:2925(primary) 
msgid "hooks"
msgstr ""

#: source/TortoiseSVN_en.xml:2927(para) 
msgid "A hook script is a program triggered by some repository event, such as the creation of a new revision or the modification of an unversioned property. Each hook is handed enough information to tell what that event is, what target(s) it's operating on, and the username of the person who triggered the event. Depending on the hook's output or return status, the hook program may continue the action, stop it, or suspend it in some way. Please refer to the chapter on <ulink url=\"http://svnbook.red-bean.com/en/1.1/ch05s02.html#svn-ch-5-sect-2.1\"><citetitle>Hook Scripts</citetitle></ulink> in the Subversion Book for full details about the hooks which are implemented."
msgstr ""

#: source/TortoiseSVN_en.xml:2942(para) 
msgid "Sample hook scripts can be found in the <filename>hooks</filename> directory of the repository. These sample scripts are suitable for Unix/Linux servers but need to be modified if your server is Windows based. The hook can be a batch file or an executable. The sample below shows a batch file which might be used to implement a pre-revprop-change hook. <screen>\nrem Only allow log messages to be changed.\nif \"%4\" == \"svn:log\" exit 0\necho Property '%4' cannot be changed &gt;&amp;2\nexit 1\n</screen> Note that anything sent to stdout is discarded. if you want a message to appear in the Commit Reject dialog you must send it to stderr. In a batch file this is achieved using <filename>&gt;&amp;2</filename>"
msgstr ""

#: source/TortoiseSVN_en.xml:2962(title) 
msgid "Checkout Links"
msgstr ""

#: source/TortoiseSVN_en.xml:2964(primary) 
msgid "checkout link"
msgstr ""

#: source/TortoiseSVN_en.xml:2966(para) 
msgid "If you want to make your Subversion repository available to others you may want to include a link to it from your website. One way to make this more accessible is to include a <firstterm>checkout link</firstterm> for other TSVN users."
msgstr ""

#: source/TortoiseSVN_en.xml:2972(para) 
msgid "When you install TortoiseSVN, it registers a new <literal>tsvn:</literal> protocol. When a TSVN user clicks on such a link, the checkout dialog will open automatically with the repository URL already filled in."
msgstr ""

#: source/TortoiseSVN_en.xml:2978(para) 
msgid "To include such a link in your own html page, you need to add code which looks something like this: <screen>\n&lt;a href=\"tsvn:https://tortoisesvn.tigris.org/svn/tortoisesvn/trunk\"&gt;&lt;/a&gt;\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:2985(para) 
msgid "Of course it would look even better if you included a suitable picture. You can use the <ulink url=\"http://tortoisesvn.tigris.org/images/TortoiseCheckout.png\"><citetitle>TortoiseSVN logo</citetitle></ulink> or you can provide your own image. <screen>\n&lt;a href=\"tsvn:https://tortoisesvn.tigris.org/svn/tortoisesvn/trunk\"&gt;\n&lt;img src=TortoiseCheckout.png&gt;&lt;/a&gt;\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:3000(title) 
msgid "Daily Use Guide"
msgstr ""

#: source/TortoiseSVN_en.xml:3004(para) 
msgid "This document describes day to day usage of the TortoiseSVN client. It is <emphasis>not</emphasis> an introduction to version control systems, and <emphasis>not</emphasis> an introduction to Subversion (SVN). It is more like a place you may turn to when you know approximately what you want to do, but don't quite remember how to do it."
msgstr ""

#: source/TortoiseSVN_en.xml:3012(para) 
msgid "If you need an introduction to version control with Subversion, then we recommend you read the fantastic book: <ulink url=\"http://svnbook.red-bean.com/\"><citetitle>Subversion: The Definitive Guide</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:3019(para) 
msgid "This document is also a work in progress, just as TortoiseSVN and Subversion are. If you find any mistakes, please report them to the mailing list so we can update the documentation. Some of the screenshots in the Daily Use Guide (DUG) might not reflect the current state of the software. Please forgive us. We're working on TortoiseSVN in our free time."
msgstr ""

#: source/TortoiseSVN_en.xml:3030(para) 
msgid "You should have installed TortoiseSVN already."
msgstr ""

#: source/TortoiseSVN_en.xml:3035(para) 
msgid "You should be familiar with version control systems."
msgstr ""

#: source/TortoiseSVN_en.xml:3040(para) 
msgid "You should know the basics of Subversion."
msgstr ""

#: source/TortoiseSVN_en.xml:3045(para) 
msgid "You should have set up a server and/or have access to a Subversion repository."
msgstr ""

#: source/TortoiseSVN_en.xml:3056(title) 
msgid "Getting Started"
msgstr ""

#: source/TortoiseSVN_en.xml:3058(title) 
msgid "Context Menus"
msgstr ""

#: source/TortoiseSVN_en.xml:3060(primary) 
msgid "context menu"
msgstr ""

#: source/TortoiseSVN_en.xml:3064(title) 
msgid "Context menu for a directory under version control"
msgstr ""

#: source/TortoiseSVN_en.xml:3062(para) 
msgid "<placeholder-1/> All TortoiseSVN commands are invoked from the context menu of the windows explorer. Most are directly visible, when you <action>right click</action> on a file or folder. The commands that are available depend on whether the file or folder or its parent folder is under version control or not."
msgstr ""

#: source/TortoiseSVN_en.xml:3074(title) 
msgid "Drag and Drop"
msgstr ""

#: source/TortoiseSVN_en.xml:3076(primary) 
msgid "drag handler"
msgstr ""

#: source/TortoiseSVN_en.xml:3079(primary) 
msgid "drag-n-drop"
msgstr ""

#: source/TortoiseSVN_en.xml:3083(title) 
msgid "Right drag menu for a directory under version control"
msgstr ""

#: source/TortoiseSVN_en.xml:3081(para) 
msgid "<placeholder-1/> Other commands are available as drag handlers, when you <action>right drag</action> files or folders to a new location inside working copies or when you <action>right drag</action> a non-versioned file or folder into a directory which is under version control."
msgstr ""

#: source/TortoiseSVN_en.xml:3095(primary) 
msgid "authentication"
msgstr ""

#: source/TortoiseSVN_en.xml:3101(title) 
msgid "Authentication Dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:3109(para) 
msgid "<filename>svn.simple</filename> contains credentials for basic authentication (username/password)."
msgstr ""

#: source/TortoiseSVN_en.xml:3115(para) 
msgid "<filename>svn.ssl.server</filename> contains SSL server certificates."
msgstr ""

#: source/TortoiseSVN_en.xml:3121(para) 
msgid "<filename>svn.username</filename> contains credentials for username-only authentication (no password needed)."
msgstr ""

#: source/TortoiseSVN_en.xml:3097(para) 
msgid "If the repository that you are trying to access is password protected, an authentication Dialog will show up. <placeholder-1/> Enter your username and password. The checkbox will make TortoiseSVN store the credentials in Subversion's default directory: <filename>$APPDATA\\Subversion\\auth</filename> in three subdirectories: <placeholder-2/> There is one file for each server that you access, formatted as plain text, so you can use a text editor to check which server it applies to. If you want to make Subversion and TortoiseSVN (and any other Subversion client) forget your credentials for a particular server, you have to delete the corresponding file."
msgstr ""

#: source/TortoiseSVN_en.xml:3133(para) 
msgid "If you want to clear the authentication cache for <emphasis>all</emphasis> servers, you can do so from the <guilabel>General</guilabel> page of TortoiseSVN's settings dialog. That button will clear all cached auth data from the Subversion auth directories, as well as any auth data stored in the registry by earlier versions of TortoiseSVN. Refer to <xref linkend=\"tsvn-DUG-settings-main\"/>."
msgstr ""

#: source/TortoiseSVN_en.xml:3141(para) 
msgid "For more information on how to set up your server for authentication and access control, refer to <xref linkend=\"tsvn_serversetup\"/>"
msgstr ""

#: source/TortoiseSVN_en.xml:3147(para) 
msgid "If you have to authenticate against a Windows NT domain, enter your username including the domain name, like: <filename>MYDOMAIN/johnd</filename>."
msgstr ""

#: source/TortoiseSVN_en.xml:3156(title) 
msgid "Importing Data Into A Repository"
msgstr ""

#: source/TortoiseSVN_en.xml:3158(primary) 
msgid "import"
msgstr ""

#: source/TortoiseSVN_en.xml:3161(primary) source/TortoiseSVN_en.xml:9920(glossterm) 
msgid "Repository"
msgstr ""

#: source/TortoiseSVN_en.xml:3165(title) 
msgid "Repository Layout"
msgstr ""

#: source/TortoiseSVN_en.xml:3166(para) 
msgid "Before you import your data into the repository you should first think about how you want to organize your data. If you use one of the recommended layouts you will later have it much easier."
msgstr ""

#: source/TortoiseSVN_en.xml:3172(para) 
msgid "There are some standard, recommended ways to organize a repository. Most people create a <filename>trunk</filename> directory to hold the \"main line\" of development, a <filename>branches</filename> directory to contain branch copies, and a <filename>tags</filename> directory to contain tag copies. If a repository holds only one project, then often people create these top-level directories:"
msgstr ""

#: source/TortoiseSVN_en.xml:3181(screen) 
#, no-wrap
msgid "\n/trunk\n/branches\n/tags\n"
msgstr ""

#: source/TortoiseSVN_en.xml:3186(para) 
msgid "If a repository contains multiple projects, people often index their layout by branch:"
msgstr ""

#: source/TortoiseSVN_en.xml:3190(screen) 
#, no-wrap
msgid "\n/trunk/paint\n/trunk/calc\n/branches/paint\n/branches/calc\n/tags/paint\n/tags/calc\n"
msgstr ""

#: source/TortoiseSVN_en.xml:3198(para) 
msgid "...or by project:"
msgstr ""

#: source/TortoiseSVN_en.xml:3201(screen) 
#, no-wrap
msgid "\n/paint/trunk\n/paint/branches\n/paint/tags\n/calc/trunk\n/calc/branches\n/calc/tags\n"
msgstr ""

#: source/TortoiseSVN_en.xml:3209(para) 
msgid "Indexing by project makes sense if the projects are not closely related and each one is checked out individually. For related projects where you may want to check out all projects in one go, or where the projects are all tied together in a single distribution package, it is often better to index by branch. This way you have only one trunk to checkout, and the relationships between the sub-projects is more easily visible."
msgstr ""

#: source/TortoiseSVN_en.xml:3217(para) 
msgid "If you adopt a top level <filename>/trunk /tags /branches</filename> approach, there is nothing to say that you have to copy the entire trunk for every branch and tag, and in some ways this structure offers the most flexibility."
msgstr ""

#: source/TortoiseSVN_en.xml:3223(para) 
msgid "For unrelated projects you may prefer to use separate repositories. When you commit changes, it is the revision number of the whole repository which changes, not the revision number of the project. Having 2 unrelated projects share a repository can mean large gaps in the revision numbers. The Subversion and TortoiseSVN projects appear at the same host address, but are completely separate repositories allowing independent development, and no confusion over build numbers."
msgstr ""

#: source/TortoiseSVN_en.xml:3233(para) 
msgid "Of course, you're free to ignore these common layouts. You can create any sort of variation, whatever works best for you or your team. Remember that whatever you choose, it's not a permanent commitment. You can reorganize your repository at any time. Because branches and tags are ordinary directories, TortoiseSVN can move or rename them however you wish."
msgstr ""

#: source/TortoiseSVN_en.xml:3241(para) 
msgid "Switching from one layout to another is just a matter of issuing a series of server-side moves; If you don't like the way things are organized in the repository, just juggle the directories around."
msgstr ""

#: source/TortoiseSVN_en.xml:3252(para) 
msgid "create a new empty folder on your hard drive"
msgstr ""

#: source/TortoiseSVN_en.xml:3257(para) 
msgid "create your desired top-level folder structure inside that folder - don't put any files in it yet!"
msgstr ""

#: source/TortoiseSVN_en.xml:3263(para) 
msgid "import this structure into the repository via a <action>right click</action> on the folder and selecting <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Import...</guimenuitem></menuchoice> This will import your temp folder into the repository root to create the basic repository layout."
msgstr ""

#: source/TortoiseSVN_en.xml:3247(para) 
msgid "So if you haven't already created a basic folder structure inside your repository you should do that now: <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:3278(para) 
msgid "Note that the name of the folder you are importing does not appear in the repository, only its contents. For example, create the following folder structure: <screen>\nC:\\Temp\\New\\trunk\nC:\\Temp\\New\\branches\nC:\\Temp\\New\\tags\n</screen> Import <filename>C:\\Temp\\New</filename> into the repository root, which will then look like this: <screen>\n/trunk\n/branches\n/tags\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:3295(para) 
msgid "You can also use the repository browser to create new folders directly in the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:3301(title) source/TortoiseSVN_en.xml:9827(title) 
msgid "Import"
msgstr ""

#: source/TortoiseSVN_en.xml:3303(primary) 
msgid "temporary files"
msgstr ""

#: source/TortoiseSVN_en.xml:3309(para) 
msgid "Remove all files which are not needed to build the project (temporary files, files which are generated by a compiler e.g. *.obj, compiled binaries, ...)"
msgstr ""

#: source/TortoiseSVN_en.xml:3317(para) 
msgid "Organize the files in folders and subfolders. Although it is possible to rename/move files later it is highly recommended to get your project's structure straight before importing!"
msgstr ""

#: source/TortoiseSVN_en.xml:3305(para) 
msgid "Before you import your project into a repository you should: <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:3337(title) 
msgid "The Import dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:3326(para) 
msgid "Now select the top-level folder of your project directory structure in the windows explorer and <action>right click</action> to open the context menu. Select the command <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Import...</guimenuitem></menuchoice> which brings up a dialog box: <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:3341(para) 
msgid "In this dialog you have to enter the URL of the repository into which you want to import your project."
msgstr ""

#: source/TortoiseSVN_en.xml:3345(para) 
msgid "The import message is used as a log message. Since you usually just started your project a default <literal>initial import</literal> is filled in by TortoiseSVN."
msgstr ""

#: source/TortoiseSVN_en.xml:3351(primary) source/TortoiseSVN_en.xml:7301(primary) 
msgid "exclude pattern"
msgstr ""

#: source/TortoiseSVN_en.xml:3354(para) 
msgid "Files or directories which match the <guilabel>exclude pattern</guilabel> are <emphasis>not</emphasis> imported."
msgstr ""

#: source/TortoiseSVN_en.xml:3360(para) 
msgid "As soon as you press <guibutton>OK</guibutton> TortoiseSVN imports the complete directory tree including all files into the repository. As before, the name of the folder you import does not appear in the repository, only the folder contents. The project is now stored in the repository under version control. Please note that the folder you imported is <emphasis>NOT</emphasis> under version control! To get a version-controlled <firstterm>working copy</firstterm> you need to do a Checkout of the version you just imported."
msgstr ""

#: source/TortoiseSVN_en.xml:3373(title) 
msgid "Special Files"
msgstr ""

#: source/TortoiseSVN_en.xml:3375(primary) 
msgid "special files"
msgstr ""

#: source/TortoiseSVN_en.xml:3377(para) 
msgid "Sometimes you need to have a file under version control which contains user specific data. That means you have a file which every developer/user needs to modify to suit his/her local setup. But versioning such a file is difficult because every user would commit his/her changes every time to the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:3384(para) 
msgid "In such cases we suggest to use <literal>template</literal> files. You create a file which contains all the data your developers will need, add that file to version control and let the developers check this file out. Then, each developer has to <emphasis>make a copy</emphasis> of that file and rename that copy. After that, modifying the copy is not a problem anymore."
msgstr ""

#: source/TortoiseSVN_en.xml:3392(para) 
msgid "As an example, you can have a look at TortoiseSVN's build script. It calls a file named <filename>TortoiseVars.bat</filename> which doesn't exist in the repository. Only the file <filename>TortoiseVars.tmpl</filename>. <filename>TortoiseVars.tmpl</filename> is the template file which every developer has to create a copy from and rename that file to <filename>TortoiseVars.bat</filename>. Inside that file, we added comments so that the users will see which lines they have to edit and change according to their local setup to get it working."
msgstr ""

#: source/TortoiseSVN_en.xml:3403(para) 
msgid "So as not to disturb the users, we also added the file <filename>TortoiseVars.bat</filename> to the ignore list of its parent folder, i.e. we've set the Subversion property <literal>svn:ignored</literal> to include that filename. That way it won't show up as unversioned on every commit."
msgstr ""

#: source/TortoiseSVN_en.xml:3412(title) 
msgid "Referenced Projects"
msgstr ""

#: source/TortoiseSVN_en.xml:3414(primary) 
msgid "external repositories"
msgstr ""

#: source/TortoiseSVN_en.xml:3417(primary) 
msgid "externals"
msgstr ""

#: source/TortoiseSVN_en.xml:3419(para) 
msgid "Sometimes it is useful to construct a working copy that is made out of a number of different checkouts. For example, you may want different subdirectories to come from different locations in a repository, or perhaps from different repositories altogether. If you want every user to have the same layout, you can define the <literal>svn:externals</literal> properties."
msgstr ""

#: source/TortoiseSVN_en.xml:3427(para) 
msgid "Let's say you check out a working copy of <filename>/project1</filename> to <filename>D:\\dev\\project1</filename>. Select the folder <filename>D:\\dev\\project1</filename>, <action>right click</action> and choose <menuchoice><guimenu>Windows Menu</guimenu><guimenuitem>Properties</guimenuitem></menuchoice> from the context menu. The Properties Dialog comes up. Then go to the Subversion tab. There, you can set properties. Select the <literal>svn:externals</literal> property from the combobox and write in the edit box the repository url in the format <literal>name url</literal> or if you want to specify a particular revision, <literal>name -rREV url</literal> You can add multiple external projects, 1 per line. Note that URLs and filenames must be properly escaped or they will not work properly. For example you must replace each space with <literal>%20</literal>. Suppose that you have set these properties on <filename>D:\\dev\\project1</filename>: <screen>\nsounds   http://sounds.red-bean.com/repos\nquick%20graphs  http://graphics.red-bean.com/repos/fast%20graphics\nskins/toolkit -r21 http://svn.red-bean.com/repos/skin-maker\n</screen> Now click <guibutton>Set</guibutton> and commit your changes. When you (or any other user) update your working copy, Subversion will create a subfolder <filename>D:\\dev\\project1\\sounds</filename> and checkout the sounds project, another subfolder <filename>D:\\dev\\project1\\quick graphs</filename> containing the graphics project, and finally a nested subfolder <filename>D:\\dev\\project1\\skins\\toolkit</filename> containing revision 21 of the skin-maker project."
msgstr ""

#: source/TortoiseSVN_en.xml:3465(para) source/TortoiseSVN_en.xml:8767(para) 
msgid "If the external project is in the same repository, any changes you make there there will be included in the commit list when you commit your main project."
msgstr ""

#: source/TortoiseSVN_en.xml:3470(para) source/TortoiseSVN_en.xml:8772(para) 
msgid "If the external project is in a different repository, any changes you make to the external project will be notified when you commit the main project, but you have to commit those external changes separately."
msgstr ""

#: source/TortoiseSVN_en.xml:3476(para) 
msgid "Note that if you change the URL in an <literal>svn:externals</literal> property, then next time you update your working copy Subversion will delete the old external folder and make a fresh checkout, so you will see files being <literal>Added</literal>, rather than being <literal>Updated</literal> as you might have expected. This situation might occur if you reference a tag from another project. When a new version of that project is released, you change your external reference to point to the new tag."
msgstr ""

#: source/TortoiseSVN_en.xml:3487(para) 
msgid "You should strongly consider using explicit revision numbers in all of your externals definitions. Doing so means that you get to decide when to pull down a different snapshot of external information, and exactly which snapshot to pull. Besides the common sense aspect of not being surprised by changes to third-party repositories that you might not have any control over, using explicit revision numbers also means that as you backdate your working copy to a previous revision, your externals definitions will also revert to the way they looked in that previous revision, which in turn means that the external working copies will be updated to match they way <emphasis>they</emphasis> looked back when your repository was at that previous revision. For software projects, this could be the difference between a successful and a failed build of an older snapshot of your complex codebase."
msgstr ""

#: source/TortoiseSVN_en.xml:3505(para) 
msgid "URLs in <literal>svn:externals</literal> definitions are absolute. You cannot use relative URLs. If you relocate your working copy, or if the external repository is relocated, these URLs will not be updated automatically. Also, if you branch a project which has external references within the same repository, the URLs in the branched copy will be unchanged; you may then want to change trunk references to branch references instead."
msgstr ""

#: source/TortoiseSVN_en.xml:3514(para) 
msgid "If you need more information how TortoiseSVN handles Properties read <xref linkend=\"tsvn-DUG-propertypage\"/>."
msgstr ""

#: source/TortoiseSVN_en.xml:3518(para) 
msgid "To find out about different methods of accessing common sub-projects read <xref linkend=\"tsvn-howto-common-projects\"/>."
msgstr ""

#: source/TortoiseSVN_en.xml:3525(title) 
msgid "Checking Out A Working Copy"
msgstr ""

#: source/TortoiseSVN_en.xml:3527(primary) 
msgid "checkout"
msgstr ""

#: source/TortoiseSVN_en.xml:3530(para) 
msgid "To obtain a working copy you need to do a <firstterm>checkout</firstterm> from a repository."
msgstr ""

#: source/TortoiseSVN_en.xml:3544(title) 
msgid "The Checkout dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:3534(para) 
msgid "Select a directory in windows explorer where you want to place your working copy. <action>Right click</action> to pop up the context menu and select the command <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Checkout...</guimenuitem></menuchoice>, which brings up the following dialog box: <placeholder-1/> If you enter a folder name that does not yet exist, then a directory with that name is created."
msgstr ""

#: source/TortoiseSVN_en.xml:3551(para) 
msgid "You should only check out into an empty directory. If you want to check out your source tree into the same directory that you imported from, Subversion will throw an error message because it will not overwrite the existing unversioned files with versioned ones. You will have to check out into a different directory or delete the existing sourcetree first."
msgstr ""

#: source/TortoiseSVN_en.xml:3560(para) 
msgid "If you want to check out the top level folder only and omit all sub-folders, use the <guilabel>Only check out the top folder</guilabel> checkbox."
msgstr ""

#: source/TortoiseSVN_en.xml:3564(para) 
msgid "If the project contains references to external projects which you do <emphasis>not</emphasis> want checked out at the same time, use the <guilabel>Omit externals</guilabel> checkbox."
msgstr ""

#: source/TortoiseSVN_en.xml:3570(para) 
msgid "If either of these options are checked, you will have to perform updates to your working copy using <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Update to Revision...</guimenuitem></menuchoice> instead of <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Update</guimenuitem></menuchoice>. The standard update will include all sub-folders and all externals."
msgstr ""

#: source/TortoiseSVN_en.xml:3585(para) 
msgid "It is recommended that you check out only the <literal>trunk</literal> part of the directory tree. If you specify the parent path of the directory tree in the URL then you might end up with a full hard disk since you will get a copy of the entire repository tree including every branch and tag of your project!"
msgstr ""

#: source/TortoiseSVN_en.xml:3593(title) 
msgid "Exporting"
msgstr ""

#: source/TortoiseSVN_en.xml:3595(primary) 
msgid "export"
msgstr ""

#: source/TortoiseSVN_en.xml:3597(para) 
msgid "Sometimes you may want a copy without any of those <filename>.svn</filename> directories, e.g. to create a zipped tarball of your source. Instead of making a copy and then delete all those <filename>.svn</filename> directories manually, TortoiseSVN offers the command <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Export...</guimenuitem></menuchoice>. If you execute this command on your working copy you'll be asked for a place to save the <literal>clean</literal> working copy without the <filename>.svn</filename> folders. Also, you can specify if you want to export <emphasis>all</emphasis> files or just the versioned files."
msgstr ""

#: source/TortoiseSVN_en.xml:3614(para) 
msgid "Another way to do an export is by right-dragging a working copy folder to another location and choose <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Subversion export here</guimenuitem></menuchoice> or <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Subversion export all here</guimenuitem></menuchoice>"
msgstr ""

#: source/TortoiseSVN_en.xml:3630(title) 
msgid "Sending Your Changes To The Repository"
msgstr ""

#: source/TortoiseSVN_en.xml:3632(primary) 
msgid "commit"
msgstr ""

#: source/TortoiseSVN_en.xml:3635(para) 
msgid "Sending the changes you made to your working copy is known as <firstterm>committing</firstterm> the changes. But before you commit you have to make sure that your working copy is up to date. You can either use <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Update</guimenuitem></menuchoice> directly. Or you can use <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Check for Modifications</guimenuitem></menuchoice> first, to see which files have changed locally or on the server."
msgstr ""

#: source/TortoiseSVN_en.xml:3660(title) 
msgid "The Commit dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:3651(para) 
msgid "If your working copy is up to date and there are no conflicts, you are ready to commit your changes. Select any file and/or folders you want to commit, then <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Commit...</guimenuitem></menuchoice>. <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:3664(para) 
msgid "The commit dialog will show you every changed file, including added, deleted and unversioned files. If you don't want a changed file to be committed, just uncheck that file. If you want to include an unversioned file, just check that file to add it to the commit."
msgstr ""

#: source/TortoiseSVN_en.xml:3672(title) 
msgid "Commit files or folders?"
msgstr ""

#: source/TortoiseSVN_en.xml:3673(para) 
msgid "When you commit files, the commit dialog shows only the files you have selected. When you commit a folder the commit dialog will select the changed files automatically. If you forget about a new file you created, committing the folder will find it anyway. Committing a folder does <emphasis>not</emphasis> mean that every file gets marked as changed; It just makes your life easier by doing more work for you."
msgstr ""

#: source/TortoiseSVN_en.xml:3683(para) 
msgid "If you have modified files which have been included from a different repository using <literal>svn:externals</literal>, those changes cannot be included in the same atomic commit. A warning symbol below the file list tells you if this has happened, and the tooltip explains that those external files have to be committed separately."
msgstr ""

#: source/TortoiseSVN_en.xml:3691(title) 
msgid "Many unversioned files in the commit dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:3698(para) 
msgid "add the file (or a wildcard extension) to the list of files to exclude on the settings page. This will affect every working copy you have."
msgstr ""

#: source/TortoiseSVN_en.xml:3705(para) 
msgid "add the file to the <literal>svn:ignore</literal> list using <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Add to ignore list</guimenuitem></menuchoice> This will only affect the directory on which you set the <literal>svn:ignore</literal> property. Using the SVN Property Dialog, you can alter the <literal>svn:ignore</literal> property for a directory."
msgstr ""

#: source/TortoiseSVN_en.xml:3692(para) 
msgid "If you think that the TSVN commit dialog shows you too many unversioned (e.g. compiler generated or editor backup) files, there are several ways to handle this. You can: <placeholder-1/> Read <xref linkend=\"tsvn-DUG-ignore\"/> for more information."
msgstr ""

#: source/TortoiseSVN_en.xml:3722(para) 
msgid "<action>Doubleclicking</action> on any modified file in the commit dialog will launch the external diff tool to show your changes. The context menu will give you more options, as shown in the screenshot."
msgstr ""

#: source/TortoiseSVN_en.xml:3727(para) 
msgid "Be sure to enter a log message which describes the changes you are committing. This will help you to see what happened and when, as you browse through the project log messages at a later date. The message can be as long or as brief as you like; many projects have guidelines for what should be included, the language to use, and sometimes even a strict format."
msgstr ""

#: source/TortoiseSVN_en.xml:3737(title) 
msgid "The Commit Dialog Spellchecker"
msgstr ""

#: source/TortoiseSVN_en.xml:3735(para) 
msgid "<placeholder-1/> TortoiseSVN includes a spellchecker to help you get your log messages right. This will highlight any mis-spelled words. Use the context menu to access the suggested corrections. Of course, it doesn't know <emphasis>every</emphasis> technical term that you do, so correctly spelt words will sometimes show up as errors. But don't worry. You can just add them to your personal dictionary using the context menu."
msgstr ""

#: source/TortoiseSVN_en.xml:3751(title) 
msgid "The Progress dialog showing a commit in progress"
msgstr ""

#: source/TortoiseSVN_en.xml:3747(para) 
msgid "After pressing <guibutton>OK</guibutton>, a dialog appears displaying the progress of the commit. <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:3760(term) source/TortoiseSVN_en.xml:4294(term) 
msgid "Blue"
msgstr ""

#: source/TortoiseSVN_en.xml:3762(para) 
msgid "Committing a modification."
msgstr ""

#: source/TortoiseSVN_en.xml:3768(term) source/TortoiseSVN_en.xml:3848(term) source/TortoiseSVN_en.xml:4302(term) 
msgid "Purple"
msgstr ""

#: source/TortoiseSVN_en.xml:3770(para) 
msgid "Committing a new addition."
msgstr ""

#: source/TortoiseSVN_en.xml:3776(term) source/TortoiseSVN_en.xml:3856(term) source/TortoiseSVN_en.xml:4314(term) 
msgid "Dark red"
msgstr ""

#: source/TortoiseSVN_en.xml:3778(para) 
msgid "Committing a deletion or a replacement."
msgstr ""

#: source/TortoiseSVN_en.xml:3784(term) source/TortoiseSVN_en.xml:3883(term) source/TortoiseSVN_en.xml:4342(term) 
msgid "Black"
msgstr ""

#: source/TortoiseSVN_en.xml:3786(para) 
msgid "All other items."
msgstr ""

#: source/TortoiseSVN_en.xml:3755(para) 
msgid "The progress dialog uses colour coding to highlight different commit actions <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:3793(para) source/TortoiseSVN_en.xml:3893(para) source/TortoiseSVN_en.xml:4351(para) 
msgid "This is the default colour scheme, but you can customise those colours using the settings dialog. Read <xref linkend=\"tsvn-DUG-settings-colours\"/> for more information."
msgstr ""

#: source/TortoiseSVN_en.xml:3799(title) 
msgid "Special Folder Properties"
msgstr ""

#: source/TortoiseSVN_en.xml:3800(para) 
msgid "There are several special folder properties which can be used to help give more control over the formatting of commit log messages and the language used by the spellchecker module. Read <xref linkend=\"tsvn-DUG-propertypage\"/> for further information."
msgstr ""

#: source/TortoiseSVN_en.xml:3808(title) 
msgid "Integration with Bugtracking Tools"
msgstr ""

#: source/TortoiseSVN_en.xml:3809(para) 
msgid "If you have activated the bugtracking system, you could set one or more Issues in the <guilabel>Bug-ID / Issue-Nr:</guilabel> Textfield. Several Issues should be comma separated. Learn more <xref linkend=\"tsvn-DUG-bugtracker\"/>."
msgstr ""

#: source/TortoiseSVN_en.xml:3817(title) 
msgid "Update Your Working Copy With Changes From Others"
msgstr ""

#: source/TortoiseSVN_en.xml:3819(primary) source/TortoiseSVN_en.xml:8525(primary) 
msgid "update"
msgstr ""

#: source/TortoiseSVN_en.xml:3823(title) 
msgid "Progress dialog showing finished update"
msgstr ""

#: source/TortoiseSVN_en.xml:3821(para) 
msgid "<placeholder-1/> Periodically, you should ensure that changes done by others get incorporated in your local working copy. The process of getting changes from the server to your local copy is known as <literal>updating</literal>. Updating may be done on single files, a set of selected files, or recursively on entire directory hierarchies. To update, select the files and/or directories you want, <action>right click</action> and select <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Update</guimenuitem></menuchoice> in the explorer context menu. A window will pop up displaying the progress of the update as it runs. Changes done by others will be merged into your files, keeping any changes you may have done to the same files. The repository is <emphasis>not</emphasis> affected by an update."
msgstr ""

#: source/TortoiseSVN_en.xml:3850(para) 
msgid "New item added to your WC."
msgstr ""

#: source/TortoiseSVN_en.xml:3858(para) 
msgid "Redundant item deleted from your WC, or missing item replaced in your WC."
msgstr ""

#: source/TortoiseSVN_en.xml:3865(term) source/TortoiseSVN_en.xml:4322(term) 
msgid "Green"
msgstr ""

#: source/TortoiseSVN_en.xml:3867(para) 
msgid "Changes from repository successfully merged with your local changes."
msgstr ""

#: source/TortoiseSVN_en.xml:3874(term) source/TortoiseSVN_en.xml:4332(term) 
msgid "Bright red"
msgstr ""

#: source/TortoiseSVN_en.xml:3876(para) 
msgid "Changes from repository merged with local changes, resulting in conflicts which you need to resolve."
msgstr ""

#: source/TortoiseSVN_en.xml:3885(para) 
msgid "Unchanged item in your WC updated with newer version from the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:3843(para) 
msgid "The progress dialog uses colour coding to highlight different update actions <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:3898(para) 
msgid "If you get any <literal>conflicts</literal> during an update (this can happen if others changed the same lines in the same file as you did and those changes don't match) then the dialog shows those conflicts in red. You can <action>double click</action> on these lines to start the external merge tool to resolve the conflicts."
msgstr ""

#: source/TortoiseSVN_en.xml:3906(para) 
msgid "The standard Update command has no options and just updates your working copy to the HEAD revision of the repository, which is the most common use case. If you want more control over the update process, you should use <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Update to Revision...</guimenuitem></menuchoice> instead. This allows you to update your working copy to a specific revision, not only to the most recent one. Suppose your working copy is at revision 100, but you want it to reflect the state which it had in revision 50 - then simply update to revision 50. In the same dialog you can also choose to update the current folder non-recursively (without all the subfolders) and you can choose whether to ignore any external projects in the update (i.e. projects referenced using <literal>svn:externals</literal>)."
msgstr ""

#: source/TortoiseSVN_en.xml:3926(para) 
msgid "If you update a file or folder to a specific revision, you should not make changes to those files. You will get <literal>out of date</literal> error messages when you try to commit them! If you want to undo changes to a file and start afresh from an earlier revision, you can rollback to a previous revision from the revision log dialog. Take a look at <xref linkend=\"tsvn-howto-rollback\"/> for further instructions, and alternative methods."
msgstr ""

#: source/TortoiseSVN_en.xml:3936(para) 
msgid "<menuchoice><guimenuitem>Update to Revision</guimenuitem></menuchoice> can occasionally be useful to see what your project looked like at some earlier point in its history. But in general, updating individual files to an earlier revision is not a good idea as it leaves your working copy in an inconsistent state. If the file you are updating has changed name, you may even find that the file just disappears from your working copy because no file of that name existed in the earlier revision. If you simply want a local copy of an old version of a file it is better to use the <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Save revision to...</guimenuitem></menuchoice> command from the log dialog for that file."
msgstr ""

#: source/TortoiseSVN_en.xml:3955(title) 
msgid "Multiple Files/Folders"
msgstr ""

#: source/TortoiseSVN_en.xml:3956(para) 
msgid "If you select multiple files and folders in the explorer and then select <menuchoice><guimenuitem>Update</guimenuitem></menuchoice>, all of those files/folders are updated one by one. TortoiseSVN makes sure that all files/folders which are from the same repository are updated to the exact same revision! Even if between those updates another commit occurred."
msgstr ""

#: source/TortoiseSVN_en.xml:3968(title) 
msgid "Local File Already Exists"
msgstr ""

#: source/TortoiseSVN_en.xml:3969(para) 
msgid "Sometimes when you try to update, the update fails with a message to say that there is already a local file of the same name. This typically happens when Subversion tries to checkout a newly versioned file, and finds that an unversioned file of the same name already exists in your working folder. Subversion will never overwrite an unversioned file - it might contain something you are working on, which coincidentally has the same filename as another developer has used for his newly committed file."
msgstr ""

#: source/TortoiseSVN_en.xml:3978(para) 
msgid "If you get this error message, the solution is simply to rename the local unversioned file. After completing the update, you can check whether the renamed file is still needed."
msgstr ""

#: source/TortoiseSVN_en.xml:3983(para) 
msgid "If you keep getting error messages, use <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Check for Modifications</guimenuitem></menuchoice> instead to list all the problem files. That way you can deal with them all at once."
msgstr ""

#: source/TortoiseSVN_en.xml:3996(title) 
msgid "Resolving Conflicts"
msgstr ""

#: source/TortoiseSVN_en.xml:3998(primary) 
msgid "conflict"
msgstr ""

#: source/TortoiseSVN_en.xml:4021(term) 
msgid "filename.ext.mine"
msgstr ""

#: source/TortoiseSVN_en.xml:4023(para) 
msgid "This is your file as it existed in your working copy before you updated your working copy - that is, without conflict markers. This file has your latest changes in it and nothing else."
msgstr ""

#: source/TortoiseSVN_en.xml:4032(term) 
msgid "filename.ext.rOLDREV"
msgstr ""

#: source/TortoiseSVN_en.xml:4034(para) 
msgid "This is the file that was the BASE revision before you updated your working copy. That is, it the file that you checked out before you made your latest edits."
msgstr ""

#: source/TortoiseSVN_en.xml:4043(term) 
msgid "filename.ext.rNEWREV"
msgstr ""

#: source/TortoiseSVN_en.xml:4045(para) 
msgid "This is the file that your Subversion client just received from the server when you updated your working copy. This file corresponds to the HEAD revision of the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:4000(para) 
msgid "Once in a while, you will get a <emphasis>conflict</emphasis> when you update your files from the repository. A conflict occurs when two or more developers have changed the same few lines of a file. As Subversion knows nothing of your project, it leaves resolving the conflicts to the developers. Whenever a conflict is reported, you should open the file in question, and search for lines starting with the string <literal>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</literal>. The conflicting area is marked like this: <screen>\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; filename\n    your changes\n=======\n    code merged from repository\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; revision\n</screen> Also, for every conflicted file Subversion places three additional files in your directory: <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:4055(para) 
msgid "You can either launch an external merge tool / conflict editor with <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Edit Conflicts</guimenuitem></menuchoice> or you can use any other editor to manually resolve the conflict. You should decide what the code should look like, do the necessary changes and save the file."
msgstr ""

#: source/TortoiseSVN_en.xml:4066(para) 
msgid "Afterwards execute the command <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Resolved</guimenuitem></menuchoice> and commit your modifications to the repository. Please note that the Resolve command does not really resolve the conflict. It just removes the <filename>filename.ext.mine</filename> and <filename>filename.ext.r*</filename> files, to allow you to commit your changes."
msgstr ""

#: source/TortoiseSVN_en.xml:4079(para) 
msgid "If you have conflicts with binary files, Subversion does not attempt to merge the files itself. The local file remains unchanged (exactly as you last changed it) and you have <filename>filename.ext.r*</filename> files. If you want to discard your changes and keep the repository version, just use the Revert command. If you want to keep your version and overwrite the repository version, use the Resolved command, then commit your version."
msgstr ""

#: source/TortoiseSVN_en.xml:4089(para) 
msgid "You can use the Resolved command for multiple files if you right click on the parent folder and select <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Resolved...</guimenuitem></menuchoice> This will bring up a dialog listing all conflicted files in that folder, and you can select which ones to mark as resolved."
msgstr ""

#: source/TortoiseSVN_en.xml:4102(title) 
msgid "Getting Status Information"
msgstr ""

#: source/TortoiseSVN_en.xml:4104(primary) source/TortoiseSVN_en.xml:4260(primary) 
msgid "status"
msgstr ""

#: source/TortoiseSVN_en.xml:4106(para) 
msgid "While you are working on your working copy you often need to know which files you have changed/added/removed or renamed, or even which files got changed and committed by others."
msgstr ""

#: source/TortoiseSVN_en.xml:4112(title) 
msgid "Icon Overlays"
msgstr ""

#: source/TortoiseSVN_en.xml:4114(primary) 
msgid "overlays"
msgstr ""

#: source/TortoiseSVN_en.xml:4118(title) 
msgid "Explorer showing icon overlays"
msgstr ""

#: source/TortoiseSVN_en.xml:4122(para) 
msgid "Now that you have checked out a working copy from a Subversion repository you can see your files in the windows explorer with changed icons. This is one of the reasons why TortoiseSVN is so popular. TortoiseSVN adds a so called overlay icon to each file icon which overlaps the original file icon. Depending on the Subversion status of the file the overlay icon is different."
msgstr ""

#: source/TortoiseSVN_en.xml:4130(para) 
msgid "<graphic fileref=\"../images/InSubVersionIcon.png\"/> A fresh checked out working copy has a green checkmark as overlay. That means the Subversion status is <literal>normal</literal>."
msgstr ""

#: source/TortoiseSVN_en.xml:4135(para) 
msgid "<graphic fileref=\"../images/ModifiedIcon.png\"/> As soon as you start editing a file, the status changes to <literal>modified</literal> and the icon overlay then changes to a red exclamation mark. That way you can easily see which files were changed since you last updated your working copy and need to be committed."
msgstr ""

#: source/TortoiseSVN_en.xml:4143(para) 
msgid "<graphic fileref=\"../images/ConflictIcon.png\"/> If during an update a <literal>conflict</literal> occurs then the icon changes to a yellow exclamation mark."
msgstr ""

#: source/TortoiseSVN_en.xml:4148(para) 
msgid "<graphic fileref=\"../images/ReadOnlyIcon.png\"/> If you have set the <literal>svn:needs-lock</literal> property on a file, Subversion makes that file read-only until you get a lock on that file. Read-only files have this overlay to indicate that you have to get a lock first before you can edit that file."
msgstr ""

#: source/TortoiseSVN_en.xml:4155(para) 
msgid "<graphic fileref=\"../images/LockedIcon.png\"/> If you hold a lock on a file, and the Subversion status is <literal>normal</literal>, this icon overlay reminds you that you should release the lock if you are not using it to allow others to commit their changes to the file."
msgstr ""

#: source/TortoiseSVN_en.xml:4162(para) 
msgid "<graphic fileref=\"../images/DeletedIcon.png\"/> This icon shows you that some files or folders inside the current folder have been scheduled to be <literal>deleted</literal> from version control or a file under version control is missing in a folder."
msgstr ""

#: source/TortoiseSVN_en.xml:4168(para) 
msgid "<graphic fileref=\"../images/AddedIcon.png\"/> The plus sign tells you that a file or folder has been scheduled to be <literal>added</literal> to version control."
msgstr ""

#: source/TortoiseSVN_en.xml:4173(para) 
msgid "Unlike TortoiseCVS (the CVS shell integration) no overlay icon for unversioned files is shown. We do this because the number of icon overlays are limited system wide and should be used economically."
msgstr ""

#: source/TortoiseSVN_en.xml:4179(para) 
msgid "In fact, you may find that not all of these icons are used on your system. This is because the number of overlays allowed by Windows is limited to 15. Windows uses 4 of those, and the remaining 11 can be used by other applications. If you are also using TortoiseCVS, then there are not enough overlay slots available, so TortoiseSVN tries to be a <quote>Good Citizen (TM)</quote> and limits its use of overlays to give other apps a chance."
msgstr ""

#: source/TortoiseSVN_en.xml:4189(para) 
msgid "<literal>Normal</literal>, <literal>Modified</literal> and <literal>Conflicted</literal> are always loaded and visible."
msgstr ""

#: source/TortoiseSVN_en.xml:4197(para) 
msgid "<literal>Deleted</literal> is loaded if possible, but falls back to <literal>Modified</literal> if there are not enough slots."
msgstr ""

#: source/TortoiseSVN_en.xml:4204(para) 
msgid "<literal>ReadOnly</literal> is loaded if possible, but falls back to <literal>Normal</literal> if there are not enough slots."
msgstr ""

#: source/TortoiseSVN_en.xml:4211(para) 
msgid "<literal>Locked</literal> is only loaded if there are fewer than 13 overlays already loaded. It falls back to <literal>Normal</literal> if there are not enough slots."
msgstr ""

#: source/TortoiseSVN_en.xml:4219(para) 
msgid "<literal>Added</literal> is only loaded if there are fewer than 14 overlays already loaded. It falls back to <literal>Modified</literal> if there are not enough slots."
msgstr ""

#: source/TortoiseSVN_en.xml:4229(title) 
msgid "TortoiseSVN Columns In Windows Explorer"
msgstr ""

#: source/TortoiseSVN_en.xml:4231(primary) 
msgid "Explorer Columns"
msgstr ""

#: source/TortoiseSVN_en.xml:4233(para) 
msgid "The same information which is available from the icon overlays (and much more) can be displayed as additional columns in Windows Explorer's Details View."
msgstr ""

#: source/TortoiseSVN_en.xml:4238(para) 
msgid "Simply right click on one of the headings of a column, choose <guimenuitem>More...</guimenuitem> from the context menu displayed. A dialog will appear where you can specify the columns and their order, which is displayed in the \"Detailed View\". Scroll down until the entries starting with SVN come into view. Check the ones you would like to have displayed and close the dialog by pressing <guibutton>OK</guibutton>. The columns will be appended to the right of those currently displayed. You can reorder them by drag and drop, or resize them, so that they fit your needs."
msgstr ""

#: source/TortoiseSVN_en.xml:4250(para) 
msgid "If you want the current layout to be displayed in all your working copies, you may want to make this the default view."
msgstr ""

#: source/TortoiseSVN_en.xml:4258(title) 
msgid "Local and Remote Status"
msgstr ""

#: source/TortoiseSVN_en.xml:4263(primary) 
msgid "modifications"
msgstr ""

#: source/TortoiseSVN_en.xml:4267(title) source/TortoiseSVN_en.xml:9591(title) 
msgid "Check for Modifications"
msgstr ""

#: source/TortoiseSVN_en.xml:4265(para) 
msgid "<placeholder-1/> It's often very useful to know which files you have changed and also which files got changed and committed by others. That's where the command <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Check For Modifications...</guimenuitem></menuchoice> comes in handy. This dialog will show you every file that has changed in any way in your working copy, as well as any unversioned files you may have."
msgstr ""

#: source/TortoiseSVN_en.xml:4282(para) 
msgid "If you click on the <guibutton>Check Repository</guibutton> then you can also look for changes in the repository. That way you can check before an update if there's a possible conflict. You can also update selected files from the repository without updating the whole folder."
msgstr ""

#: source/TortoiseSVN_en.xml:4296(para) 
msgid "Locally modified items."
msgstr ""

#: source/TortoiseSVN_en.xml:4304(para) 
msgid "Added items. Items which have been added with history have a <literal>+</literal> sign in the <guilabel>Text status</guilabel> column, and a tooltip shows where the item was copied from."
msgstr ""

#: source/TortoiseSVN_en.xml:4316(para) 
msgid "Deleted or missing items."
msgstr ""

#: source/TortoiseSVN_en.xml:4324(para) 
msgid "Items modified locally and in the repository. The changes will be merged on update. These <emphasis>may</emphasis> produce conflicts on update."
msgstr ""

#: source/TortoiseSVN_en.xml:4334(para) 
msgid "Items modified locally and deleted in repository, or modified in repository and deleted locally. These <emphasis>will</emphasis> produce conflicts on update."
msgstr ""

#: source/TortoiseSVN_en.xml:4344(para) 
msgid "Unchanged and unversioned items."
msgstr ""

#: source/TortoiseSVN_en.xml:4290(para) 
msgid "The dialog uses colour coding to highlight the status. <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:4356(para) 
msgid "From the context menu of the dialog you can show a diff of the changes. Check the local changes <emphasis>you</emphasis> made using <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Compare with Base</guimenuitem></menuchoice>. Check the changes in the repository made by others using <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Show Differences as Unified Diff</guimenuitem></menuchoice>."
msgstr ""

#: source/TortoiseSVN_en.xml:4369(para) 
msgid "You can also revert changes in individual files. If you have deleted a file accidentally, it will show up as <literal>Missing</literal> and you can use <literal>Revert</literal> to recover it."
msgstr ""

#: source/TortoiseSVN_en.xml:4375(para) 
msgid "If you want a flat view of your working copy, i.e. showing all files and folders at every level of the folder hierarchy, then the <guilabel>Check for Modifications</guilabel> dialog is the easiest way to achieve that. Just check the <guilabel>Show unmodified files</guilabel> checkbox to show all files in your working copy."
msgstr ""

#: source/TortoiseSVN_en.xml:4386(title) 
msgid "Viewing Diffs"
msgstr ""

#: source/TortoiseSVN_en.xml:4388(primary) 
msgid "diffing"
msgstr ""

#: source/TortoiseSVN_en.xml:4390(para) 
msgid "Often you want to look inside your files, to have a look at what you've changed. You can accomplish this by selecting a file which has changed, and selecting <guimenuitem>Diff</guimenuitem> from TortoiseSVN's context menu. This starts the external diff-viewer, which will then compare the current file with the pristine copy (<literal>BASE</literal> revision), which was stored after the last checkout or update."
msgstr ""

#: source/TortoiseSVN_en.xml:4400(para) 
msgid "Even when not inside a working copy or when you have multiple versions of the file lying around, you can still display diffs:"
msgstr ""

#: source/TortoiseSVN_en.xml:4404(para) 
msgid "Select the two files you want to compare in explorer (e.g. using <keycap>Ctrl</keycap> and the mouse) and choose <guimenuitem>Diff</guimenuitem> from TortoiseSVN's context menu. The file clicked last (the one with the focus, i.e. the dotted rectangle) will be regarded as the later one."
msgstr ""

#: source/TortoiseSVN_en.xml:4416(title) 
msgid "Revision Log Dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:4418(primary) 
msgid "log"
msgstr ""

#: source/TortoiseSVN_en.xml:4421(primary) 
msgid "history"
msgstr ""

#: source/TortoiseSVN_en.xml:4424(para) 
msgid "For every change you make and commit, you should provide a log message for that change. That way you can later find out what changes you made and why, and you have a detailed log for your development process."
msgstr ""

#: source/TortoiseSVN_en.xml:4436(para) 
msgid "The top pane shows a list of revisions where changes to the file/folder have been committed. This summary includes the date and time, the person who committed the revision and the start of the log message."
msgstr ""

#: source/TortoiseSVN_en.xml:4442(para) 
msgid "Lines shown in blue indicate that something has been copied to this development line (perhaps from a branch)."
msgstr ""

#: source/TortoiseSVN_en.xml:4448(para) 
msgid "The middle pane shows the full log message for the selected revision."
msgstr ""

#: source/TortoiseSVN_en.xml:4454(para) 
msgid "The bottom pane shows a list of all files and folders that were changed as part of the selected revision."
msgstr ""

#: source/TortoiseSVN_en.xml:4430(para) 
msgid "The Revision Log Dialog retrieves all those log messages and shows them to you. The display is divided into 3 panes. <placeholder-1/> But it does much more than that - it provides context menu commands which you can use to get even more information about the project history."
msgstr ""

#: source/TortoiseSVN_en.xml:4465(title) 
msgid "Invoking the Revision Log Dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:4468(title) 
msgid "The Revision Log Dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:4474(para) 
msgid "From the TortoiseSVN context submenu"
msgstr ""

#: source/TortoiseSVN_en.xml:4479(para) 
msgid "From the property page"
msgstr ""

#: source/TortoiseSVN_en.xml:4484(para) 
msgid "From the Progress dialog after an update has finished. Then the Log dialog only shows those revisions which were changed since your last update"
msgstr ""

#: source/TortoiseSVN_en.xml:4466(para) 
msgid "<placeholder-1/> There are several places from where you can show the Log dialog: <placeholder-2/>"
msgstr ""

#: source/TortoiseSVN_en.xml:4494(title) 
msgid "Getting Additional Information"
msgstr ""

#: source/TortoiseSVN_en.xml:4497(title) 
msgid "The Revision Log Dialog Top Pane with Context Menu"
msgstr ""

#: source/TortoiseSVN_en.xml:4503(para) 
msgid "Compare the selected revision with your working copy. The default Diff-Tool is TortoiseMerge which is supplied with TortoiseSVN. If the log dialog is for a folder, this will show you a list of changed files, and allow you to review the changes made to each file individually."
msgstr ""

#: source/TortoiseSVN_en.xml:4513(para) 
msgid "View the changes made in the selected revision as a Unified-Diff file. The Unified-Diff operation is faster than invoking the <quote>normal</quote> external diff viewer because TortoiseSVN doesn't have to fetch whole files but only the differences."
msgstr ""

#: source/TortoiseSVN_en.xml:4523(para) 
msgid "Save the selected revision to a file so you have an older version of that file. This option is only available when you access the log for a file, and it saves a version of that one file only."
msgstr ""

#: source/TortoiseSVN_en.xml:4531(para) 
msgid "Open the repository browser to examine the selected folder. This option is only available when you access the log for a directory."
msgstr ""

#: source/TortoiseSVN_en.xml:4538(para) 
msgid "Create a branch/tag from a selected revision. This is useful e.g. if you forgot to create a tag and already committed some changes which weren't supposed to get into that release."
msgstr ""

#: source/TortoiseSVN_en.xml:4546(para) 
msgid "Update your working copy to the selected revision. Useful if you want to have your working copy reflect a time in the past. It is best to update a whole directory in your working copy, not just one file, otherwise your working copy will be inconsistent and you will be unable to commit any changes."
msgstr ""

#: source/TortoiseSVN_en.xml:4556(para) 
msgid "Revert changes from which were made in the selected revision. The changes are reverted in your working copy so this operation does <emphasis>not</emphasis> affect the repository at all! Note that this will undo the changes made in that revision only. It does not replace your working copy with the entire file at the earlier revision. This is very useful for undoing an earlier change when other unrelated changes have been made since."
msgstr ""

#: source/TortoiseSVN_en.xml:4568(para) 
msgid "Edit the log message or author attached to a previous commit. Read <xref linkend=\"tsvn-DUG-showlog-4\"/> to find out how this works."
msgstr ""

#: source/TortoiseSVN_en.xml:4575(para) 
msgid "Search log messages for the text you enter. This searches the log messages that you entered and also the action summaries created by Subversion (shown in the bottom pane). The search is not case sensitive."
msgstr ""

#: source/TortoiseSVN_en.xml:4495(para) 
msgid "<placeholder-1/> The top pane of the Log dialog has a context menu that allows you to <placeholder-2/>"
msgstr ""

#: source/TortoiseSVN_en.xml:4586(title) 
msgid "Top Pane Context Menu for 2 Selected Files"
msgstr ""

#: source/TortoiseSVN_en.xml:4594(para) 
msgid "Compare the two selected revisions using a visual difference tool. The default Diff-Tool is TortoiseMerge which is supplied with TortoiseSVN. If you select this option for a folder, a further dialog pops up listing the changed files and you can diff them one at a time."
msgstr ""

#: source/TortoiseSVN_en.xml:4603(para) 
msgid "View the differences between the two selected revisions as a Unified-Diff file. This works for files and folders."
msgstr ""

#: source/TortoiseSVN_en.xml:4609(para) 
msgid "Edit the log message or author as described above."
msgstr ""

#: source/TortoiseSVN_en.xml:4614(para) 
msgid "Search log messages as described above."
msgstr ""

#: source/TortoiseSVN_en.xml:4584(para) 
msgid "<placeholder-1/> If you select two revisions at once (using the usual <keycap>Ctrl</keycap>-modifier), the context menu changes and gives you fewer options: <placeholder-2/>"
msgstr ""

#: source/TortoiseSVN_en.xml:4620(para) 
msgid "If you select multiple consecutive revisions (using the usual <keycap>Ctrl</keycap> or <keycap>Shift</keycap> modifiers), the context menu will include an entry to Revert all changes which were made in that range of revisions. This is the easiest way to rollback a group of revisions in one go."
msgstr ""

#: source/TortoiseSVN_en.xml:4629(title) 
msgid "The Log Dialog Bottom Pane with Context Menu"
msgstr ""

#: source/TortoiseSVN_en.xml:4635(para) 
msgid "Show differences made in the selected revision for the selected file. This context menu is only available for files shown as <literal>Modified</literal>."
msgstr ""

#: source/TortoiseSVN_en.xml:4642(para) 
msgid "Open the selected file, either with the default viewer for that file type, or with a program you choose."
msgstr ""

#: source/TortoiseSVN_en.xml:4648(para) 
msgid "Revert the changes made to the selected file in that revision."
msgstr ""

#: source/TortoiseSVN_en.xml:4653(para) 
msgid "View the Subversion properties for the selected item."
msgstr ""

#: source/TortoiseSVN_en.xml:4658(para) 
msgid "Show the revision log for the selected single file."
msgstr ""

#: source/TortoiseSVN_en.xml:4663(para) 
msgid "Save the selected revision to a file so you have an older version of that file."
msgstr ""

#: source/TortoiseSVN_en.xml:4627(para) 
msgid "<placeholder-1/> The bottom pane of the Log dialog also has a context menu that allows you to <placeholder-2/>"
msgstr ""

#: source/TortoiseSVN_en.xml:4672(title) 
msgid "Getting more log messages"
msgstr ""

#: source/TortoiseSVN_en.xml:4678(para) 
msgid "For a large repository there may be hundreds or even thousands of changes and fetching them all could take a long time. Normally you are only interested in the more recent changes. By default, the number of log messages fetched is limited to 100, but you can change this value in <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Settings</guimenuitem></menuchoice> (<xref linkend=\"tsvn-DUG-settings\"/>),"
msgstr ""

#: source/TortoiseSVN_en.xml:4693(para) 
msgid "When the <guilabel>Stop on copy/rename</guilabel> box is checked, Show Log will stop at the point that the selected file or folder was copied from somewhere else within the repository. This can be useful when looking at branches (or tags) as it stops at the root of that branch, and gives a quick indication of changes made in that branch only."
msgstr ""

#: source/TortoiseSVN_en.xml:4702(para) 
msgid "Normally you will want to leave this option unchecked. TortoiseSVN remembers the state of the checkbox, so it will respect your preference."
msgstr ""

#: source/TortoiseSVN_en.xml:4707(para) 
msgid "When the Show Log dialog is invoked from within the Merge dialog, the box is always checked by default. This is because merging is most often looking at changes on branches, and going back beyond the root of the branch does not make sense in that instance."
msgstr ""

#: source/TortoiseSVN_en.xml:4714(para) 
msgid "Note that Subversion currently implements renaming as a copy/delete pair, so renaming a file or folder will also cause the log display to stop if this option is checked."
msgstr ""

#: source/TortoiseSVN_en.xml:4673(para) 
msgid "The Log dialog does not always show all changes ever made for a number of reasons: <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:4723(para) 
msgid "If you want to see more log messages, click the <guibutton>Next 100</guibutton> to retrieve the next 100 log messages. You can repeat this as many times as needed."
msgstr ""

#: source/TortoiseSVN_en.xml:4728(para) 
msgid "If you want to see <emphasis>all</emphasis> log messages right back to revision 1, press <guibutton>Show All</guibutton>."
msgstr ""

#: source/TortoiseSVN_en.xml:4734(title) 
msgid "Changing the Log Message and Author"
msgstr ""

#: source/TortoiseSVN_en.xml:4736(primary) 
msgid "edit log/author"
msgstr ""

#: source/TortoiseSVN_en.xml:4738(para) 
msgid "Sometimes you might want to change a log message you once entered, maybe because there's a spelling error in it or you want to improve the message or change it for other reasons. Or you want to change the author of the commit because you forgot to set up authentication or..."
msgstr ""

#: source/TortoiseSVN_en.xml:4745(para) 
msgid "Subversion lets you change both the log message and the author of revisions any time you want. But since such changes can't be undone (those changes are not versioned) this feature is disabled by default. To make this work, you must set up a pre-revprop-change hook. Please refer to the chapter on <ulink url=\"http://svnbook.red-bean.com/en/1.1/ch05s02.html#svn-ch-5-sect-2.1\"><citetitle>Hook Scripts</citetitle></ulink> in the Subversion Book for details about how to do that. Read <xref linkend=\"tsvn-repository-hooks\"/> to find some further notes on implementing hooks on a Windows machine."
msgstr ""

#: source/TortoiseSVN_en.xml:4758(para) 
msgid "Once you've set up your server with the required hooks, you can change both author and log message of any revision, using the context menu from the top pane of the Log dialog."
msgstr ""

#: source/TortoiseSVN_en.xml:4764(para) 
msgid "Because Subversion's revision properties are not versioned, making modifications to such a property (for example, the <literal>svn:log</literal> commit message property) will overwrite the previous value of that property <emphasis>forever</emphasis>."
msgstr ""

#: source/TortoiseSVN_en.xml:4774(title) 
msgid "Filtering Log Messages"
msgstr ""

#: source/TortoiseSVN_en.xml:4776(primary) 
msgid "filter"
msgstr ""

#: source/TortoiseSVN_en.xml:4778(para) 
msgid "If you want to restrict the log messages to show only those you are interested in rather than scrolling through a list of hundreds, you can use the filter controls at the top of the Log Dialog. The start and end date controls allow you to restrict the output to a known date range. The search box allows you to show only messages which contain a particular phrase."
msgstr ""

#: source/TortoiseSVN_en.xml:4787(para) 
msgid "Note that these filters act on the messages already retrieved. They do not control downloading of messages from the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:4794(title) 
msgid "Statistical Information"
msgstr ""

#: source/TortoiseSVN_en.xml:4796(primary) 
msgid "statistics"
msgstr ""

#: source/TortoiseSVN_en.xml:4798(para) 
msgid "The <guibutton>Statistics</guibutton> button brings up a box showing some interesting information about the revisions shown in the Log dialog. This shows how many authors have been at work, how many commits they have made, progress by week, and much more. Now you can see at a glance who has been working hardest and who is slacking ;-)"
msgstr ""

#: source/TortoiseSVN_en.xml:4806(para) 
msgid "Note that the statistics cover the same period as the Log dialog. If that is only displaying one revision then the statistics will not tell you very much."
msgstr ""

#: source/TortoiseSVN_en.xml:4814(title) 
msgid "Viewing Differences"
msgstr ""

#: source/TortoiseSVN_en.xml:4816(primary) 
msgid "diff"
msgstr ""

#: source/TortoiseSVN_en.xml:4818(para) 
msgid "One of the commonest requirements in project development is to see what has changed. You might want to look at the differences between two revisions of the same file, or the differences between two separate files. TortoiseSVN provides some builtin tools for this, and also allows you to use your own favourite diff program."
msgstr ""

#: source/TortoiseSVN_en.xml:4827(title) 
msgid "File Differences"
msgstr ""

#: source/TortoiseSVN_en.xml:4830(term) 
msgid "Local changes"
msgstr ""

#: source/TortoiseSVN_en.xml:4832(para) 
msgid "If you want to see what changes <emphasis>you</emphasis> have made in your working copy, just use the explorer context menu and select <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Diff</guimenuitem></menuchoice>."
msgstr ""

#: source/TortoiseSVN_en.xml:4844(term) 
msgid "Difference from a previous revision"
msgstr ""

#: source/TortoiseSVN_en.xml:4846(para) 
msgid "If you want to see the difference between a particular revision and your working copy, use the Revision Log dialog, select the revision of interest, then select <guimenuitem>Compare with working copy</guimenuitem> from the context menu."
msgstr ""

#: source/TortoiseSVN_en.xml:4856(term) 
msgid "Difference between two previous revisions"
msgstr ""

#: source/TortoiseSVN_en.xml:4858(para) 
msgid "If you want to see the difference between two revisions which are already committed, use the Revision Log dialog and select the two revisions you want to compare (using the usual <keycap>Ctrl</keycap>-modifier). Then select <guimenuitem>Compare revisions</guimenuitem> from the context menu."
msgstr ""

#: source/TortoiseSVN_en.xml:4869(term) 
msgid "All changes made in a commit"
msgstr ""

#: source/TortoiseSVN_en.xml:4871(para) 
msgid "If you want to see the changes made to all files in a particular revision in one view, you can use Unified-Diff output (GNU patch format). This shows only the differences with a few lines of context. It is harder to read than a visual file compare, but will show all the changes together. From the Revision Log dialog select the revision of interest, then select <guimenuitem>Show Differences as Unified-Diff</guimenuitem> from the context menu."
msgstr ""

#: source/TortoiseSVN_en.xml:4885(term) 
msgid "Difference between files"
msgstr ""

#: source/TortoiseSVN_en.xml:4887(para) 
msgid "If you want to see the differences between two different files, you can do that directly in explorer by selecting both files (using the usual <keycap>Ctrl</keycap>-modifier). Then from the explorer context menu select <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Diff</guimenuitem></menuchoice>."
msgstr ""

#: source/TortoiseSVN_en.xml:4902(title) 
msgid "Folder Differences"
msgstr ""

#: source/TortoiseSVN_en.xml:4903(para) 
msgid "The builtin tools supplied with TortoiseSVN do not support viewing differences between directory hierarchies. But if you have an external tool which does support that feature, you can use that instead. In the next section we tell you about some tools which we have used."
msgstr ""

#: source/TortoiseSVN_en.xml:4911(title) 
msgid "External Diff/Merge Tools"
msgstr ""

#: source/TortoiseSVN_en.xml:4913(primary) 
msgid "diff tools"
msgstr ""

#: source/TortoiseSVN_en.xml:4916(primary) 
msgid "merge tools"
msgstr ""

#: source/TortoiseSVN_en.xml:4918(para) 
msgid "If the tools we provide don't do what you need, try one of the many open-source or commercial programs available. Everyone has their own favourites, and this list is by no means complete, but here are a few that you might consider:"
msgstr ""

#: source/TortoiseSVN_en.xml:4926(term) 
msgid "WinMerge"
msgstr ""

#: source/TortoiseSVN_en.xml:4928(para) 
msgid "<ulink url=\"http://winmerge.sourceforge.net/\"><citetitle>WinMerge</citetitle></ulink> is a great open-source diff tool which can also handle directories."
msgstr ""

#: source/TortoiseSVN_en.xml:4938(term) 
msgid "Perforce Merge"
msgstr ""

#: source/TortoiseSVN_en.xml:4940(para) 
msgid "Perforce is a commercial RCS, but you can download the diff/merge tool for free. Get more information from <ulink url=\"http://www.perforce.com/perforce/products/merge.html\"><citetitle>Perforce</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:4950(term) 
msgid "KDiff3"
msgstr ""

#: source/TortoiseSVN_en.xml:4952(para) 
msgid "KDiff3 is a free diff tool which can also handle directories. You can download it from <ulink url=\"http://kdiff3.sf.net/\"><citetitle>here</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:4962(term) 
msgid "ExamDiff"
msgstr ""

#: source/TortoiseSVN_en.xml:4964(para) 
msgid "ExamDiff Standard is freeware. It can handle files but not directories. ExamDiff Pro is shareware and adds a number of goodies including directory diff and editing capability. In both flavours, version 3.2 and above can handle unicode. You can download them from <ulink url=\"http://www.prestosoft.com/\"><citetitle>PrestoSoft</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:4979(term) 
msgid "Beyond Compare"
msgstr ""

#: source/TortoiseSVN_en.xml:4981(para) 
msgid "Similar to ExamDiff Pro, this is an excellent shareware diff tool which can handle directory diffs and unicode. Download it from <ulink url=\"http://www.scootersoftware.com/\"><citetitle>Scooter Software</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:4992(term) 
msgid "Araxis Merge"
msgstr ""

#: source/TortoiseSVN_en.xml:4994(para) 
msgid "Araxis Merge is a useful commercial tool for diff and merging both files and folders. It does three-way comparision in merges and has synchronization links to use if you've changed the order of functions. Download it from <ulink url=\"http://www.araxis.com/merge/index.html\"><citetitle>Araxis</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:5006(term) 
msgid "SciTE"
msgstr ""

#: source/TortoiseSVN_en.xml:5008(para) 
msgid "This text editor includes syntax colouring for unified diffs, making them much easier to read. Download it from <ulink url=\"http://www.scintilla.org/SciTEDownload.html\"><citetitle>Scintilla</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:5018(term) 
msgid "Notepad2"
msgstr ""

#: source/TortoiseSVN_en.xml:5020(para) 
msgid "Notepad2 is designed as a replacement for the standard Windows Notepad program, and is based on the Scintilla open-source edit control. As well as being good for viewing unified diffs, it is much better than the Windows notepad for most jobs. Download it for free <ulink url=\"http://www.flos-freeware.ch/notepad2.html\"><citetitle>here</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:5033(term) 
msgid "TkDiff"
msgstr ""

#: source/TortoiseSVN_en.xml:5035(para) 
msgid "A free diff/merge tool which uses TCL/TK. Download it <ulink url=\"http://www.accurev.com/free/tkdiff/\"><citetitle>here</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:5045(term) 
msgid "CVSConflictEditor"
msgstr ""

#: source/TortoiseSVN_en.xml:5047(para) 
msgid "This open source merge tool is buggy, but has potential. Download it <ulink url=\"http://sourceforge.net/projects/conflicteditor/\"><citetitle>here</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:5057(para) 
msgid "Read <xref linkend=\"tsvn-DUG-settings-progs\"/> for information on how to set up TortoiseSVN to use these tools."
msgstr ""

#: source/TortoiseSVN_en.xml:5064(title) 
msgid "Adding New Files And Directories"
msgstr ""

#: source/TortoiseSVN_en.xml:5066(primary) 
msgid "add"
msgstr ""

#: source/TortoiseSVN_en.xml:5071(title) source/TortoiseSVN_en.xml:5143(title) 
msgid "Explorer context menu for unversioned files"
msgstr ""

#: source/TortoiseSVN_en.xml:5069(para) 
msgid "<placeholder-1/> If you created new files and/or directories during your development process the you need to add them to source control too. Select the file(s) and/or directory and use <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Add</guimenuitem></menuchoice>."
msgstr ""

#: source/TortoiseSVN_en.xml:5083(para) 
msgid "After you added the files/directories to source control the file appears with a <literal>added</literal> icon overlay which means you first have to commit your working copy to make those files/directories available to other developers. Adding a file/directory does <emphasis>not</emphasis> affect the repository!"
msgstr ""

#: source/TortoiseSVN_en.xml:5092(title) 
msgid "Many Adds"
msgstr ""

#: source/TortoiseSVN_en.xml:5093(para) 
msgid "You can also use the Add command on already versioned folders. In that case, the add dialog will show you all unversioned files inside that versioned folder. This helps if you have many new files and need them to add at once."
msgstr ""

#: source/TortoiseSVN_en.xml:5106(para) 
msgid "select the files you want to add"
msgstr ""

#: source/TortoiseSVN_en.xml:5111(para) source/TortoiseSVN_en.xml:5326(para) 
msgid "<action>right-drag</action> them to the new location inside the working copy"
msgstr ""

#: source/TortoiseSVN_en.xml:5117(para) source/TortoiseSVN_en.xml:5332(para) 
msgid "release the right mouse button"
msgstr ""

#: source/TortoiseSVN_en.xml:5122(para) 
msgid "select <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Add files to Subversion here</guimenuitem></menuchoice>. The files will then be copied to the working copy and added to version control."
msgstr ""

#: source/TortoiseSVN_en.xml:5101(para) 
msgid "To add files from outside your working copy you can use the drag-and-drop handler: <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:5136(title) 
msgid "Ignoring Files And Directories"
msgstr ""

#: source/TortoiseSVN_en.xml:5138(primary) 
msgid "ignore"
msgstr ""

#: source/TortoiseSVN_en.xml:5141(para) 
msgid "<placeholder-1/> In most projects you will have files and folders that should not be subject to version control. These might include files created by the compiler, <filename>*.obj, *.lst</filename>, maybe an output folder used to store the executable. Whenever you commit changes, TSVN shows your unversioned files, which fills up the file list in the commit dialog. Of course you can turn off this display, but then you might forget to add a new source file."
msgstr ""

#: source/TortoiseSVN_en.xml:5154(para) 
msgid "The best way to avoid these problems is to add the derived files to the project's ignore list. That way they will never show up in the commit dialog, but genuine unversioned source files will still be flagged up."
msgstr ""

#: source/TortoiseSVN_en.xml:5160(para) 
msgid "If you <action>right click</action> on a single unversioned file, and select the command <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Add to Ignore List</guimenuitem></menuchoice> from the context menu, a submenu appears allowing you to select just that file, or all files with the same extension. If you select multiple files, there is no submenu and you can only add those specific files/folders."
msgstr ""

#: source/TortoiseSVN_en.xml:5172(para) 
msgid "If you want to remove one or more items from the ignore list, <action>right click</action> on those items and select <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Remove from Ignore List</guimenuitem></menuchoice> You can also access a folder's <literal>svn:ignore</literal> property directly. That allows you to specify more general patterns using filename globbing, described in the section below. Read <xref linkend=\"tsvn-DUG-propertypage\"/> for more information on setting properties directly."
msgstr ""

#: source/TortoiseSVN_en.xml:5186(title) 
msgid "The Global Ignore List"
msgstr ""

#: source/TortoiseSVN_en.xml:5187(para) 
msgid "Another way to ignore files is to add them to the <firstterm>global ignore list</firstterm>. The big difference here is that the global ignore list is a client property. It applies to <emphasis>all</emphasis> Subversion projects, but on the client PC only. In general it is better to use the <filename>svn:ignore</filename> property where possible, because it can be applied to specific project areas, and it works for everyone who checks out the project. Read <xref linkend=\"tsvn-DUG-settings-main\"/> for more information."
msgstr ""

#: source/TortoiseSVN_en.xml:5200(title) 
msgid "Filename Globbing in Ignore Lists"
msgstr ""

#: source/TortoiseSVN_en.xml:5202(primary) 
msgid "globbing"
msgstr ""

#: source/TortoiseSVN_en.xml:5211(term) 
msgid "*"
msgstr ""

#: source/TortoiseSVN_en.xml:5213(para) 
msgid "Matches any string of characters, including the empty string (no characters)."
msgstr ""

#: source/TortoiseSVN_en.xml:5220(term) 
msgid "?"
msgstr ""

#: source/TortoiseSVN_en.xml:5222(para) 
msgid "Matches any single character."
msgstr ""

#: source/TortoiseSVN_en.xml:5228(term) 
msgid "[...]"
msgstr ""

#: source/TortoiseSVN_en.xml:5230(para) 
msgid "Matches any one of the characters enclosed in the square brackets. Within the brackets, a pair of characters separated by <quote>-</quote> matches any character lexically between the two. For example <literal>[AGm-p]</literal> matches any one of <literal>A</literal>, <literal>G</literal>, <literal>m</literal>, <literal>n</literal>, <literal>o</literal> or <literal>p</literal>."
msgstr ""

#: source/TortoiseSVN_en.xml:5204(para) 
msgid "Subversion's ignore patterns make use of filename globbing, a technique originally used in Unix to specify files using meta-characters as wildcards. The following characters have special meaning: <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:5244(para) 
msgid "The globbing is done by Subversion, so the path delimiter is always <literal>/</literal>, not the Windows backslash."
msgstr ""

#: source/TortoiseSVN_en.xml:5248(para) 
msgid "Pattern matching is case sensitive, which can cause problems on Windows. You can force case insensitivity the hard way by pairing characters, eg. to ignore <literal>*.tmp</literal> regardless of case, you could use a pattern like <literal>*.[Tt][Mm][Pp]</literal>."
msgstr ""

#: source/TortoiseSVN_en.xml:5255(para) 
msgid "If directory names are present in a path, they are included in the matching, so pattern <literal>Fred.*</literal> will match <literal>Fred.c</literal> but not <literal>subdir/Fred.c</literal>. This is significant if you add a folder containing some files that you want to be ignored, because those filenames will be preceded with the folder name."
msgstr ""

#: source/TortoiseSVN_en.xml:5263(para) 
msgid "To ignore all <literal>CVS</literal> folders you should either specify a pattern of <literal>*CVS</literal> or better, the pair <literal>CVS */CVS</literal>. The first option works, but would also exclude something called <literal>ThisIsNotCVS</literal>. Using <literal>*/CVS</literal> alone will not work on an immediate child <literal>CVS</literal> folder, and <literal>CVS</literal> alone will not work on subfolders."
msgstr ""

#: source/TortoiseSVN_en.xml:5272(para) 
msgid "If you want an official definition for globbing, you can find it in the IEEE specifications for the shell command language <ulink url=\"http://www.opengroup.org/onlinepubs/009695399/utilities/xcu_chap02.html#tag_02_13\"><citetitle>Pattern Matching Notation</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:5282(title) 
msgid "Deleting, Renaming And Moving"
msgstr ""

#: source/TortoiseSVN_en.xml:5284(primary) 
msgid "delete"
msgstr ""

#: source/TortoiseSVN_en.xml:5287(primary) 
msgid "remove"
msgstr ""

#: source/TortoiseSVN_en.xml:5290(primary) 
msgid "rename"
msgstr ""

#: source/TortoiseSVN_en.xml:5293(primary) 
msgid "move"
msgstr ""

#: source/TortoiseSVN_en.xml:5301(title) 
msgid "Explorer context menu for versioned files"
msgstr ""

#: source/TortoiseSVN_en.xml:5296(para) 
msgid "Unlike CVS, Subversion allows renaming and moving of files and folders. So there are menu entries for delete and rename in the TortoiseSVN submenu. <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:5305(para) 
msgid "If you delete a file/directory using TSVN, the file is removed from your working copy and marked for deletion. The file's parent folder shows a \"deleted\" icon overlay. You can always get the file back, if you call <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Revert</guimenuitem></menuchoice> on the parent folder."
msgstr ""

#: source/TortoiseSVN_en.xml:5321(para) 
msgid "select the files or directories you want to move"
msgstr ""

#: source/TortoiseSVN_en.xml:5337(para) 
msgid "in the popup menu select <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Move files in Subversion to here</guimenuitem></menuchoice>"
msgstr ""

#: source/TortoiseSVN_en.xml:5316(para) 
msgid "If you want to move files inside a working copy, use the drag-and-drop handler again: <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:5348(title) 
msgid "Do Not SVN Move Externals"
msgstr ""

#: source/TortoiseSVN_en.xml:5349(para) 
msgid "You should <emphasis>not</emphasis> use the TortoiseSVN <guilabel>Move</guilabel> or <guilabel>Rename</guilabel> commands on a folder which has been created using <literal>svn:externals</literal>. This action would cause the external item to be deleted from its parent repository, probably upsetting many other people. If you need to move an externals folder you should use an ordinary shell move, then adjust the <literal>svn:externals</literal> properties of the source and destination parent folders."
msgstr ""

#: source/TortoiseSVN_en.xml:5362(para) 
msgid "If a <emphasis>file</emphasis> is deleted via the explorer instead of using the TortoiseSVN context menu, the commit dialog shows those files and lets you remove them from version control too before the commit. However, if you update your working copy, Subversion will spot the missing file and replace it with the latest version from the repository. If you need to delete a version-controlled file, always use <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Delete</guimenuitem></menuchoice> so that Subversion doesn't have to guess what you really want to do."
msgstr ""

#: source/TortoiseSVN_en.xml:5376(para) 
msgid "If a <emphasis>folder</emphasis> is deleted via the explorer instead of using the TortoiseSVN context menu, your working copy will be broken and you will be unable to commit. If you update your working copy, Subversion will replace the missing folder with the latest version from the repository and you can then delete it the correct way using <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Delete</guimenuitem></menuchoice>."
msgstr ""

#: source/TortoiseSVN_en.xml:5389(title) 
msgid "Commit the parent folder"
msgstr ""

#: source/TortoiseSVN_en.xml:5390(para) 
msgid "Since renames and moves are done as a delete followed by an add you must commit the parent folder of the renamed/moved file so that the deleted part of the rename/move will show up in the commit dialog. If you don't commit the removed part of the rename/move, it will stay behind in the repository and an update of your coworkers won't remove the old file. i.e. they will have <emphasis>both</emphasis> the old and the new copies."
msgstr ""

#: source/TortoiseSVN_en.xml:5400(para) 
msgid "You <emphasis>must</emphasis> commit a folder rename before changing any of the files inside the folder, otherwise your working copy can get really messed up."
msgstr ""

#: source/TortoiseSVN_en.xml:5407(title) 
msgid "Getting a deleted file or folder back"
msgstr ""

#: source/TortoiseSVN_en.xml:5408(para) 
msgid "If you have deleted a file or a folder and already committed that delete operation to the repository, then a normal <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Revert</guimenuitem></menuchoice> can't bring it back anymore. But the file or folder is not lost at all. If you know the revision the file or folder got deleted (if you don't, use the log dialog to find out) open the repository browser and switch to that revision. Then select the file or folder you deleted, right-click and select <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Copy to...</guimenuitem></menuchoice> as the target for that copy operation select the path to your working copy."
msgstr ""

#: source/TortoiseSVN_en.xml:5431(title) 
msgid "Undo Changes"
msgstr ""

#: source/TortoiseSVN_en.xml:5433(primary) 
msgid "revert"
msgstr ""

#: source/TortoiseSVN_en.xml:5436(primary) 
msgid "undo"
msgstr ""

#: source/TortoiseSVN_en.xml:5451(title) 
msgid "Revert dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:5438(para) 
msgid "If you want to undo all changes you made in a file since the last update you need to select the file, <action>right click</action> to pop up the context menu and then select the command <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Revert</guimenuitem></menuchoice> A dialog will pop up showing you the files that you've changed and can revert. Select those you want to revert and click on <guibutton>OK</guibutton>. <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:5456(title) 
msgid "Undoing Changes which have been Committed"
msgstr ""

#: source/TortoiseSVN_en.xml:5457(para) 
msgid "<menuchoice><guimenuitem>Revert</guimenuitem></menuchoice> will only undo your local changes. It does <emphasis>not</emphasis> undo any changes which have already been committed. If you want to undo all the changes which were committed in a particular revision, read <xref linkend=\"tsvn-DUG-showlog\"/> for further information."
msgstr ""

#: source/TortoiseSVN_en.xml:5469(title) source/TortoiseSVN_en.xml:9696(title) 
msgid "Cleanup"
msgstr ""

#: source/TortoiseSVN_en.xml:5471(primary) 
msgid "cleanup"
msgstr ""

#: source/TortoiseSVN_en.xml:5473(para) 
msgid "If a subversion command cannot complete successfully, perhaps due to server problems, your working copy can be left in an inconsistent state. In that case you need to use <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Cleanup</guimenuitem></menuchoice> on the folder. It is a good idea to do this at the top level of the working copy."
msgstr ""

#: source/TortoiseSVN_en.xml:5484(para) 
msgid "Cleanup has another useful side effect. If a file date changes but its content doesn't, subversion cannot tell whether it has really changed except by doing a byte-by-byte comparison with the pristine copy. If you have a lot of files in this state it makes acquiring status very slow, which will make many dialogs slow to repond. Executing a Cleanup on your working copy will repair these <quote>broken</quote> timestamps and restore status checks to full speed."
msgstr ""

#: source/TortoiseSVN_en.xml:5495(title) 
msgid "Use Commit Timestamps"
msgstr ""

#: source/TortoiseSVN_en.xml:5496(para) 
msgid "Some earlier releases of Subversion were affected by a bug which caused timestamp mismatch when you check out with the <guilabel>Use commit timestamps</guilabel> option checked. Use the Cleanup command to speed up these working copies."
msgstr ""

#: source/TortoiseSVN_en.xml:5506(title) 
msgid "Project Settings"
msgstr ""

#: source/TortoiseSVN_en.xml:5508(primary) 
msgid "properties"
msgstr ""

#: source/TortoiseSVN_en.xml:5512(title) 
msgid "Subversion property page"
msgstr ""

#: source/TortoiseSVN_en.xml:5510(para) 
msgid "<placeholder-1/> Sometimes you want to have a more detailed information about a file/directory than just the icon overlay. You can get all the information Subversion provides in the explorer properties dialog. Just select the file or directory and select <menuchoice><guimenu>Windows Menu</guimenu><guimenuitem>properties</guimenuitem></menuchoice> in the context menu (note: this is the normal properties menu entry the explorer provides, not in the TortoiseSVN submenu!). In the properties dialog box TortoiseSVN has added a new property page for files/folders under Subversion control."
msgstr ""

#: source/TortoiseSVN_en.xml:5529(para) 
msgid "On the Subversion page you can see all relevant information about the selected file/directory. In addition you can read and set the Subversion properties. You can add your own properties, or some properties with a special meaning in Subversion. These begin with <literal>svn:</literal>. <literal>svn:externals</literal> is such a property; see how to handle externals in <xref linkend=\"tsvn-DUG-import-4\"/>. For more information about properties in Subversion see the <ulink url=\"http://svnbook.red-bean.com/en/1.1/ch07s02.html#svn-ch-7-sect-2.3\"><citetitle>Subversion Manual</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:5542(para) 
msgid "To set a property, select the required property name from the combo box, then type in a value in the field below. Properties which take multiple values, such as an ignore list, can be entered on multiple lines. Click on <guibutton>Set</guibutton> to add that property to the list."
msgstr ""

#: source/TortoiseSVN_en.xml:5549(para) 
msgid "If you want to apply a property to many items at once, select the files/folders in explorer, then select <menuchoice><guimenu>Windows Menu</guimenu><guimenuitem>properties</guimenuitem></menuchoice>"
msgstr ""

#: source/TortoiseSVN_en.xml:5557(para) 
msgid "If you want to apply the property to <emphasis>every</emphasis> file and folder in the hierarchy below the current folder, check the <guilabel>Recursive</guilabel> checkbox."
msgstr ""

#: source/TortoiseSVN_en.xml:5562(para) 
msgid "Some properties, for example <literal>svn:needs-lock</literal>, can only be applied to files, so the property name doesn't appear in the drop down list for folders. You can still apply such a property recursively to all files in a hierarchy, but you have to type in the property name yourself."
msgstr ""

#: source/TortoiseSVN_en.xml:5569(para) 
msgid "If you wish to edit an existing property, first select that property from the list of existing properties, so that it appears in the edit area. Then procede as for a new property."
msgstr ""

#: source/TortoiseSVN_en.xml:5574(para) 
msgid "If you wish to remove an existing property, select that property from the list of existing properties, so that it appears in the edit area. Then click on <guibutton>Remove</guibutton>."
msgstr ""

#: source/TortoiseSVN_en.xml:5579(para) 
msgid "The <literal>svn:externals</literal> property can be used to pull in other projects from the same repository or a completely different repository. For more information, read <xref linkend=\"tsvn-DUG-import-4\"/>."
msgstr ""

#: source/TortoiseSVN_en.xml:5590(para) 
msgid "<literal>tsvn:logminsize</literal> sets the minimum length of a log message for a commit. If you enter a shorter message than specified here, the commit is disabled. This feature is very useful for reminding you to supply a proper descriptive message for every commit. If this property is not set, or the value is zero, empty log messages are allowed."
msgstr ""

#: source/TortoiseSVN_en.xml:5599(para) 
msgid "<literal>tsvn:lockmsgminsize</literal> sets the minimum length of a lock message. If you enter a shorter message than specified here, the lock is disabled. This feature is very useful for reminding you to supply a proper descriptive message for every lock you get. If this property is not set, or the value is zero, empty lock messages are allowed."
msgstr ""

#: source/TortoiseSVN_en.xml:5610(para) 
msgid "<literal>tsvn:logwidthmarker</literal> is used with projects which require log messages to be formatted with some maximum width (typically 80 characters) before a line break. Setting this property to a non-zero will do 2 things in the log message entry dialog: it places a marker to indicate the maximum width, and it disables word wrap in the display, so that you can see whether the text you entered is too long. Note: this feature will only work correctly if you have a fixed-width font selected for log messages."
msgstr ""

#: source/TortoiseSVN_en.xml:5623(para) 
msgid "<literal>tsvn:logtemplate</literal> is used with projects which have rules about log message formatting. The property holds a multi-line text string which will be inserted in the commit message box when you start a commit. You can then edit it to include the required information. Note: if you are also using <literal>tsvn:logminsize</literal>, be sure to set the length longer than the template or you will lose the protection mechanism."
msgstr ""

#: source/TortoiseSVN_en.xml:5634(para) 
msgid "In the Commit dialog you have the option to paste in the list of changed files, including the status of each file (added, modified, etc). <literal>tsvn:logfilelistenglish</literal> defines whether the file status is inserted in english or in the localized language. If the property is not set, the default is <literal>true</literal>."
msgstr ""

#: source/TortoiseSVN_en.xml:5645(para) 
msgid "TortoiseSVN can use spell checker modules which are also used by OpenOffice and Mozilla. If you have those installed this property will determine which spell checker to use, i.e. in which language the log messages for your project should be written. <literal>tsvn:projectlanguage</literal> sets the language module the spell checking engine should use when you enter a log message. You can find the values for your language on this page: <ulink url=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/intl/nls_238z.asp\"><citetitle>MSDN: Language Identifiers</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:5659(para) 
msgid "You can enter this value in decimal, or in hexadecimal if prefixed with <literal>0x</literal>. For example English (US) can be entered as <literal>0x0409</literal> or <literal>1033</literal>."
msgstr ""

#: source/TortoiseSVN_en.xml:5585(para) 
msgid "TortoiseSVN has a few special properties of its own, and these begin with <literal>tsvn:</literal>. <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:5668(para) source/TortoiseSVN_en.xml:7185(para) 
msgid "Some <literal>tsvn:</literal> properties require a <literal>true/false</literal> value. TSVN also understands <literal>yes</literal> as a synonym for <literal>true</literal> and <literal>no</literal> as a synonym for <literal>false</literal>."
msgstr ""

#: source/TortoiseSVN_en.xml:5675(title) 
msgid "Set the tsvn: properties on folders"
msgstr ""

#: source/TortoiseSVN_en.xml:5676(para) 
msgid "These <literal>tsvn:</literal> properties must be set on <emphasis>folders</emphasis> for the system to work. When you commit a file or folder the properties are read from that folder. If the properties are not found there, TortoiseSVN will search upwards through the folder tree to find them until it comes to an unversioned folder, or the tree root (eg. <literal>C:\\</literal>) is found. If you can be sure that each user checks out only from e.g <filename>trunk/</filename> and not some subfolder, then it is sufficient to set the properties on <filename>trunk/</filename>. If you can't be sure, you should set the properties recursively on each subfolder. A property setting deeper in the project hierarchy overrides settings on higher levels (closer to <filename>trunk/</filename>)."
msgstr ""

#: source/TortoiseSVN_en.xml:5690(para) source/TortoiseSVN_en.xml:7207(para) 
msgid "For <literal>tsvn:</literal> properties <emphasis>only</emphasis> you can use the <guilabel>Recursive</guilabel> checkbox to set the property to all subfolders in the hierarchy, without also setting it on all files."
msgstr ""

#: source/TortoiseSVN_en.xml:5698(title) 
msgid "Commit properties"
msgstr ""

#: source/TortoiseSVN_en.xml:5699(para) 
msgid "Subversion properties are versioned. After you change or add a property you have to commit your changes."
msgstr ""

#: source/TortoiseSVN_en.xml:5705(title) 
msgid "Conflicts on properties"
msgstr ""

#: source/TortoiseSVN_en.xml:5706(para) 
msgid "If there's a conflict on committing the changes, because another user has changed the same property, Subversion generates a <filename>.prej</filename> file. Delete this file after you have resolved the conflict."
msgstr ""

#: source/TortoiseSVN_en.xml:5714(title) 
msgid "Automatic property setting"
msgstr ""

#: source/TortoiseSVN_en.xml:5715(para) 
msgid "You can configure Subversion to set properties automatically on files and folders when they are added to the repository. Read <xref linkend=\"tsvn-DUG-settings\"/> for further information."
msgstr ""

#: source/TortoiseSVN_en.xml:5721(para) 
msgid "TortoiseSVN can integrate with some bugtracking tools. This uses properties, which start with <literal>bugtraq:</literal>. Read <xref linkend=\"tsvn-DUG-bugtracker\"/> for further information."
msgstr ""

#: source/TortoiseSVN_en.xml:5728(title) 
msgid "Branching / Tagging"
msgstr ""

#: source/TortoiseSVN_en.xml:5730(primary) 
msgid "branch"
msgstr ""

#: source/TortoiseSVN_en.xml:5733(primary) 
msgid "tag"
msgstr ""

#: source/TortoiseSVN_en.xml:5736(primary) 
msgid "copy"
msgstr ""

#: source/TortoiseSVN_en.xml:5739(para) 
msgid "One of the features of version control systems is the ability to isolate changes onto a separate line of development. This line is known as a <firstterm>branch</firstterm>. Branches are often used to try out new features without disturbing the main line of development with compiler errors and bugs. As soon as the new feature is stable enough then the development branch is <firstterm>merged</firstterm> back into the main branch (trunk)."
msgstr ""

#: source/TortoiseSVN_en.xml:5749(para) 
msgid "Another feature of version control systems is the ability to mark particular revisions (e.g. a release version), so you can at any time recreate a certain build or environment. This process is known as <firstterm>tagging</firstterm>."
msgstr ""

#: source/TortoiseSVN_en.xml:5755(para) 
msgid "Subversion does not have special commands for branching or tagging, but uses so-called <literal>cheap copies</literal> instead. Cheap copies are similar to hard links in Unix, which means that instead of making a complete copy in the repository, an internal link is created, pointing to a specific tree/revision. As a result branches and tags are very quick to create, and take up almost no extra space in the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:5765(title) 
msgid "Creating a Branch or Tag"
msgstr ""

#: source/TortoiseSVN_en.xml:5770(title) 
msgid "The Branch/Tag Dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:5766(para) 
msgid "If you have imported your project with the recommended directory structure, creating a branch or tag version is very simple: <placeholder-1/> Select the folder in your working copy which you want to copy to a branch or tag, then select the command <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Branch/Tag...</guimenuitem></menuchoice>."
msgstr ""

#: source/TortoiseSVN_en.xml:5780(para) 
msgid "The default destination URL for the new branch will be the source URL on which your working copy is based. You will need to edit that URL to the new path for your branch/tag. So instead of <screen>\n    http://svn.collab.net/repos/ProjectName/trunk\n</screen> you might now use something like <screen>\n    http://svn.collab.net/repos/ProjectName/tags/Release_1.10\n</screen> If you can't remember the naming convention you used last time, click the button on the right to open the repository browser so you can view the existing repository structure."
msgstr ""

#: source/TortoiseSVN_en.xml:5801(term) source/TortoiseSVN_en.xml:9742(listitem) 
msgid "HEAD revision in the repository"
msgstr ""

#: source/TortoiseSVN_en.xml:5803(para) 
msgid "The new branch is copied directly in the repository from the HEAD revision. No data needs to be transferred from your working copy, and the branch is created very quickly."
msgstr ""

#: source/TortoiseSVN_en.xml:5812(term) 
msgid "Specific revision in the repository"
msgstr ""

#: source/TortoiseSVN_en.xml:5814(para) 
msgid "The new branch is copied directly in the repository but you can choose an older revision. This is useful if you forgot to make a tag when you released your project last week. If you can't remember the revision number, click the button on the right to show the revision log, and select the revision number from there. Again no data is transferred from your working copy, and the branch is created very quickly."
msgstr ""

#: source/TortoiseSVN_en.xml:5827(term) source/TortoiseSVN_en.xml:9744(listitem) 
msgid "Working copy"
msgstr ""

#: source/TortoiseSVN_en.xml:5829(para) 
msgid "The new branch is an identical copy of your local working copy. If you have updated some files to an older revision in your WC, or if you have made local changes, that is exactly what goes into the copy. Naturally this sort of complex tag may involve transferring data from your WC back to the repository if it does not exist there already."
msgstr ""

#: source/TortoiseSVN_en.xml:5796(para) 
msgid "Now you have to select the source of the copy. Here you have three options: <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:5842(para) 
msgid "If you want your working copy to be switched to the newly created branch automatically, use the <guilabel>Switch working copy to new branch/tag</guilabel> checkbox. But if you do that, first make sure that your working copy does not contain modifications. If it does, those changes will be merged into the branch WC when you switch."
msgstr ""

#: source/TortoiseSVN_en.xml:5850(para) 
msgid "Press <guibutton>OK</guibutton> to commit the new copy to the repository. Don't forget to supply a log message. Note that the copy is created <emphasis>inside the repository</emphasis>."
msgstr ""

#: source/TortoiseSVN_en.xml:5855(para) 
msgid "Note that creating a Branch or Tag does <emphasis>not</emphasis> affect your working copy. Even if you copy your WC, those changes are committed to the new branch, not to the trunk, so your WC may still be marked as modified."
msgstr ""

#: source/TortoiseSVN_en.xml:5863(title) 
msgid "To Checkout or to Switch..."
msgstr ""

#: source/TortoiseSVN_en.xml:5866(primary) 
msgid "switch"
msgstr ""

#: source/TortoiseSVN_en.xml:5868(para) 
msgid "...that is (not really) the question. While a checkout checks out everything from the desired branch into your working directory, <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Switch...</guimenuitem></menuchoice> only transfers the changed data to your working copy. Good for the network load, good for your patience. :-)"
msgstr ""

#: source/TortoiseSVN_en.xml:5884(para) 
msgid "<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Checkout</guimenuitem></menuchoice> to make a fresh checkout in an empty folder. You can check out to any location on your local disk and you can create as many working copies from your repository as you like."
msgstr ""

#: source/TortoiseSVN_en.xml:5896(para) 
msgid "Switch your current working copy to the newly created copy in the repository. Again select the top level folder of your project and use <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Switch...</guimenuitem></menuchoice> from the context menu."
msgstr ""

#: source/TortoiseSVN_en.xml:5906(para) 
msgid "In the next dialog enter the URL of the branch you just created. Select the <guilabel>Head Revision</guilabel> radio button and click on <guibutton>OK</guibutton>. Your working copy is switched to the new branch/tag."
msgstr ""

#: source/TortoiseSVN_en.xml:5914(para) 
msgid "Switch works just like Update in that it never discards your local changes. Any changes you have made to your working copy which have not yet been committed will be merged when you do the Switch. If you do not want this to happen then you must either commit the changes before switching, or revert your working copy to an already-committed revision (typically HEAD)."
msgstr ""

#: source/TortoiseSVN_en.xml:5925(title) 
msgid "The Switch Dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:5879(para) 
msgid "To be able to work with your freshly generated copy you have several ways to handle it. You can: <placeholder-1/><placeholder-2/>"
msgstr ""

#: source/TortoiseSVN_en.xml:5934(para) 
msgid "Tags are typically used to create a static snapshot of the project at a particular stage. As such they not normally used for development - that's what branches are for, which is the reason we recommended the <filename>/trunk /branches /tags</filename> repository structure in the first place. Working on a tag revision is <emphasis>not a good idea</emphasis>, but because your local files are not write protected there is nothing to stop you doing this by mistake. However, if you try to commit to a path in the repository which contains <filename>/tags/</filename>, TortoiseSVN will warn you."
msgstr ""

#: source/TortoiseSVN_en.xml:5950(para) 
msgid "It may be that you need to make further changes to a release which you have already tagged. The correct way to handle this is to create a new branch from the tag first and commit the branch. Do your Changes on this branch and then create a new tag from this new branch, e.g. <filename>Version_1.0.1</filename>."
msgstr ""

#: source/TortoiseSVN_en.xml:5960(para) 
msgid "If you modify a working copy created from a branch and commit, then all changes go to the new branch and <emphasis>not</emphasis> the trunk. Only the modifications are stored. The rest remains a cheap copy."
msgstr ""

#: source/TortoiseSVN_en.xml:5929(para) 
msgid "Although Subversion itself makes no distinction between tags and branches, the way they are typically used differs a bit. <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:5973(title) 
msgid "Merging"
msgstr ""

#: source/TortoiseSVN_en.xml:5976(primary) 
msgid "merge"
msgstr ""

#: source/TortoiseSVN_en.xml:5978(para) 
msgid "Where branches are used to maintain separate lines of development, at some stage you will want to merge the changes made on one branch back into the trunk, or vice versa."
msgstr ""

#: source/TortoiseSVN_en.xml:5983(para) 
msgid "It is important to understand how branching and merging works in Subversion before you start using it, as it can become quite complex. It is highly recommended that you read the chapter <ulink url=\"http://svnbook.red-bean.com/en/1.1/ch04.html\"><citetitle>Branching and Merging</citetitle></ulink> in the <ulink url=\"http://svnbook.red-bean.com/\"><citetitle>Subversion Book</citetitle></ulink> which gives a full description, and many examples of how it is used."
msgstr ""

#: source/TortoiseSVN_en.xml:5996(para) 
msgid "An important point to remember is that Merge is closely related to Diff. The merge process works by generating a list of differences between two points in the repository, and applying those differences to your working copy. For example if you want to merge the changes made in revision N then you have to compare revision N with revision (N-1). Novices often ask <quote>Why do I have to subtract 1 from the start revision.</quote> Think of the underlying Diff process and it will become clearer. TO make this easier, when you use <guibutton>Show Log</guibutton> to select a range of revisions to merge, TortoiseSVN makes this adjustment for you automatically."
msgstr ""

#: source/TortoiseSVN_en.xml:6009(para) 
msgid "In general it is a good idea to perform a merge into an unmodified working copy. If you have made other changes in your WC, commit those first. If the merge does not go as you expect, you may want to revert the changes, and the <guilabel>Revert</guilabel> command will discard <emphasis>all</emphasis> changes including any you made before the merge."
msgstr ""

#: source/TortoiseSVN_en.xml:6016(para) 
msgid "There are two common use cases for merging which are handled in slightly different ways, as described below."
msgstr ""

#: source/TortoiseSVN_en.xml:6021(title) 
msgid "Merging a Range of Revisions"
msgstr ""

#: source/TortoiseSVN_en.xml:6022(para) 
msgid "This method covers the case when you have made one or more revisions to a branch (or to the trunk) and you want to port those changes across to a different branch."
msgstr ""

#: source/TortoiseSVN_en.xml:6029(title) 
msgid "The Merge Dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:6042(para) 
msgid "In the <guilabel>From:</guilabel> field enter the full folder url of the branch or tag containing the changes you want to port into your working copy. You may also click <guibutton>...</guibutton> to browse the repository and find the desired branch. If you have merged from this branch before, then just use the drop down list which shows a history of previously used URLs."
msgstr ""

#: source/TortoiseSVN_en.xml:6055(para) 
msgid "Because you are porting a range of revisions from the same branch into your working copy, make sure the <guilabel>Use \"From:\" URL</guilabel> checkbox is checked."
msgstr ""

#: source/TortoiseSVN_en.xml:6063(para) 
msgid "In the <guilabel>From Revision</guilabel> field enter the start revision number. This is the revision <emphasis>before</emphasis> the changes you want to merge. Remember that Subversion will create a diff file in order to perform the merge, so the start point has to be just before the first change you are interested in. For example, your log messages may look something like this: <screen>\nRev Comments\n39. Working on MyBranch\n38. Working on trunk\n37. Working on MyBranch\n36. Create branch MyBranch\n35. Working on trunk\n34. Working on trunk\n         ...\n</screen> If you now want to merge all the changes from MyBranch into the trunk you have to choose 36 as the <guilabel>From Revision</guilabel>, not 37 as you might think. If you select revision 37 as the start point, then the difference engine compares the end point with revision 37, and will miss the changes made in revision 37 itself. If that sounds complicated, don't worry, there is an easier way in TortoiseSVN ..."
msgstr ""

#: source/TortoiseSVN_en.xml:6091(para) 
msgid "The easiest way to select the range of revisions you need is to click on <guibutton>Show Log</guibutton>, as this will list recent changes with their log comments. If you want to merge the changes from a single revision, just select that revision. If you want to merge changes from several revisions, then select that range (using the usual <keycap>Shift</keycap>-modifier). Click on <guibutton>OK</guibutton> and the revision numbers of the <guilabel>From revision</guilabel> and <guilabel>To revision</guilabel> in the Merge dialog will <emphasis>both</emphasis> be filled in for you."
msgstr ""

#: source/TortoiseSVN_en.xml:6104(para) 
msgid "When the <guilabel>Use \"From:\" URL</guilabel> checkbox is checked, only one <guibutton>Show Log</guibutton> button is enabled. This is because the Show Log dialog sets both <guilabel>From:</guilabel> and <guilabel>To:</guilabel> revisions, so you need to use the multiple selection method outlined above."
msgstr ""

#: source/TortoiseSVN_en.xml:6112(para) 
msgid "If you have already merged some changes from this branch, hopefully you will have made a note of the last revision merged in the log message when you committed the change. In that case, you can use <guibutton>Show Log</guibutton> for the Working Copy to trace that log message. Use the end point of the last merge as the start point for this merge. For example, if you have merged revisions 37 to 39 last time, then the start point for this merge should be revision 39."
msgstr ""

#: source/TortoiseSVN_en.xml:6125(para) 
msgid "If you have not used <guibutton>Show Log</guibutton> to select the revision range, then you will need to set the <guilabel>To Revision</guilabel> manually. Enter the last revision number in the range you want to merge. Often this will be the HEAD revision, although it doesn't need to be - you may just want to merge a single revision."
msgstr ""

#: source/TortoiseSVN_en.xml:6133(para) 
msgid "If other people may be committing changes then be careful about using the HEAD revision. It may not refer to the revision you think it does if someone else made a commit after your last update."
msgstr ""

#: source/TortoiseSVN_en.xml:6141(para) source/TortoiseSVN_en.xml:6248(para) source/TortoiseSVN_en.xml:8651(para) 
msgid "Click <guibutton>OK</guibutton> to complete the merge."
msgstr ""

#: source/TortoiseSVN_en.xml:6027(para) 
msgid "<placeholder-1/> To merge revisions you need to go to a working copy of the branch in which you want to receive the changes, often the trunk. Select <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Merge...</guimenuitem></menuchoice> from the context menu. <placeholder-2/> The merge is now complete. It's a good idea to have a look at the merge and see if it's as expected. Merging is usually quite complicated. Conflicts often arise if the branch has drifted far from the trunk."
msgstr ""

#: source/TortoiseSVN_en.xml:6150(para) 
msgid "When you have tested the changes and come to commit this revision, your commit log message should <emphasis>always</emphasis> include the revision numbers which have been ported in the merge. If you want to apply another merge at a later time you will need to know what you have already merged, as you do not want to port a change more than once. Unfortunately merge information is not stored by Subversion. For more information about this, refer to <ulink url=\"http://svnbook.red-bean.com/en/1.1/ch04s03.html#svn-ch-4-sect-3.2.1\"><citetitle>Tracking Merges Manually</citetitle></ulink> in the <ulink url=\"http://svnbook.red-bean.com/\"><citetitle>Subversion Book</citetitle></ulink>"
msgstr ""

#: source/TortoiseSVN_en.xml:6166(para) 
msgid "Branch management is important. If you want to keep this branch up to date with the trunk, you should be sure to merge often so that the branch and trunk do not drift too far apart. Of course, you should still avoid repeated merging of changes, as explained above."
msgstr ""

#: source/TortoiseSVN_en.xml:6173(para) 
msgid "Subversion can't merge a file with a folder and vice versa - only folders to folders and files to files. If you click on a file and open up the merge dialog, then you have to give a path to a file in that dialog. If you select a folder and bring up the dialog, then you must specify a folder url for the merge."
msgstr ""

#: source/TortoiseSVN_en.xml:6183(title) 
msgid "Merging Two Different Trees"
msgstr ""

#: source/TortoiseSVN_en.xml:6184(para) 
msgid "This method covers the case when you have made a feature branch as discussed in the Subversion book. All trunk changes have been ported to the feature branch, week by week, and now the feature is complete you want to merge it back into the trunk. Because you have kept the feature branch synchronized with the trunk, the latest versions of branch and trunk will be absolutely identical except for your branch changes. So in this special case, you would merge by comparing the branch with the trunk."
msgstr ""

#: source/TortoiseSVN_en.xml:6205(para) 
msgid "In the <guilabel>From:</guilabel> field enter the full folder url of the <emphasis>trunk</emphasis>. This may sound wrong, but remember that the trunk is the start point to which you want to add the branch changes. You may also click <guibutton>...</guibutton> to browse the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:6216(para) 
msgid "Because you are comparing two different trees, make sure the <guilabel>Use \"From:\" URL</guilabel> checkbox is <emphasis>not</emphasis> checked."
msgstr ""

#: source/TortoiseSVN_en.xml:6223(para) 
msgid "In the <guilabel>To:</guilabel> field enter the full folder url of the feature branch."
msgstr ""

#: source/TortoiseSVN_en.xml:6229(para) 
msgid "In both the <guilabel>From Revision</guilabel> field and the <guilabel>To Revision</guilabel> field, enter the last revision number at which the two trees were synchronized. If you are sure no-one else is making commits you can use the HEAD revision in both cases. If there is a chance that someone else may have made a commit since that synchronization, use the specific revision number to avoid losing more recent commits."
msgstr ""

#: source/TortoiseSVN_en.xml:6239(para) 
msgid "You can also use <guibutton>Show Log</guibutton> to select the revision. Note that in this case you are not selecting a range of revisions, so the revision you select there is what will actually appear in the <guilabel>Revision</guilabel> field."
msgstr ""

#: source/TortoiseSVN_en.xml:6194(para) 
msgid "To merge the feature branch back into the trunk you need to go to a working copy of the trunk. Select <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Merge...</guimenuitem></menuchoice> from the context menu. <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:6254(para) 
msgid "In this case you will not need the feature branch again because the new feature is now integrated into the trunk. The feature branch is redundant and can be deleted from the repository if required."
msgstr ""

#: source/TortoiseSVN_en.xml:6262(title) 
msgid "Previewing Merge Results"
msgstr ""

#: source/TortoiseSVN_en.xml:6263(para) 
msgid "If you are uncertain about the merge operation, you may want to preview what will happen do before you allow it to change your working copy. There are two additional buttons to help you."
msgstr ""

#: source/TortoiseSVN_en.xml:6268(para) 
msgid "<guibutton>Unified Diff</guibutton> creates the diff file (remember that merge is based on diff) and shows you which lines will be changed in your working copy files. As this is a unified diff (patch) file it is not always easy to read out of context, but for small scale changes it is often helpful."
msgstr ""

#: source/TortoiseSVN_en.xml:6275(para) 
msgid "<guibutton>Dry Run</guibutton> performs the merge operation, but does <emphasis>not</emphasis> modify the working copy at all. It shows you a list of the files that will be changed by a real merge, and notes those areas where conflicts will occur."
msgstr ""

#: source/TortoiseSVN_en.xml:6284(title) 
msgid "Locking"
msgstr ""

#: source/TortoiseSVN_en.xml:6286(primary) 
msgid "locking"
msgstr ""

#: source/TortoiseSVN_en.xml:6296(para) 
msgid "You are using <quote>unmergeable</quote> files, for example, graphics files. If two people change the same file, merging is not possible, so one of you will lose their changes."
msgstr ""

#: source/TortoiseSVN_en.xml:6304(para) 
msgid "Your company has always used a locking VCS in the past and there has been a management decision that <quote>locking is best</quote>."
msgstr ""

#: source/TortoiseSVN_en.xml:6288(para) 
msgid "Subversion generally works best without locking, using the <quote>Copy-Modify-Merge</quote> methods described earlier in <xref linkend=\"tsvn-ch-2-sect-2.3\"/>. However there are a few instances when you may need to implement some form of locking policy. <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:6312(para) 
msgid "Firstly you need to ensure that your Subversion server is upgraded to at least version 1.2. Earlier versions do not support locking at all. If you are using <filename>file:///</filename> access, then of course only your client needs to be updated."
msgstr ""

#: source/TortoiseSVN_en.xml:6319(title) 
msgid "How Locking Works in Subversion"
msgstr ""

#: source/TortoiseSVN_en.xml:6320(para) 
msgid "By default, nothing is locked and anyone who has commit access can commit changes to any file at any time. Others will update their working copies periodically and changes in the repository will be merged with local changes."
msgstr ""

#: source/TortoiseSVN_en.xml:6326(para) 
msgid "If you <firstterm>Get a Lock</firstterm> on a file, then only you can commit that file. Commits by all other users will be blocked until you release the lock. A locked file cannot be modified in any way in the repository, so it cannot be deleted or renamed either, except by the lock owner."
msgstr ""

#: source/TortoiseSVN_en.xml:6333(para) 
msgid "However, other users will not necessarily know that you have taken out a lock. Unless they check the lock status regularly, the first they will know about it is when their commit fails, which in most cases is not very useful. To make it easier to manage locks, there is a new Subversion property <literal>svn:needs-lock</literal>. When this property is set (to any value) on a file, whenever the file is checked out or updated, the local copy is made read-only <emphasis>unless</emphasis> that working copy holds a lock for the file. This acts as a warning that you should not edit that file unless you have first acquired a lock. Files which are versioned and read-only are marked with a special overlay in TortoiseSVN to indicate that you need to acquire a lock before editing."
msgstr ""

#: source/TortoiseSVN_en.xml:6349(para) 
msgid "Locks are recorded by working copy location as well as by owner. If you have several working copies (at home, at work) then you can only hold a lock in <emphasis>one</emphasis> of those working copies."
msgstr ""

#: source/TortoiseSVN_en.xml:6355(para) 
msgid "If one of your co-workers acquires a lock and then goes on holiday without releasing it, what do you do? Subversion provides a means to force locks. Releasing a lock held by someone else is referred to as <firstterm>Breaking</firstterm> the lock, and forcibly acquiring a lock which someone else already holds is referred to as <firstterm>Stealing</firstterm> the lock. Naturally these are not things you should do lightly if you want to remain friends with your co-workers."
msgstr ""

#: source/TortoiseSVN_en.xml:6365(para) 
msgid "Locks are recorded in the repository, and a lock token is created in your local working copy. If there is a discrepancy, for example if someone else has broken the lock, the local lock token becomes invalid. The repository is always the definitive reference."
msgstr ""

#: source/TortoiseSVN_en.xml:6373(title) 
msgid "Getting a Lock"
msgstr ""

#: source/TortoiseSVN_en.xml:6382(title) 
msgid "The Locking Dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:6374(para) 
msgid "Select the file(s) in your working copy for which you want to acquire a lock, then select the command <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Get Lock...</guimenuitem></menuchoice>. <placeholder-1/> A dialog appears, allowing you to enter a comment, so others can see why you have locked the file. The comment is optional and currently only used with Svnserve based repositories. If (and <emphasis>only</emphasis> if) you need to steal the lock from someone else, check the <guilabel>Steal lock</guilabel> box, then click on <guibutton>OK</guibutton>."
msgstr ""

#: source/TortoiseSVN_en.xml:6394(para) 
msgid "If you select a folder and then use <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Get Lock...</guimenuitem></menuchoice> the lock dialog will open with <emphasis>every</emphasis> file in <emphasis>every</emphasis> subfolder selected for locking. If you really want to lock an entire hierarchy, that is the way to do it, but you could become very unpopular with your co-workers if you lock them out of the whole project. Use with care ..."
msgstr ""

#: source/TortoiseSVN_en.xml:6408(title) 
msgid "Releasing a Lock"
msgstr ""

#: source/TortoiseSVN_en.xml:6409(para) 
msgid "To make sure you don't forget to release a lock you don't need any more, locked files are shown in the commit dialog and selected by default. If you continue with the commit, locks you hold on the selected files are removed, even if the files haven't been modified. If you don't want to release a lock on certain files, you can uncheck them (if they're not modified). If you want to keep a lock on a file you've modified, you have to enable the <guilabel>Keep locks</guilabel> checkbox before you commit your changes."
msgstr ""

#: source/TortoiseSVN_en.xml:6420(para) 
msgid "To release a lock manually, select the file(s) in your working copy for which you want to release the lock, then select the command <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Release Lock</guimenuitem></menuchoice> There is nothing further to enter so TortoiseSVN will contact the repository and release the locks. You can also use this command on a folder to release all locks recursively."
msgstr ""

#: source/TortoiseSVN_en.xml:6433(title) 
msgid "Checking Lock Status"
msgstr ""

#: source/TortoiseSVN_en.xml:6436(title) 
msgid "The Check for Modifications Dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:6434(para) 
msgid "<placeholder-1/> To see what locks you and others hold, you can use <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Check for Modifications...</guimenuitem></menuchoice>. Locally held lock tokens show up immediately. To check for locks held by others (and to see if any of your locks are broken or stolen) you need to click on <guibutton>Check Repository</guibutton>."
msgstr ""

#: source/TortoiseSVN_en.xml:6449(para) 
msgid "From the context menu here, you can also get and release locks, as well as breaking and stealing locks held by others."
msgstr ""

#: source/TortoiseSVN_en.xml:6454(title) 
msgid "Avoid Breaking and Stealing Locks"
msgstr ""

#: source/TortoiseSVN_en.xml:6455(para) 
msgid "If you break or steal someone else's lock without telling them, you could potentially cause loss of work. If you are working with unmergeable file types and you steal someone else's lock, once you release the lock they are free to check in their changes and overwrite yours. Subversion doesn't lose data, but you have lost the team-working protection that locking gave you."
msgstr ""

#: source/TortoiseSVN_en.xml:6467(title) 
msgid "Making Non-locked Files Read-Only"
msgstr ""

#: source/TortoiseSVN_en.xml:6468(para) 
msgid "As mentioned above, the most effective way to use locking is to set the <literal>svn:needs-lock</literal> property on files. Refer to <xref linkend=\"tsvn-DUG-propertypage\"/> for instructions on how to set properties. Files with this property set will always be checked out and updated with the read-only flag set unless your working copy holds a lock. <graphic fileref=\"../images/ReadOnlyIcon.png\"/> As a reminder, TortoiseSVN uses a special overlay to indicate this."
msgstr ""

#: source/TortoiseSVN_en.xml:6478(para) 
msgid "If you operate a policy where every file has to be locked then you may find it easier to use Subversion's auto-props feature to set the property automatically every time you add new files. Read <xref linkend=\"tsvn-DUG-settings\"/> for further information."
msgstr ""

#: source/TortoiseSVN_en.xml:6486(title) 
msgid "The Locking Hook Scripts"
msgstr ""

#: source/TortoiseSVN_en.xml:6487(para) 
msgid "When you create a new repository with Subversion 1.2 or higher, four hook templates are created in the repository <filename>hooks</filename> directory. These are called before and after getting a lock, and before and after releasing a lock."
msgstr ""

#: source/TortoiseSVN_en.xml:6493(para) 
msgid "It is a good idea to install a <literal>post-lock</literal> and <literal>post-unlock</literal> hook script on the server which sends out an email indicating the file which has been locked. With such a script in place, all your users can be notified if someone locks/unlocks a file. You can find an example hook script <filename>hooks/post-lock.tmpl</filename> in your repository folder."
msgstr ""

#: source/TortoiseSVN_en.xml:6501(para) 
msgid "You might also use hooks to disallow breaking or stealing of locks, or perhaps limit it to a named administrator. Or maybe you want to email the owner when one of their locks is broken or stolen."
msgstr ""

#: source/TortoiseSVN_en.xml:6507(para) 
msgid "Read <xref linkend=\"tsvn-repository-hooks\"/> to find out more."
msgstr ""

#: source/TortoiseSVN_en.xml:6513(title) 
msgid "Creating and Applying Patches"
msgstr ""

#: source/TortoiseSVN_en.xml:6515(primary) 
msgid "patch"
msgstr ""

#: source/TortoiseSVN_en.xml:6519(para) 
msgid "For open source projects (like this one) everyone has read access to the repository, and anyone can make a contribution to the project. So how are those contributions controlled? If just anyone could commit changes, the project would be permanently unstable and probably permanently broken. In this situation the change is managed by submitting a <firstterm>patch</firstterm> file to the development team, who do have write access. They can review the patch first, and then either submit it to the repository or reject it back to the author."
msgstr ""

#: source/TortoiseSVN_en.xml:6530(para) 
msgid "Patch files are simply Unified-Diff files showing the differences between your working copy and the base revision."
msgstr ""

#: source/TortoiseSVN_en.xml:6535(title) 
msgid "Creating a Patch File"
msgstr ""

#: source/TortoiseSVN_en.xml:6536(para) 
msgid "First you need to make <emphasis>and test</emphasis> your changes. Then instead of using <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Commit...</guimenuitem></menuchoice> on the parent folder, you select <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Create Patch...</guimenuitem></menuchoice>"
msgstr ""

#: source/TortoiseSVN_en.xml:6550(title) 
msgid "The Create Patch dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:6553(para) 
msgid "you can now select the files you want included in the patch, just as you would with a full commit. This will produce a single file containing a summary of all the changes you have made to the selected files since the last update from the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:6559(para) 
msgid "You can produce separate patches containing changes to different sets of files. Of course, if you create a patch file, make some more changes to the <emphasis>same</emphasis> files and then create another patch, the second patch file will include <emphasis>both</emphasis> sets of changes."
msgstr ""

#: source/TortoiseSVN_en.xml:6565(para) 
msgid "Just save the file using a filename of your choice. Patch files can have any extension you like, but by convention they should use the <filename>.patch</filename> or <filename>.diff</filename> extension. You are now ready to submit your patch file."
msgstr ""

#: source/TortoiseSVN_en.xml:6574(title) 
msgid "Applying a Patch File"
msgstr ""

#: source/TortoiseSVN_en.xml:6575(para) 
msgid "Patch files are applied to your working copy. This should be done from the same folder level as was used to create the patch. If you are not sure what this is, just look at the first line of the patch file. For example, if the first file being worked on was <filename>doc/source/english/chapter1.xml</filename> and the first line in the patchfile is <filename>Index: english/chapter1.xml</filename> then you need to apply the patch to the <filename>english</filename> folder. However, provided you are in the correct working copy, if you pick the wrong folder level, TSVN will notice and suggest the correct level."
msgstr ""

#: source/TortoiseSVN_en.xml:6589(para) 
msgid "In order to apply a patch file to your working copy, you need to have at least read access to the repository. The reason for this is that the merge program must reference the changes back to the revision against which they were made by the remote developer."
msgstr ""

#: source/TortoiseSVN_en.xml:6596(para) 
msgid "From the context menu for that folder, click on <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Apply Patch...</guimenuitem></menuchoice> This will bring up a file open dialog allowing you to select the patch file to apply. By default only <filename>.patch</filename> or <filename>.diff</filename> files are shown, but you can opt for \"All files\"."
msgstr ""

#: source/TortoiseSVN_en.xml:6607(para) 
msgid "Alternatively, if the patch file has a <filename>.patch</filename> or <filename>.diff</filename> extension, you can right click on it directly and select <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Apply Patch...</guimenuitem></menuchoice>. In this case you will be prompted to enter a working copy location."
msgstr ""

#: source/TortoiseSVN_en.xml:6617(para) 
msgid "These two methods just offer different ways of doing the same thing. With the first method you select the WC and browse to the patch file. With the second you select the patch file and browse to the WC."
msgstr ""

#: source/TortoiseSVN_en.xml:6622(para) 
msgid "Once you have selected the patch file and working copy location, TortoiseMerge runs to merge the changes from the patch file with your working copy. A small window lists the files which have been changed. Double click on each one in turn, review the changes and save the merged files."
msgstr ""

#: source/TortoiseSVN_en.xml:6629(para) 
msgid "The remote developer's patch has now been applied to your working copy, so you need to commit to allow everyone else to access the changes from the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:6637(title) 
msgid "Who Changed Which Line?"
msgstr ""

#: source/TortoiseSVN_en.xml:6639(primary) 
msgid "blame"
msgstr ""

#: source/TortoiseSVN_en.xml:6642(primary) 
msgid "annotate"
msgstr ""

#: source/TortoiseSVN_en.xml:6645(primary) 
msgid "praise"
msgstr ""

#: source/TortoiseSVN_en.xml:6650(title) 
msgid "The Annotate / Blame Dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:6648(para) 
msgid "<placeholder-1/> Sometimes you need to know not only what lines have changed, but also who exactly changed specific lines in a file. That's when the <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Blame...</guimenuitem></menuchoice> command, sometimes also referred to as <firstterm>annotate</firstterm> command comes in handy."
msgstr ""

#: source/TortoiseSVN_en.xml:6662(para) 
msgid "This command lists, for every line in a file, the author and the revision the line was changed."
msgstr ""

#: source/TortoiseSVN_en.xml:6666(para) 
msgid "If you're not interested in changes from earlier revisions you can set the revision from which the blame should start. Set this to <literal>1</literal>, if you want the blame for <emphasis>every</emphasis> revision."
msgstr ""

#: source/TortoiseSVN_en.xml:6671(para) 
msgid "By default the blame file is viewed using <firstterm>TortoiseBlame</firstterm>, which highlights the different revisions to make it easier to read. If you wish to print or edit the blame file, select <guilabel>Use Text viewer to view blames</guilabel>"
msgstr ""

#: source/TortoiseSVN_en.xml:6677(para) 
msgid "Once you press <guibutton>OK</guibutton> TortoiseSVN starts retrieving the data to create the blame file. Please note: This can take several minutes to finish, depending on how much the file has changed and of course your network connection to the repository. Once the blame process has finished the result is written into a temporary file and you can view the results."
msgstr ""

#: source/TortoiseSVN_en.xml:6687(title) 
msgid "TortoiseBlame"
msgstr ""

#: source/TortoiseSVN_en.xml:6685(para) 
msgid "<placeholder-1/> TortoiseBlame, which is included with TortoiseSVN, makes the blame file easier to read. When you hover the mouse over a line in the blame info column, all lines with the same revision are shown with a darker background. Lines from other revisions which were changed by the same author are shown with a light background. The colouring may not work as clearly if you have your display set to 256 colour mode."
msgstr ""

#: source/TortoiseSVN_en.xml:6698(para) 
msgid "If you <action>left click</action> on a line, all lines with the same revision are highlighted, and lines from other revisions by the same author are highlighted in a lighter colour. This highlighting is sticky, allowing you to move the mouse without losing the highlights. Click on that revision again to turn off highlighting."
msgstr ""

#: source/TortoiseSVN_en.xml:6705(para) 
msgid "The revision comments are shown in a hint box whenever the mouse hovers over the blame info column."
msgstr ""

#: source/TortoiseSVN_en.xml:6709(para) 
msgid "You can search within the Blame report using <menuchoice><guimenu>Edit</guimenu><guimenuitem>Find...</guimenuitem></menuchoice>. This allows you to search for revision numbers, authors and the content of the file itself. Log messages are not included in the search - you should use the Log Dialog to search those."
msgstr ""

#: source/TortoiseSVN_en.xml:6721(title) source/TortoiseSVN_en.xml:6733(title) 
msgid "The Repository Browser"
msgstr ""

#: source/TortoiseSVN_en.xml:6723(primary) 
msgid "repobrowser"
msgstr ""

#: source/TortoiseSVN_en.xml:6726(para) 
msgid "Sometimes you need to work directly on the repository, without having a working copy. That's what the <firstterm>Repository Browser</firstterm> is for. Just as the explorer and the icon overlays allow you to view your working copy, so the Repository Browser allows you to view the structure and status of the repository. <placeholder-1/> With the Repository Browser you can execute commands like copy, move, rename, ... directly on the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:6739(para) 
msgid "At the top of the Repository Browser Window you can enter the URL of the repository and the revision you want to browse. Browsing an older revision is useful if you want to e.g. recover a previously deleted file. Use the <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Copy To...</guimenuitem></menuchoice> command to do that and enter the full working copy path to where you want to recover your deleted file."
msgstr ""

#: source/TortoiseSVN_en.xml:6751(para) 
msgid "If you select two items, you can view the differences either as a unified-diff, or as a list of files which can be visually diffed using the default diff tool. This can be particularly useful for comparing two tags to see what changed."
msgstr ""

#: source/TortoiseSVN_en.xml:6757(para) 
msgid "If you select 2 tags which are copied from the same root (typically <literal>/trunk/</literal>), you can use <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Show Log...</guimenuitem></menuchoice> to view the list of revisions between the two tag points."
msgstr ""

#: source/TortoiseSVN_en.xml:6766(para) 
msgid "You can also use the repository browser for drag-and-drop operations. If you drag a folder from explorer into the repo browser, it will be imported into the repository. Note that if you drag multiple items, they will be imported in separate commits."
msgstr ""

#: source/TortoiseSVN_en.xml:6772(para) 
msgid "If you want to copy/move a file or folder to another location and also give it a new name at the same time, you can <action>right-drag</action> the item instead of just drag it. In that case, a rename dialog is shown where you can enter a new name for the file or folder."
msgstr ""

#: source/TortoiseSVN_en.xml:6781(title) 
msgid "Revision Graphs"
msgstr ""

#: source/TortoiseSVN_en.xml:6786(primary) 
msgid "graph"
msgstr ""

#: source/TortoiseSVN_en.xml:6790(title) 
msgid "A Revision Graph"
msgstr ""

#: source/TortoiseSVN_en.xml:6788(para) 
msgid "<placeholder-1/> Sometimes you need to know where branches and tags were taken from the trunk, and the ideal way to view this sort of information is as a graph or tree structure. That's when you need to use <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Revision Graph...</guimenuitem></menuchoice>"
msgstr ""

#: source/TortoiseSVN_en.xml:6801(para) 
msgid "This command analyses the revision history and attempts to create a tree showing the points at which copies were taken, and when branches/tags were deleted. Please note: It can take several minutes to retrieve all the data needed to create the revision graph, depending on how much the project has changed and of course your network connection to the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:6813(term) 
msgid "Added file/folder"
msgstr ""

#: source/TortoiseSVN_en.xml:6815(para) 
msgid "Items which have been added, or created by copying another file/folder are shown using a rounded rectangle."
msgstr ""

#: source/TortoiseSVN_en.xml:6822(term) 
msgid "Deleted file/folder"
msgstr ""

#: source/TortoiseSVN_en.xml:6824(para) 
msgid "Deleted items eg. a branch which is no longer required, are shown using an octagon (rectangle with corners cut off)."
msgstr ""

#: source/TortoiseSVN_en.xml:6831(term) 
msgid "Branch tip revision"
msgstr ""

#: source/TortoiseSVN_en.xml:6833(para) 
msgid "Where a branch (or trunk or tag) has been modified since the last branch node, this is shown using an ellipse. This means that the latest revision on every branch is always shown on the graph."
msgstr ""

#: source/TortoiseSVN_en.xml:6842(term) 
msgid "Normal file/folder"
msgstr ""

#: source/TortoiseSVN_en.xml:6844(para) 
msgid "All other items are shown using a plain rectangle."
msgstr ""

#: source/TortoiseSVN_en.xml:6809(para) 
msgid "The revision graph shows several types of node: <placeholder-1/> Note that by default the graph only shows the points at which items were added or deleted. Showing every revision of a project could generate a very large graph for non-trivial cases. If you really want to see <emphasis>all</emphasis> revision, there is an option to do this in the <guilabel>View</guilabel> menu."
msgstr ""

#: source/TortoiseSVN_en.xml:6856(para) 
msgid "The revision date, author and comments are shown in a hint box whenever the mouse hovers over a revision box."
msgstr ""

#: source/TortoiseSVN_en.xml:6860(para) 
msgid "If you select two revisions (Use <action>Ctrl left click</action>), you can use the context menu to show the differences between these revisions. You can choose to show differences as at the branch creation points, but usually you will want to show the differences at the branch end points, i.e. at the HEAD revision."
msgstr ""

#: source/TortoiseSVN_en.xml:6867(para) 
msgid "You can view the differences as a Unified-Diff file, which shows all differences in a single file with minimal context. If you opt to <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Compare Revisions</guimenuitem></menuchoice> you will be presented with a list of changed files. <action>Double click</action> on a file name to fetch both revisions of the file and compare them using the visual difference tool."
msgstr ""

#: source/TortoiseSVN_en.xml:6878(para) 
msgid "If you <action>right click</action> on a revision you can use <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Show Log</guimenuitem></menuchoice> to view the history."
msgstr ""

#: source/TortoiseSVN_en.xml:6887(para) 
msgid "Because Subversion cannot provide all the information required, a certain amount of interpretation is required, which can sometimes give strange results. Nevertheless, the output for the trunk will generally give useful results."
msgstr ""

#: source/TortoiseSVN_en.xml:6896(title) 
msgid "Relocating a working copy"
msgstr ""

#: source/TortoiseSVN_en.xml:6898(primary) 
msgid "relocate"
msgstr ""

#: source/TortoiseSVN_en.xml:6903(title) 
msgid "The Relocate Dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:6901(para) 
msgid "<placeholder-1/> If your repository has for some reason changed it's location (IP/URL). Maybe you're even stuck and can't commit and you don't want to checkout your working copy again from the new location and to move all your changed data back into the new working copy, <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Relocate</guimenuitem></menuchoice> is the command you are looking for. It basically does very little: it scans all \"entries\" files in the <filename>.svn</filename> folder and changes the URL of the entries to the new value."
msgstr ""

#: source/TortoiseSVN_en.xml:6927(para) 
msgid "The IP address of the server has changed."
msgstr ""

#: source/TortoiseSVN_en.xml:6930(para) 
msgid "The protocol has changed (e.g. http:// to https://)."
msgstr ""

#: source/TortoiseSVN_en.xml:6933(para) 
msgid "The repository root path in the server setup has changed."
msgstr ""

#: source/TortoiseSVN_en.xml:6921(para) 
msgid "<emphasis>This is a very infrequently used operation</emphasis>. The relocate command is <emphasis>only</emphasis> used if the URL of the repository root has changed. Possible reasons are: <placeholder-1/> Put another way, you need to relocate when your working copy is referring to the same location in the same repository, but the repository itself has moved."
msgstr ""

#: source/TortoiseSVN_en.xml:6944(para) 
msgid "You want to move to a different Subversion repository. In that case you should perform a clean checkout from the new repository location."
msgstr ""

#: source/TortoiseSVN_en.xml:6950(para) 
msgid "You want to switch to a different branch or directory within the same repository. To do that you should use <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Switch...</guimenuitem></menuchoice>. Read <xref linkend=\"tsvn-DUG-switch-1\"/> for more information."
msgstr ""

#: source/TortoiseSVN_en.xml:6940(para) 
msgid "It does not apply if: <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:6962(para) 
msgid "If you use relocate in either of the cases above, it <emphasis>will corrupt your working copy</emphasis> and you will get many unexplainable error messages while updating, committing, etc. Once that has happened, the only fix is a fresh checkout."
msgstr ""

#: source/TortoiseSVN_en.xml:6971(title) 
msgid "Integration with Bugtracking Systems / Issue trackers"
msgstr ""

#: source/TortoiseSVN_en.xml:6973(primary) 
msgid "bugtracking"
msgstr ""

#: source/TortoiseSVN_en.xml:6976(primary) 
msgid "bugtracker"
msgstr ""

#: source/TortoiseSVN_en.xml:6979(primary) 
msgid "issuetracker"
msgstr ""

#: source/TortoiseSVN_en.xml:6981(para) 
msgid "It is very common in Software Development for changes to be related to a specific bug or issue ID. Users of bug tracking systems (issue trackers) would like to associate the changes they make in Subversion with a specific ID in their issue tracker. Most issue trackers therefore provide a pre-commit hook script which parses the log message to find the bug ID with which the commit is associated. This is somewhat error prone since it relies on the user to write the log message properly so that the pre-commit hook script can parse it correctly."
msgstr ""

#: source/TortoiseSVN_en.xml:6994(para) 
msgid "When the user enters a log message, a well defined line including the issue number associated with the commit can be added automatically. This reduces the risk that the user enters the issue number in a way the bug tracking tools can't parse correctly."
msgstr ""

#: source/TortoiseSVN_en.xml:7000(para) 
msgid "Or TortoiseSVN can highlight the part of the entered log message which is recognized by the issue tracker. That way the user knows that the log message can be parsed correctly."
msgstr ""

#: source/TortoiseSVN_en.xml:7007(para) 
msgid "When the user browses the log messages, TortoiseSVN creates a link out of each bug ID in the log message which fires up the browser to the issue mentioned."
msgstr ""

#: source/TortoiseSVN_en.xml:6990(para) 
msgid "TortoiseSVN can help the user in two ways: <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:7015(para) 
msgid "You can integrate a Bugtracking Tool of your choice in TortoiseSVN. To do this, you have to define some properties, which start with <literal>bugtraq:</literal>. They must be set on Folders: (<xref linkend=\"tsvn-DUG-propertypage\"/>)"
msgstr ""

#: source/TortoiseSVN_en.xml:7027(term) 
msgid "bugtraq:url"
msgstr ""

#: source/TortoiseSVN_en.xml:7029(para) 
msgid "Set this property to the url of your bugtracking tool. It must be properly URI encoded and it has to contain <literal>%BUGID%</literal>. <literal>%BUGID%</literal> is replaced with the Issuenumber you entered. This allows TortoiseSVN to display a link in the log dialog, so when you are looking at the revision log you can jump directly to your bugtracking tool. You do not have to provide this property, but then TortoiseSVN shows only the issuenumber and not the link to it. e.g the TortoiseSVN project is using <literal>http://tortoisesvn.tigris.org/issues/show_bug.cgi?id=%BUGID%</literal>"
msgstr ""

#: source/TortoiseSVN_en.xml:7047(term) 
msgid "bugtraq:warnifnoissue"
msgstr ""

#: source/TortoiseSVN_en.xml:7049(para) 
msgid "Set this to <literal>true</literal>, if you want TortoiseSVN to warn you because of an empty issuenumber textfield. Valid values are <literal>true/false</literal>. <emphasis> If not defined, <literal>false</literal> is assumed. </emphasis>"
msgstr ""

#: source/TortoiseSVN_en.xml:7021(para) 
msgid "There are two ways to integrate TortoiseSVN with issue trackers. One is based on simple strings, the other is based on <literal>regular expressions</literal>. The properties used by both approaches are: <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:7068(term) 
msgid "bugtraq:message"
msgstr ""

#: source/TortoiseSVN_en.xml:7070(para) 
msgid "<emphasis> This property activates the Bugtracking System. </emphasis> If this property is set, then TortoiseSVN will prompt you to enter an issue number when you commit your changes. It's used to add a line at the end of the logmessage. It must contain <literal>%BUGID%</literal>, which is replaced with the issuenumber on commit. This ensures that your commit log contains a reference to the issuenumber which is always in a consistent format and can be parsed by your Bugtracking tool to associate the issuenumber with a particular commit. e.g the TortoiseSVN project is using <literal>Issue : %BUGID%</literal>, but this depends on your Tool."
msgstr ""

#: source/TortoiseSVN_en.xml:7090(term) 
msgid "bugtraq:append"
msgstr ""

#: source/TortoiseSVN_en.xml:7092(para) 
msgid "This property defines if the bug-ID is appended (true) to the end of the log message or inserted (false) at the start of the log message. Valid values are <literal>true/false</literal>. <emphasis> If not defined, <literal>true</literal> is assumed, so that existing projects don't break. </emphasis>"
msgstr ""

#: source/TortoiseSVN_en.xml:7105(term) 
msgid "bugtraq:label"
msgstr ""

#: source/TortoiseSVN_en.xml:7107(para) 
msgid "This text is shown by TortoiseSVN on the commit dialog to label the edit box where you enter the issuenumber. If it's not set, <literal>Bug-ID / Issue-Nr:</literal> will be displayed. Keep in mind though that the window will not be resized to fit this label, so keep the size of the label below 20-25 characters."
msgstr ""

#: source/TortoiseSVN_en.xml:7119(term) 
msgid "bugtraq:number"
msgstr ""

#: source/TortoiseSVN_en.xml:7121(para) 
msgid "If set to <literal>true</literal> only numbers are allowed in the issuenumber textfield. An exception is the comma, so you can comma separate several numbers. Valid values are <literal>true/false</literal>. <emphasis> If not defined, <literal>true</literal> is assumed. </emphasis>"
msgstr ""

#: source/TortoiseSVN_en.xml:7062(para) 
msgid "In the simple approach, TortoiseSVN shows the user a separate input field where a bug ID can be entered. Then a separate line is appended/prepended to the log message the user entered. <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:7142(term) 
msgid "bugtraq:logregex"
msgstr ""

#: source/TortoiseSVN_en.xml:7144(para) 
msgid "This property contains one or two regular expressions, separated by a newline."
msgstr ""

#: source/TortoiseSVN_en.xml:7148(para) 
msgid "If only one expression is set, then the bare bug ID's must be matched in the groups of the regex string. Example: <literal>[Ii]ssue(?:s)? #?(\\d+)</literal>"
msgstr ""

#: source/TortoiseSVN_en.xml:7153(para) 
msgid "If two expressions are set, then the first expression is used to find a string which relates to the bug ID but may contain more than just the bug ID (e.g. \"Issue #123\" or \"resolves issue 123\"). The second expression is then used to extract the bare bug ID from the string extracted with the first expression. An example:"
msgstr ""

#: source/TortoiseSVN_en.xml:7161(para) 
msgid "If you want to catch every pattern \"issue #XXX\" and \"issue #890, #789\" inside a log message you could use the following regex strings: <literal>[Ii]ssue #?(\\d+)(,? ?#'(\\d+))+</literal> and the second expression as <literal>(\\d+)</literal>"
msgstr ""

#: source/TortoiseSVN_en.xml:7167(para) 
msgid "If you are unfamiliar with regular expressions, take a look at the online documentation and tutorial at <ulink url=\"http://www.regular-expressions.info/\"><citetitle>http://www.regular-expressions.info/</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:7134(para) 
msgid "In the approach with <literal>regular expressions</literal>, TortoiseSVN doesn't show a separate input field but marks the part of the log message the user enters which is recognized by the issue tracker. This is done while the user writes the log message. This also means that the bug ID can be anywhere inside a log message! <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:7179(para) 
msgid "Even if you don't have an issue tracker with a pre-commit hook parsing your log messages, you still can use this to turn the issues mentioned in your log messages into links!"
msgstr ""

#: source/TortoiseSVN_en.xml:7192(title) 
msgid "Set the Properties on Folders"
msgstr ""

#: source/TortoiseSVN_en.xml:7193(para) 
msgid "These properties must be set on folders for the system to work. When you commit a file or folder the properties are read from that folder. If the properties are not found there, TortoiseSVN will search upwards through the folder tree to find them until it comes to an unversioned folder, or the tree root (eg. <literal>C:\\</literal>) is found. If you can be sure that each user checks out only from e.g <filename>trunk/</filename> and not some subfolder, then it's enough if you set the properties on <filename>trunk/</filename>. If you can't be sure, you should set the properties recursively on each subfolder. A property setting deeper in the project hierarchy overrides settings on higher levels (closer to <filename>trunk/</filename>)."
msgstr ""

#: source/TortoiseSVN_en.xml:7214(para) 
msgid "This issue tracker integration is not restricted to TortoiseSVN; it can be used with any Subversion client. For more information, read the full <ulink url=\"http://tortoisesvn.tigris.org/svn/tortoisesvn/trunk/doc/issuetrackers.txt\"><citetitle>Issuetracker Integration Specification</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:7223(title) 
msgid "TortoiseSVN's Settings"
msgstr ""

#: source/TortoiseSVN_en.xml:7225(primary) 
msgid "settings"
msgstr ""

#: source/TortoiseSVN_en.xml:7227(para) 
msgid "To find out what the different settings are for, just leave your mouse pointer a second on the editbox/checkbox... and a helpful tooltip will popup."
msgstr ""

#: source/TortoiseSVN_en.xml:7234(title) 
msgid "General Settings"
msgstr ""

#: source/TortoiseSVN_en.xml:7236(primary) 
msgid "sounds"
msgstr ""

#: source/TortoiseSVN_en.xml:7240(title) 
msgid "The Settings Dialog, General Page"
msgstr ""

#: source/TortoiseSVN_en.xml:7238(para) 
msgid "<placeholder-1/> This dialog allows you to specify your preferred language, and the Subversion-specific settings."
msgstr ""

#: source/TortoiseSVN_en.xml:7248(term) 
msgid "Language"
msgstr ""

#: source/TortoiseSVN_en.xml:7250(para) 
msgid "Selects your user interface language. What else did you expect?"
msgstr ""

#: source/TortoiseSVN_en.xml:7257(term) 
msgid "Automatically check for newer versions every week"
msgstr ""

#: source/TortoiseSVN_en.xml:7259(para) 
msgid "If checked, TortoiseSVN will contact its download site once a week to see if there is a newer version of the program available. Use <guibutton>Check now</guibutton> if you want an answer right away. The new version will not be downloaded; you simply receive an information dialog telling you that the new version is available."
msgstr ""

#: source/TortoiseSVN_en.xml:7270(term) 
msgid "System sounds"
msgstr ""

#: source/TortoiseSVN_en.xml:7276(para) 
msgid "Error"
msgstr ""

#: source/TortoiseSVN_en.xml:7281(para) 
msgid "Notice"
msgstr ""

#: source/TortoiseSVN_en.xml:7286(para) 
msgid "Warning"
msgstr ""

#: source/TortoiseSVN_en.xml:7272(para) 
msgid "TortoiseSVN has three custom sounds which are installed by default. <placeholder-1/> You can select different sounds (or turn these sounds off completely) using the Windows Control Panel. <guibutton>Configure</guibutton> is a shortcut to the Control Panel."
msgstr ""

#: source/TortoiseSVN_en.xml:7298(term) 
msgid "Global ignore pattern"
msgstr ""

#: source/TortoiseSVN_en.xml:7304(primary) 
msgid "global ignore"
msgstr ""

#: source/TortoiseSVN_en.xml:7306(para) 
msgid "Global ignore patterns are used to prevent unversioned files from showing up e.g. in the commit dialog. Files matching the patterns are also ignored by an import. Ignore files or directories by typing in the names or extensions. Patterns are separated by spaces e.g. <literal>*/bin */obj *.bak *.~?? *.jar *.[Tt]mp</literal>. The first two entries refer to directories, the other four to files. These patterns use filename globbing. Read <xref linkend=\"tsvn-DUG-ignore-glob\"/> for more information."
msgstr ""

#: source/TortoiseSVN_en.xml:7318(para) 
msgid "Note that the ignore patterns you specify here will also affect other Subversion clients running on your PC, including the command line client."
msgstr ""

#: source/TortoiseSVN_en.xml:7324(para) 
msgid "If you use the Subversion configuration file to set a <literal>global-ignores</literal> pattern, it will override the settings you make here. The Subversion configuration file is accessed using the <guibutton>Edit</guibutton> as described below."
msgstr ""

#: source/TortoiseSVN_en.xml:7332(para) 
msgid "This ignore pattern will affect all your projects. It is not versioned, so it will not affect other users. By contrast you can also use the versioned <literal>svn:ignore</literal> property to exclude files or directories from version control. Read <xref linkend=\"tsvn-DUG-ignore\"/> for more information."
msgstr ""

#: source/TortoiseSVN_en.xml:7344(term) 
msgid "Set filedates to the \"last commit time\""
msgstr ""

#: source/TortoiseSVN_en.xml:7346(para) 
msgid "This option tells TortoiseSVN to set the filedates to the last commit time when doing a checkout or an update. Otherwise TortoiseSVN will use the current date. If you are developing software it is generally best to use the current date because build systems normally look at the datestamps to decide which files need compiling. If you use \"last commit time\" and revert to an older file revision, your project may not compile as you expect it to."
msgstr ""

#: source/TortoiseSVN_en.xml:7360(term) 
msgid "Subversion configuration file"
msgstr ""

#: source/TortoiseSVN_en.xml:7362(para) 
msgid "Use <guibutton>Edit</guibutton> to edit the Subversion configuration file directly. Some settings cannot be modified directly by TortoiseSVN, and need to be set here instead. For more information about the Subversion <filename>config</filename> file see the <ulink url=\"http://svnbook.red-bean.com/en/1.1/ch07.html#svn-ch-7-sect-1.3.2\"><citetitle>Subversion Manual</citetitle></ulink>. The section on <ulink url=\"http://svnbook.red-bean.com/en/1.1/ch07s02.html#svn-ch-7-sect-2.4\"><citetitle>Automatic Property Setting</citetitle></ulink> is of particular interest, and that is configured here. Note that Subversion can read configuration information from several places, and you need to know which one takes priority. Refer to <ulink url=\"http://svnbook.red-bean.com/en/1.1/ch07.html#svn-ch-7-sect-1.2\"><citetitle>Configuration and the Windows Registry</citetitle></ulink> to find out more."
msgstr ""

#: source/TortoiseSVN_en.xml:7387(term) 
msgid "Subversion authentication data"
msgstr ""

#: source/TortoiseSVN_en.xml:7389(para) 
msgid "When you authenticate with a subversion server, the username and password are cached locally so you don't have to keep entering them. To clear everything from that cache, use <guibutton>Clear now</guibutton>."
msgstr ""

#: source/TortoiseSVN_en.xml:7395(para) 
msgid "If you want to clear auth data for one particular server only, read <xref linkend=\"tsvn-DUG-general-auth\"/> for instructions on how to find the cached data."
msgstr ""

#: source/TortoiseSVN_en.xml:7405(title) 
msgid "Look and Feel Settings"
msgstr ""

#: source/TortoiseSVN_en.xml:7409(title) source/TortoiseSVN_en.xml:7475(title) 
msgid "The Settings Dialog, Look and Feel Page"
msgstr ""

#: source/TortoiseSVN_en.xml:7407(para) 
msgid "<placeholder-1/> This page allows you to specify which of the TortoiseSVN context menu entries will show up in the main context menu, and which will appear in the TortoiseSVN submenu. By default most items are checked and appear in the submenu."
msgstr ""

#: source/TortoiseSVN_en.xml:7417(para) 
msgid "If you have a very large number of files in your working copy folders, it can take a long time before the context menu appears when you <action>right click</action> on a folder. This is because Subversion fetches the status for all files when you ask for folder status. To avoid this delay you can uncheck the <guilabel>Fetch status for context menu</guilabel> box. Be warned that the context menu for folders will not always be correct, and may include items which should not really be there. For example, you will see <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Show Log</guimenuitem></menuchoice> for an <literal>Added</literal> folder, which will not work because the folder is not yet in the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:7439(term) 
msgid "Unchecked (default)"
msgstr ""

#: source/TortoiseSVN_en.xml:7441(para) 
msgid "In this state the menu items are all drawn by TortoiseSVN. No accelerator keys are shown."
msgstr ""

#: source/TortoiseSVN_en.xml:7448(term) 
msgid "Checked"
msgstr ""

#: source/TortoiseSVN_en.xml:7450(para) 
msgid "This activates the accelerators for TortoiseSVN commands, but of course these may conflict with the accelerators for anything else in the explorer context menu. Pressing the shortcut key multiple times will cycle through the matching context menu items. In this state, the menu items are drawn by Windows which makes the icons look ugly."
msgstr ""

#: source/TortoiseSVN_en.xml:7461(term) 
msgid "Indeterminate"
msgstr ""

#: source/TortoiseSVN_en.xml:7463(para) 
msgid "In this mode the accelerator keys are active and the menu items are drawn in text only mode without icons."
msgstr ""

#: source/TortoiseSVN_en.xml:7434(para) 
msgid "The option <guilabel>Enable accelerators on the top level menu</guilabel> has three states: <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:7471(title) 
msgid "Icon Overlay Settings"
msgstr ""

#: source/TortoiseSVN_en.xml:7473(para) 
msgid "<placeholder-1/> This page allows you to choose the items for which TortoiseSVN will display icon overlays. Network drives can be very slow, so by default icons are not shown for working copies located on network shares. You can even disable all icon overlays, but where's the fun in that?"
msgstr ""

#: source/TortoiseSVN_en.xml:7483(para) 
msgid "USB Flash drives appear to be a special case in that the drive type is identified by the device itself. Some appear as fixed drives, and some as removable drives."
msgstr ""

#: source/TortoiseSVN_en.xml:7488(para) 
msgid "By default, overlay icons will appear in all open/save dialogs as well as in Windows Explorer. If you want them to appear <emphasis>only</emphasis> in Windows Explorer, check the <guilabel>Show overlays only in explorer</guilabel> box."
msgstr ""

#: source/TortoiseSVN_en.xml:7494(para) 
msgid "Normally the icon overlays act recursively, which means that the overlay for a folder shows the most significant status of all its subfolders. If there is a modified file deep in the hierarchy, the top level folder will also show modified status to remind you that there are buried changes. If you have <emphasis>very</emphasis> large working copies then you may find that the recursive status feature causes too much disk activity and disruption on your system, although this is not usually a problem. In that case you can uncheck <guilabel>Show overlay status icons recursively</guilabel> so that folder status is shown only for the folder itself."
msgstr ""

#: source/TortoiseSVN_en.xml:7507(para) 
msgid "The <guilabel>Exclude Paths</guilabel> are used to tell TortoiseSVN those paths for which it should <emphasis>not</emphasis> show icon overlays and status columns. This is useful if you have some very big working copies containing only libraries which you won't change at all and therefore don't need the overlays. For example:"
msgstr ""

#: source/TortoiseSVN_en.xml:7515(para) 
msgid "<filename>f:\\development\\SVN\\Subversion</filename> will disable the overlays <emphasis>only</emphasis> on that specific folder. You still can see the overlays on all files and folder inside that folder."
msgstr ""

#: source/TortoiseSVN_en.xml:7520(para) 
msgid "<filename>f:\\development\\SVN\\Subversion*</filename> will disable the overlays on <emphasis>all</emphasis> files and folders whose path starts with <filename>f:\\development\\SVN\\Subversion</filename>. That means you won't see overlays for any files and folders below that path."
msgstr ""

#: source/TortoiseSVN_en.xml:7527(para) 
msgid "The same applies to the <guilabel>Include Paths</guilabel>. Except that for those paths the overlays are shown even if the overlays are disabled for that specific drive type, or by an exclude path specified above."
msgstr ""

#: source/TortoiseSVN_en.xml:7532(para) 
msgid "TSVNCache.exe also uses these paths to restrict its scanning. If you want it to look only in particular folders, disable all drive types and include only the folders you specifically want to be scanned."
msgstr ""

#: source/TortoiseSVN_en.xml:7539(title) 
msgid "Icon Set Selection"
msgstr ""

#: source/TortoiseSVN_en.xml:7543(title) 
msgid "The Settings Dialog, Icon Set Page"
msgstr ""

#: source/TortoiseSVN_en.xml:7541(para) 
msgid "<placeholder-1/> You can change the overlay icon set to the one you like best. Note that if you change overlay set, you may have to restart your computer for the changes to take effect."
msgstr ""

#: source/TortoiseSVN_en.xml:7552(title) 
msgid "TortoiseSVN Dialog Settings 1"
msgstr ""

#: source/TortoiseSVN_en.xml:7556(title) 
msgid "The Settings Dialog, Dialogs 1 Page"
msgstr ""

#: source/TortoiseSVN_en.xml:7554(para) 
msgid "<placeholder-1/> This dialog allows you to configure some of TortoiseSVN's dialogs the way you like them."
msgstr ""

#: source/TortoiseSVN_en.xml:7564(term) 
msgid "Default number of log messages"
msgstr ""

#: source/TortoiseSVN_en.xml:7566(para) 
msgid "Limits the number of log messages that TortoiseSVN fetches when you first select <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Show Log</guimenuitem></menuchoice> Useful for slow server connections. You can always use <guibutton>Get All</guibutton> or <guibutton>Next 100</guibutton> to get more messages."
msgstr ""

#: source/TortoiseSVN_en.xml:7580(term) 
msgid "Font for log messages"
msgstr ""

#: source/TortoiseSVN_en.xml:7582(para) 
msgid "Selects the font face and size used to display the log message itself in the middle pane of the Revision Log dialog, and when composing log messages in the Commit dialog."
msgstr ""

#: source/TortoiseSVN_en.xml:7591(term) 
msgid "Short date / time format in log messages"
msgstr ""

#: source/TortoiseSVN_en.xml:7593(para) 
msgid "If the standard long messages use up too much space on your screen use the short format."
msgstr ""

#: source/TortoiseSVN_en.xml:7600(term) 
msgid "Progress Dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:7602(para) 
msgid "TortoiseSVN can automatically close all progress dialogs when the action is finished without error. This setting allows you to select the conditions for closing the dialogs. The default (recommended) setting is <guilabel>Close manually</guilabel> which allows you to review all messages and check what has happened. However, you may decide that you want to ignore some types of message and have the dialog close automatically if there are no critical changes."
msgstr ""

#: source/TortoiseSVN_en.xml:7613(para) 
msgid "<guilabel>Auto-close if no merges, adds or deletes</guilabel> means that the progress dialog will close if there were simple updates, but if changes from the repository were merged with yours, or if any files were added or deleted, the dialog will remain open."
msgstr ""

#: source/TortoiseSVN_en.xml:7620(para) 
msgid "<guilabel>Auto-close if no conflicts</guilabel> relaxes the criteria further and will close the dialog even if there were merges, adds or deletes. However, if there were any conflicts or errors, the dialog remains open."
msgstr ""

#: source/TortoiseSVN_en.xml:7627(para) 
msgid "<guilabel>Auto-close if no errors</guilabel> always closes the dialog even if there were conflicts. The only condition that keeps the dialog open is an error condition, which occurs when Subversion is unable to complete the task. For example, an update fails because the server is inaccessible, or a commit fails because the working copy is out-of-date."
msgstr ""

#: source/TortoiseSVN_en.xml:7639(term) 
msgid "Use URL of WC as the default \"From:\" URL"
msgstr ""

#: source/TortoiseSVN_en.xml:7641(para) 
msgid "In the merge dialog, the default behaviour is for the <guilabel>From:</guilabel> URL to be remembered between merges. However, some people like to perform merges from many different points in their hierarchy, and find it easier to start out with the URL of the current working copy. This can then be edited to refer to a parallel path on another branch."
msgstr ""

#: source/TortoiseSVN_en.xml:7655(title) 
msgid "TortoiseSVN Dialog Settings 2"
msgstr ""

#: source/TortoiseSVN_en.xml:7658(title) 
msgid "The Settings Dialog, Dialogs 2 Page"
msgstr ""

#: source/TortoiseSVN_en.xml:7664(term) 
msgid "Recurse into unversioned folders"
msgstr ""

#: source/TortoiseSVN_en.xml:7666(para) 
msgid "If this box is checked (default state), then whenever the status of an unversioned folder is shown in the <guilabel>Add</guilabel>, <guilabel>Commit</guilabel> or <guilabel>Check for Modifications</guilabel> dialog, every child file and folder is also shown. If you uncheck this box, only the unversioned parent is shown. Unchecking reduces clutter in these dialogs. In that case if you select an unversioned folder for Add, it is added recursively."
msgstr ""

#: source/TortoiseSVN_en.xml:7680(term) 
msgid "Use autocompletion of filepaths and keywords"
msgstr ""

#: source/TortoiseSVN_en.xml:7682(para) 
msgid "The commit dialog includes a facility to parse the list of filenames being committed. When you type the first 3 letters of an item in the list, the autocompletion box pops up, and you can press Enter to complete the filename. Check the box to enable this feature."
msgstr ""

#: source/TortoiseSVN_en.xml:7692(term) 
msgid "Timeout in seconds to stop the autocompletion parsing"
msgstr ""

#: source/TortoiseSVN_en.xml:7694(para) 
msgid "The autocompletion parser can be quite slow if there are a lot of large files to check. This timeout stops the commit dialog being held up for too long. If you are missing important autocompletion information, you can extend the timeout."
msgstr ""

#: source/TortoiseSVN_en.xml:7703(term) 
msgid "Only use spellchecker when tsvn:projectlanguage is set"
msgstr ""

#: source/TortoiseSVN_en.xml:7705(para) 
msgid "If you don't wish to use the spellchecker for all commits, check this box. The spellchecker will still be enabled where the project properties require it."
msgstr ""

#: source/TortoiseSVN_en.xml:7713(term) 
msgid "Contact the repository on startup"
msgstr ""

#: source/TortoiseSVN_en.xml:7715(para) 
msgid "The Check for Modifications dialog checks the working copy by default, and only contacts the repository when you click <guibutton>Check repository</guibutton>. If you always want to check the repository, you can use this setting to make that action happen automatically."
msgstr ""

#: source/TortoiseSVN_en.xml:7727(title) 
msgid "TortoiseSVN Colour Settings"
msgstr ""

#: source/TortoiseSVN_en.xml:7731(title) 
msgid "The Settings Dialog, Colours Page"
msgstr ""

#: source/TortoiseSVN_en.xml:7729(para) 
msgid "<placeholder-1/> This dialog allows you to configure the text colours used in TortoiseSVN's dialogs the way you like them."
msgstr ""

#: source/TortoiseSVN_en.xml:7739(term) 
msgid "Possible or real conflict / obstructed"
msgstr ""

#: source/TortoiseSVN_en.xml:7741(para) 
msgid "A conflict has occurred during update, or may occur during merge. Update is obstructed by an existing unversioned file/folder of the same name as a versioned one."
msgstr ""

#: source/TortoiseSVN_en.xml:7746(para) 
msgid "This colour is also used for error messages in the progress dialogs."
msgstr ""

#: source/TortoiseSVN_en.xml:7752(term) 
msgid "Added files"
msgstr ""

#: source/TortoiseSVN_en.xml:7754(para) 
msgid "Items added to the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:7760(term) 
msgid "Missing / deleted / replaced"
msgstr ""

#: source/TortoiseSVN_en.xml:7762(para) 
msgid "Items deleted from the repository, missing from the working copy, or deleted from the working copy and replaced with another file of the same name."
msgstr ""

#: source/TortoiseSVN_en.xml:7770(term) 
msgid "Merged"
msgstr ""

#: source/TortoiseSVN_en.xml:7772(para) 
msgid "Changes from the repository successfully merged into the WC without creating any conflicts."
msgstr ""

#: source/TortoiseSVN_en.xml:7779(term) 
msgid "Modified / copied"
msgstr ""

#: source/TortoiseSVN_en.xml:7781(para) 
msgid "Add with history, or paths copied in the repository. Also used in the log dialog for entries which include copied items."
msgstr ""

#: source/TortoiseSVN_en.xml:7789(term) 
msgid "Deleted node"
msgstr ""

#: source/TortoiseSVN_en.xml:7791(para) 
msgid "An item which has been deleted from the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:7797(term) 
msgid "Added node"
msgstr ""

#: source/TortoiseSVN_en.xml:7799(para) 
msgid "An item which has been added to the repository, by an add, copy or move operation."
msgstr ""

#: source/TortoiseSVN_en.xml:7806(term) 
msgid "Renamed node"
msgstr ""

#: source/TortoiseSVN_en.xml:7808(para) 
msgid "An item which has been renamed within the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:7814(term) 
msgid "Replaced node"
msgstr ""

#: source/TortoiseSVN_en.xml:7816(para) 
msgid "The original item has been deleted and a new item with the same name replaces it."
msgstr ""

#: source/TortoiseSVN_en.xml:7827(title) 
msgid "Network Settings"
msgstr ""

#: source/TortoiseSVN_en.xml:7829(primary) 
msgid "proxy server"
msgstr ""

#: source/TortoiseSVN_en.xml:7833(title) 
msgid "The Settings Dialog, Network Page"
msgstr ""

#: source/TortoiseSVN_en.xml:7831(para) 
msgid "<placeholder-1/> Here you can configure your proxy server, if you need one to get through your company's firewall."
msgstr ""

#: source/TortoiseSVN_en.xml:7839(para) 
msgid "If you need to set up per-repository proxy settings, you will need to use the Subversion <literal>servers</literal> file to configure this. Use <guibutton>Edit</guibutton> to get there directly. Consult the <ulink url=\"http://svnbook.red-bean.com/en/1.1/ch07.html#svn-ch-7-sect-1.3.1\"><citetitle>Subversion Manual</citetitle></ulink> for details on how to use this file."
msgstr ""

#: source/TortoiseSVN_en.xml:7849(para) 
msgid "You can also specify which program TortoiseSVN should use to establish a secure connection to a svn+ssh repository. We recommend that you use TortoisePlink.exe. This is a version of the popular Plink program, and is included with TortoiseSVN, but it is compiled as a Windowless app, so you don't get a DOS box popping up every time you authenticate."
msgstr ""

#: source/TortoiseSVN_en.xml:7857(para) 
msgid "One side-effect of not having a window is that there is nowhere for any error messages to go, so if authentication fails you will simply get a message saying something like <quote>Unable to write to standard output</quote>. For this reason we recommend that you first set up using standard Plink. When everything is working, you can use TortoisePlink with exactly the same parameters."
msgstr ""

#: source/TortoiseSVN_en.xml:7868(title) 
msgid "External Program Settings"
msgstr ""

#: source/TortoiseSVN_en.xml:7871(title) 
msgid "The Settings Dialog, Diff Viewer Page"
msgstr ""

#: source/TortoiseSVN_en.xml:7869(para) 
msgid "<placeholder-1/> Here you can define your own diff/merge programs that TortoiseSVN should use. The default setting is to use TortoiseMerge which is installed alongside TortoiseSVN."
msgstr ""

#: source/TortoiseSVN_en.xml:7879(para) 
msgid "Read <xref linkend=\"tsvn-DUG-diff-tools\"/> for a list of some of the external diff/merge programs that people are using with TortoiseSVN."
msgstr ""

#: source/TortoiseSVN_en.xml:7884(title) 
msgid "Diff Viewer"
msgstr ""

#: source/TortoiseSVN_en.xml:7897(term) source/TortoiseSVN_en.xml:7983(term) 
msgid "%base"
msgstr ""

#: source/TortoiseSVN_en.xml:7899(para) 
msgid "The original file without your changes"
msgstr ""

#: source/TortoiseSVN_en.xml:7905(term) source/TortoiseSVN_en.xml:7992(term) 
msgid "%bname"
msgstr ""

#: source/TortoiseSVN_en.xml:7907(para) source/TortoiseSVN_en.xml:7994(para) 
msgid "The window title for the base file"
msgstr ""

#: source/TortoiseSVN_en.xml:7913(term) source/TortoiseSVN_en.xml:8000(term) 
msgid "%mine"
msgstr ""

#: source/TortoiseSVN_en.xml:7915(para) 
msgid "Your own file, with your changes"
msgstr ""

#: source/TortoiseSVN_en.xml:7921(term) source/TortoiseSVN_en.xml:8008(term) 
msgid "%yname"
msgstr ""

#: source/TortoiseSVN_en.xml:7923(para) source/TortoiseSVN_en.xml:8010(para) 
msgid "The window title for your file"
msgstr ""

#: source/TortoiseSVN_en.xml:7886(para) 
msgid "An external diff program may be used for comparing different revisions of files. The external program will need to obtain the filenames from the command line, along with any other command line options. TortoiseSVN uses substitution parameters prefixed with <literal>%</literal>. When it encounters one of these it will substitute the appropriate value. The order of the parameters will depend on the Diff program you use. <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:7930(para) 
msgid "The window titles are not pure filenames. TortoiseSVN treats that as a name to display and creates the names accordingly. So e.g. if you're doing a diff from a file in revision 123 with a file in your working copy, the names will be <filename>filename : revision 123</filename> and <filename>filename : working copy</filename>"
msgstr ""

#: source/TortoiseSVN_en.xml:7940(para) 
msgid "For example, with ExamDiff Pro: <screen>\nC:\\Path-To\\ExamDiff.exe %base %mine\n</screen> or with KDiff3: <screen>\nC:\\Path-To\\kdiff3.exe %base %mine --L1 %bname --L2 %yname\n</screen> or with WinMerge: <screen>\nC:\\Path-To\\WinMerge.exe -e -ub -dl %bname -dr %yname %base %mine\n</screen> or with Araxis: <screen>\nC:\\Path-To\\compare.exe /max /wait /title1:%bname /title2:%yname\n        %base %mine\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:7959(para) 
msgid "If you use the <literal>svn:keywords</literal> property to expand keywords, and in particular the <literal>revision</literal> of a file, then there may be a difference between files which is purely due to the current value of the keyword. Also if you use <literal>svn:eol-style = native</literal> the BAsE file will have pure <literal>LF</literal> line endings whereas your file will have <literal>CR-LF</literal> line endings. TSVN will normally hide these differences automatically by first parsing the BASE file to expand keywords and line endings before doing the diff operation. However, this can take a long time with large files. If <guilabel>Convert files when diffing against BASE</guilabel> is unchecked then TSVN will skip pre-processing the files."
msgstr ""

#: source/TortoiseSVN_en.xml:7975(title) 
msgid "Merge Tool"
msgstr ""

#: source/TortoiseSVN_en.xml:7985(para) 
msgid "the original file without your or the others changes"
msgstr ""

#: source/TortoiseSVN_en.xml:8002(para) 
msgid "your own file, with your changes"
msgstr ""

#: source/TortoiseSVN_en.xml:8016(term) 
msgid "%theirs"
msgstr ""

#: source/TortoiseSVN_en.xml:8018(para) 
msgid "the file as it is in the repository"
msgstr ""

#: source/TortoiseSVN_en.xml:8024(term) 
msgid "%tname"
msgstr ""

#: source/TortoiseSVN_en.xml:8026(para) 
msgid "The window title for the file in the repository"
msgstr ""

#: source/TortoiseSVN_en.xml:8032(term) 
msgid "%merged"
msgstr ""

#: source/TortoiseSVN_en.xml:8034(para) 
msgid "the conflicted file, the result of the merge operation"
msgstr ""

#: source/TortoiseSVN_en.xml:8041(term) 
msgid "%mname"
msgstr ""

#: source/TortoiseSVN_en.xml:8043(para) 
msgid "The window title for the merged file"
msgstr ""

#: source/TortoiseSVN_en.xml:7977(para) 
msgid "An external merge program used to resolve conflicted files. Parameter substitution is used in the same way as with the Diff Program. <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:8050(para) 
msgid "For example, with Perforce Merge: <screen>\nC:\\Path-To\\P4Merge.exe %base %theirs %mine %merged\n</screen> or with KDiff3: <screen>\nC:\\Path-To\\kdiff3.exe %base %mine %theirs -o %merged\n        --L1 %bname --L2 %yname --L3 %tname\n</screen> or with Araxis: <screen>\nC:\\Path-To\\compare.exe /max /wait /3 /title1:%tname /title2:%bname\n        /title3:%yname %theirs %base %mine %merged /a2\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:8068(title) 
msgid "Diff/Merge Advanced Settings"
msgstr ""

#: source/TortoiseSVN_en.xml:8072(title) 
msgid "The Settings Dialog, Diff/Merge Advanced Dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:8070(para) 
msgid "<placeholder-1/> In the advanced settings, you can define a different diff and merge program for every file extension. For instance you could associate Photoshop as the <quote>Diff</quote> Program for .jpg files :-)"
msgstr ""

#: source/TortoiseSVN_en.xml:8079(para) 
msgid "You need to specify just the extension with no leading dot or wildcard. Use <literal>BMP</literal> to describe Windows bitmap files, <emphasis>not</emphasis><literal>*.BMP</literal>."
msgstr ""

#: source/TortoiseSVN_en.xml:8087(title) 
msgid "Unified Diff Viewer"
msgstr ""

#: source/TortoiseSVN_en.xml:8089(para) 
msgid "A viewer program for unified-diff files (patch files). No parameters are required. The <guilabel>Default</guilabel> option is to check for a file association for <filename>.diff</filename> files, and then for <filename>.txt</filename> files. If you don't have a viewer for <filename>.diff</filename> files, you will most likely get NotePad."
msgstr ""

#: source/TortoiseSVN_en.xml:8098(para) 
msgid "The original Windows NotePad program does not behave well on files which do not have standard CR-LF line-endings. Since most unified diff files have pure LF line-endings, they do not view well in NotePad. However, you can download a free NotePad replacement <ulink url=\"http://www.flos-freeware.ch/notepad2.html\"><citetitle>Notepad2</citetitle></ulink> which not only displays the line-endings correctly, but also colour codes the added and removed lines."
msgstr ""

#: source/TortoiseSVN_en.xml:8114(title) 
msgid "Final Step"
msgstr ""

#: source/TortoiseSVN_en.xml:8120(title) 
msgid "Wishlist"
msgstr ""

#: source/TortoiseSVN_en.xml:8121(para) 
msgid "Even though TortoiseSVN and TortoiseMerge are free, you can support the developers by sending in patches and play an active role in the development. You can also help to cheer us up during the endless hours we spend in front of our computers."
msgstr ""

#: source/TortoiseSVN_en.xml:8127(para) 
msgid "While working on TortoiseSVN we love to listen to music. And since we spend many hours on the project we need a <emphasis>lot</emphasis> of music. Therefore we have set up some wish-lists with our favourite music CD's and DVD's: <ulink url=\"http://tortoisesvn.tigris.org/donate.html\"><citetitle>http://tortoisesvn.tigris.org/donate.html</citetitle></ulink> Please also have a look at the list of people who contributed to the project by sending in patches or translations."
msgstr ""

#: source/TortoiseSVN_en.xml:8141(title) 
msgid "The SubWCRev Program"
msgstr ""

#: source/TortoiseSVN_en.xml:8143(primary) 
msgid "version extraction"
msgstr ""

#: source/TortoiseSVN_en.xml:8146(para) 
msgid "SubWCRev is Windows console program which can be used to read the status of a Subversion working copy and optionally perform keyword substitution in a template file. This is often used as part of the build process as a means of incorporating working copy information into the object you are building. Typically it might be used to include the revision number in an <quote>About</quote> box."
msgstr ""

#: source/TortoiseSVN_en.xml:8160(title) 
msgid "The SubWCRev Command Line"
msgstr ""

#: source/TortoiseSVN_en.xml:8161(para) 
msgid "SubWCRev reads the Subversion status of all files in a working copy, excluding externals by default. It records the highest commit revision number found, and the commit timestamp of that revision, It also records whether there are local modifications in the working copy, or mixed update revisions. The revision number, update revision range and modification status are displayed on stdout."
msgstr ""

#: source/TortoiseSVN_en.xml:8169(para) 
msgid "SubWCRev.exe is called from the command line or a script, and is controlled using the command line parameters. <screen>\nSubWCRev WorkingCopyPath [SrcVersionFile DstVersionFile] [-nmdfe]\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:8176(para) 
msgid "<literal>WorkingCopyPath</literal> is the path to the working copy being checked. You can only use SubWCRev on working copies, not directly on the repository. The path may be absolute or relative to the current working directory."
msgstr ""

#: source/TortoiseSVN_en.xml:8182(para) 
msgid "If you want SubWCRev to perform keyword substitution, so that fields like repository revision and URL are saved to a text file, you need to supply a template file <literal>SrcVersionFile</literal> and an output file <literal>DstVersionFile</literal> which contains the substituted version of the template."
msgstr ""

#: source/TortoiseSVN_en.xml:8198(title) source/TortoiseSVN_en.xml:8267(title) 
msgid "List of available command line switches"
msgstr ""

#: source/TortoiseSVN_en.xml:8204(entry) source/TortoiseSVN_en.xml:9754(title) 
msgid "Switch"
msgstr ""

#: source/TortoiseSVN_en.xml:8205(entry) source/TortoiseSVN_en.xml:8274(entry) source/TortoiseSVN_en.xml:9104(entry) 
msgid "Description"
msgstr ""

#: source/TortoiseSVN_en.xml:8210(entry) 
msgid "-n"
msgstr ""

#: source/TortoiseSVN_en.xml:8211(entry) 
msgid "If this switch is given, SubWCRev will exit with ERRORLEVEL 7 if the working copy contains local modifications. This may be used to prevent building with uncommitted changes present."
msgstr ""

#: source/TortoiseSVN_en.xml:8219(entry) 
msgid "-m"
msgstr ""

#: source/TortoiseSVN_en.xml:8220(entry) 
msgid "If this switch is given, SubWCRev will exit with ERRORLEVEL 8 if the working copy contains mixed revisions. This may be used to prevent building with a partially updated working copy."
msgstr ""

#: source/TortoiseSVN_en.xml:8228(entry) 
msgid "-d"
msgstr ""

#: source/TortoiseSVN_en.xml:8229(entry) 
msgid "If this switch is given, SubWCRev will exit with ERRORLEVEL 9 if the destination file already exists."
msgstr ""

#: source/TortoiseSVN_en.xml:8236(entry) 
msgid "-f"
msgstr ""

#: source/TortoiseSVN_en.xml:8237(entry) 
msgid "If this switch is given, SubWCRev will include the last-changed revision of folders. The default behaviour is to use only files when getting the revision numbers."
msgstr ""

#: source/TortoiseSVN_en.xml:8245(entry) 
msgid "-e"
msgstr ""

#: source/TortoiseSVN_en.xml:8246(entry) 
msgid "If this switch is given, SubWCRev will examine directories which are included with svn:externals, but only if they are from the same repository. The default behaviour is to ignore externals."
msgstr ""

#: source/TortoiseSVN_en.xml:8191(para) 
msgid "There are a number of optional switches which affect the way SubWCRev works. If you use more than one, they must be specified as a single group, eg. <literal>-nm</literal>, not <literal>-n -m</literal>. <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:8262(title) 
msgid "Keyword Substitution"
msgstr ""

#: source/TortoiseSVN_en.xml:8273(entry) 
msgid "Keyword"
msgstr ""

#: source/TortoiseSVN_en.xml:8279(entry) 
msgid "$WCREV$"
msgstr ""

#: source/TortoiseSVN_en.xml:8280(entry) 
msgid "Replaced with the highest commit revision in the working copy."
msgstr ""

#: source/TortoiseSVN_en.xml:8286(entry) 
msgid "$WCDATE$"
msgstr ""

#: source/TortoiseSVN_en.xml:8291(literal) 
msgid "yyyy-mm-dd hh:mm:ss"
msgstr ""

#: source/TortoiseSVN_en.xml:8287(entry) 
msgid "Replaced with the commit date/time of the highest commit revision. To avoid confusion, international format is used, ie. <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:8295(entry) 
msgid "$WCNOW$"
msgstr ""

#: source/TortoiseSVN_en.xml:8296(entry) 
msgid "Replaced with the current system date/time. This can be used to indicate the build time. International format is used as described above."
msgstr ""

#: source/TortoiseSVN_en.xml:8303(entry) 
msgid "$WCRANGE$"
msgstr ""

#: source/TortoiseSVN_en.xml:8304(entry) 
msgid "Replaced with the update revision range in the working copy. If the working copy is in a consistent state, this will be a single revision. If the working copy contains mixed revisions, either due to being out of date, or due to a deliberate update-to-revision, then the range will be shown in the form 100:200"
msgstr ""

#: source/TortoiseSVN_en.xml:8315(entry) 
msgid "$WCMIXED?TText:FText$"
msgstr ""

#: source/TortoiseSVN_en.xml:8316(entry) 
msgid "Replaced with TText if there are mixed update revisions, or FText if not."
msgstr ""

#: source/TortoiseSVN_en.xml:8322(entry) 
msgid "$WCMODS?TText:FText$"
msgstr ""

#: source/TortoiseSVN_en.xml:8323(entry) 
msgid "Replaced with TText if there are local modifications, or FText if not."
msgstr ""

#: source/TortoiseSVN_en.xml:8329(entry) 
msgid "$WCURL$"
msgstr ""

#: source/TortoiseSVN_en.xml:8330(entry) 
msgid "Replaced with the repository URL of the working copy path passed to SubWCRev."
msgstr ""

#: source/TortoiseSVN_en.xml:8263(para) 
msgid "If a source and destination files are supplied, SubWCRev copies source to destination, performing keyword substitution as follows: <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:8344(title) 
msgid "Keyword Example"
msgstr ""

#: source/TortoiseSVN_en.xml:8345(para) 
msgid "The example below shows how keywords in a template file are substituted in the output file."
msgstr ""

#: source/TortoiseSVN_en.xml:8349(screen) 
#, no-wrap
msgid "\n// Test file for SubWCRev\n\nchar *Revision = \"$WCREV$\";\nchar *Modified = \"$WCMODS?Modified:Not modified$\";\nchar *Date     = \"$WCDATE$\";\nchar *RevRange = \"$WCRANGE$\";\nchar *Mixed    = \"$WCMIXED?Mixed revision WC:Not mixed$\";\nchar *URL      = \"$WCURL$\";\n\n#if $WCMODS?1:0$\n#error Source is modified\n#endif\n\n// EndOfFile\n"
msgstr ""

#: source/TortoiseSVN_en.xml:8365(para) 
msgid "After running SubWCRev.exe, the output file looks like this:"
msgstr ""

#: source/TortoiseSVN_en.xml:8368(screen) 
#, no-wrap
msgid "\n// Test file for SubWCRev\n\nchar *Revision = \"3701\";\nchar *Modified = \"Modified\";\nchar *Date     = \"2005/06/15 11:15:12\";\nchar *RevRange = \"3699:3701\";\nchar *Mixed    = \"Mixed revision WC\";\nchar *URL      = \"http://tortoisesvn.tigris.org/svn/tortoisesvn/trunk/src/SubWCRev\";\n\n#if 1\n#error Source is modified\n#endif\n\n// EndOfFile\n"
msgstr ""

#: source/TortoiseSVN_en.xml:8391(title) 
msgid "Frequently Asked Questions (FAQ)"
msgstr ""

#: source/TortoiseSVN_en.xml:8393(para) 
msgid "Because TortoiseSVN is being developed all the time it is sometimes hard to keep the documentation completely up to date. We maintain an interactive online FAQ at <ulink url=\"http://tortoisesvn.sourceforge.net?q=node/1\"><citetitle>Sourceforge.net</citetitle></ulink> which contains a selection of the questions we are asked the most on the TortoiseSVN mailing list <email>dev@tortoisesvn.tigris.org</email>."
msgstr ""

#: source/TortoiseSVN_en.xml:8404(para) 
msgid "We also maintain a project Issue Tracker at <ulink url=\"http://tortoisesvn.berlios.de/issues/index.php?order=id&amp;sort=desc&amp;status=all\"><citetitle>Berlios.de</citetitle></ulink> which tells you about some of the things we have on our To-Do list, and bugs which have already been fixed. If you think you have found a bug, or want to request a new feature, check here first to see if someone else got there before you."
msgstr ""

#: source/TortoiseSVN_en.xml:8414(para) 
msgid "If you have a question which is not answered anywhere else, the best place to ask it is on the mailing list."
msgstr ""

#: source/TortoiseSVN_en.xml:8425(title) 
msgid "How Do I..."
msgstr ""

#: source/TortoiseSVN_en.xml:8427(para) 
msgid "This appendix contains solutions to problems/questions you might have when using TortoiseSVN."
msgstr ""

#: source/TortoiseSVN_en.xml:8433(title) 
msgid "Move/copy a lot of files at once"
msgstr ""

#: source/TortoiseSVN_en.xml:8435(primary) 
msgid "moving"
msgstr ""

#: source/TortoiseSVN_en.xml:8437(para) 
msgid "Moving/Copying single files can be done by using <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Rename...</guimenuitem></menuchoice>. But if you want to move/copy a lot of files, this way is just too slow and too much work."
msgstr ""

#: source/TortoiseSVN_en.xml:8446(para) 
msgid "The recommended way is by <action>right-dragging</action> the files to the new location. Simply <action>right-click</action> on the files you want to move/copy without releasing the mouse button. Then drag the files to the new location and release the mouse button. A context menu will appear where you can either choose <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Copy in Subversion to here</guimenuitem></menuchoice>. or <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Move in Subversion to here</guimenuitem></menuchoice>."
msgstr ""

#: source/TortoiseSVN_en.xml:8469(title) 
msgid "Force users to enter a log message"
msgstr ""

#: source/TortoiseSVN_en.xml:8471(primary) 
msgid "log message"
msgstr ""

#: source/TortoiseSVN_en.xml:8473(para) 
msgid "There are two ways to prevent users from committing with an empty log message. One is specific to TortoiseSVN, the other works for all Subversion clients, but requires access to the server directly."
msgstr ""

#: source/TortoiseSVN_en.xml:8479(title) 
msgid "Hook-script on the server"
msgstr ""

#: source/TortoiseSVN_en.xml:8480(para) 
msgid "If you have direct access to the repository server, you can install a pre-commit hook script which rejects all commits with an empty or too short log message."
msgstr ""

#: source/TortoiseSVN_en.xml:8485(para) 
msgid "In the repository folder on the server, there's a subfolder <filename>hooks</filename> which contains some example hook scripts you can use. The file <filename>pre-commit.tmpl</filename> contains a sample script which will reject commits if no log message is supplied, or the message is too short. The file also contains comments on how to install/use this script. Just follow the instructions in that file."
msgstr ""

#: source/TortoiseSVN_en.xml:8495(para) 
msgid "This method is the recommended way if your users also use other Subversion clients than TortoiseSVN. The drawback is that the commit is rejected by the server and therefore users will get an error message. The client can't know before the commit that it will be rejected. If you want to make TortoiseSVN have the <guibutton>OK</guibutton> button disabled until the log message is long enough then please use the method described below."
msgstr ""

#: source/TortoiseSVN_en.xml:8506(title) 
msgid "Project properties"
msgstr ""

#: source/TortoiseSVN_en.xml:8507(para) 
msgid "TortoiseSVN uses properties to control some of its features. One of those properties is the <literal>tsvn:minlogsize</literal> property."
msgstr ""

#: source/TortoiseSVN_en.xml:8511(para) 
msgid "If you set that property on a folder, then TortoiseSVN will disable the <guibutton>OK</guibutton> button in all commit dialogs until the user has entered a log message with at least the length specified in the property."
msgstr ""

#: source/TortoiseSVN_en.xml:8516(para) 
msgid "For detailed information on those project properties, please refer to <xref linkend=\"tsvn-DUG-propertypage\"/>"
msgstr ""

#: source/TortoiseSVN_en.xml:8523(title) 
msgid "Update selected files from the repository"
msgstr ""

#: source/TortoiseSVN_en.xml:8527(para) 
msgid "Normally you update your working copy using <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Update</guimenuitem></menuchoice>. But if you only want to pick up some new files that a colleague has added without merging in any changes to other files at the same time, you need a different approach."
msgstr ""

#: source/TortoiseSVN_en.xml:8537(para) 
msgid "Use <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Check for Modifications</guimenuitem></menuchoice>. and click on <guibutton>Check repository</guibutton> to see what has changed in the repository. Select the files you want to update locally, then use the context menu to update just those files."
msgstr ""

#: source/TortoiseSVN_en.xml:8549(title) 
msgid "Roll back revisions in the repository"
msgstr ""

#: source/TortoiseSVN_en.xml:8551(primary) 
msgid "rollback"
msgstr ""

#: source/TortoiseSVN_en.xml:8554(title) 
msgid "Use the revision log dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:8555(para) 
msgid "The easiest way to revert the changes from a single revision, or from a range of revisions, is to use the revision log dialog. This is also the method to use of you want to discard recent changes and make an earlier revision the new HEAD."
msgstr ""

#: source/TortoiseSVN_en.xml:8564(para) 
msgid "Select the file or folder in which you need to revert the changes. If you want to revert all changes, this should be the top level folder."
msgstr ""

#: source/TortoiseSVN_en.xml:8571(para) 
msgid "Select <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Show Log</guimenuitem></menuchoice> to display a list of revisions. You may need to use <guibutton>Get All</guibutton> or <guibutton>Next 100</guibutton> to show the revision(s) you are interested in."
msgstr ""

#: source/TortoiseSVN_en.xml:8584(para) 
msgid "Select the revision you wish to revert. If you want to undo a range of revisions, select the first one and hold the shift key while selecting the last one. Note that for multiple revisions, the range must be unbroken with no gaps. <action>Right click</action> on the selected revision(s), then select <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Revert changes from this revision</guimenuitem></menuchoice>."
msgstr ""

#: source/TortoiseSVN_en.xml:8599(para) source/TortoiseSVN_en.xml:8656(para) 
msgid "You have reverted the changes within your working copy. Check the results, then commit the changes."
msgstr ""

#: source/TortoiseSVN_en.xml:8605(title) 
msgid "Use the merge dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:8606(para) 
msgid "To undo a larger range of revisions, you can use the Merge dialog. The previous method uses merging behind the scenes; this method uses it explicitly."
msgstr ""

#: source/TortoiseSVN_en.xml:8613(para) 
msgid "In your working copy select <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Merge</guimenuitem></menuchoice>."
msgstr ""

#: source/TortoiseSVN_en.xml:8622(para) 
msgid "In the <guilabel>From:</guilabel> field enter the full folder url of the branch or tag containing the changes you want to revert in your working copy. This should come up as the default URL."
msgstr ""

#: source/TortoiseSVN_en.xml:8630(para) 
msgid "In the <guilabel>From Revision</guilabel> field enter the revision number that you are currently at. If you are sure there is no-one else making changes, you can use the HEAD revision."
msgstr ""

#: source/TortoiseSVN_en.xml:8638(para) 
msgid "make sure the <guilabel>Use \"From:\" URL</guilabel> checkbox is checked."
msgstr ""

#: source/TortoiseSVN_en.xml:8644(para) 
msgid "In the <guilabel>To Revision</guilabel> field enter the revision number that you want to revert to, ie. the one <emphasis>before</emphasis> the first revision to be reverted."
msgstr ""

#: source/TortoiseSVN_en.xml:8662(title) 
msgid "Use svndumpfilter"
msgstr ""

#: source/TortoiseSVN_en.xml:8663(para) 
msgid "Since TortoiseSVN never loses data, your <quote>rolled back</quote> revisions still exist as intermediate revisions in the repository. Only the HEAD revision was changed to a previous state. If you want to make revisions disappear completely from your repository, erasing all trace that they ever existed, you have to use more extreme measures. Unless there is a really good reason to do this, it is <emphasis>not recommended</emphasis>. One possible reason would be that someone committed a confidential document to a public repository."
msgstr ""

#: source/TortoiseSVN_en.xml:8674(para) 
msgid "The only way to remove data from the repository is to use the Subversion command line tool <literal>svnadmin</literal>. You can find a description of how this works in the <ulink url=\"http://svnbook.red-bean.com/en/1.1/ch05s03.html#svn-ch-5-sect-3.1.3\"><citetitle>Subversion Book</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:8685(title) 
msgid "Compare two revisions of a file"
msgstr ""

#: source/TortoiseSVN_en.xml:8687(primary) 
msgid "compare files"
msgstr ""

#: source/TortoiseSVN_en.xml:8689(para) 
msgid "If you want to compare two revisions in a file's history, for example revisions 100 and 200 of the same file, just use <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Show Log</guimenuitem></menuchoice> to list the revision history for that file. Pick the two revisions you want to compare then use <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Compare Revisions</guimenuitem></menuchoice>."
msgstr ""

#: source/TortoiseSVN_en.xml:8703(para) 
msgid "If you want to compare the same file in two different trees, for example the trunk and a branch, you can use the repository browser to open up both trees, select the file in both places, then use <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Compare Revisions</guimenuitem></menuchoice>."
msgstr ""

#: source/TortoiseSVN_en.xml:8713(para) 
msgid "If you want to compare two trees to see what has changed, for example the trunk and a tagged release, you can use <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Revision Graph</guimenuitem></menuchoice> Select the two nodes to compare, then use <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Compare HEAD Revisions</guimenuitem></menuchoice>. This will show a list of changed files, and you can then select individual files to view the changes in detail. Alternatively use <menuchoice><guimenu>Context Menu</guimenu><guimenuitem>Unified Diff of HEAD Revisions</guimenuitem></menuchoice> to see a summary of all differences, with minimal context."
msgstr ""

#: source/TortoiseSVN_en.xml:8736(title) 
msgid "Include a common sub-project"
msgstr ""

#: source/TortoiseSVN_en.xml:8738(primary) 
msgid "common projects"
msgstr ""

#: source/TortoiseSVN_en.xml:8740(para) 
msgid "Sometimes you will want to include another project within your working copy, perhaps some library code. You don't want to make a duplicate of this code in your repository because then you would lose connection with the original (and maintained) code. Or maybe you have several projects which share core code. There are at least 3 ways of dealing with this."
msgstr ""

#: source/TortoiseSVN_en.xml:8750(title) 
msgid "Use svn:externals"
msgstr ""

#: source/TortoiseSVN_en.xml:8751(para) 
msgid "Set the <literal>svn:externals</literal> property for a folder in your project. This property consists of one or more lines; each line has the name of a subfolder which you want the use as the checkout folder for common code, and the repository URL that you want to be checked out there. For full details refer to <xref linkend=\"tsvn-DUG-import-4\"/>."
msgstr ""

#: source/TortoiseSVN_en.xml:8759(para) 
msgid "Commit the new folder. Now when you update, Subversion will pull a copy of that project from its repository into your working copy. The subfolders will be created automatically if required. Each time you update your main working copy, you will also receive the latest version of all external projects."
msgstr ""

#: source/TortoiseSVN_en.xml:8780(title) 
msgid "Use a nested working copy"
msgstr ""

#: source/TortoiseSVN_en.xml:8781(para) 
msgid "Create a new folder within your project to contain the common code, but do not add it to Subversion"
msgstr ""

#: source/TortoiseSVN_en.xml:8785(para) 
msgid "Select <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Checkout</guimenuitem></menuchoice> for the new folder and checkout a copy of the common code into it. You now have a separate working copy nested within your main working copy."
msgstr ""

#: source/TortoiseSVN_en.xml:8795(para) 
msgid "The two working copies are independent. When you commit changes to the parent, changes to the nested WC are ignored. Likewise when you update the parent, the nested WC is not updated."
msgstr ""

#: source/TortoiseSVN_en.xml:8802(title) 
msgid "Use a relative location"
msgstr ""

#: source/TortoiseSVN_en.xml:8803(para) 
msgid "If you use the same common core code in several projects, and you do not want to keep multiple working copies of it for every project that uses it, you can just check it out to a separate location which is related to all the other projects which use it. For example: <screen>\nC:\\Projects\\Proj1\nC:\\Projects\\Proj2\nC:\\Projects\\Proj3\nC:\\Projects\\Common\n</screen> and refer to the common code using a relative path, eg. <filename>..\\..\\Common\\DSPcore</filename>."
msgstr ""

#: source/TortoiseSVN_en.xml:8818(para) 
msgid "If your projects are scattered in unrelated locations you can use a variant of this, which is to put the common code in one location and use drive letter substitution to map that location to something you can hard code in your projects, eg. Checkout the common code to <filename>D:\\Documents\\Framework</filename> or <filename>C:\\Documents and Settings\\{login}\\My Documents\\framework</filename> then use <screen>\nSUBST X: \"D:\\Documents\\framework\"\n</screen> to create the drive mapping used in your source code. Your code can then use absolute locations. <screen>\n#include \"X:\\superio\\superio.h\"\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:8836(para) 
msgid "This method will only work in an all-PC environment, and you will need to document the required drive mappings so your team know where these mysterious files are. This method is strictly for use in closed development environments, and not recommended for general use."
msgstr ""

#: source/TortoiseSVN_en.xml:8846(title) 
msgid "Create a shortcut to a repository"
msgstr ""

#: source/TortoiseSVN_en.xml:8848(primary) 
msgid "shortcut"
msgstr ""

#: source/TortoiseSVN_en.xml:8850(para) 
msgid "If you frequently need to open the repository browser at a particular location, you can create a desktop shortcut using the automation interface to TortoiseProc. Just create a new shortcut and set the target to: <screen>\nTortoiseProc.exe /command:repobrowser /path:\"url/to/repository\" /notempfile\n</screen> Of course you need to include the real repository URL."
msgstr ""

#: source/TortoiseSVN_en.xml:8862(title) 
msgid "Ignore files which are already versioned"
msgstr ""

#: source/TortoiseSVN_en.xml:8864(primary) 
msgid "unversion"
msgstr ""

#: source/TortoiseSVN_en.xml:8866(para) 
msgid "If you accidentally added some files which should have been ignored, how do you get them out of version control without losing them? Maybe you have your own IDE configuration file which is not part of the project, but which took you a long time to set up just the way you like it."
msgstr ""

#: source/TortoiseSVN_en.xml:8873(para) 
msgid "If you have not yet committed the add, then all you have to do is use <menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Revert...</guimenuitem></menuchoice> to undo the add. You should then add the file(s) to the ignore list so they don't get added again later by mistake."
msgstr ""

#: source/TortoiseSVN_en.xml:8888(para) 
msgid "Move the file to somewhere safe, not inside your working copy."
msgstr ""

#: source/TortoiseSVN_en.xml:8894(para) 
msgid "<menuchoice><guimenu>TortoiseSVN</guimenu><guimenuitem>Commit</guimenuitem></menuchoice> the parent folder. TortoiseSVN will see that the file is missing and you can mark it for deletion from the repository."
msgstr ""

#: source/TortoiseSVN_en.xml:8905(para) 
msgid "Move the file back to its original location."
msgstr ""

#: source/TortoiseSVN_en.xml:8910(para) 
msgid "Add the file to the ignore list so you don't get into the same trouble again."
msgstr ""

#: source/TortoiseSVN_en.xml:8883(para) 
msgid "If the files are already in the repository, you have to do a little more work. <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:8920(title) 
msgid "Administrators"
msgstr ""

#: source/TortoiseSVN_en.xml:8922(para) 
msgid "This appendix contains solutions to problems/questions you might have when you are responsible for deploying TortoiseSVN to multiple client computers."
msgstr ""

#: source/TortoiseSVN_en.xml:8929(title) 
msgid "Deploy TortoiseSVN via group policies"
msgstr ""

#: source/TortoiseSVN_en.xml:8931(primary) 
msgid "group policies"
msgstr ""

#: source/TortoiseSVN_en.xml:8934(primary) source/TortoiseSVN_en.xml:9950(glossterm) 
msgid "GPO"
msgstr ""

#: source/TortoiseSVN_en.xml:8936(para) 
msgid "The TortoiseSVN installer comes as an msi file, which means you should have no problems adding that msi file to the group policies of your domain controller."
msgstr ""

#: source/TortoiseSVN_en.xml:8941(para) 
msgid "A good walkthrough on how to do that can be found in the knowledge base article 314934 from Microsoft: <ulink url=\"http://support.microsoft.com/?kbid=314934\"><citetitle>http://support.microsoft.com/?kbid=314934</citetitle></ulink>."
msgstr ""

#: source/TortoiseSVN_en.xml:8948(para) 
msgid "Versions 1.3.0 and later of TortoiseSVN must be installed under <emphasis>Computer Configuration</emphasis> and not under <emphasis>User Configuration</emphasis>. This is because those versions need the new CRT and MFC dlls, which can only be deployed <emphasis>per computer</emphasis> and not <emphasis>per user</emphasis>. If you really must install TortoiseSVN on a per user basis, then you must first install the MFC and CRT package version 8 from Microsoft on each computer you want to install TortoiseSVN as per user."
msgstr ""

#: source/TortoiseSVN_en.xml:8960(title) 
msgid "Redirect the upgrade check"
msgstr ""

#: source/TortoiseSVN_en.xml:8962(primary) 
msgid "upgrade check"
msgstr ""

#: source/TortoiseSVN_en.xml:8964(para) 
msgid "TortoiseSVN checks if there's a new version available every few days. If there is a newer version available, a dialog shows up informing the user about that."
msgstr ""

#: source/TortoiseSVN_en.xml:8970(title) 
msgid "The upgrade dialog"
msgstr ""

#: source/TortoiseSVN_en.xml:8973(para) 
msgid "If you're responsible for a lot of users in your domain, you might want your users to use only versions you have approved and not have them install always the latest version. You probably don't want that upgrade dialog to show up so your users don't go and upgrade immediately."
msgstr ""

#: source/TortoiseSVN_en.xml:8979(para) 
msgid "Versions 1.4.0 and later of TortoiseSVN allow you to redirect that upgrade check to your intranet server. You can set the registry key <filename>HKCU\\Software\\TortoiseSVN\\UpdateCheckURL</filename> (string value) to an URL pointing to a text file in your intranet. That textfile must have the following format: <screen>\n1.4.1.6000\nA new version of TortoiseSVN is available for you to download!\nhttp://192.168.2.1/downloads/TortoiseSVN-1.4.1.6000-svn-1.4.0.msi\n</screen> The first line in that file is the version string. You must make sure that it matches the exact version string of the TortoiseSVN installation package. The second line is a custom text, shown in the upgrade dialog. You can write there whatever you want. Just note that the space in the upgrade dialog is limited. Too long messages will get truncated! The third line is the URL to the new installation package. This URL is opened when the user clicks on the custom message label in the upgrade dialog. You can also just point the user to a webpage instead of the msi file directly. The URL is opened with the default web browser, so if you specify a webpage, that page is opened and shown to the user. If you specify the msi package, the browser will ask the user to save the msi file locally."
msgstr ""

#: source/TortoiseSVN_en.xml:9005(title) 
msgid "Automating TortoiseSVN"
msgstr ""

#: source/TortoiseSVN_en.xml:9007(para) 
msgid "Since all commands for TortoiseSVN are controlled through command line parameters, you can automate it with batch scripts or start specific commands and dialogs from other programs (e.g. your favourite text editor)."
msgstr ""

#: source/TortoiseSVN_en.xml:9012(para) 
msgid "Remember that TortoiseSVN is a GUI client, and this automation guide shows you how to make the TortoiseSVN dialogs appear to collect user input. If you want to write a script which requires no input, you should use the official Subversion command line client instead."
msgstr ""

#: source/TortoiseSVN_en.xml:9023(title) source/TortoiseSVN_en.xml:9446(title) 
msgid "TortoiseSVN Commands"
msgstr ""

#: source/TortoiseSVN_en.xml:9025(primary) 
msgid "automation"
msgstr ""

#: source/TortoiseSVN_en.xml:9028(primary) 
msgid "command line"
msgstr ""

#: source/TortoiseSVN_en.xml:9030(para) 
msgid "All commands are specified with the parameter <option>/command:abcd</option> where <literal>abcd</literal> is the required command name. Most of these commands need at least one path argument, which is given with <option>/path:\"some\\path\"</option>. In the following table the command refers to the <option>/command:abcd</option> parameter and the path refers to the <option>/path:\"some\\path\"</option> parameter."
msgstr ""

#: source/TortoiseSVN_en.xml:9038(para) 
msgid "Since some of the commands can take a list of target paths (e.g. committing several specific files) the <option>/path</option> parameter can take several paths, separated by a <literal>*</literal> character."
msgstr ""

#: source/TortoiseSVN_en.xml:9043(para) 
msgid "Since TortoiseSVN uses temporary files to pass multiple arguments between the shell extension and the main program, you <emphasis>must</emphasis> add the <option>/notempfile</option> parameter! If you don't, the command won't work and the file you pass with the <option>/path</option> parameter will be deleted!"
msgstr ""

#: source/TortoiseSVN_en.xml:9050(para) 
msgid "The progress dialog which is used for commits, updates and many more commands usually stays open after the command has finished until the user presses the <guibutton>OK</guibutton> button. This can be changed by checking the corresponding option in the settings dialog. But using that setting will close the progress dialog, no matter if you start the command from your batchfile or from the TortoiseSVN context menu."
msgstr ""

#: source/TortoiseSVN_en.xml:9058(para) 
msgid "To specify a different location of the configuration file, use the param <option>/configdir:\"path\\to\\config\\dir\"</option>."
msgstr ""

#: source/TortoiseSVN_en.xml:9068(para) 
msgid "<option>/closeonend:0</option> don't close the dialog automatically"
msgstr ""

#: source/TortoiseSVN_en.xml:9072(para) 
msgid "<option>/closeonend:1</option> auto close if no errors"
msgstr ""

#: source/TortoiseSVN_en.xml:9076(para) 
msgid "<option>/closeonend:2</option> auto close if no conflicts"
msgstr ""

#: source/TortoiseSVN_en.xml:9080(para) 
msgid "<option>/closeonend:3</option> auto close if no merges"
msgstr ""

#: source/TortoiseSVN_en.xml:9062(para) 
msgid "To close the progress dialog at the end of a command automatically without using the permanent setting you can pass the <option>/closeonend</option> parameter. <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:9097(title) 
msgid "List of available command line options"
msgstr ""

#: source/TortoiseSVN_en.xml:9103(entry) 
msgid "Command"
msgstr ""

#: source/TortoiseSVN_en.xml:9110(entry) 
msgid "Shows the About-dialog. This is also shown if no command is given."
msgstr ""

#: source/TortoiseSVN_en.xml:9121(option) 
msgid "/revstart:xxx"
msgstr ""

#: source/TortoiseSVN_en.xml:9122(option) 
msgid "/revend:xxx"
msgstr ""

#: source/TortoiseSVN_en.xml:9123(option) 
msgid "/strict"
msgstr ""

#: source/TortoiseSVN_en.xml:9117(entry) 
msgid "Opens the log dialog. The path specifies the file or folder for which the log should be shown. Three additional options can be set: <placeholder-1/>, <placeholder-2/> and <placeholder-3/>"
msgstr ""

#: source/TortoiseSVN_en.xml:9129(option) source/TortoiseSVN_en.xml:9144(option) source/TortoiseSVN_en.xml:9169(option) source/TortoiseSVN_en.xml:9177(option) source/TortoiseSVN_en.xml:9185(option) source/TortoiseSVN_en.xml:9192(option) source/TortoiseSVN_en.xml:9201(option) source/TortoiseSVN_en.xml:9214(option) source/TortoiseSVN_en.xml:9215(option) source/TortoiseSVN_en.xml:9217(option) source/TortoiseSVN_en.xml:9231(option) source/TortoiseSVN_en.xml:9244(option) source/TortoiseSVN_en.xml:9251(option) source/TortoiseSVN_en.xml:9259(option) source/TortoiseSVN_en.xml:9265(option) source/TortoiseSVN_en.xml:9273(option) source/TortoiseSVN_en.xml:9279(option) source/TortoiseSVN_en.xml:9301(option) source/TortoiseSVN_en.xml:9301(option) source/TortoiseSVN_en.xml:9312(option) source/TortoiseSVN_en.xml:9321(option) source/TortoiseSVN_en.xml:9333(option) source/TortoiseSVN_en.xml:9343(option) source/TortoiseSVN_en.xml:9350(option) source/TortoiseSVN_en.xml:9358(option) 
msgid "/path"
msgstr ""

#: source/TortoiseSVN_en.xml:9130(option) 
msgid "/url"
msgstr ""

#: source/TortoiseSVN_en.xml:9128(entry) 
msgid "Opens the checkout dialog. The <placeholder-1/> specifies the target directory and the <placeholder-2/> specifies the URL to checkout from."
msgstr ""

#: source/TortoiseSVN_en.xml:9136(entry) 
msgid "Opens the import dialog. The path specifies the directory with the data to import."
msgstr ""

#: source/TortoiseSVN_en.xml:9145(option) 
msgid "/rev"
msgstr ""

#: source/TortoiseSVN_en.xml:9143(entry) 
msgid "Updates the working copy in <placeholder-1/> to HEAD. If the option <placeholder-2/> is given then a dialog is shown to ask the user to which revision the update should go."
msgstr ""

#: source/TortoiseSVN_en.xml:9158(option) 
msgid "path"
msgstr ""

#: source/TortoiseSVN_en.xml:9162(option) 
msgid "/bugid:\"the bug id here\""
msgstr ""

#: source/TortoiseSVN_en.xml:9152(entry) 
msgid "Opens the commit dialog. The path specifies the target directory or the list of files to commit. You can also specify the /logmsg switch to pass a predefined log message to the commit dialog. Or, if you don't want to pass the log message on the command line, use /logmsgfile:path, where <placeholder-1/> points to a file containing the log message. To prefill the bug ID box (in case you've set up integration with bugtrackers properly), you can use the <placeholder-2/> to do that."
msgstr ""

#: source/TortoiseSVN_en.xml:9168(entry) 
msgid "Adds the files in <placeholder-1/> to version control."
msgstr ""

#: source/TortoiseSVN_en.xml:9175(entry) 
msgid "Reverts local modifications of a working copy. The <placeholder-1/> tells which items to revert."
msgstr ""

#: source/TortoiseSVN_en.xml:9183(entry) 
msgid "Cleans up interrupted or aborted operations and unlocks the working copy in <placeholder-1/>."
msgstr ""

#: source/TortoiseSVN_en.xml:9193(option) source/TortoiseSVN_en.xml:9368(option) 
msgid "/noquestion"
msgstr ""

#: source/TortoiseSVN_en.xml:9190(entry) 
msgid "Marks a conflicted file specified in <placeholder-1/> as resolved. If <placeholder-2/> is given, then resolving is done without asking the user first if it really should be done."
msgstr ""

#: source/TortoiseSVN_en.xml:9200(entry) 
msgid "Creates a repository in <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:9206(entry) 
msgid "Opens the switch dialog. The path specifies the target directory."
msgstr ""

#: source/TortoiseSVN_en.xml:9213(entry) 
msgid "Exports the working copy in <placeholder-1/> to another directory. If the <placeholder-2/> points to an unversioned directory, a dialog will ask for an URL to export to the dir in <placeholder-3/>."
msgstr ""

#: source/TortoiseSVN_en.xml:9222(entry) 
msgid "Opens the merge dialog. The path specifies the target directory."
msgstr ""

#: source/TortoiseSVN_en.xml:9229(entry) 
msgid "Brings up the branch/tag dialog. The <placeholder-1/> is the working copy to branch/tag from."
msgstr ""

#: source/TortoiseSVN_en.xml:9237(entry) 
msgid "Opens the settings dialog."
msgstr ""

#: source/TortoiseSVN_en.xml:9243(entry) 
msgid "Removes the file(s) in <placeholder-1/> from version control."
msgstr ""

#: source/TortoiseSVN_en.xml:9250(entry) 
msgid "Renames the file in <placeholder-1/>. The new name for the file is asked with a dialog."
msgstr ""

#: source/TortoiseSVN_en.xml:9261(option) source/TortoiseSVN_en.xml:9263(option) 
msgid "/path2"
msgstr ""

#: source/TortoiseSVN_en.xml:9257(entry) 
msgid "Starts the external diff program specified in the TortoiseSVN settings. The <placeholder-1/> specifies the first file. If the option <placeholder-2/> is set, then the diff program is started with those two files. If <placeholder-3/> is ommitted, then the diff is done between the file in <placeholder-4/> and its BASE."
msgstr ""

#: source/TortoiseSVN_en.xml:9270(entry) 
msgid "Starts the conflicteditor specified in the TortoiseSVN settings with the correct files for the conflicted file in <placeholder-1/>."
msgstr ""

#: source/TortoiseSVN_en.xml:9278(entry) 
msgid "Opens the relocate dialog. The <placeholder-1/> specifies the working copy path to relocate."
msgstr ""

#: source/TortoiseSVN_en.xml:9285(entry) 
msgid "Opens the help file."
msgstr ""

#: source/TortoiseSVN_en.xml:9291(entry) 
msgid "Opens the check-for-modifications dialog. The path specifies the working copy directory."
msgstr ""

#: source/TortoiseSVN_en.xml:9303(option) source/TortoiseSVN_en.xml:9305(option) 
msgid "/rev:xxx"
msgstr ""

#: source/TortoiseSVN_en.xml:9298(entry) 
msgid "Starts the repository browser dialog, pointing to the URL of the working copy given in <placeholder-1/> or <placeholder-2/> points directly to an URL. An additional option <placeholder-3/> can be used to specify the revision which the repository browser should show. If the <placeholder-4/> is omitted, it defaults to HEAD."
msgstr ""

#: source/TortoiseSVN_en.xml:9311(entry) 
msgid "Adds all targets in <placeholder-1/> to the ignore list, i.e. adds the svn:ignored property to those files."
msgstr ""

#: source/TortoiseSVN_en.xml:9322(option) 
msgid "startrev"
msgstr ""

#: source/TortoiseSVN_en.xml:9323(option) 
msgid "endrev"
msgstr ""

#: source/TortoiseSVN_en.xml:9319(entry) 
msgid "Opens the blame dialog for the file specified in <placeholder-1/>. If the options <placeholder-2/> and <placeholder-3/> are set, then the dialog asking for the blame range is not shown but the revision values of those options are used instead."
msgstr ""

#: source/TortoiseSVN_en.xml:9334(option) 
msgid "/savepath:path"
msgstr ""

#: source/TortoiseSVN_en.xml:9335(option) 
msgid "/revision:xxx"
msgstr ""

#: source/TortoiseSVN_en.xml:9331(entry) 
msgid "Saves a file from an URL or working copy path given in <placeholder-1/> to the location given in <placeholder-2/>. The revision is given in <placeholder-3/>. This can be used to get a file with a specific revision."
msgstr ""

#: source/TortoiseSVN_en.xml:9341(entry) 
msgid "Creates a patch file for the path given in <placeholder-1/>."
msgstr ""

#: source/TortoiseSVN_en.xml:9348(entry) 
msgid "Shows the revision graph for the path given in <placeholder-1/>."
msgstr ""

#: source/TortoiseSVN_en.xml:9355(entry) 
msgid "Locks a file. The 'lock' dialog is shown so the user can enter a comment for the lock. <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:9363(entry) 
msgid "Rebuilds the windows icon cache. Only use this in case the windows icons are corrupted. A side effect of this (which can't be avoided) is that the icons on the desktop get rearranged. <placeholder-1/>"
msgstr ""

#: source/TortoiseSVN_en.xml:9375(para) 
msgid "Examples (which should be entered on one line): <screen>\nTortoiseProc.exe /command:commit /path:\"c:\\svn_wc\\file1.txt*c:\\svn_wc\\file2.txt\"\n                 /logmsg:\"test log message\" /notempfile /closeonend\n\nTortoiseProc.exe /command:update /path:\"c:\\svn_wc\\\" /notempfile /closeonend\n\nTortoiseProc.exe /command:log /path:\"c:\\svn_wc\\file1.txt\"\n                 /revstart:50 /revend:60 /notempfile /closeonend\n</screen>"
msgstr ""

#: source/TortoiseSVN_en.xml:9390(title) 
msgid "Command Line Interface Cross Reference"
msgstr ""

#: source/TortoiseSVN_en.xml:9392(primary) 
msgid "command line client"
msgstr ""

#: source/TortoiseSVN_en.xml:9395(primary) 
msgid "CLI"
msgstr ""

#: source/TortoiseSVN_en.xml:9398(para) 
msgid "Sometimes this manual refers you to the main Subversion documentation, which describes subversion in terms of the Command Line Interface (CLI). To help you understand what TortoiseSVN is doing behind the scenes, we have compiled a list showing the equivalent CLI commands for each of TortoiseSVN's GUI operations."
msgstr ""

#: source/TortoiseSVN_en.xml:9407(para) 
msgid "Even though there are CLI equivalents to what TortoiseSVN does, remember that TortoiseSVN does <emphasis>not</emphasis> call the CLI but uses the Subversion library directly."
msgstr ""

#: source/TortoiseSVN_en.xml:9413(para) 
msgid "If you think you have found a bug in TortoiseSVN, we may ask you to try to reproduce it using the CLI, so that we can distinguish TSVN issues from Subversion issues. This reference tells you which command to try."
msgstr ""

#: source/TortoiseSVN_en.xml:9421(title) 
msgid "Conventions and Basic Rules"
msgstr ""

#: source/TortoiseSVN_en.xml:9422(para) 
msgid "In the descriptions which follow, the URL for a repository location is shown simply as <literal>URL</literal>, and an example might be <literal>http://tortoisesvn.tigris.org/svn/tortoisesvn/trunk</literal>. The working copy path is shown simply as <literal>PATH</literal>, and an example might be <literal>C:\\TortoiseSVN\\trunk</literal>."
msgstr ""

#: source/TortoiseSVN_en.xml:9432(para) 
msgid "Because TortoiseSVN is a Windows Shell Extension, it is not able to use the notion of a current working directory. All working copy paths must be given using the absolute path, not a relative path."
msgstr ""

#: source/TortoiseSVN_en.xml:9439(para) 
msgid "Certain items are optional, and these are often controlled by checkboxes or radio buttons in TortoiseSVN. These options are shown in [square brackets] in the command line definitions."
msgstr ""

#: source/TortoiseSVN_en.xml:9448(title) 
msgid "Checkout"
msgstr ""

#: source/TortoiseSVN_en.xml:9449(screen) 
#, no-wrap
msgid "\nsvn checkout [-N] [--ignore-externals] [-r rev] URL PATH\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9452(para) 
msgid "If <guilabel>Only checkout the top folder</guilabel> is checked, use the <literal>-N</literal> switch."
msgstr ""

#: source/TortoiseSVN_en.xml:9456(para) source/TortoiseSVN_en.xml:9499(para) 
msgid "If <guilabel>Omit externals</guilabel> is checked, use the <literal>--ignore-externals</literal> switch."
msgstr ""

#: source/TortoiseSVN_en.xml:9460(para) 
msgid "If you are checking out a specific revision, specify that after the URL using <literal>-r</literal> switch."
msgstr ""

#: source/TortoiseSVN_en.xml:9466(title) 
msgid "Update"
msgstr ""

#: source/TortoiseSVN_en.xml:9467(screen) 
#, no-wrap
msgid "\nsvn info URL_of_WC\nsvn update [-r rev] PATH\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9471(para) 
msgid "Updating multiple items is currently not an atomic operation in Subversion. So TortoiseSVN first finds the HEAD revision of the repository, and then updates all items to that particular revision number to avoid creating a mixed revision working copy."
msgstr ""

#: source/TortoiseSVN_en.xml:9478(para) 
msgid "If only one item is selected for updating or the selected items are not all from the same repository, TortoiseSVN just updates to HEAD."
msgstr ""

#: source/TortoiseSVN_en.xml:9483(para) 
msgid "No command line options are used here. <guilabel>Update to revision</guilabel> also implements the update command, but offers more options."
msgstr ""

#: source/TortoiseSVN_en.xml:9490(title) 
msgid "Update to Revision"
msgstr ""

#: source/TortoiseSVN_en.xml:9491(screen) 
#, no-wrap
msgid "\nsvn info URL_of_WC\nsvn update [-r rev] [-N] [--ignore-externals] PATH\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9495(para) 
msgid "If <guilabel>Only update the top folder</guilabel> is checked, use the <literal>-N</literal> switch."
msgstr ""

#: source/TortoiseSVN_en.xml:9505(title) 
msgid "Commit"
msgstr ""

#: source/TortoiseSVN_en.xml:9506(para) 
msgid "In TortoiseSVN, the commit dialog uses several Subversion commands. The first stage is a status check which determines the items in your working copy which can potentially be committed. You can review the list, diff files against BASE and select the items you want to be included in the commit."
msgstr ""

#: source/TortoiseSVN_en.xml:9513(screen) source/TortoiseSVN_en.xml:9675(screen) source/TortoiseSVN_en.xml:9703(screen) 
#, no-wrap
msgid "\nsvn status -v PATH\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9516(para) source/TortoiseSVN_en.xml:9604(para) 
msgid "If <guilabel>Show unversioned files</guilabel> is checked, TortoiseSVN will also show all unversioned files and folders in the working copy hierarchy, taking account of the ignore rules. This particular feature has no direct equivalent in Subversion, as the <literal>svn status</literal> command does not descend into unversioned folders."
msgstr ""

#: source/TortoiseSVN_en.xml:9524(para) 
msgid "If you check any unversioned files and folders, those items will first be added to your working copy."
msgstr ""

#: source/TortoiseSVN_en.xml:9528(screen) source/TortoiseSVN_en.xml:9818(screen) 
#, no-wrap
msgid "\nsvn add PATH...\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9531(para) 
msgid "When you click on OK, the Subversion commit takes place. If you have left all the file selection checkboxes in their default state, TortoiseSVN uses a single recursive commit of the working copy. If you deselect some files, then a non-recursive commit (<literal>-N</literal>) must be used, and every path must be specified individually on the commit command line."
msgstr ""

#: source/TortoiseSVN_en.xml:9539(screen) 
#, no-wrap
msgid "\nsvn commit -m \"LogMessage\" [-N] [--no-unlock] PATH...\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9542(para) source/TortoiseSVN_en.xml:9748(para) source/TortoiseSVN_en.xml:9831(para) 
msgid "<literal>LogMessage</literal> here represents the contents of the log message edit box. This can be empty."
msgstr ""

#: source/TortoiseSVN_en.xml:9546(para) 
msgid "If <guilabel>Keep locks</guilabel> is checked, use the <literal>--no-unlock</literal> switch."
msgstr ""

#: source/TortoiseSVN_en.xml:9552(title) 
msgid "Diff"
msgstr ""

#: source/TortoiseSVN_en.xml:9553(screen) 
#, no-wrap
msgid "\nsvn diff PATH\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9556(para) 
msgid "If you use Diff from the main context menu, you are diffing a modified file against its BASE revision. The output from the CLI command above also does this and produces output in unified-diff format. However, this is not what TortoiseSVN is using. TortoiseSVN uses TortoiseMerge (or a diff program of your choosing) to display differences visually between fulltext files, so there is no direct CLI equivalent."
msgstr ""

#: source/TortoiseSVN_en.xml:9565(para) 
msgid "You can also diff any 2 files using TortoiseSVN, whether or not they are version controlled. TortoiseSVN just feeds the two files into the chosen diff program and lets it work out where the differences lie."
msgstr ""

#: source/TortoiseSVN_en.xml:9573(title) 
msgid "Show Log"
msgstr ""

#: source/TortoiseSVN_en.xml:9574(screen) 
#, no-wrap
msgid "\nsvn log -v -r 0:N --limit 100 [--stop-on-copy] PATH\n  or\nsvn log -v -r M:N [--stop-on-copy] PATH\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9579(para) 
msgid "By default, TortoiseSVN tries to fetch 100 log messages using the --limit method. If the settings instruct it to use old APIs, then the second form is used to fetch the log messages for 100 repository revisions."
msgstr ""

#: source/TortoiseSVN_en.xml:9585(para) 
msgid "If <guilabel>Stop on copy/rename</guilabel> is checked, use the <literal>--stop-on-copy</literal> switch."
msgstr ""

#: source/TortoiseSVN_en.xml:9592(screen) 
#, no-wrap
msgid "\nsvn status -v PATH\n  or\nsvn status -u -v PATH\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9597(para) 
msgid "The initial status check looks only at your working copy. If you click on <guibutton>Check repository</guibutton> then the repository is also checked to see which files would be changed by an update, which requires the <literal>-u</literal> switch."
msgstr ""

#: source/TortoiseSVN_en.xml:9614(title) 
msgid "Revision Graph"
msgstr ""

#: source/TortoiseSVN_en.xml:9615(para) 
msgid "The revision graph is a feature of TortoiseSVN only. There's no equivalent in the command line client."
msgstr ""

#: source/TortoiseSVN_en.xml:9619(para) 
msgid "What TortoiseSVN does is an <screen>\nsvn info URL_of_WC\nsvn log -v URL\n</screen> where URL is the repository <emphasis>root</emphasis> and then analyzes the data returned."
msgstr ""

#: source/TortoiseSVN_en.xml:9630(title) 
msgid "Repo Browser"
msgstr ""

#: source/TortoiseSVN_en.xml:9631(screen) 
#, no-wrap
msgid "\nsvn info URL_of_WC\nsvn list [-r rev] -v URL\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9635(para) 
msgid "You can use <literal>svn info</literal> to determine the repository root, which is the top level shown in the repository browser. You cannot navigate <literal>Up</literal> above this level. Also, this command returns all the locking information shown in the repository browser."
msgstr ""

#: source/TortoiseSVN_en.xml:9642(para) 
msgid "The <literal>svn list</literal> call will list the contents of a directory, given a URL and revision."
msgstr ""

#: source/TortoiseSVN_en.xml:9648(title) 
msgid "Edit Conflicts"
msgstr ""

#: source/TortoiseSVN_en.xml:9649(para) 
msgid "This command has no CLI equivalent. It invokes TortoiseMerge or an external 3-way diff/merge tool to look at the files involved in the conflict and sort out which lines to use."
msgstr ""

#: source/TortoiseSVN_en.xml:9656(title) 
msgid "Resolved"
msgstr ""

#: source/TortoiseSVN_en.xml:9657(screen) 
#, no-wrap
msgid "\nsvn resolved PATH\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9662(title) 
msgid "Rename"
msgstr ""

#: source/TortoiseSVN_en.xml:9663(screen) 
#, no-wrap
msgid "\nsvn rename CURR_PATH NEW_PATH\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9668(title) 
msgid "Delete"
msgstr ""

#: source/TortoiseSVN_en.xml:9669(screen) 
#, no-wrap
msgid "\nsvn delete PATH\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9674(title) 
msgid "Revert"
msgstr ""

#: source/TortoiseSVN_en.xml:9678(para) 
msgid "The first stage is a status check which determines the items in your working copy which can potentially be reverted. You can review the list, diff files against BASE and select the items you want to be included in the revert."
msgstr ""

#: source/TortoiseSVN_en.xml:9684(para) 
msgid "When you click on OK, the Subversion revert takes place. If you have left all the file selection checkboxes in their default state, TortoiseSVN uses a single recursive (<literal>-R</literal>) revert of the working copy. If you deselect some files, then every path must be specified individually on the revert command line."
msgstr ""

#: source/TortoiseSVN_en.xml:9691(screen) 
#, no-wrap
msgid "\nsvn revert [-R] PATH...\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9697(screen) 
#, no-wrap
msgid "\nsvn cleanup PATH\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9702(title) 
msgid "Get Lock"
msgstr ""

#: source/TortoiseSVN_en.xml:9706(para) 
msgid "The first stage is a status check which determines the files in your working copy which can potentially be locked. You can select the items you want to be locked."
msgstr ""

#: source/TortoiseSVN_en.xml:9711(screen) 
#, no-wrap
msgid "\nsvn lock -m \"LockMessage\" [--force] PATH...\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9714(para) 
msgid "<literal>LockMessage</literal> here represents the contents of the lock message edit box. This can be empty."
msgstr ""

#: source/TortoiseSVN_en.xml:9718(para) 
msgid "If <guilabel>Steal the locks</guilabel> is checked, use the <literal>--force</literal> switch."
msgstr ""

#: source/TortoiseSVN_en.xml:9724(title) 
msgid "Release Lock"
msgstr ""

#: source/TortoiseSVN_en.xml:9725(screen) 
#, no-wrap
msgid "\nsvn unlock PATH\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9730(title) 
msgid "Branch/Tag"
msgstr ""

#: source/TortoiseSVN_en.xml:9731(screen) 
#, no-wrap
msgid "\nsvn copy -m \"LogMessage\" URL URL\n  or\nsvn copy -m \"LogMessage\" URL@rev URL@rev\n  or\nsvn copy -m \"LogMessage\" PATH URL\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9743(listitem) 
msgid "Specific revision in repository"
msgstr ""

#: source/TortoiseSVN_en.xml:9738(para) 
msgid "The Branch/Tag dialog performs a copy to the repository. There are 3 radio button options: <placeholder-1/> which correspond to the 3 command line variants above."
msgstr ""

#: source/TortoiseSVN_en.xml:9755(screen) 
#, no-wrap
msgid "\nsvn info URL_of_WC\nsvn switch [-r rev] URL PATH\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9761(title) 
msgid "Merge"
msgstr ""

#: source/TortoiseSVN_en.xml:9762(screen) 
#, no-wrap
msgid "\nsvn merge [--dry-run] From_URL@revN To_URL@revM PATH\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9765(para) 
msgid "The <guibutton>Dry run</guibutton> performs the same merge with the <literal>--dry-run</literal> switch."
msgstr ""

#: source/TortoiseSVN_en.xml:9769(screen) 
#, no-wrap
msgid "\nsvn diff From_URL@revN To_URL@revM\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9772(para) 
msgid "The <guibutton>Unified diff</guibutton> shows the diff operation which will be used to do the merge."
msgstr ""

#: source/TortoiseSVN_en.xml:9778(title) 
msgid "Export"
msgstr ""

#: source/TortoiseSVN_en.xml:9779(screen) 
#, no-wrap
msgid "\nsvn export [-r rev] [--ignore-externals] URL Export_PATH\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9782(para) 
msgid "This form is used when accessed from an unversioned folder, and the folder is used as the destination."
msgstr ""

#: source/TortoiseSVN_en.xml:9786(para) 
msgid "Exporting a working copy to a different location is done without using the Subversion library, so there's no matching command line equivalent."
msgstr ""

#: source/TortoiseSVN_en.xml:9791(para) 
msgid "What TortoiseSVN does is to copy all files to the new location while showing you the progress of the operation. Unversioned files/folders can optionally be exported too."
msgstr ""

#: source/TortoiseSVN_en.xml:9796(para) 
msgid "In both cases, if <guilabel>Omit externals</guilabel> is checked, use the <literal>--ignore-externals</literal> switch."
msgstr ""

#: source/TortoiseSVN_en.xml:9803(title) 
msgid "Relocate"
msgstr ""

#: source/TortoiseSVN_en.xml:9804(screen) 
#, no-wrap
msgid "\nsvn switch --relocate From_URL To_URL\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9809(title) 
msgid "Create Repository Here"
msgstr ""

#: source/TortoiseSVN_en.xml:9810(screen) 
#, no-wrap
msgid "\nsvnadmin create --fs-type fsfs PATH\n  or\nsvnadmin create --fs-type bdb PATH\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9817(title) source/TortoiseSVN_en.xml:9893(glossterm) 
msgid "Add"
msgstr ""

#: source/TortoiseSVN_en.xml:9821(para) 
msgid "If you selected a folder, TortoiseSVN first scans it recursively for items which can be added."
msgstr ""

#: source/TortoiseSVN_en.xml:9828(screen) 
#, no-wrap
msgid "\nsvn import -m LogMessage PATH URL\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9837(title) 
msgid "Blame"
msgstr ""

#: source/TortoiseSVN_en.xml:9838(screen) 
#, no-wrap
msgid "\nsvn blame -r N:M -v PATH\nsvn log -r N:M PATH\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9842(para) 
msgid "If you use TortoiseBlame to view the blame info, the file log is also required to show log messages in a tooltip. If you view blame as a textfile, this information is not required."
msgstr ""

#: source/TortoiseSVN_en.xml:9850(title) 
msgid "Add to Ignore List"
msgstr ""

#: source/TortoiseSVN_en.xml:9851(screen) 
#, no-wrap
msgid "\nsvn propget svn:ignore PATH &gt; tempfile\n{edit new ignore item into tempfile}\nsvn propset svn:ignore -F tempfile PATH\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9856(para) 
msgid "Because the svn:ignore property is often a multi-line value, it is shown here as being changed via a text file rather than directly on the command line."
msgstr ""

#: source/TortoiseSVN_en.xml:9863(title) 
msgid "Create Patch"
msgstr ""

#: source/TortoiseSVN_en.xml:9864(screen) 
#, no-wrap
msgid "\nsvn diff PATH &gt; patchfile\n"
msgstr ""

#: source/TortoiseSVN_en.xml:9867(para) 
msgid "TortoiseSVN creates a patchfile in unified diff format by comparing the working copy with its BASE version."
msgstr ""

#: source/TortoiseSVN_en.xml:9873(title) 
msgid "Apply Patch"
msgstr ""

#: source/TortoiseSVN_en.xml:9874(para) 
msgid "Applying patches is a tricky business unless the patch and working copy are at the same revision. Luckily for you, you can use TortoiseMerge, which has no direct equivalent in Subversion."
msgstr ""

#: source/TortoiseSVN_en.xml:9891(title) 
msgid "Glossary"
msgstr ""

#: source/TortoiseSVN_en.xml:9895(para) 
msgid "A Subversion command that is used to add a file or directory to a repository."
msgstr ""

#: source/TortoiseSVN_en.xml:9902(glossterm) 
msgid "BDB"
msgstr ""

#: source/TortoiseSVN_en.xml:9904(para) 
msgid "Berkeley DB. A well tested database backend for repositories, that cannot be used on network shares. Default for pre 1.2 repositories."
msgstr ""

#: source/TortoiseSVN_en.xml:9911(glossterm) 
msgid "FSFS"
msgstr ""

#: source/TortoiseSVN_en.xml:9913(para) 
msgid "FS Filesystem. A proprietary Subversion filesystem backend for repositories. Can be used on network shares. Default for 1.2 and newer repositories."
msgstr ""

#: source/TortoiseSVN_en.xml:9922(para) 
msgid "A repository is a central place where data is stored and maintained. A repository can be a place where multiple databases or files are located for distribution over a network, or a repository can be a location that is directly accessible to the user without having to travel across a network."
msgstr ""

#: source/TortoiseSVN_en.xml:9931(glossterm) 
msgid "BASE revision"
msgstr ""

#: source/TortoiseSVN_en.xml:9933(para) 
msgid "The current base revision of a file or folder in your <emphasis>working copy</emphasis>. This is the revision the file or folder was in, when the last checkout, update or commit was run. The BASE revision is normally not equal to the HEAD revision."
msgstr ""

#: source/TortoiseSVN_en.xml:9942(glossterm) 
msgid "HEAD revision"
msgstr ""

#: source/TortoiseSVN_en.xml:9944(para) 
msgid "The latest revision of a file or folder in the <emphasis>repository</emphasis>."
msgstr ""

#: source/TortoiseSVN_en.xml:9952(para) 
msgid "Group policy object"
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>.
#: source/TortoiseSVN_en.xml:0(None) 
msgid "translator-credits"
msgstr ""

#. Place the translation of 'translation' here.
#: source/TortoiseSVN_en.xml:0(None) 
msgid "translator-translation"
msgstr ""

