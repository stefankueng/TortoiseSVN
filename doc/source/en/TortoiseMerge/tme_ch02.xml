<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter SYSTEM "../../dtd/dblite.dtd">
<chapter id="tmerge-dug">
	<title>Using TortoiseMerge</title>
	<simplesect>
		<para>
		</para>
	</simplesect>
	<!-- ================================================================= -->
	<!-- ======================== OPEN FILES ============================= -->
	<!-- ================================================================= -->
	<sect1 id="tmerge-dug-open">
		<title>Open Files</title>
		<?dbhh topicname="HIDD_OPENDLG"?>
		<para>
			When you start TortoiseMerge without any command line switches then
			you have to open the files manually, using
			<menuchoice>
				<guimenu>File</guimenu>
				<guimenuitem>Open</guimenuitem>
			</menuchoice>.
		</para>
		<figure id="tmerge-dug-dia-open">
			<title>The Open Dialog</title>
			<graphic fileref="images/MergeOpen.png"/>
		</figure>
		<para>
			The first thing you have to do is to decide whether you just want
			to compare/merge files, or whether you want to apply a patchfile.
			Depending on what you choose, the corresponding edit boxes and
			browse buttons are activated.
		</para>
		<sect2 id="tmerge-dug-open-view">
			<title>Viewing / Merging</title>
			<para>
				If you want to compare / merge files you have to set at least two 
				of the three possible paths for <literal>Base</literal>,
				<literal>Mine</literal> and <literal>Theirs</literal>. 
				If you select only two files, then TortoiseMerge will show 
				you the differences between those two files, either in a two 
				pane view or in a one pane view. You can switch between 
				those two views with the menu command
				<menuchoice>
					<guimenu>View</guimenu>
					<guimenuitem>Oneway Diff</guimenuitem>
				</menuchoice>
			</para>
			<figure id="tmerge-dug-dia-1pane">
				<title>One Pane View</title>
				<graphic fileref="images/MergeOnePane.png"/>
			</figure>
			<figure id="tmerge-dug-dia-2pane">
				<title>Two Pane View</title>
				<graphic fileref="images/MergeTwoPane.png"/>
			</figure>
			<para>
				If you want to compare/merge three files, TortoiseMerge 
				will show you the differences in a three pane view. This view 
				is also used if you need to resolve conflicted files.
			</para>
			<figure id="tmerge-dug-dia-3pane">
				<title>Three Pane View</title>
				<graphic fileref="images/MergeThreePane.png"/>
			</figure>
			<para>
				The left pane shows you the differences between 
				<literal>Their</literal> file and the <literal>Base</literal>
				file, while the right pane shows you the differences between
				<literal>Mine</literal> file and the <literal>Base</literal>
				file. The bottom pane shows you the result of merging
				<literal>Base</literal>, <literal>Mine</literal> and 
				<literal>Theirs</literal> with possible conflicts.
				If you hover the mouse over the pane title, a tooltip will
				show the filenames used for the diff in each pane.
			</para>
			<para>
				The relationships between the three files are explained in
				the diagram below:
			</para>
			<figure id="tmerge-dug-dia-conflict">
				<title>File Conflict</title>
				<graphic fileref="images/mergeprinciple.png"/>
			</figure>
			<para>
				The base file represents the oldest version of a file, from
				where <literal>You</literal> and <literal>They</literal> start
				making changes. <literal>Mine</literal> represents 
				the base file with all the changes <emphasis>you</emphasis> made, 
				and <literal>Theirs</literal> is the file with all the changes 
				<emphasis>someone else</emphasis> made to the file.
			</para>
		</sect2>
		<sect2 id="tmerge-dug-open-patch">
			<title>Applying Patches</title>
			<para>
				If you want to apply a patchfile you have to set both the path
				to the patchfile itself and the path to the folder where the
				patchfile should be applied.
			</para>
			<caution>
				<para>
					Currently, only patchfiles in
					<emphasis>Unified Diff Format</emphasis> are supported.
					And only files which were generated from a Subversion
					working copy. Other formats like patchfiles generated by
					CVS are currently not supported!
				</para>
			</caution>
			<para>
				If TortoiseMerge is able to parse the patchfile it will show
				you a small window with all the files which have changes
				according to the patchfile.
				<figure id="tmerge-dug-dia-patch">
					<title>Patch Filelist</title>
					<graphic fileref="images/MergePatchWindow.png"/>
				</figure>
				If the filename is shown in black, then the patch can be applied
				without any problems. That means the file is not outdated
				according to the patch.
				However, if the filename is shown in red, then the patch can't
				get applied directly because you already changed that file.
			</para>
			<para>
				But don't worry. If you're working with Subversion you can
				retrieve an older version of the file and resolve the conflict.
				In fact, TortoiseMerge automatically tries to get that older
				version of the file and then shows you the diff between
				<literal>Base</literal> (the older version of the file),
				<literal>Mine</literal> (the file as it is currently in your
				working copy) and <literal>Theirs</literal> (the older version
				of the file with the patch already applied). Then you can
				resolve possible conflicts manually.
			</para>
			<para>
				Depending on whether TortoiseMerge can apply the patch directly
				or by fetching an older version of the file first, it shows you
				a two pane view (patch can be applied directly) or a three pane
				view (older version of file fetched).
			</para>
		</sect2>
	</sect1>
	<!-- ================================================================= -->
	<!-- ======================== TOOLBAR ================================ -->
	<!-- ================================================================= -->
	<sect1 id="tmerge-dug-toolbar">
		<title>Buttons and Other Controls</title>
		<para>
			<figure id="tmerge-dug-dia-toolbar">
				<title>The Toolbar</title>
				<graphic fileref="images/MergeToolbar.png"/>
			</figure>
			Below the menu bar lies the tool bar. This provides easy access to
			the most commonly used tools, which are
			<itemizedlist>
				<listitem>
					<para>
						<guibutton>Open</guibutton>
						accesses the file-open dialog. What else?
					</para>
				</listitem>
				<listitem>
					<para>
						<guibutton>Save</guibutton>
						saves any changes you have made.
						If you have selected
						<guilabel>Resolve conflicted Subversion status on save</guilabel>
						in the settings dialog, then Subversion's conflict
						working files will be deleted automatically if all
						conflicts were resolved.
					</para>
				</listitem>
				<listitem>
					<para>
						<guibutton>Reload</guibutton>
						discards any changes you have made and
						reloads the original files.
					</para>
				</listitem>
				<listitem>
					<para>
						<guibutton>Undo</guibutton>
						This feature is not enabled yet.
					</para>
				</listitem>
				<listitem>
					<para>
						<guibutton>Prev/Next Difference</guibutton>
						jumps directly to the next point where the files differ.
						This saves scrolling through all the unchanged parts
						of the file.
					</para>
					<para>
						When you do this in 2-pane diff mode, the detail bar at
						the bottom of the screen will show you the inline differences
						for the first line, regardless of where the mouse is hovering.
					</para>
				</listitem>
				<listitem>
					<para>
						<guibutton>Prev/Next Conflict</guibutton>
						jumps directly to the next point where the file
						differences are in conflict and need to be resolved.
					</para>
				</listitem>
				<listitem>
					<para>
						<guibutton>Mark as Resolved</guibutton>
						When you have resolved all the conflicts in a file and
						saved the changes, you can mark it as resolved from
						within TortoiseMerge, rather than going back to
						explorer and marking as resolved from there.
					</para>
				</listitem>
				<listitem>
					<para>
						<guibutton>Show Spaces</guibutton>
						toggles the option to display space and tab characters
						as symbols so you can distinguish white space changes.
					</para>
				</listitem>
				<listitem>
					<para>
						<guibutton>Switch View</guibutton>
						selects between one-pane and two-pane view.
						Disabled in 3-pane view.
					</para>
				</listitem>
				<listitem>
					<para>
						<guibutton>Switch Left and Right View</guibutton>
						In 2-pane view, swaps the left and right windows.
						When you are comparing a file in 2 different trees, 
						as opposed to 2 revisions of the same file, TortoiseSVN
						does not know which one should go in the left pane as
						the <quote>original/base</quote> version. If it gets
						this wrong, you can change it to make viewing easier.
					</para>
				</listitem>
				<listitem>
					<para>
						<guibutton>Settings</guibutton>
						takes you to TortoiseMerge's settings dialog.
					</para>
				</listitem>
			</itemizedlist>
		</para>
		<para>
			On the left side of the window is a locator bar. This provides
			a quick visual reference as to where the changes lie within the
			file. The bar has three columns. The left column refers to the
			left pane, the right column to the right pane, and the centre
			column to the bottom pane (if present). In one-pane view only
			the left column is used. The locator bar can also be used as a
			scroll bar to scroll all the windows simultaneously.
		</para>
		<para>
			Below the bottom window is the status bar. This shows the number of
			lines added and deleted in <literal>Theirs</literal> and
			<literal>Mine</literal>, and the number of unresolved
			conflicts remaining.
			The left side of the status bar is used to display hints when you
			hover the mouse over a control.
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ======================== CONFLICTS ============================== -->
	<!-- ================================================================= -->
	<sect1 id="tmerge-dug-conflicts">
		<title>Merging / Editing Conflicts</title>
		<para>
			TortoiseMerge not only <emphasis>shows</emphasis> you the differences
			between files but also lets you resolve conflicts or apply changes.
		</para>
		<para>
			If you're in two pane view, then you can only edit the file in the
			right pane (<literal>Mine</literal>). To apply changes made in the
			left file (<literal>Theirs</literal>),
			<action>right-click</action> on the changed lines and select
			<menuchoice>
				<guimenu>Context Menu</guimenu>
				<guimenuitem>Use text block from <quote>theirs</quote>
				</guimenuitem>
			</menuchoice>.
			Then the changes from the left file are added to the right file.
		</para>
		<para>
			If you're in three pane view (sometimes called
			<emphasis>merge view</emphasis>) you can only edit the file in the
			bottom view (<literal>Merged</literal>). As in two pane view,
			you can <action>right-click</action> on conflicted
			lines and either select
			<menuchoice>
				<guimenu>Context Menu</guimenu>
				<guimenuitem>Use text block from <quote>theirs</quote>
				</guimenuitem>
			</menuchoice>
			or
			<menuchoice>
				<guimenu>Context Menu</guimenu>
				<guimenuitem>Use text block from <quote>mine</quote>
				</guimenuitem>
			</menuchoice>.
			In addition, if you want <emphasis>both</emphasis> blocks, you can
			select
			<menuchoice>
				<guimenu>Context Menu</guimenu>
				<guimenuitem>
					Use text block from <quote>mine</quote>
					before <quote>theirs</quote>
				</guimenuitem>
			</menuchoice>
			or
			<menuchoice>
				<guimenu>Context Menu</guimenu>
				<guimenuitem>
					Use text block from <quote>theirs</quote>
					before <quote>mine</quote>
				</guimenuitem>
			</menuchoice>.
			According to the command you've selected, the changes are used
			in the resulting <literal>Merged</literal> file.
		</para>
		<para>
			Sometimes the conflict is too difficult to resolve by simply picking
			<literal>Theirs</literal> and <literal>Mine</literal> and it
			requires hand editing. TortoiseMerge allows you to do all the easy
			changes visually first and then save the file, leaving only the
			difficult changes to be resolved by hand-editing.
		</para>
		<important>
			<para>
				Note that if you use TortoiseMerge on the same files again,
				any changes to your working copy, whether in TortoiseMerge,
				or by hand-editing, <emphasis>will be discarded</emphasis>
				and the file will appear as it did when conflict-editing
				first started.
			</para>
		</important>
		<para>
			If you need to copy lines of text to insert in another file using
			your favourite text editor, you can select multiple lines to copy
			within TortoiseMerge. <action>Click</action> on the first line of
			the block, then <action>Shift+Click</action> on the last line of
			the block. As usual, <action>Ctrl+C</action> can be used to copy
			the selected lines to the clipboard.
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ======================== SETTINGS =============================== -->
	<!-- ================================================================= -->
	<sect1 id="tmerge-dug-settings">
		<title>Settings</title>
		<sect2 id="tmerge-dug-settings-main">
			<title>Main Settings Page</title>
			<?dbhh topicname="HIDD_SETMAINPAGE"?>
			<figure id="tmerge-dug-dia-setmain">
				<title>The Settings Main Page</title>
				<graphic fileref="images/MergeSettingsGeneral.png"/>
			</figure>
			<para>
				Most of the options here are self-explanatory, but a few
				points need clarifying.
			</para>
			<para>
				<guilabel>Backup original file</guilabel>
				renames the original file in the WC to <literal>filename.bak</literal>
				before saving the modified version.
			</para>
			<para>
				<guilabel>Ignore lineendings</guilabel>
				hides changes which are due solely to difference in line-end style.
			</para>
			<para>
				<guilabel>Ignore case changes</guilabel>
				hides changes which are due solely to case changes within the text.
				This can be useful with apps such as Visual Basic, which changes
				case in variables without warning.
			</para>
			<para>
				<guilabel>Compare Whitespaces</guilabel>
				shows all changes in indentation and inline whitespace as
				added/removed lines (which is how subversion treats such changes).
			</para>
			<para>
				<guilabel>Ignore Leading Whitespaces</guilabel>
				hides changes which are due solely to leading whitespace
				(indentation). Other whitespace changes within a line are
				shown <quote>inline</quote> rather than as added/removed lines.
			</para>
			<para>
				<guilabel>Ignore All Whitespaces</guilabel>
				hides all whitespace-only changes.
			</para>
		</sect2>
		<sect2 id="tmerge-dug-settings-color">
			<title>Colour Settings Page</title>
			<?dbhh topicname="HIDD_SETCOLORPAGE"?>
			<figure id="tmerge-dug-dia-setcolor">
				<title>The Settings Color Page</title>
				<graphic fileref="images/MergeSettingsColors.png"/>
			</figure>
			<para>
				This dialog allows you to select the background color coding
				used to highlight the different line changes.
			</para>
			<variablelist>
				<varlistentry>
					<term>Normal</term>
					<listitem>
						All lines which are unchanged, or where changes are hidden.
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Removed</term>
					<listitem>
						Lines which have been deleted.
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Added</term>
					<listitem>
						Lines which have been added.
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Empty</term>
					<listitem>
						Where lines have been added in the opposite pane,
						and no such line existed in this pane.
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Conflicted</term>
					<listitem>
						Where the same line has been changed in both files.
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Line with whitespace diff</term>
					<listitem>
						Lines which contain whitespace differences other than
						leading whitespace. Only appears when
						<guilabel>Ignore leading whitespace</guilabel>
						is selected.
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Whitespace diff</term>
					<listitem>
						In the case above, the actual whitespace difference is
						highlighted using this color.
					</listitem>
				</varlistentry>
			</variablelist>
		</sect2>
	</sect1>
</chapter>
