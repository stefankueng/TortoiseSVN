<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 SYSTEM "../../../dtd/dblite.dtd">
<sect1 id="tsvn-DUG-settings">
	<title>TortoiseSVN's Settings</title>
	<indexterm>
		<primary>settings</primary>
	</indexterm>
	<para>
		To find out what the different settings are for, just leave your
		mouse pointer a second on the editbox/checkbox... and a helpful
		tooltip will popup.
	</para>
	<sect2 id="tsvn-DUG-settings-main">
		<?dbhh topicname="HIDD_SETTINGSMAIN"?>
		<title>General Settings</title>
		<indexterm>
			<primary>sounds</primary>
		</indexterm>
		<para>
			<figure id="tsvn-DUG-settings-dia-main">
				<title>The Settings Dialog, General Page</title>
				<graphic fileref="../images/SettingsMain.png"/>
			</figure>
			This dialog allows you to specify your preferred language,
			and the Subversion-specific settings.
		</para>
		<variablelist>
			<varlistentry>
				<term>Language</term>
				<listitem>
					<para>
						Selects your user interface language.
						What else did you expect?
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Automatically check for newer versions every week</term>
				<listitem>
					<para>
						If checked, TortoiseSVN will contact its download site once a week 
						to see if there is a newer version of the program available.
						Use <guibutton>Check now</guibutton> if you want an answer
						right away. The new version will not be downloaded; you
						simply receive an information dialog telling you that the
						new version is available.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>System sounds</term>
				<listitem>
					<para>
						TortoiseSVN has three custom sounds which are installed by default.
						<itemizedlist>
							<listitem>
								<para>
								Error
								</para>
								</listitem>
							<listitem>
								<para>
								Notice
								</para>
							</listitem>
							<listitem>
								<para>
								Warning
								</para>
							</listitem>
						</itemizedlist>
						You can select different sounds (or turn these sounds
						off completely) using the Windows Control Panel.
						<guibutton>Configure</guibutton> is a shortcut to the Control Panel.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Global ignore pattern</term>
				<listitem>
					<indexterm>
						<primary>exclude pattern</primary>
					</indexterm>
					<indexterm>
						<primary>global ignore</primary>
					</indexterm>
					<para>
						Global ignore patterns are used to prevent unversioned files from
						showing up e.g. in the commit dialog. Files matching the
						patterns are also ignored by an import.
						Ignore files or directories by typing in the names or extensions.
						Patterns are separated by spaces e.g.
						<literal>*/bin */obj *.bak *.~?? *.jar *.[Tt]mp</literal>.
						The first two entries refer to directories, the 
						other four to files.
						These patterns use filename globbing. Read
						<xref linkend="tsvn-DUG-ignore-glob"/> for more information.
					</para>
					<para>
						Note that the ignore patterns you specify here will also
						affect other Subversion clients running on your PC, including
						the command line client.
					</para>
					<caution>
						<para>
						If you use the Subversion configuration file to set
						a <literal>global-ignores</literal> pattern, it will
						override the settings you make here. The Subversion
						configuration file is accessed using the
						<guibutton>Edit</guibutton> as described below.
						</para>
					</caution>
					<para>
						This ignore pattern will affect all your projects.
						It is not versioned, so it will not affect other users.
						By contrast you can also use the versioned
						<literal>svn:ignore</literal> property to exclude
						files or directories from version control. Read
						<xref linkend="tsvn-DUG-ignore"/>
						for more information. 
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Set filedates to the "last commit time"</term>
				<listitem>
					<para>
						This option tells TortoiseSVN to set the filedates to
						the last commit time when doing a checkout or an update.
						Otherwise TortoiseSVN will use the current date.
						If you are developing software it is generally best
						to use the current date because build systems normally
						look at the datestamps to decide which files need
						compiling. If you use "last commit time" and revert
						to an older file revision, your project may not compile
						as you expect it to.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Subversion configuration file</term>
				<listitem>
					<para>
						Use <guibutton>Edit</guibutton> to edit the
						Subversion configuration file directly.
						Some settings cannot be modified directly by
						TortoiseSVN, and need to be set here instead.
						For more information about the Subversion
						<filename>config</filename> file see the  
						<ulink url="http://svnbook.red-bean.com/en/1.1/ch07.html#svn-ch-7-sect-1.3.2">
							<citetitle>Subversion Manual</citetitle>
						</ulink>.
						The section on
						<ulink url="http://svnbook.red-bean.com/en/1.1/ch07s02.html#svn-ch-7-sect-2.4">
							<citetitle>Automatic Property Setting</citetitle>
						</ulink>
						is of particular interest, and that is configured here.
						Note that Subversion can read configuration information
						from several places, and you need to know which one
						takes priority. Refer to
						<ulink url="http://svnbook.red-bean.com/en/1.1/ch07.html#svn-ch-7-sect-1.2">
							<citetitle>Configuration and the Windows Registry</citetitle>
						</ulink> to find out more.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Subversion authentication data</term>
				<listitem>
					<para>
						When you authenticate with a subversion server, the username
						and password are cached locally so you don't have to keep
						entering them. To clear everything from that cache,
						use <guibutton>Clear now</guibutton>.
					</para>
					<para>
						If you want to clear auth data for one particular server only,
						read <xref linkend="tsvn-DUG-general-auth"/> for instructions
						on how to find the cached data.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</sect2>
	<sect2 id="tsvn-DUG-settings-look-feel">
		<title>Look and Feel Settings</title>
		<?dbhh topicname="HIDD_SETTINGSLOOKANDFEEL"?>
		<para>
			<figure id="tsvn-DUG-settings-dia-context">
				<title>The Settings Dialog, Look and Feel Page</title>
				<graphic fileref="../images/SettingsContext.png"/>
			</figure>
			This page allows you to specify which of the TortoiseSVN context menu
			entries will show up in the main context menu, and which will appear
			in the TortoiseSVN submenu. By default most items are checked and
			appear in the submenu.
		</para>
		<para>
			If you have a very large number of files in your working copy
			folders, it can take a long time before the context menu appears
			when you <action>right click</action> on a folder. This is because
			Subversion fetches the status for all files when you ask for
			folder status. To avoid this delay you can uncheck the
			<guilabel>Fetch status for context menu</guilabel>
			box. Be warned that the context menu for folders will not always
			be correct, and may include items which should not really be there.
			For example, you will see
			<menuchoice>
				<guimenu>TortoiseSVN</guimenu>
				<guimenuitem>Show Log</guimenuitem>
			</menuchoice>
			for an <literal>Added</literal> folder, which will not work because
			the folder is not yet in the repository.
		</para>
		<para>
			The option <guilabel>Enable accelerators on the top level menu</guilabel>
			has three states:
			<variablelist>
				<varlistentry>
					<term>Unchecked (default)</term>
					<listitem>
						<para>
							In this state the menu items are all drawn by TortoiseSVN. No
							accelerator keys are shown.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Checked</term>
					<listitem>
						<para>
							This activates the accelerators for TortoiseSVN commands,
							but of course these may conflict with the accelerators for anything
							else in the explorer context menu. Pressing the shortcut key
							multiple times will cycle through the matching context menu items.
							In this state, the menu items are drawn by Windows which makes
							the icons look ugly.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Indeterminate</term>
					<listitem>
						<para>In this mode the accelerator keys are active and the menu items
						are drawn in text only mode without icons.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</para>
		<sect3 id="tsvn-DUG-settings-overlay">
			<title>Icon Overlay Settings</title>
			<?dbhh topicname="HIDD_SETTINGSOVERLAY"?>
			<para>
				<figure id="tsvn-DUG-settings-dia-overlay">
					<title>The Settings Dialog, Look and Feel Page</title>
					<graphic fileref="../images/SettingsOverlay.png"/>
				</figure>
				This page allows you to choose the items for which TortoiseSVN will
				display icon overlays. Network drives can be very slow, so by default
				icons are not shown for working copies located on network shares.
				You can even disable all icon overlays, but where's the fun in that?
			</para>
			<para>
				USB Flash drives appear to be a special case in that the drive type
				is identified by the device itself. Some appear as fixed drives,
				and some as removable drives.
			</para>
			<para>
				By default, overlay icons will appear in all open/save dialogs
				as well as in Windows Explorer. If you want them to appear
				<emphasis>only</emphasis> in Windows Explorer, check the
				<guilabel>Show overlays only in explorer</guilabel> box.
			</para>
			<para>
				Normally the icon overlays act recursively, which means that the
				overlay for a folder shows the most significant status of all its
				subfolders. If there is a modified file deep in the hierarchy,
				the top level folder will also show modified status to remind you
				that there are buried changes.
				If you have <emphasis>very</emphasis> large working copies then
				you may find that the recursive status feature causes too much
				disk activity and disruption on your system, although this is not
				usually a problem. In that case you can uncheck
				<guilabel>Show overlay status icons recursively</guilabel> so
				that folder status is shown only for the folder itself.
			</para>
			<para>
				The <guilabel>Exclude Paths</guilabel> are used to tell TortoiseSVN
				those paths for which it should <emphasis>not</emphasis> show icon
				overlays and status columns.
				This is useful if you have some very big working copies containing
				only libraries which you won't change at all and therefore don't
				need the overlays. For example:
			</para>
			<para>
				<filename>f:\development\SVN\Subversion</filename> will disable
				the overlays <emphasis>only</emphasis> on that specific folder. You
				still can see the overlays on all files and folder inside that folder.
			</para>
			<para>
				<filename>f:\development\SVN\Subversion*</filename> will disable the
				overlays on <emphasis>all</emphasis> files and folders whose path
				starts with <filename>f:\development\SVN\Subversion</filename>. That
				means you won't see overlays for any files and folders below that
				path.
			</para>
			<para>
				The same applies to the <guilabel>Include Paths</guilabel>. Except that
				for those paths the overlays are shown even if the overlays are disabled
				for that specific drive type.
			</para>
		</sect3>
		<sect3 id="tsvn-DUG-settings-icon-set">
			<title>Icon Set Selection</title>
			<?dbhh topicname="HIDD_OVERLAYICONS"?>
			<para>
				<figure id="tsvn-DUG-settings-dia-icons">
					<title>The Settings Dialog, Icon Set Page</title>
					<graphic fileref="../images/SettingsOverlayChooser.png"/>
				</figure>
				You can change the overlay icon set to the one you like best.
				Note that if you change overlay set, you may have to restart
				your computer for the changes to take effect.
			</para>
		</sect3>
		<sect3 id="tsvn-DUG-settings-dialogs">
			<title>TortoiseSVN Dialog Settings 1</title>
			<?dbhh topicname="HIDD_SETTINGSDIALOGS"?>
			<para>
				<figure id="tsvn-DUG-settings-dia-dialogs">
					<title>The Settings Dialog, Dialogs 1 Page</title>
					<graphic fileref="../images/SettingsDialog.png"/>
				</figure>
				This dialog allows you to configure some of TortoiseSVN's
				dialogs the way you like them.
			</para>
			<variablelist>
				<varlistentry>
					<term>Default number of log messages</term>
					<listitem>
						<para>
							Limits the number of log messages that TortoiseSVN
							fetches when you first select
							<menuchoice>
								<guimenu>TortoiseSVN</guimenu>
								<guimenuitem>Show Log</guimenuitem>
							</menuchoice>
							Useful for slow server connections. You can always use
							<guibutton>Get All</guibutton> or
							<guibutton>Next 100</guibutton> to get more messages.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Font for log messages</term>
					<listitem>
						<para>
							Selects the font face and size used to display the log
							message itself in the middle pane of the Revision Log
							dialog, and when composing log messages in the Commit
							dialog.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Short date / time format in log messages</term>
					<listitem>
						<para>
							If the standard long messages use up too much 
							space on your screen use the short format.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Progress Dialog</term>
					<listitem>
						<para>
							TortoiseSVN can automatically close all progress dialogs 
							when the action is finished without error. This setting
							allows you to select the conditions for closing the
							dialogs. The default (recommended) setting is
							<guilabel>Close manually</guilabel>
							which allows you to review all messages and check what
							has happened. However, you may decide that you want to
							ignore some types of message and have the dialog
							close automatically if there are no critical changes.
						</para>
						<para>
							<guilabel>Auto-close if no merges, adds or deletes</guilabel>
							means that the progress dialog will close if there were
							simple updates, but if changes from the repository were
							merged with yours, or if any files were added or deleted,
							the dialog will remain open.
						</para>
						<para>
							<guilabel>Auto-close if no conflicts</guilabel>
							relaxes the criteria further and will close the dialog
							even if there were merges, adds or deletes. However,
							if there were any conflicts or errors, the dialog
							remains open.
						</para>
						<para>
							<guilabel>Auto-close if no errors</guilabel>
							always closes the dialog even if there were conflicts.
							The only condition that keeps the dialog open is an
							error condition, which occurs when Subversion is unable
							to complete the task. For example, an update fails
							because the server is inaccessible, or a commit fails
							because the working copy is out-of-date.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Use URL of WC as the default "From:" URL</term>
					<listitem>
						<para>
							In the merge dialog, the default behaviour is for the
							<guilabel>From:</guilabel> URL to be remembered between
							merges. However, some people like to perform merges from
							many different points in their hierarchy, and find it easier
							to start out with the URL of the current working copy.
							This can then be edited to refer to a parallel path on
							another branch.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect3>
		<sect3 id="tsvn-DUG-settings-dialogs-2">
			<title>TortoiseSVN Dialog Settings 2</title>
			<para>
				<figure id="tsvn-DUG-settings-dia-dialogs-2">
					<title>The Settings Dialog, Dialogs 2 Page</title>
					<graphic fileref="../images/SettingsDialog2.png"/>
				</figure>
			</para>
			<variablelist>
				<varlistentry>
					<term>Recurse into unversioned folders</term>
					<listitem>
						<para>
							If this box is checked (default state), then whenever
							the status of an unversioned folder is shown in the
							<guilabel>Add</guilabel>,
							<guilabel>Commit</guilabel> or
							<guilabel>Check for Modifications</guilabel> dialog,
							every child file and folder is also shown.
							If you uncheck this box, only the unversioned parent is shown.
							Unchecking reduces clutter in these dialogs. In that case if you
							select an unversioned folder for Add, it is added recursively.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Use autocompletion of filepaths and keywords</term>
					<listitem>
						<para>
							The commit dialog includes a facility to parse the list
							of filenames being committed. When you type the first 3
							letters of an item in the list, the autocompletion
							box pops up, and you can press Enter to complete the
							filename. Check the box to enable this feature.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Timeout in seconds to stop the autocompletion parsing</term>
					<listitem>
						<para>
							The autocompletion parser can be quite slow if there are a lot
							of large files to check. This timeout stops the commit dialog
							being held up for too long. If you are missing important
							autocompletion information, you can extend the timeout.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Only use spellchecker when tsvn:projectlanguage is set</term>
					<listitem>
						<para>
							If you don't wish to use the spellchecker for all commits,
							check this box. The spellchecker will still be enabled where
							the project properties require it.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Contact the repository on startup</term>
					<listitem>
						<para>
							The Check for Modifications dialog checks the working copy
							by default, and only contacts the repository when you click
							<guibutton>Check repository</guibutton>. If you always want
							to check the repository, you can use this setting to make that
							action happen automatically.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect3>
		<sect3 id="tsvn-DUG-settings-colours">
			<title>TortoiseSVN Colour Settings</title>
			<?dbhh topicname="HIDD_SETTINGSCOLORS"?>
			<para>
				<figure id="tsvn-DUG-settings-dia-colors">
					<title>The Settings Dialog, Colours Page</title>
					<graphic fileref="../images/SettingsColors.png"/>
				</figure>
				This dialog allows you to configure the text colours
				used in TortoiseSVN's dialogs the way you like them.
			</para>
			<variablelist>
				<varlistentry>
					<term>Possible or real conflict / obstructed</term>
					<listitem>
						<para>
							A conflict has occurred during update, or may occur during merge.
							Update is obstructed by an existing unversioned file/folder of
							the same name as a versioned one.
						</para>
						<para>
							This colour is also used for error messages in the progress dialogs.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Added files</term>
					<listitem>
						<para>
							Items added to the repository.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Missing / deleted / replaced</term>
					<listitem>
						<para>
							Items deleted from the repository, missing from the working
							copy, or deleted from the working copy and replaced with
							another file of the same name.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Merged</term>
					<listitem>
						<para>
							Changes from the repository successfully merged into the WC
							without creating any conflicts.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Modified / copied</term>
					<listitem>
						<para>
							Add with history, or paths copied in the repository.
							Also used in the log dialog for entries which include
							copied items.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Deleted node</term>
					<listitem>
						<para>
							An item which has been deleted from the repository.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Added node</term>
					<listitem>
						<para>
							An item which has been added to the repository, by an add, copy
							or move operation.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Renamed node</term>
					<listitem>
						<para>
							An item which has been renamed within the repository.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Replaced node</term>
					<listitem>
						<para>
							The original item has been deleted and a new item with
							the same name replaces it.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</sect3>
	</sect2>
	<sect2 id="tsvn-DUG-settings-network">
		<?dbhh topicname="HIDD_SETTINGSPROXY"?>
		<title>Network Settings</title>
		<indexterm>
			<primary>proxy server</primary>
		</indexterm>
		<para>
			<figure id="tsvn-DUG-settings-dia-4">
				<title>The Settings Dialog, Network Page</title>
				<graphic fileref="../images/SettingsProxy.png"/>
			</figure>
			Here you can configure your proxy server, if you need one to get
			through your company's firewall.
		</para>
		<para>
			If you need to set up per-repository proxy settings, you will
			need to use the Subversion <literal>servers</literal> file to
			configure this. Use <guibutton>Edit</guibutton> to get there
			directly. Consult the
			<ulink url="http://svnbook.red-bean.com/en/1.1/ch07.html#svn-ch-7-sect-1.3.1">
				<citetitle>Subversion Manual</citetitle>
			</ulink>
			for details on how to use this file.
		</para>
		<para>
			You can also specify which program TortoiseSVN should use to
			establish a secure connection to a svn+ssh repository.
			We recommend that you use TortoisePlink.exe. This is a version
			of the popular Plink program, and is included with TortoiseSVN,
			but it is compiled as a Windowless app, so you don't get a DOS
			box popping up every time you authenticate.
		</para>
		<para>
			One side-effect of not having a window is that there is
			nowhere for any error messages to go, so if authentication
			fails you will simply get a message saying something like
			<quote>Unable to write to standard output</quote>.
			For this reason we recommend that you first set up using
			standard Plink. When everything is working, you can use
			TortoisePlink with exactly the same parameters.
		</para>
	</sect2>
	<sect2 id="tsvn-DUG-settings-progs">
		<title>External Program Settings</title>
		<para>
			<figure id="tsvn-DUG-settings-dia-5">
				<title>The Settings Dialog, Diff Viewer Page</title>
				<?dbhh topicname="HIDD_SETTINGSPROGSDIFF"?>
				<graphic fileref="../images/SettingsProgs.png"/>
			</figure>
			Here you can define your own diff/merge programs that TortoiseSVN
			should use. The default setting is to use TortoiseMerge
			which is installed alongside TortoiseSVN.
		</para>
		<para>
			Read <xref linkend="tsvn-DUG-diff-tools"/> for a list of some of the
			external diff/merge programs that people are using with TortoiseSVN.
		</para>
		<sect3 id="tsvn-DUG-settings-Diff">
			<title>Diff Viewer</title>
			<?dbhh topicname="HIDD_SETTINGSPROGSDIFF"?>
			<para>
				An external diff program may be used for comparing different
				revisions of files. The external program will need to
				obtain the filenames from the command line, along with
				any other command line options. TortoiseSVN uses
				substitution parameters prefixed with <literal>%</literal>.
				When it encounters one of these it will substitute the
				appropriate value. The order of the parameters will depend
				on the Diff program you use.
				<variablelist>
					<varlistentry>
						<term>%base</term>
						<listitem>
							<para>
								The original file without your changes
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>%bname</term>
						<listitem>
							<para>
								The window title for the base file
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>%mine</term>
						<listitem>
							<para>
								Your own file, with your changes
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>%yname</term>
						<listitem>
							<para>
								The window title for your file
							</para>
						</listitem>
					</varlistentry>
				</variablelist>
			</para>
			<para>
				The window titles are not pure filenames.
				TortoiseSVN treats that as a name to display and creates
				the names accordingly. So e.g. if you're doing a
				diff from a file in revision 123 with a file 
				in your working copy, the names will be
				<filename>filename : revision 123</filename>
				and
				<filename>filename : working copy</filename>
			</para>
			<para>
				For example, with ExamDiff Pro:
<screen>
C:\Path-To\ExamDiff.exe %base %mine
</screen>
				or with KDiff3:
<screen>
C:\Path-To\kdiff3.exe %base %mine --L1 %bname --L2 %yname
</screen>
				or with WinMerge:
<screen>
C:\Path-To\WinMerge.exe -e -ub -dl %bname -dr %yname %base %mine
</screen>
				or with Araxis:
<screen>
C:\Path-To\compare.exe /max /wait /title1:%bname /title2:%yname
        %base %mine
</screen>
			</para>
			<para>
				If you use the <literal>svn:keywords</literal> property to
				expand keywords, and in particular the <literal>revision</literal>
				of a file, then there may be a difference between files which
				is purely due to the current value of the keyword. Also if you use
				<literal>svn:eol-style = native</literal> the BAsE file will have
				pure <literal>LF</literal> line endings whereas your file will
				have <literal>CR-LF</literal> line endings. TSVN will normally hide
				these differences automatically by first parsing the BASE file to
				expand keywords and line endings before doing the diff operation.
				However, this can take a long time with large files. If
				<guilabel>Convert files when diffing against BASE</guilabel>
				is unchecked then TSVN will skip pre-processing the files.
			</para>
		</sect3>
		<sect3 id="tsvn-DUG-settings-Merge">
			<title>Merge Tool</title>
			<?dbhh topicname="HIDD_SETTINGSPROGSMERGE"?>
			<para>
				An external merge program used to resolve conflicted
				files. Parameter substitution is used in the same way
				as with the Diff Program.
				<variablelist>
					<varlistentry>
						<term>%base</term>
						<listitem>
							<para>
								the original file without your or
								the others changes
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>%bname</term>
						<listitem>
							<para>
								The window title for the base file
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>%mine</term>
						<listitem>
							<para>
								your own file, with your changes
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>%yname</term>
						<listitem>
							<para>
								The window title for your file
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>%theirs</term>
						<listitem>
							<para>
								the file as it is in the repository
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>%tname</term>
						<listitem>
							<para>
								The window title for the file in the repository
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>%merged</term>
						<listitem>
							<para>
								the conflicted file, the result of
								the merge operation
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>%mname</term>
						<listitem>
							<para>
								The window title for the merged file
							</para>
						</listitem>
					</varlistentry>
				</variablelist>
			</para>
			<para>
				For example, with Perforce Merge:
<screen>
C:\Path-To\P4Merge.exe %base %theirs %mine %merged
</screen>
				or with KDiff3:
<screen>
C:\Path-To\kdiff3.exe %base %mine %theirs -o %merged
        --L1 %bname --L2 %yname --L3 %tname
</screen>
				or with Araxis:
<screen>
C:\Path-To\compare.exe /max /wait /3 /title1:%tname /title2:%bname
        /title3:%yname %theirs %base %mine %merged /a2
</screen>
			</para>
		</sect3>
		<sect3 id="tsvn-DUG-settings-Progs-Adv">
			<title>Diff/Merge Advanced Settings</title>
			<?dbhh topicname="HIDD_SETTINGSPROGSADV"?>
			<para>
				<figure id="tsvn-DUG-settings-dia-6">
					<title>The Settings Dialog, Diff/Merge Advanced Dialog</title>
					<graphic fileref="../images/SettingsProgsAdv.png"/>
				</figure>
				In the advanced settings, you can define a different diff and merge
				program for every file extension. For instance you could associate
				Photoshop as the <quote>Diff</quote> Program for .jpg files :-)
			</para>
			<para>
				You need to specify just the extension with no leading dot or wildcard.
				Use <literal>BMP</literal> to describe Windows bitmap files,
				<emphasis>not</emphasis>
				<literal>*.BMP</literal>.
			</para>
		</sect3>
		<sect3 id="tsvn-DUG-settings-Patch">
			<title>Unified Diff Viewer</title>
			<?dbhh topicname="HIDD_SETTINGSPROGSUNIDIFF"?>
			<para>
				A viewer program for unified-diff files (patch files).
				No parameters are required.
				The <guilabel>Default</guilabel> option is to check for
				a file association for <filename>.diff</filename> files,
				and then for <filename>.txt</filename> files.
				If you don't have a viewer for <filename>.diff</filename>
				files, you will most likely get NotePad.
			</para>
			<para>
				The original Windows NotePad program does not behave
				well on files which do not have standard CR-LF
				line-endings. Since most unified diff files have pure
				LF line-endings, they do not view well in NotePad.
				However, you can download a free NotePad replacement
				<ulink url="http://www.flos-freeware.ch/notepad2.html">
					<citetitle>Notepad2</citetitle>
				</ulink>
				which not only displays the line-endings correctly,
				but also colour codes the added and removed lines.
			</para>
		</sect3>
	</sect2>
</sect1>
