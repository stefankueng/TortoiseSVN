<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 SYSTEM "../../../dtd/dblite.dtd">
<sect1 id="tsvn-dug-checkout">
	<title>Checking Out A Working Copy</title>
	<indexterm>
		<primary>checkout</primary>
	</indexterm>
	<?dbhh topicname="HIDD_CHECKOUT"?>
	<para>
		To obtain a working copy you need to do a <firstterm>checkout</firstterm>
		from a repository.
	</para>
	<para>
		Select a directory in windows explorer where you want to place
		your working copy. <action>Right click</action> to pop up the
		context menu and select the command
		<menuchoice>
			<guimenu>TortoiseSVN</guimenu>
			<guimenuitem>Checkout...</guimenuitem>
		</menuchoice>,
		which brings up the following dialog box:
		<figure id="tsvn-dug-checkout-dia-1">
			<title>The Checkout dialog</title>
			<graphic fileref="../images/Checkout.png"/>
		</figure>
		If you enter a folder name that does not yet exist, then a
		directory with that name is created.
	</para>
	<important>
		<para>
			When you checkout an existing source tree from the repository,
			you should do so in an empty directory. If you try to check out
			your source tree into the same directory that you imported from,
			Subversion will throw an error message because it will not overwrite
			the existing unversioned files with versioned ones, even if they are
			identical. You will have to check out into a different directory or
			delete the existing sourcetree first. Better still, read
			<xref linkend="tsvn-dug-import-in-place"/> which describes a
			method that avoids this problem.
		</para>
	</important>
	<para>
		You can choose the <firstterm>depth</firstterm> you want to checkout,
		which allows you to specify the depth of recursion into child folders.
		If you want just a few sections of a large tree, You can checkout
		the top level folder only, then update selected folders recursively.
		<variablelist>
			<varlistentry>
				<term>Fully recursive</term>
				<listitem>
					<para>
						Checkout the entire tree, including all child folders
						and sub-folders.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Immediate children, including folders</term>
				<listitem>
					<para>
						Checkout the specified directory, including all files
						and child folders, but do not populate the child folders.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Only file children</term>
				<listitem>
					<para>
						Checkout the specified directory, including all files
						but do not checkout any child folders.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Only this item</term>
				<listitem>
					<para>
						Checkout the directory only. Do not populate it with
						files or child folders.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</para>
	<para>
		If the project contains references to external projects which you do
		<emphasis>not</emphasis> want checked out at the same time, use the
		<guilabel>Omit externals</guilabel> checkbox.
	</para>
	<important>
		<para>
			If <guilabel>Omit externals</guilabel> is checked, or if you wish
			to increase the depth value, you will have to perform
			updates to your working copy using
			<menuchoice>
				<guimenu>TortoiseSVN</guimenu>
				<guimenuitem>Update to Revision...</guimenuitem>
			</menuchoice>
			instead of
			<menuchoice>
				<guimenu>TortoiseSVN</guimenu>
				<guimenuitem>Update</guimenuitem>
			</menuchoice>.
			The standard update will include all sub-folders and all externals.
		</para>
	</important>
	<para>
		It is recommended that you check out only the <literal>trunk</literal> part of the
		directory tree, or lower. If you specify the parent path of the
		directory tree in the URL then you might end up with a full
		hard disk since you will get a copy of the entire repository tree
		including every branch and tag of your project!
	</para>
	<tip>
		<title>Exporting</title>
		<para>
			Sometimes you may want to create a local copy without any of those
			<filename>.svn</filename> directories, e.g. to create a zipped
			tarball of your source.
			Read <xref linkend="tsvn-dug-export"/> to find out how to do that.
		</para>
	</tip>
</sect1>
