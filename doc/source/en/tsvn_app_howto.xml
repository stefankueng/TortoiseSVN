<?xml version="1.0" encoding="UTF-8"?>
<appendix id="tsvn-howto" xmlns:xi="http://www.w3.org/2003/XInclude">
	<title>How Do I...</title>
	<simplesect>
		<para>
			This appendix contains solutions to problems/questions you might
			have when using TortoiseSVN.
		</para>
	</simplesect>

	<sect1 id="tsvn-howto-move">
		<title>Move/copy a lot of files at once</title>
		<indexterm>
			<primary>moving</primary>
		</indexterm>
		<para>
			Moving/Copying single files can be done by using
			<menuchoice>
				<guimenu>TortoiseSVN</guimenu>
				<guimenuitem>Rename...</guimenuitem>
			</menuchoice>.
			But if you want to move/copy a lot of files, this way is just
			too slow and too much work.
		</para>
		<para>
			The recommended way is by <action>right-dragging</action> the files to
			the new location. Simply <action>right-click</action> on the files you want
			to move/copy without releasing the mouse button. Then drag the files
			to the new location and release the mouse button. A context menu will appear
			where you can either choose
			<menuchoice>
				<guimenu>Context Menu</guimenu>
				<guimenuitem>Copy in Subversion to here</guimenuitem>
			</menuchoice>.
			or
			<menuchoice>
				<guimenu>Context Menu</guimenu>
				<guimenuitem>Move in Subversion to here</guimenuitem>.
			</menuchoice>.
		</para>
	</sect1>
	
	<sect1 id="tsvn-howto-minlogmsgsize">
		<title>Force users to enter a log message</title>
		<indexterm>
			<primary>log message</primary>
		</indexterm>
		<para>
			There are two ways to prevent users from committing with an empty
			log message. One is specific to TortoiseSVN, the other works for
			all Subversion clients, but requires access to the server directly.
		</para>
		<sect2 id="tsvn-howto-minlogsize-hookscript">
			<title>Hook-script on the server</title>
			<para>
				If you have direct access to the repository server, you can install
				a pre-commit hook script which rejects all commits with an empty
				or too short log message.
			</para>
			<para>
				In the repository folder on the server, there's a subfolder
				<filename>hooks</filename>
				which contains some example hook scripts you can use. The file
				<filename>pre-commit.tmpl</filename>
				contains a sample script which will reject commits if no log message
				is supplied, or the message is too short.
				The file also contains comments on how to install/use this script.
				Just follow the instructions in that file.
			</para>
			<para>
				This method is the recommended way if your users also use other
				Subversion clients than TortoiseSVN. The drawback is that the commit
				is rejected by the server and therefore users will get an error
				message. The client can't know before the commit that it will be
				rejected. If you want to make TortoiseSVN have the <guibutton>OK</guibutton>
				button disabled until the log message is long enough
				then please use the method described below.
			</para>
		</sect2>
		<sect2 id="tsvn-howto-minlogsize-projectproperties">
			<title>Project properties</title>
			<para>
				TortoiseSVN uses properties to control some of its features. One of those
				properties is the <literal>tsvn:minlogsize</literal> property.
			</para>
			<para>
				If you set that property on a folder, then TortoiseSVN will disable the
				<guibutton>OK</guibutton> button in all commit dialogs until the user has
				entered a log message with at least the length specified in the property.
			</para>
			<para>
				For detailed information on those project properties, please refer to
				<xref linkend="tsvn-DUG-propertypage"/>
			</para>
		</sect2>
	</sect1>

	<sect1 id="tsvn-howto-selective-update">
		<title>Update selected files from the repository</title>
		<indexterm>
			<primary>update</primary>
		</indexterm>
		<para>
			Normally you update your working copy using
			<menuchoice>
				<guimenu>TortoiseSVN</guimenu>
				<guimenuitem>Update</guimenuitem>
			</menuchoice>.
			But if you only want to pick up some new files that a colleague has added
			without merging in any changes to other files at the same time, you need
			a different approach.
		</para>
		<para>
			Use
			<menuchoice>
				<guimenu>TortoiseSVN</guimenu>
				<guimenuitem>Check for Modifications</guimenuitem>
			</menuchoice>.
			and click on <guibutton>Check repository</guibutton> to see what has changed
			in the repository. Select the files you want to update locally, then use
			the context menu to update just those files.
		</para>
	</sect1>

	<sect1 id="tsvn-howto-rollback">
		<title>Roll back revisions in the repository</title>
		<indexterm>
			<primary>rollback</primary>
		</indexterm>
		<sect2 id="tsvn-howto-rollback-log">
			<title>Use the revision log dialog</title>
			<para>
				The easiest way to revert the changes from a single revision
				is to use the revision log dialog.
			</para>
			<orderedlist>
				<listitem>
					<para>
						Select the file or folder in which you need to revert
						the changes. If you want to revert all changes, this
						should be the top level folder.
					</para>
				</listitem>
				<listitem>
					<para>
						Select
						<menuchoice>
							<guimenu>TortoiseSVN</guimenu>
							<guimenuitem>Show Log</guimenuitem>
						</menuchoice>
						to display a list of revisions. You may need to use
						<guibutton>Get All</guibutton> or
						<guibutton>Next 100</guibutton>
						to show the revision you are interested in.
					</para>
				</listitem>
				<listitem>
					<para>
						<action>right click</action> on the revision you wish
						to undo, then select
						<menuchoice>
							<guimenu>Context Menu</guimenu>
							<guimenuitem>Revert changes from this revision</guimenuitem>
						</menuchoice>.
					</para>
				</listitem>
			</orderedlist>
			<para>
				You have reverted the changes within your working copy.
				Check the results, then commit the changes.
			</para>
		</sect2>
		<sect2 id="tsvn-howto-rollback-merge">
			<title>Use the merge dialog</title>
			<para>
				To undo a larger range of revisions, you can use the Merge dialog.
				The previous method uses merging behind the scenes; this method
				uses it explicitly.
			</para>
			<orderedlist>
				<listitem>
					<para>
						In our working copy select
						<menuchoice>
							<guimenu>TortoiseSVN</guimenu>
							<guimenuitem>Merge</guimenuitem>
						</menuchoice>.
					</para>
				</listitem>
				<listitem>
					<para>
						In the <guilabel>From:</guilabel> field enter the full
						folder url of the branch or tag containing the changes
						you want to revert in your working copy. This should come
						up as the default URL.
					</para>
				</listitem>
				<listitem>
					<para>
						In the <guilabel>From Revision</guilabel> field enter the
						revision number that you are currently at. If you are
						sure there is no-one else making changes, you can use the
						HEAD revision.
					</para>
				</listitem>
				<listitem>
					<para>
						make sure the <guilabel>Use "From:" URL</guilabel>
						checkbox is checked.
					</para>
				</listitem>
				<listitem>
					<para>
						In the <guilabel>To Revision</guilabel> field enter the
						revision number that you want to revert to, ie. the one
						<emphasis>before</emphasis> the first revision to be reverted.
					</para>
				</listitem>
				<listitem>
					<para>
						Click <guibutton>OK</guibutton> to complete the merge.
					</para>
				</listitem>
			</orderedlist>
			<para>
				You have reverted the changes within your working copy.
				Check the results, then commit the changes.
			</para>
		</sect2>
		<sect2 id="tsvn-howto-rollback-dumpload">
			<title>Use svndumpfilter</title>
			<para>
				If you want to make revisions disappear completely from your
				repository, erasing all trace that they ever existed, you have
				to use more extreme measures. Unless there is a really good reason
				to do this, it is <emphasis>not recommended</emphasis>. One
				possible reason would be that someone committed a confidential
				document to a public repository.
			</para>
			<para>
				The only way to remove data from the repository is to use the
				Subversion command line tool <literal>svnadmin></literal>.
				You can find a description of how this works in the
				<ulink url="http://svnbook.red-bean.com/en/1.1/ch05s03.html#svn-ch-5-sect-3.1.3">
					<citetitle>Subversion Book</citetitle>
				</ulink>.
			</para>
		</sect2>
	</sect1>
</appendix>
