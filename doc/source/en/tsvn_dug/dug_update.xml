<?xml version="1.0" encoding="UTF-8"?>
<sect1 id="tsvn-DUG-update">
	<title>Update Your Working Copy With Changes From Others</title>
	<indexterm>
		<primary>update</primary>
	</indexterm>
	<para>
		<figure id="tsvn-DUG-update-dia-1">
			<title>Progress dialog showing finished update</title>
			<graphic fileref="images/UpdateFinished.png"/>
		</figure>
			Occasionally you may want changes done by others to get
			incorporated in your local working copy. The process of
			getting changes from the server to your local copy is
			known as <literal>updating</literal>. Updating may be done on
			single files, a set of selected files, or recursively on
			entire directory hierarchies. To update, select the files
			and/or directories you want, <action>right click</action> and select
			<menuchoice>
			<guimenuitem>Update</guimenuitem>
		</menuchoice>
			in the explorer context menu. A window will pop up displaying the 
			progress of the update as it runs.
			Changes done by others will be merged into your files,
			keeping any changes you may have done to the same files.
			The repository is <emphasis>not</emphasis> affected by an update.
		</para>
	<para>
			If you get any <literal>conflicts</literal> during an update (this
			can happen if others changed the same lines in the same file as
			you did and those changes don't match) then the dialog shows those
			conflicts in red. You can <action>doubleclick</action> on these lines to start
			the external merge tool to resolve the conflicts.
		</para>
	<para>
			TortoiseSVN also allows you to update your working copy to a specific
			revision, not only to the most recent one. This command is called
			<menuchoice>
			<guimenuitem>Update to Revision...</guimenuitem>
		</menuchoice>
			and first opens a dialog where you can enter the required revision.
		</para>
	<caution>
		<para>
			If you update a file or folder to a specific revision, you will get 
			<literal>out of date</literal> error messages when you try to commit them!
			If you want to undo changes to a file and start afresh from an earlier
			revision, you must either use the
			<menuchoice>
				<guimenuitem>Revert changes from this revision</guimenuitem>
			</menuchoice>
			command from the log dialog or the
			<menuchoice>
				<guimenuitem>Merge...</guimenuitem>
			</menuchoice>
			menu command.
			</para>
	</caution>
	<para>
			The
			<menuchoice>
			<guimenuitem>Update to Revision...</guimenuitem>
		</menuchoice>
			command allows you to revert your working to an earlier revision.
			Say e.g. your working copy is at revision 100, but you want your
			working copy To reflect the state which it had in revision 50 -
			then simply update to revision 50.
		</para>
	<para>
			In general, updating individual files to an earlier revision is
			not a good idea as it leaves your working copy in an inconsistent
			state. If the file you are updating has changed name, you may even
			find that the file just disappears from your working copy because
			no file of that name existed in the earlier revision. If you simply
			want a local copy of an old version of a file it is better to use the
			<menuchoice>
			<guimenuitem>Save revision to...</guimenuitem>
		</menuchoice>
			command from the log dialog for that file.
		</para>
	<warning>
		<para>
			If you updated your working copy to an earlier revision, you must not
			make changes to the files! You will get <literal>out of date</literal>
			errors if you try to commit those changes.
			If you want to revert some changes in your working copy, then use the 
			repository browser and save the file in question over the file in your 
			working copy. Or you can use the log dialog and use the command 
			<menuchoice>
				<guimenuitem>Revert changes in this revision</guimenuitem>
			</menuchoice>.
			This will undo only those changes made in the selected revision.
			Changes made after that revision will be retained.
			For reverting multiple revisions, you should use the merge command,
			where you can specify the range of revisions you want to undo.
			</para>
	</warning>
	<tip>
		<title>Multiple Files/Folders</title>
		<para>
				If you select multiple files and folders in the explorer and then select
				<menuchoice>
				<guimenuitem>Update</guimenuitem>
			</menuchoice>,
				all of those files/folders
				are updated one by one. TortoiseSVN makes sure that all files/folders
				which are from the same repository are updated to the exact same
				revision! Even if between those updates another commit occurred.
			</para>
	</tip>
	<tip>
		<title>Local File Already Exists</title>
		<para>
				Sometimes when you try to update, the update fails with a message to
				say that there is already a local file of the same name. This typically
				happens when Subversion tries to checkout a newly versioned file, and finds
				that an unversioned file of the same name already exists in your working
				folder. Subversion will never overwrite an unversioned file - it might
				contain something you are working on, which coincidentally has the same
				filename as another developer has used for his newly committed file. 
			</para>
		<para>
				If you get this error message, the solution is simply to rename the local
				unversioned file. After completing the update, you can check whether
				the renamed file is still needed.
			</para>
		<para>
				If you keep getting error messages, use
				<menuchoice>
				<guimenuitem>Check for updates</guimenuitem>
			</menuchoice>
				instead to list all the problem files. That way you can deal with them
				all at once.
			</para>
	</tip>
</sect1>
