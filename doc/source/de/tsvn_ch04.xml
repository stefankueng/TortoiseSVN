<chapter id="tsvn-DUG">
	<title>Hilfe für die tägliche Arbeit</title>
	<simplesect>
		<para>
			Dieses Kapitel beschreibt den täglichen Umgang mit TortoiseSVN.
			Es ist <emphasis>nicht</emphasis> als Einführung in 
			Versionskontrollsysteme gedacht, und auch nicht als Einführung
			in Subversion (SVN). Dies ist mehr ein Nachschlagewerk wenn Sie
			nicht mehr genau wissen wie eine Funktion ausgeführt wird, sie aber
			zumindest wissen was Sie tun wollen.
		</para>
		<para>
			Falls Sie eine Anleitung für Versionskontrolle mit Subversion
			benötigen, empfehlen wir das fantastische Buch
			<ulink url="http://svnbook.red-bean.com/">
				<citetitle>Subversion: The Definitive Guide</citetitle>
			</ulink>.
		</para>
		<para>
			An diesem Dokument wird ständig gearbeitet, wie auch an TortoiseSVN
			und Subversion immer weitergearbeitet wird. Falls Sie Fehler 
			feststellen, melden Sie diese an die Mailing-Liste damit wir die
			Dokumentation aktualisieren können. Einige der Screenshots in 
			diesem Dokument zeigen wahrscheinlich nicht den aktuellsten Stand
			der Software. Seien Sie bitte nachsichtig. Wir arbeiten an
			TortoiseSVN und der Dokumentation während unserer Freizeit.
		</para>
		<para>
			<itemizedlist>
				<listitem>
					<para>
					Sie sollten TortoiseSVN bereits installiert haben
					</para>
				</listitem>
				<listitem>
					<para>
					Sie kennen sich aus mit Versionskontrollsystemen
					</para>
				</listitem>
				<listitem>
					<para>
					Sie kennen die Grundlagen von Subversion
					</para>
				</listitem>
				<listitem>
					<para>
					Sie haben einen Server installiert und/oder haben Zugriff
					auf ein Subversion Projektarchiv.
					</para>
				</listitem>
			</itemizedlist>
		</para>
	</simplesect>
	<!-- ================================================================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-general">
		<title>Handhabung von TortoiseSVN</title>
		<indexterm>
			<primary>Kontextmenü</primary>
		</indexterm>
		<para>
			<figure id="tsvn-DUG-context-dir-control">
				<title>Kontext-Menu für einen Ordner unter Versionskontrolle</title>
				<graphic fileref="images/ContextMenuDirControl.png"/>
			</figure>
			Alle Befehle von TortoiseSVN werden über das Kontext-Menu des Windows 
			Explorers aufgerufen. Die meisten sind direkt sichtbar, wenn Sie mit
			einem <action>Recht-Klick</action> auf eine Datei oder Ordner klicken.
			Die vorhandenen Befehle hängen davon ab ob Sie auf eine Datei oder einen
			Ordner geklickt haben oder ob der übergeordnete Ordner unter 
			Versionskontrolle steht oder nicht.
		</para>
		<para>
			<indexterm>
				<primary>Drag Handler</primary>
			</indexterm>
			<indexterm>
				<primary>Drag-n-Drop</primary>
			</indexterm>
			Andere Befehle sind als Drag-Handler vorhanden. Wenn Sie Dateien
			oder Ordner <action>Rechts-Ziehen</action> innerhalb einer Arbeitskopie
			oder wenn Sie eine nicht versionskontrollierte Datei in eine Arbeitskopie
			<action>Rechts-Ziehen</action>.
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-authentication">
		<title>Anmeldung</title>
		<indexterm>
			<primary>Anmeldung</primary>
		</indexterm>
		<para>
			Wenn das Projektarchiv, auf das Sie zugreifen wollen, passwortgeschützt ist,
			erscheint folgender Anmeldedialog
			<figure id="tsvn-fig-authentication">
				<title>Anmeldedialog</title>
				<graphic fileref="images/Authenticate.png"/>
			</figure>
			Geben Sie Ihren Benutzernamen und Ihr Kennwort ein. Die Checkbox bewirkt,
			dass TortoiseSN die Anmeldeinformationen in Subversions Konfigurationsverzeichnis
			<filename>$APPDATA\Subversion\auth</filename>
			ablegt. Pro Server auf den Sie zugreifen wird in diesem Verzeichnis eine
			Datei angelegt. Falls Sie wollen, dass TortoiseSVN und Subversion diese 
			Anmeldeinformation vergessen, müssen sie die entsprechende(n) Datei(en) löschen.
			<tip>
				<para>
				Wenn Sie sich an einer Windows NT Domäne anmelden, geben Sie Ihren
				Benutzernamen inklusive Domänenenamen an, wie: <action>MYDOMAIN/johnd</action>.
				</para>
			</tip>
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-import">
		<title>Daten in ein Projektarchiv importieren</title>
		<indexterm>
			<primary>importieren</primary>
		</indexterm>
		<indexterm>
			<primary>Projektarchiv</primary>
		</indexterm>
		<?dbhh topicname="HIDD_IMPORT"?>
		<sect2 id="tsvn-DUG-import-1">
			<title>Projektarchiv Struktur</title>
			<para>
				Bevor Sie Daten in das Projektarchiv importieren sollten Sie sich 
				Gedanken darüber machen wie Sie Ihre Daten organisieren wollen.
				Wenn Sie eines der empfohlenen Layouts verwenden werden Sie es später
				viel viel einfacher haben.
			</para>
			<para>
				Es gibt ein paar empfohlene Standards um die Daten innerhalb eines
				Projektarchivs zu organisieren. Die meisten Leute erstellen einen
				<filename>trunk</filename> Ordner welcher den Hauptast (Stamm)
				der Entwicklung enthält, einen <filename>branches</filename> Ordner
				welcher Sonder-Entwicklungszweige enthält und einen <filename>tags
				</filename> Ordner, welcher markierte Zustände enthält. Wenn ein
				Projektarchiv nur ein einziges Projekt enthält ist das folgende Layout
				zu empfehlen:
			</para>
<screen>
/trunk
/branches
/tags
</screen>
			<para>
				Falls ein Projektarchiv jedoch mehrere Projekte enthält, kann das
				Layout durch Verzweigungen (branch) erstellt werden:
			</para>
<screen>
/trunk/paint
/trunk/calc
/branches/paint
/branches/calc
/tags/paint
/tags/calc
</screen>
			<para>&hellip;oder per Projekt:</para>
<screen>
/paint/trunk
/paint/branches
/paint/tags
/calc/trunk
/calc/branches
/calc/tags
</screen>
			<para>
				Natürlich können Sie diese Empfehlungen auch ignorieren. Es steht
				Ihnen frei, ein Layout zu wählen welches am besten für Sie 
				oder Ihr Team geeignet ist. Beachten Sie auch, dass was immer
				für eine Wahl Sie treffen diese nicht fix ist. Sie können das
				Layout später immer noch reorganisieren. Weil Zweige (branches) und
				Markierungen (tags) gewöhnliche Ordner in Subversion sind können
				Sie diese ganz einfach mit TortoiseSVN umbenennen oder verschieben
				wie Sie wollen.
			</para>
			<para>
				Von einem Layout zu einem anderen zu wechseln ist lediglich eine
				Abfolge serverseitiger Umbenennungen; Wenn Ihnen die Art und Weise
				wie Dinge im Projektarchiv organisiert sind, nicht gefallen, 
				jonglieren Sie einfach mit den Verzeichnissen herum
			</para>
			<para>
				Falls Sie noch keine Ordnerstruktur in Ihrem Projektarchiv angelegt
				haben sollten Sie dies jetzt tun:
				<orderedlist>
					<listitem>
						<para>
							Erstellen Sie einen leeren Ordner auf Ihrer Festplatte
						</para>
					</listitem>
					<listitem>
						<para>
							Erstellen Sie in diesem Ordner die gewünschte
							Ordnerstruktur &mdash; kopieren Sie noch keine Dateien
							hinein!
						</para>
					</listitem>
					<listitem>
						<para>
							Importieren Sie diese Struktur in das Projektarchiv
							durch <action>Rechts-Klick</action> auf den obersten Ordner und Klick
							auf <guimenuitem>Importieren...</guimenuitem>
						</para>
					</listitem>
				</orderedlist>
			</para>
		</sect2>
		<sect2 id="tsvn-DUG-import-2">
			<title>Importieren</title>
			<indexterm>
				<primary>Temporäre Dateien</primary>
			</indexterm>
			<para>
				Bevor Sie ein Projekt in das Projektarchiv importieren sollten Sie:
				<orderedlist>
					<listitem>
						<para>
							Alle Dateien entfernen/löschen welche nicht unbedingt
							für das Projekt notwendig sind (z.B. temporäre Dateien,
							Dateien welche vom Kompiler erzeugt werden wie *.obj,
							kompilierte EXE Dateien, ...)
						</para>
					</listitem>
					<listitem>
						<para>
							die Dateien und Ordner optimal anordnen. Obwohl es
							auch später noch immer möglich ist die Dateien und
							Ordner umzubenenen oder zu verschieben ist es doch
							empfehlenswert eine saubere Struktur schon beim
							Importieren zu haben.
						</para>
					</listitem>
				</orderedlist>
			</para>
			<para>
				Wählen Sie nun den <emphasis>übergeordneten</emphasis> Ordner Ihrer
				Ordnerstruktur im Windows Explorer und öffnen Sie mit einem
				<action>Rechts-Klick</action>
				das Kontext-Menu. Wählen Sie den Befehl
				<menuchoice>
					<guimenuitem>Importieren...</guimenuitem>
				</menuchoice>
				worauf der folgende Dialog erscheint:
				<figure id="tsvn-DUG-import-dia-1">
					<title>Der Import Dialog</title>
					<graphic fileref="images/Import.png"/>
				</figure>
			</para>
			<para>
				Geben Sie in diesem Dialog die URL Ihres Projektarchivs ein in das Sie
				das Projekt importieren möchten.
			</para>
			<para>
				Die Import-Meldung ist gedacht als Log-Meldung. Da Sie normalerweise
				ganz zu beginn eines Projektes importieren, hat TortoiseSVN schon
				die Meldung "erster Import" für Sie ausgefüllt. Sie können diese
				Meldung jedoch nach belieben ändern.
			</para>
			<indexterm>
				<primary>Dateien ausschließen</primary>
			</indexterm>
			<note>
				Dateien oder Verzeichnisse, die dem
				<guilabel>Dateien ausschließen</guilabel>
				Muster entsprechen werden <emphasis>nicht</emphasis> importiert.
			</note>
			<para>
				Sobald Sie auf <guibutton>OK</guibutton> klicken beginnt TortoiseSVN die Daten
				in das Projektarchiv zu importieren. Beachten Sie bitte, dass dadurch
				Ihre Daten <emphasis>nicht</emphasis> unter Versionskontrolle
				gestellt werden! Um eine Arbeitskopie zu erhalten, bei welcher die
				Daten unter Versionskontrolle sind müssen sie diese Daten frisch
				aus dem Projektarchiv auschecken.
			</para>
		</sect2>
		<sect2 id="tsvn-DUG-import-3">
			<title>Spezielle Dateien</title>
			<indexterm>
				<primary>spezielle dateien</primary>
			</indexterm>
			<para>
			Machmal ist es notwendig, eine Datei unter Versionskontrolle zu
			haben welche Benutzerspezifische Daten (z.B. absolute Pfade zu
			Programmtools) enthält. Das bedeutet Sie haben eine Datei welche
			von jedem Benutzer verändert werden muss um seine/ihre lokalen
			Einstellungen anzupassen. Aber eine Datei unter Versionskontrolle würde
			von jedem Benutzer jeweils wieder zum Projektarchiv übertragen werden
			und so die Änderungen von anderen Benutzern wieder überschreiben.
			</para>
			<para>
			In solchen Fällen empfehlen wir die Verwendung von sogenannten
			<literal>Schablonen</literal>. Eine Schablone ist nichts anderes
			als eine normale Datei, welche entweder einen anderen Dateinamen
			oder eine andere Dateiendung hat wie die Datei welche schlussendlich
			dann tatsächlich verwendet wird.
			</para>
			<para>
			Als Beispiel sehen Sie sich das Build-Skript von TortoiseSVN mal an.
			Es ruft eine Datei namens <filename>TortoiseVars.bat</filename> auf
			welche im Projektarchiv gar nicht existiert! Es existiert aber die
			Datei <filename>TortoiseVars.tmpl</filename>, welche die Schablone
			für die Datei <filename>TortoiseVars.bat</filename> darstellt.
			Bevor also das Build-Skript ausgeführt werden kann muss jeder 
			Benutzer eine Kopie von <filename>TortoiseVars.tmpl</filename>
			erstellen und die Kopie in <filename>TortoiseVars.bat</filename>
			umbenennen. Dann kann die Datei <filename>TortoiseVars.bat</filename>
			ohne Probleme so verändert werden, dass die absoluten Pfade zu den
			zur Erstellung von TortoiseSVN notwendigen Tools mit den lokalen
			Pfaden übereinstimmen.
			</para>
			<para>
			Um die Benutzer nicht zu stören, ist die Datei <filename>TortoiseVars.bat</filename>
			auch in der Liste der ignorierten Dateien eingetragen. Das heisst wir
			haben die Subversion Eigenschaft <literal>svn:ignored</literal>
			für diese Datei gesetzt. Damit erscheint diese Datei nicht in jedem
			Übertragungsdialog als (noch) nicht versioniert.
			</para>
		</sect2>
	</sect1>
	<!-- ================================================================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-checkout">
		<title>Auschecken einer Arbeitskopie</title>
		<indexterm>
			<primary>auschecken</primary>
		</indexterm>
		<indexterm>
			<primary>checkout</primary>
		</indexterm>
		<?dbhh topicname="HIDD_CHECKOUT"?>
		<para>
			Um eine Arbeitskopie zu erhalten müssen Sie zunächst eine solche aus dem
			Subversion Projektarchiv auschecken.
		</para>
		<para>
			Wählen Sie einen Ordner im Windows Explorer, wohin Sie ihre Arbeitskopie
			haben möchten. Öffnen Sie dann mittels <action>Rechts-Klick</action> das
			Kontext-Menu und wählen Sie den Befehl
			<menuchoice>
				<guimenuitem>Auschecken...</guimenuitem>,
			</menuchoice>
			was Sie zu folgendem Dialog führt:
			<figure id="tsvn-DUG-checkout-dia-1">
				<title>Der Auscheck-Dialog</title>
				<graphic fileref="images/Checkout.png"/>
			</figure>
			Falls der Ordnername den Sie in diesem Dialog angeben noch nicht
			vorhanden ist, wird dieser erstellt.
		</para>
		<note>
			Sie können nur in einen leeren Ordner auschecken. Wenn Sie in einen
			vorher importieren Ordner auschecken möchten wird Subversion eine
			Fehlermeldung ausgeben. Sie müssen die importierten Dateien entweder
			in einen neuen Ordner auschecken oder alle Dateien in dem vorher
			importieren Ordner zuerst löschen.
		</note>
		<para>
			Wir empfehlen Ihnen, jeweils nur den <filename>trunk</filename>-Teil
			des Projektarchivs auszuchecken. Falls Sie den übergeordneten Pfad
			auschecken erhalten Sie den kompletten Dateibaum des Projektarchivs! So
			können Sie sehr schnell Ihre Festplatte füllen, da Sie z.B. für jede
			Markierung in <filename>tags</filename> eine separate Kopie der
			Daten erhalten!
		</para>
		<tip>
			<title>Exportieren</title>
			<indexterm>
				<primary>exportieren</primary>
			</indexterm>
			<para>
				Es kommt vor dass Sie eine Kopie Ihres Projektes möchten, aber
				ohne die administrativen Ordner (<filename>.svn</filename>), zum
				Beispiel weil Sie das Projekt zippen möchten. Statt dass Sie nun
				eine Kopie von Ihrer Arbeitskopie erstellen und dann von Hand
				alle <filename>.svn</filename> Ordner löschen können Sie den
				Befehl 
				<menuchoice>
					<guimenuitem>Exportieren...</guimenuitem> 
				</menuchoice>
				verwenden. Wenn Sie diesen Befehl ausführen werden Sie nach 
				einem Ort gefragt an dem Sie die Daten speichern möchten, und 
				Sie erhalten dann eine "saubere" Kopie Ihrer Daten, ohne die
				<filename>.svn</filename>
				Ordner. Sie können auch angeben, ob Sie <emphasis>alle</emphasis>
				Dateien exportieren möchten oder nur diejenigen unter 
				Versionskontrolle.
			</para>
			<para>
			Eine andere Möglichkeit zu exportieren geht durch rechts-ziehen
			eines Arbeitskopie-Ordners an einen anderen Ort. Dann einfach
			im Kontextmenu 
			<menuchoice>
				<guimenuitem>Subversion hier exportieren</guimenuitem>
			</menuchoice>
			oder  
			<menuchoice>
				<guimenuitem>Subversion hier alle exportieren</guimenuitem>
			</menuchoice>
			wählen.
			</para>
		</tip>
	</sect1>
	<!-- ================================================================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-wcstatus">
		<title>Status Informationen</title>
		<indexterm>
			<primary>Status</primary>
		</indexterm>
		<para>
		Während Sie an Ihrem Projekt arbeiten müssen Sie oft wissen, welche
		Dateien geänder wurden, welche Sie neu hinzugefügt haben oder welche
		Sie gelöscht haben, oder auch welche Dateien von anderen geändert
		und zum Projektarchiv übertragen wurden.
		</para>
		<sect2 id="tsvn-DUG-wcstatus-1">
			<title>Überlagerte Icons</title>
			<indexterm>
				<primary>overlay</primary>
			</indexterm>
			<para>
				<figure id="tsvn-DUG-wcstatus-dia-1">
					<title>Exploreransicht mit Icon Overlays</title>
					<graphic fileref="images/Overlays.png"/>
				</figure>
				Nun da Sie eine frisch ausgescheckte Arbeitskopie von einem Subversion
				Projektarchiv haben zeigt Ihnen der Explorer diese Dateien und Ordner
				mit leicht geänderten Icons an. Dies ist mit ein Grund weshalb
				TortoiseSVN so populär ist. TortoiseSVN fügt jedem Datei/Ordnericon
				ein kleines überlagertes Icon hinzu. Abhängig vom Subversion Status
				wird ein unterschiedliches Icon überlagert angezeigt.
				<graphic fileref="images/InSubVersionIcon.png"/>
				Eine frisch ausgecheckte Arbeitskopie hat nur überlagerte Icons mit grünem Haken. 
				Dies bedeutet dass der Subversion Status <literal>normal</literal> ist.
				<graphic fileref="images/ModifiedIcon.png"/>
				Sobald Sie eine Datei ändern, ändert sich auch der Status der
				Datei auf <literal>verändert</literal> und das überlagerte Icon
				ändert sich zu einem roten Auszufezeichen. Auf diese Weise können
				Sie mit einem Blick feststellen, welche Dateien Sie geändert
				haben und noch nicht in das Projektarchiv übertragen worden sind.
				<graphic fileref="images/ConflictIcon.png"/>
				Falls während einer Aktualisierung ein <literal>Konflikt</literal>
				auftrat, so werden solche Dateien mit einem gelben Ausrufezeichen 				markiert.
				<graphic fileref="images/AddedIcon.png"/> 
				Das Pluszeichen bedeutet, dass eine Datei oder ein Ordner neu
				<literal>hinzugefügt</literal> wurde zur Versionskontrolle.
				<graphic fileref="images/DeletedIcon.png"/> 
				Dieses überlagerte Icon zeigt, dass Dateien oder Ordner <literal>
				gelöscht</literal> wurden aus der Versionskontrolle.
			</para>
			<para>
				Die Ordner-Icons haben ebenfalls überlagerte Icons. Standardmässig
				zeigen diese aber nur an, ob ein Ordner unter Versionskontrolle ist
				oder nicht. Aber Sie können dieses Verhalten in den
      			<menuchoice>
					<guimenuitem>Einstellungen</guimenuitem>
				</menuchoice>
				(<xref linkend="tsvn-DUG-settings"/>),
				so ändern, dass das Ordner-Icon den Status der 
				darunterliegenden Dateien anzeigt. Da dies recht viel Zeit und
				viele Dateizugriffe erfordert kann diese Funktion den Explorer
				ausbremsen und ist deshalb für langsamere Rechner oder sehr
				grosse Arbeitskopien nicht zu empfehlen.
			</para>
			<para>
			Mit dieser Einstellung zeigt jeder Ordner den Status der Dateien
			darunter, wobei <literal>in Konflikt</literal> höchste Priorität
			hat, dann <literal>Hinzugefügt</literal>, <literal>gelöscht</literal>,
			<literal>verändert</literal> und schlussendlich <literal>normal</literal>.
			<tip>
				<title>Langsame Overlayanzeige</title>
				<para>
					Sie werden feststellen, dass sobald Sie die Icon Overlays rekursiv
					anzeigen lassen der Explorer recht langsam wird. Dies hängt
					vorallem davon ab wie gross Ihre Arbeitskopie ist, resp. wieviele
					Dateien Sie unter Versionskontrolle haben und davon wieviel RAM
					Speicher Sie in Ihrem Rechner haben.
					Normalerweise ist der Explorer nur beim ersten Mal wo Sie einen
					solchen Ordner anzeigen sehr langsam. Wenn Sie denselben
					Ordner später nochmals anzeigen so hilft ein interner Caching-
					Algorithmus und der Festplattencache von Windows die Anzeige
					zu beschleunigen.
				</para>
				<para>
					Wenn Sie die rekursiv überlagerten Icons für bestimmte
					Ordner ausschalten möchten, können Sie das tun indem Sie
					eine Datei mit Namen <filename>_tsvnexcluderecursive</filename>
					in diesem Ordner erstellen. Dies deaktiviert die Rekursion
					für diesen Ordner allein, jedoch nicht für die Dateien/Ordner
					innerhalb dieses Ordners.
				</para>
				<para>
					Sie können die überlagerten Icons auch komplett ausschalten
					für einen bestimmten Ordner, indem Sie eine Datei mit
					Namen <filename>_tsvnexcludethis</filename> in diesem
					Ordner erstellen. Und auch hier gilt, die überlagerten Icons
					werden nur für diesen Ordner deaktiviert, nicht für die
					Ordner innerhalb dieses Ordners.
					Sie können bestimmte Pfade auch ausschliessen durch Angabe
					der Pfade im Einstellungs-Dialog, Look and Feel Tab.
				</para>
			</tip>
			</para>
			<para>
				Anders als <application>TortoiseCVS</application>  zeigt TortoiseSVN keine
				überlagerte Icons für Dateien an, welche nicht unter Versionskontrolle
				stehen. Wir tun dies nicht weil die Anzahl von überlagerten Icons
				Systemweit limitiert sind und wir nicht andere Programme dadurch
				blockieren wollen.
			</para>
		</sect2>
		<sect2 id="tsvn-DUG-wcstatus-2">
			<title>Zustand des Projektarchivs</title>
			<indexterm>
				<primary>Status</primary>
			</indexterm>
			<para>
				<figure id="tsvn-DUG-wcstatus-dia-2">
					<title>Auf Änderungen überprüfen</title>
					<graphic fileref="images/RepoStatus.png"/>
				</figure>
				Oft ist es nützlich zu wissen, welche Dateien von anderen bereits
				geändert und im Projektarchiv gespeichert wurden. Dazu gibt es
				den Befehl
				<menuchoice>
					<guimenuitem>Auf Änderungen überprüfen</guimenuitem>.
				</menuchoice>
				Dieser Dialog zeigt Ihnen alle Dateien, welche entweder von Ihnen
				lokal und/oder von anderen im Projektarchiv geändert wurden. So
				können Sie schon vor einer Aktualisierung feststellen, ob es 
				eventuell Konflikte geben kann.
			</para>
			<para>
				Aus dem Kontex-Menu des Dialogs heraus können Sie die Änderungen
				anzeigen (Diff), sowohl die Änderungen die Sie lokal gemacht haben
				als auch die Änderungen von anderen im Projektarchiv. TortoiseSVN
				lädt automatisch die entsprechende Datei aus dem Projektarchiv, um
				Ihnen die Änderungen zeigen zu können.
			</para>
			<tip>
				<title>Weitere Möglichkeiten</title>
				<para>
				Der 
					<menuchoice>
						<guimenuitem>Auf Änderungen überprüfen</guimenuitem>.
					</menuchoice>
					Dialog ist vielleicht nicht die beste Wahl wenn Sie gerade
					keine Netzwerkverbindung zu Ihrem Projektarchiv haben. In diesem
					Falle können sie die lokalen Änderungen auch mit dem
					<menuchoice>
						<guimenuitem>Übertragen</guimenuitem>
					</menuchoice>.
					Dialog ansehen. Dieser Dialog zeigt Ihnen eine ähnliche Liste 
					der geänderten Dateien, jedoch ohne das Projektarchiv zu 
					kontaktieren und benötigt deshalb auch keine Netzwerkverbindung.
					Sie brauche die Daten auch nicht zu übertragen, nur weil Sie 
					diesen Dialog benötigten &mdash; klicken Sie einfach auf 
					<guibutton>Abbrechen</guibutton>
					statt auf
					<guibutton>Ok</guibutton>.
				</para>
			</tip>
		</sect2>
	</sect1>
	<!-- ================================================================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-update">
		<title>Aktualisieren der Arbeitskopie mit Änderungen von anderen</title>
		<indexterm>
			<primary>aktualisieren</primary>
		</indexterm>
		<indexterm>
			<primary>update</primary>
		</indexterm>
		<para>
			<figure id="tsvn-DUG-update-dia-1">
				<title>Aktualisierung fertig im Fortschritts-Dialog</title>
				<graphic fileref="images/UpdateFinished.png"/>
			</figure>
			Änderungen von anderen sollten Sie regelmässig in Ihre eigene 
			Arbeitskopie einfügen. Änderungen von anderen in die eigene Arbeitskopie
			einfügen wird auch <literal>Aktualisieren</literal> genannt. Sie können
			einzelne Dateien, mehrere Dateien, ganze Ordner oder gleich die 
			komplette Arbeitskopie aktualisieren. Wählen Sie einfach die Dateien
			oder Ordner aus, welche Sie aktualisieren möchten und öffnen Sie dann
			das Kontext-Menu durch einen <action>Rechts-Klick</action>. Im 
			Kontextmenu wählen Sie dann den Befehl
			<menuchoice>
				<guimenuitem>Aktualisieren</guimenuitem>
			</menuchoice>
			aus und eine Dialogbox wird erscheinen welche Ihnen den Fortschritt
			der Aktualisierung anzeigt. Änderungen von anderen werden in Ihre
			Arbeitskopie eingefügt, wobei Ihre eigenen Änderungen selbstverständlich
			beibehalten werden. Das Projektarchiv selbst wird  durch eine Aktualisierung
			<emphasis>nicht</emphasis> verändert.
		</para>
		<para>
			Falls Sie einen <literal>Konflikt</literal> während einer Aktualisierung
			erhalten (Dies kann passieren wenn jemand anders dieselbe Stelle in
			einer Datei geändert hat wie Sie und diese Änderungen nicht zusammenpassen)
			dann zeigt der Fortschritts-Dialog diese Dateien rot markiert an. Ein
			<action>Doppelklick</action> auf diese roten Einträge öffnet ein
			sogenanntes <literal>Merge</literal>-Tool, mit welchem Sie solche
			Konflikte ganz einfach von Hand auflösen können.
		</para>
		<para>
			TortoiseSVN ermöglicht es Ihnen auch, eine Arbeitskopie auf eine ganz
			bestimmte Revision zu aktualisieren und nicht nur immer auf die neueste
			Revision. Dieser Befehl heisst
			<menuchoice>
				<guimenuitem>Aktualisieren zu Revision...</guimenuitem>
			</menuchoice>
			und öffnet zuerst einen Dialog, wo Sie die Revisionsnummer
			eingeben können, auf welche die Arbeitskopie aktualisiert werden soll.
		</para>
		<caution>
			Wenn Sie eine Datei oder Ordner auf eine bestimmte Revision aktualisieren,
			werden Sie <literal>out of date</literal> Fehlermeldungen erhalten sobald
			Sie versuchen, diese Dateien oder Ordner zu übertragen.
			Wenn Sie Änderungen an Dateien rückgängig machen wollen, dann
			müssen Sie entweder den Befehl
			<menuchoice>
				<guimenuitem>Änderungen dieser Revision rückgängig machen</guimenuitem>
			</menuchoice>
			im Log-Dialog oder den Befehl
			<menuchoice>
				<guimenuitem>Zusammenführen...</guimenuitem>
			</menuchoice>
			verwenden.
		</caution>
		<para>
			Der Befehl
			<menuchoice>
				<guimenuitem>Aktualisieren zu Revision...</guimenuitem>
			</menuchoice>
			ermöglicht es Ihnen, Ihre Arbeitskopie auf einen früheren Stand
			zu bringen. Ist z.B. Ihre Arbeitskopie auf Revision 100, aber Sie möchten
			nachsehen wie das Projekt in Revision 50 ausgesehen hat so aktualisieren
			Sie ganz einfach die Arbeitskopie auf Revision 50.
		</para>
		<warning>
		Wenn Sie Ihre Arbeitskopie auf eine frühere Revision aktualisiert haben,
		dürfen Sie keine Änderungen an den Dateien mehr vornehmen! Sie werden
		eine Fehlermeldung erhalten, wenn Sie versuchen, diese Änderungen zu
		übertragen.
		Wenn Sie Änderungen rückgängig machen wollen, benutzen Sie den 
		Projektarchiv-Browser und speichern Sie die gewünschte Datei über
		die Datei in der Arbeitskopie. Oder Sie können den Log-Dialog benutzen
		und den Befehl "Änderungen dieser Revision rückgängig machen". Um
		mehrere Revisionen rückgängig zu machen, benutzen Sie den "Mischen"
		Befehl.
		</warning>
		<tip>
			<title>Mehrere Dateien/Ordner</title>
			<para>
				Wenn Sie mehrere Dateien und Ordner im Explorer auswählen und dann
				<menuchoice>
					<guimenuitem>Aktualisieren...</guimenuitem>
				</menuchoice>
				ausführen, so werden
				alle Dateien und Ordner auf <emphasis>dieselbe</emphasis> Revision
				aktualisiert, sogar dann wenn zwischen den einzelnen Aktualisierungen
				jemand anders Änderungen zum Projektarchiv übertragen hat.
		</para>
		</tip>
	</sect1>
	<!-- ================================================================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-conflicts">
		<title>Konflikte Auflösen</title>
		<indexterm>
			<primary>Konflikt</primary>
		</indexterm>
		<para>
			Manchmal werden Sie einen <literal>Konflikt</literal> erhalten wenn
			Sie Ihre Arbeitskopie aktualisieren. Ein Konflikt tritt dann auf
			wenn mehrere Personen die gleiche(n) Stelle(n) in derselben Datei
			verändert haben. Da Subversion nichts über Ihr Projekt weiss, überlässt
			es solche Fälle Ihnen, den Konflikt aufzulösen. Wann immer ein
			Konflikt auftritt können Sie die entsprechende Datei öffnen und nach
			Zeilen suchen welche beginnen mit:
			<literal>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</literal>.
			Die Zeile in Konflikt ist so markiert:
<screen>
&lt;&lt;&lt;&lt;&lt;&lt;&lt; Dateiname
    Ihre Änderungen
=======
    Zeilen mit dem Projektarchiv zusammengeführt
&gt;&gt;&gt;&gt;&gt;&gt;&gt; Revision
</screen>
			Ausserdem wird für jede Datei in Konflikt drei weitere Dateien erstellt:
			<variablelist>
				<varlistentry>
					<term>filename.ext.working</term>
					<listitem>
						<para>
						Dies ist die Datei, so wie Sie war bevor Sie
						Ihre Arbeitskopie aktualisierten. Das heisst es ist 
						Ihre eigene Originaldatei, inklusive der Änderungen 
						welche Sie selbst vorgenommen haben.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>filename.merge-left.rOLDREV</term>
					<listitem>
						<para>
						Dies ist die Datei wie Sie ursprünglich war, ohne
						jegliche Änderungen, auch ohne den Änderungen welche
						Sie selbst an der Datei vorgenommen haben.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>filename.merge-right.rNEWREV</term>
					<listitem>
						<para>
						Dies ist die Datei, wie sie im Projektarchiv gerade
						aktuell ist, d.h. diese Datei hat die Änderungen von
						den anderen Mitarbeitern bereits integriert, jedoch
						nocht nicht die Ihren.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
			Wobei <literal>*</literal> für eine zufällige Zahl steht, welche
			Subversion wählt. OLDREV ist die Revisionsnummer der Datei bei
			ihrer letzten Aktualisierung, und NEWREV ist die neueste Revisionsnummer
			des Projektarchivs.
		</para>
		<para>
			Sie können nun entweder ein Merge-Tool benutzen, welches Sie durch
			den Befehl
			<menuchoice>
				<guimenuitem>Konflikt bearbeiten</guimenuitem>
			</menuchoice>
			aufrufen können oder Sie können die Datei mit einem normalen Texteditor 
			ändern und den Konflikt auf diese Weise auflösen.
		</para>
		<para>
			Anschliessend müssen Sie Subversion noch mitteilen, dass Sie den
			Konflikt aufgelöst haben. Dies geschieht mit dem Befehl
			<menuchoice>
				<guimenuitem>Konflikt aufgelöst</guimenuitem>.
			</menuchoice>
			Bitte beachten Sie dass dieser
			Befehl <emphasis>nicht</emphasis> den Konflikt selbst löst, sondern
			nur Subversion mitteilt dass Sie selbst den Konflikt bereits gelöst
			haben. Der Befehl macht eigentlich nichts weiter als die drei
			zusätzlich erstellten Dateien <filename>filename.ext.working
			</filename> und <filename>filename.ext.merge-*.r*</filename> zu löschen.
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-commit">
		<title>Änderungen in das Projektarchiv übertragen</title>
		<indexterm>
			<primary>übertragen</primary>
		</indexterm>
		<indexterm>
			<primary>commit</primary>
		</indexterm>
		<?dbhh topicname="HIDD_LOGPROMPT"?>
		<para>
			Änderungen an Dateien im Projektarchiv abzuspeichern wird auch 
			<firstterm>Übertragen</firstterm> der Änderungen genannt.
			Vor dem Übertragen jedoch sollten Sie sicherstellen, dass Ihre
			Arbeitskopie auch auf dem neuesten Stand ist. Sie können entweder den
			Befehl
			<menuchoice>
				<guimenuitem>Aktualisieren...</guimenuitem>
			</menuchoice>
			sofort ausführen oder zunächst mittels
			<menuchoice>
				<guimenuitem>Auf Änderungen überprüfen</guimenuitem>.
			</menuchoice>
		</para>
		<para>
			Wenn Ihre Arbeitskopie auf dem neuesten Stand ist und keine Konflikte
			vorhanden sind können Sie Ihre Änderungen übertragen. Wählen Sie
			die Dateien/Ordner aus welche Sie übertragen wollen und wählen Sie
			den Befehl
			<menuchoice>
				<guimenuitem>Übertragen...</guimenuitem>
			</menuchoice>
			im Kontextmenu aus. Der folgenden Dialog erscheint:
			<figure id="tsvn-DUG-commit-dia-1">
				<title>Der Übertragen Dialog</title>
				<graphic fileref="images/CommitContextMenu.png"/>
			</figure>
		</para>
		<para>
			Der Dialog zeigt alle Dateien auf, welche verändert wurden, 
			einschliesslich der Dateien die Sie hinzugefügt oder gelöscht haben.
			Auch Dateien, welche noch nicht unter Versionskontrolle stehen werden
			hier angezeigt. Wenn Sie bestimmte Dateien (noch) nicht übertragen
			wollen wählen Sie diese einfach ab. Dateien welche noch nicht unter
			Versionskontrolle stehen können Sie durch auswählen vor dem Übertragen
			hinzufügen lassen.
			<tip>
				<title>Zu viele Dateien werden angezeigt</title>
				<para>
					Falls Sie das Gefühl haben dass TortoiseSVN Ihnen viel zu viele
					Dateien im Übertragungsdialog anzeigt welche nicht unter
					Versionskontrolle stehen (z.B. vom Kompiler erzeugte Dateien
					oder Backupdateien vom Editor) haben Sie mehrere Möglichkeiten
					dies einzugrenzen. Sie können:
					<itemizedlist>
						<listitem>
							<para>
								diese Dateien in die Maske der temporären Dateien
								aufnehmen im Eigenschaftsdialog. Dies hat Einfluss auf
								<emphasis>alle</emphasis> Arbeitskopien gleichzeitig.
							</para>
						</listitem>
						<listitem>
							<para>
								Fügen Sie diese Dateien zur Liste der ignorierten
								Dateien hinzu mit dem Befehl
								<menuchoice>
									<guimenuitem>Ignorieren</guimenuitem>.
								</menuchoice>
								Dadurch werden diese Dateien in die Ordner-Eigenschaft <literal>
								svn:ignore</literal> aufgenommen, welche Sie mittels
								des normalen Eigenschaftsdialog des Explorers (auf der
								Subversion-Seite) ansehen und ändern können.
								Dies hat nur Einfluss auf denselben Ordner in der
								Arbeitskopie, wo Sie diesen Befehl ausführen.
							</para>
						</listitem>
					</itemizedlist>
				</para>
			</tip>
		</para>
		<para>
			Durch einen <action>Doppelklick</action> auf irgendeine Datei im
			Übertragungsdialog wird das Diff-Programm gestartet so dass Sie die
			Änderungen welche Sie vorgenommen haben genauer ansehen können.
		</para>
		<para>
			Wenn Sie schlussendlich auf <guibutton>OK</guibutton> klicken wird die
			Übertragung gestartet.
			<figure id="tsvn-DUG-commit-dia-3">
				<title>Eine laufende Übertragung im Fortschrittsdialog</title>
				<graphic fileref="images/CommitProgress.png"/>
			</figure>
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-adding">

		<title>Neue Dateien und Ordner hinzufügen</title>
		<indexterm>
			<primary>hinzufügen</primary>
		</indexterm>
		<indexterm>
			<primary>add</primary>
		</indexterm>
		<?dbhh topicname="HIDD_ADD"?>
		<para>
			<figure id="tsvn-DUG-adding-dia-1">
				<title>Kontextmenu für unkontrollierte Dateien</title>
				<graphic fileref="images/ContextMenuFileNoControl.png"/>
			</figure>
			Wenn Sie neue Dateien und/oder Ordner während Ihrer Arbeit erstellen
			müssen Sie diese auch zur Versionskontrolle hinzufügen. Wählen Sie
			diese Dateien und/oder Ordner aus und wählen Sie dann den Befehl
			<menuchoice>
				<guimenuitem>Hinzufügen...</guimenuitem>
			</menuchoice>
			im Kontextmenu.
		</para>
		<para>
			Nachdem Sie die Dateien/Ordner zur Versionskontrolle hinzugefügt haben
			erscheinen diese mit einem Pluszeichen als überlagertes Icon im
			Explorer, was bedeutet dass diese bei der nächsten Übertragung
			in das Projektarchiv mit aufgenommen werden. Beachten Sie dass das
			Hinzufügen alleine die Dateien/Ordner <emphasis>nicht</emphasis>
			im Projektarchiv speichert.
		</para>
		<para>
			<tip>
				<title>Multiples Hinzufügen</title>
				<para>
					Sie können den Hinzufügen-Befehl auch auf bereits versionierte
					Ordner anwenden. In diesem Falle zeigt Ihnen der Hinzufügen-
					Dialog alle noch nicht versionierten Dateien/Ordner innerhalb
					dieses Ordners an. Dies ist hilfreich wenn Sie viele neue
					Dateien auf einmal in die Versionskontrolle aufnehmen wollen.
				</para>
			</tip>
		</para>
		<para>
			Wenn Sie Dateien von ausserhalb Ihrer Arbeitskopie zu Ihrer Arbeitskopie
			hinzufügen möchten können Sie auch den drag&ndash;and&ndash;drop
			Handler verwenden:
			<orderedlist>
				<listitem>
					<para>
						Wählen Sie die Dateien aus welche Sie hinzufügen
						möchten.
					</para>
				</listitem>
				<listitem>
					<para>
						<action>Ziehen</action> Sie diese Dateien mit gedrückter
						rechter Maustaste an den neuen Ort innerhalb Ihrer
						Arbeitskopie.
					</para>
				</listitem>
				<listitem>
					<para>
					Lassen Sie die rechte Maustaste los
					</para>
				</listitem>
				<listitem>
					<para>
						Im erscheinenden Popupmenu wählen Sie 
						<menuchoice>
						<guimenuitem>Dateien zu Subversion hier hinzufügen</guimenuitem>.
						</menuchoice>.
						Die Dateien
						werden dann in die Arbeitskopie kopiert und zur 
						Versionskontrolle hinzugefügt.
					</para>
				</listitem>
			</orderedlist>
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-renaming">
		<title>Löschen, Umbenennen und Verschieben</title>
		<indexterm>
			<primary>löschen</primary>
		</indexterm>
		<indexterm>
			<primary>umbenennen</primary>
		</indexterm>
		<indexterm>
			<primary>verschieben</primary>
		</indexterm>
		<indexterm>
			<primary>delete</primary>
		</indexterm>
		<indexterm>
			<primary>remove</primary>
		</indexterm>
		<indexterm>
			<primary>rename</primary>
		</indexterm>
		<indexterm>
			<primary>move</primary>
		</indexterm>
		<?dbhh topicname="HIDD_RENAME"?>
		<para>
			Im Gegensatz zu CVS erlaubt es Subversion, Dateien und Ordner
			umzubenennen oder zu verschieben. Deshalb gibt es Befehle im Kontextmenu
			für diese Operationen.
			<figure id="tsvn-DUG-renaming-dia-1">
				<title>Kontextmenu für kontrollierte Dateien</title>
				<graphic fileref="images/ContextMenuFileControl.png"/>
			</figure>
		</para>
		<para>
			Wenn Sie eine Datei/Ordner mit TortoiseSVN löschen, wird diese aus
			der Arbeitskopie gelöscht und als gelöscht markiert. Solange Sie dieses
			<literal>Löschen</literal> noch nicht zum Projektarchiv übertragen haben
			können Sie die Datei/Ordner mit dem
			<menuchoice>
				<guimenuitem>Rückgängig</guimenuitem> 
			</menuchoice>
			Befehl auf dem übergeordneten Ordner wieder zurückholen.
		</para>
		<para>
			Um Dateien innerhalb einer Arbeitskopie zu verschieben, benutzen Sie
			den drag&ndash;and&ndash;drop Handler:
			<orderedlist>
				<listitem>
					<para>
					Wählen Sie die Dateien aus welche Sie verschieben möchten.
					</para>
				</listitem>
				<listitem>
					<para>
						<action>Ziehen</action> Sie die Dateien mit gedrückter
						rechter Maustaste an den neuen Ort.
					</para>
				</listitem>
				<listitem>
					<para>
						Lassen Sie die rechte Maustaste los.
					</para>
				</listitem>
				<listitem>
					<para>
						Wählen Sie im erscheinenden Popupmenu den Befehl
						<menuchoice>
							<guimenuitem> Verschiebe Datei(en) in Subversion hierher</guimenuitem>
						</menuchoice>
					</para>
				</listitem>
			</orderedlist>
			Falls Sie eine Datei mit dem Explorer auf normale Weise löschen und
			nicht mit TortoiseSVN, dann zeigt Ihnen der Übertragungsdialog diese
			Datei in der Liste an und ermöglicht es Ihnen, diese Datei auch aus
			der Versionskontrolle zu löschen.
		</para>
		<para>
			<caution>
				<title>Den übergeordneten Ordner übertragen</title>
				<para>
					Umbenennen und Verschieben einer Datei führt dazu, dass
					die alte Datei gelöscht wird und dieselbe an einem neuen Ort und/oder
					unter einem neuen Namen wieder zur Versionkontrolle hinzugefügt
					wird. Die alte, gelöschte Datei ist daher zwar nicht mehr
					im Explorer sichtbar, aber dennoch als gelöscht markiert
					vorhanden. Diese gelöschte Datei muss ebenfalls zum Server
					übertragen werden. Dies geschieht am besten, indem der
					übergeordnete Ordner für die Übertragung ausgewählt wird. Dann
					erscheint die gelöschte Datei auch im Übertragungsdialog.
					Wird dies nicht gemacht, bleibt die alte Datei im Projektarchiv
					bestehen!
				</para>
			</caution>
		</para>
		<para>
			<tip>
				<title>Eine gelöschte Datei/Ordner zurückholen</title>
				<para>
				Wenn Sie eine Datei oder einen Ordner gelöscht und dies bereits
				ins Projektarchiv übertragen haben, wird ein normaler
				<menuchoice>
					<guimenuitem>Rückgängig</guimenuitem>
				</menuchoice>
				Befehl diese nicht wieder zurückbringen können. Aber die Datei
				oder der Ordner ist nicht verloren. Wenn Sie die Revisionsnummer
				kennen, wo es gelöscht wurde (Benutzen Sie den Log-Dialog um dies
				rauszufinden) öffnen Sie den Projektarchiv-Browser. Wechseln
				Sie dann zu der Revisionsnummer, selektieren Sie die Datei oder
				den gelöschten Ordner, Rechts-Klick und dann wählen Sie den
				Befehl
				<menuchoice>
					<guimenuitem>Kopieren zu...</guimenuitem>
				</menuchoice>
				Als Ziel für diesen Kopierbefehl geben Sie den Pfad zu Ihrer
				Arbeitskopie an.
				</para>
			</tip>
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-revert">
		<title>Änderungen Rückgängig machen</title>
		<indexterm>
			<primary>rückgängig</primary>
		</indexterm>
		<indexterm>
			<primary>revert</primary>
		</indexterm>
		<indexterm>
			<primary>undo</primary>
		</indexterm>
		<para>
			Wenn Sie Änderungen, welche Sie an Dateien vorgenommen haben wieder
			rückgängig machen wollen, wählen Sie diese Datei aus und wählen
			dann den Befehl
			<menuchoice>
				<guimenuitem>Rückgängig...</guimenuitem>
			</menuchoice>
			aus dem Kontextmenu aus. Ein Dialog erscheint wo alle Dateien,
			welche geändert wurden aufgelistet sind. Wählen Sie die Dateien,
			welche Sie in den Ursprungszustand zurückversetzen wollen und drücken Sie
			<guibutton>ok</guibutton>.
			<figure id="tsvn-DUG-revert-dia-1">
				<title>Änderungen Rückgängig machen</title>
				<graphic fileref="images/Revert.png"/>
			</figure>
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-propertypage">
		<title>Lesen/Schreiben von Informationen über Dateien/Ordner</title>
		<indexterm>
			<primary>Eigenschaften</primary>
		</indexterm>
		<indexterm>
			<primary>properties</primary>
		</indexterm>
		<para>
			<figure id="tsvn-DUG-propertypage-dia-1">
				<title>Subversion Eigenschaftsseite</title>
				<graphic fileref="images/Properties.png"/>
			</figure>
			Manchmal ist es notwendig, detailliertere Informationen über eine
			Datei oder Ordner zu haben als mit den überlagerten Icons möglich ist.
			Sie können diese zusätzlichen Informationen über den Eigenschaftsdialog
			des Explorers anzeigen. Wählen Sie dazu die Datei oder den Ordner
			aus, öffnen Sie das Kontextmenu mit der rechten Maustaste und wählen
			Sie den Eintrag
			<menuchoice>
				<guimenuitem>Eigenschaften</guimenuitem>
			</menuchoice>
			aus. (Beachten Sie: dies ist der normale Eintrag im Kontextmenu des
			Explorers und <emphasis>nicht</emphasis> der Eintrag im TortoiseSVN
			Untermenü!). Im darauffolgenden Eigenschaften-Dialog wählen Sie dann
			die Seite <literal>TortoiseSVN</literal> aus.
		</para>
		<para>
			Auf dieser Subversion Seite können Sie alle wichtigen Informationen
			über Dateien/Ordner unter Versionskontrolle ansehen und die speziellen
			Subversion-Eigenschaften lesen und schreiben.
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-showlog">
		<title>Log Dialog</title>
		<indexterm>
			<primary>Log</primary>
		</indexterm>
		<?dbhh topicname="HIDD_LOGMESSAGE"?>
		<para>
			Für jede Änderung, welche sie machen und zum Projektarchiv übertragen
			müssen Sie eine Log-Meldung eingeben, welche die Änderung beschreibt.
			Damit können Sie später herausfinden, welche Änderungen wer wann
			gemacht hat. Auf diese Weise haben Sie eine detaillierte Aufzeichnung
			über den Fortschritt Ihres Projektes.
		</para>
		<para>
			Der Log-Dialog lädt alle diese Log-Meldungen aus dem Projektarchiv und
			zeigt Ihnen diese, einschliesslich einer Liste der Dateien welche
			in jeder Übertragung verändert wurden. Aber das ist noch nicht alles
			&mdash; der Log-Dialog stellt auch viele Funktionen zur Verfügung mit
			denen Sie noch mehr und noch detailliertere Informationen über die
			Projektgeschichte herausfinden können.
		</para>
		<sect2 id="tsvn-DUG-showlog-1">
			<title>Den Log-Dialog starten</title>
			<para>
				<figure id="tsvn-DUG-showlog-1-dia-1">
					<title>Der Log-Dialog</title>
					<graphic fileref="images/LogMessages.png"/>
				</figure>

				Es gibt mehrere Orte, von denen Sie den Log-Dialog starten können:
				<itemizedlist>
					<listitem>
						<para>
							Aus dem TortoiseSVN Kontextmenu.
						</para>
					</listitem>
					<listitem>
						<para>
							Aus der Eigenschaftsseite
						</para>
					</listitem>
					<listitem>
						<para>
							Aus dem Fortschritts-Dialog, nachdem eine Aktualisierung
							beendet wurde. Dann jedoch zeigt der Log-Dialog nur
							die Einträge, welche seit Ihrer letzten Aktualisierung
							gemacht wurden.
						</para>
					</listitem>
				</itemizedlist>
			</para>
		</sect2>
		<sect2 id="tsvn-DUG-showlog-2">
			<title>Zusätzliche Informationen erhalten</title>
			<para>
				<figure id="tsvn-DUG-showlog-2-dia-1">
					<title>Log-Dialog mit Kontextmenu</title>
					<graphic fileref="images/LogContextMenu.png"/>
				</figure>
				<figure id="tsvn-DUG-showlog-2-dia-2">
					<title>Log-Dialog mit Kontextmenu</title>
					<graphic fileref="images/LogContextMenu2.png"/>
				</figure>
				Der Log Dialog hat ein Kontextmenu, welches Ihnen erlaubt:
				<itemizedlist>
					<listitem>
						<para>
							Ein Diff-Programm zu starten um Ihnen die Änderungen
							zu zeigen welche gemacht wurden seit der gewählten
							Revision. Nur möglich wenn der Log Dialog für eine
							einzelne Datei gezeigt wird.
						</para>
					</listitem>
					<listitem>
						<para>
							Die Datei zu speichern, wie sie in der gewählten
							Revision ausgesehen hat. Nur möglich wenn der Log
							Dialog für eine einzelne Datei gezeigt wird.
						</para>
					</listitem>
					<listitem>
						<para>
							Einen Zweig oder eine Markierung für die gewählte
							Revision zu erstellen. Dies ist nützlich für den Fall
							dass sie vergessen haben eine bestimmte Version Ihres
							Projektes zu markieren und Sie seitdem bereits weitere
							Änderungen in das Projektarchiv übertragen haben.
						</para>
					</listitem>
					<listitem>
						<para>
							Änderungen, welche Sie in einer bestimmten Revision
							gemacht haben rückgängig zu machen. Die Änderungen
							werden in Ihrer Arbeitskopie rückgängig gemacht, das
							Projektarchiv selbst bleibt unverändert.
						</para>
					</listitem>
					<listitem>
						<para>
							Ein externes Standard-Diff Anzeigeprogramm zu starten,
							um die Änderungen einer Revision zu sehen.
						</para>
					</listitem>
					<listitem>
						<para>
							Ein Standard-Diff von zwischen zwei gewählten
							Revisionen anzuzeigen. Damit können Sie herausfinden,
							was genau sich zwischen zwei Zeitpunkten an Ihrem
							Projekt geändert hat.
						</para>
					</listitem>
					<listitem>
						<para>
							Ihre Arbeitskopie auf eine bestimmte Revision zu
							aktualisieren. Nützlich wenn Sie möchten dass Ihre
							Arbeitskopie einen Zustand in der Vergangenheit beschreibt.
						</para>
					</listitem>
				</itemizedlist>
			</para>
		</sect2>
		<sect2 id="tsvn-DUG-showlog-3">
			<title>Anzeigen aller Log-Meldungen</title>
			<para>
				Der Log Dialog zeigt nicht immer alle Änderungen die jemals
				gemacht wurden an. Dies aus mehreren Gründen:
				<itemizedlist>
					<listitem>
						<para>
							Bei einem grossen Projektarchiv können hunderte oder
							gar tausende von Änderungen gespeichert sein. Und diese
							alle Änderungen auf einmal zu laden kann sehr lange
							dauern. Normalerweise ist man auch nur an den letzten
							Meldungen interessiert. Standardmässig werden beim
							ersten Aufruf des Log Dialogs die letzten hundert
							Log-Meldungen angezeigt, aber dieser Wert kann im
							Einstellungs-Dialog geändert werden.
                  			<menuchoice>
            					<guimenuitem>Einstellungen</guimenuitem>
            				</menuchoice>
            				(<xref linkend="tsvn-DUG-settings"/>),
						</para>
					</listitem>
					<listitem>
						<para>
							Wenn Sie den Log Dialog für einen Zweig oder eine
							Markierung anzeigen, so werden nur die Log Meldungen
							angezeigt bis zu dem Punkt, wo der Zweig/Markierung
							erstellt wurde. Dies gibt eine schnelle Möglichkeit
							herauszufinden, in welcher Revision ein Zweig erstellt
							wurde.
						</para>
					</listitem>
				</itemizedlist>
				Wenn Sie wirklich <emphasis>alle</emphasis> Log Meldungen zurück
				bis zur Revision 1 sehen möchten, klicken Sie auf 
				<guibutton>Hole Alle</guibutton>.
			</para>
		</sect2>
		<sect2 id="tsvn-DUG-showlog-4">
			<title>Ändern der Log-Meldung und des Autors</title>
			<para>
				Manchmal ist es notwendig, eine Log-Meldung nachträglich zu ändern.
				Sei es weil die Meldung Rechtschreibfehler enthält oder weil Sie
				die Meldung mit mehr Informationen erweitern müssen oder aus
				anderen Gründen Oder Sie müssen den Author der Revision ändern,
				weil Sie vielleicht vergessen haben eine Authentifizierung für
				Übertragungen auf dem Server einzurichten oder...
			</para>
			<para>
				Subversion lässt Sie beides, Log-Meldungen und den Author einer 
				Revision, ändern. Aber da solche Änderungen nicht wieder rückgängig
				gemacht werden können (diese Änderungen werden nicht aufgezeichnet)
				ist diese Funktion standardmässig deaktiviert. Um diese Funktion
				zu aktivieren, müssen Sie einen pre-revprop-change und einen
				post-revprop-change hook auf dem Server einrichten. Bitte lesen
				Sie dazu das entsprechende Kapitel im Subversion-Buch, wie das
				gemacht wird.
			</para>
			<para>
				Sobald Sie den Server mit den erwähnten Hooks eingerichtet haben
				können Sie sowohl den Author als auch die Log-Meldung einer 
				jeden Revision nachträglich ändern. Um dies mit TortoiseSVN zu tun
				müssen Sie entweder in die <emphasis>Author</emphasis> oder die
				<emphasis>Log-Meldung</emphasis> Spalte der gewünschten Revision
				im Log-Dialog doppelklicken, während Sie die SHIFT-Taste gedrückt halten.
				Wenn Sie die SHIFT-Taste nicht gedrückt halten oder auf eine andere
				Spalte doppelklicken wird die Standardaktion für doppelklicks
				ausgeführt (Anzeige der Änderungen dieser Revision).
			</para>
			<warning>
				Da die Revisions-Properties (z.B. das svn:log Property für Log-Meldungen) 
				in Subversion nicht aufgezeichnet werden überschreiben Änderungen 
				den alten Wert für <emphasis>immer</emphasis>.
			</warning>
		</sect2>
	</sect1>
	<!-- ================================================================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-branchtag">
		<title>Verzweigen / Markieren</title>
		<indexterm>
			<primary>verzweigen</primary>
		</indexterm>
		<indexterm>
			<primary>markieren</primary>
		</indexterm>
		<indexterm>
			<primary>branch</primary>
		</indexterm>
		<indexterm>
			<primary>tag</primary>
		</indexterm>
		<?dbhh topicname="HIDD_COPY"?>
		<?dbhh topicname="HIDD_SWITCH"?>
		<?dbhh topicname="HIDD_MERGE"?>
		<para>
			Eine der Funktionen von Versionskontrollsystemen ist die Möglichkeit
			bestimmte isolierte Änderungen auf einer separaten Entwicklungslinie
			zu machen. Solche Linien werden <literal>Zweige</literal> genannt.
			Zweige werden üblicherweise dazu benutzt, um neue Funktionen auszutesten
			ohne dadurch die normale Entwicklung am Projekt zu stören. Sobald dann
			eine solche neue Funktion stabil genug ist wird der Zweig mit dem
			Hauptstamm (<filename>trunk</filename>) zusammengeführt.
		</para>
		<para>
			Eine andere wichtige Funktion ist die Möglichkeit, bestimmte Zustände
			zu Markieren (z.B. eine Relese-Version), damit es jederzeit möglich ist
			diesen bestimmten Zustand jederzeit wieder herstellen zu können. Dieser
			Vorgang wird <literal>markieren</literal> genannt.
		</para>
		<para>
			Subversion kennt keinen speziellen Befehl für das Verzweigen oder
			Markieren. Subversion benutzt dafür stattdessen sogenannte 
			<literal>billige Kopien</literal>. Diese funktionieren ähnlich wie
			Links, d.h. es wird keine richtige Kopie erstellt sondern nur eine
			Verknüpfung auf eine bestimmte Revision.
		</para>
		<para>
			Wenn Sie beim Importieren die empfohlene Ordnerstruktur gewählt haben
			ist ein Verzweigen oder Markieren sehr einfach:
			<figure id="tsvn-DUG-branchtag-dia-1">
				<title>Der Verzweigen/Markieren Dialog</title>
				<graphic fileref="images/Copy.png"/>
			</figure>
			Wählen Sie den übergeordneten Ordner Ihrer Arbeitskopie und wählen
			Sie den Befehl
			<menuchoice>
				<guimenuitem>Verzweigen/Markieren...</guimenuitem>
			</menuchoice>
			im Kontextmenu. Geben Sie die URL des Projektarchivs ein, aber ändern Sie den
			Pfad von
			<filename>trunk</filename>
			in
			<filename>branches/Name_des_Zweigs</filename>
			um. Für Markierungen ändern Sie die URL in
			<filename>tags/Name_der_Markierung</filename>
			um. Wobei
			<filename>Name_der_Markierung</filename>
			z.B.
			<filename>Version_1.01</filename> ist.

<screen>
    C:/SVNRepository/trunk/ProjectName/...
    C:/SVNRepository/trunk/AnotherProject/...
    C:/SVNRepository/branches/ProjectName_SpecialDebugBuildBasedOn_v1.09/
    C:/SVNRepository/tags/ProjectName_v1.10
</screen>

			Wenn Sie nun <guibutton>OK</guibutton> klicken erstellt TortoiseSVN eine
			Verknüpfung von Ihrem gewählten Ordner und der aktuellen Revision
			im Zielordner des Projektarchivs. Es werden (noch) keine Änderungen an Ihrer
			Arbeitskopie vorgenommen.
		</para>
		<para>
			Nur im Falle, dass Sie bereits lokale Änderungen an Ihrer Arbeitskopie
			gemacht haben, welche Sie noch nicht übertragen haben wird TortoiseSVN
			diese ebenfalls mit dem Erstellen der Verknüpfung übertragen. Ansonsten
			wird wirklich nur eine Verknüpfung erstellt.
		</para>
		<sect2 id="tsvn-DUG-switch-1">
			<title>Auschecken oder Wechseln Zu...</title>
			<para>
				...das ist hier (nicht wirklich) die Frage. Während beim Auschecken
				eine neue Arbeitskopie erstellt wird (z.B. des neu estellten Zweiges)
				verändert der Befehl
				<menuchoice>
					<guimenuitem>Wechseln zu...</guimenuitem>
				</menuchoice>
				Ihre bestehende Arbeitskopie so dass diese genau wie auf dem erstellten
				Zweig aussieht. Dabei werden nur die Unterschiede zwischen Ihrer
				bestehenden Arbeitskopie und dem Zweig des Projektarchivs übertragen,
				was natürlich günstig für die Netzwerkauslastung und Ihre Geduld ist.
			</para>
			<para>
				Um nun auf dem frisch erstellten Zweig zu arbeiten haben Sie wie
				schon erwähnt zwei Möglichkeiten. Sie können:
				<itemizedlist>
					<listitem>
						<para>
							Führen Sie den Befehl 
							<menuchoice>
								<guimenuitem>Auschecken</guimenuitem>
							</menuchoice>
							aus. Damit erstellen Sie eine separate Arbeitskopie
							für den Entwicklungszweig.
						</para>
					</listitem>
					<listitem>
						<para>
							Wechseln Sie Ihre Arbeitskopie auf den neuen Zweig. Dazu
							wählen Sie den obersten Ordner Ihrer Arbeitskopie und
							wählen dann den Befehl
							<menuchoice>
								<guimenuitem>Wechseln zu ...</guimenuitem>
							</menuchoice>
							aus dem Kontextmenu aus.
						</para>
						<para>
							Geben Sie im folgenden Dialog dann die URL des Zweiges an
							welchen Sie vorher erstellt haben. Lassen Sie die Checkbox
							<guilabel>neueste Revision</guilabel>
							aktiv und klicken Sie auf
							<guibutton>OK</guibutton>.
						</para>
					</listitem>
				</itemizedlist>
				<figure id="tsvn-DUG-switch-dia-1">
					<title>The Switch Dialog</title>
					<graphic fileref="images/Switch.png"/>
				</figure>
			</para>
			<para>
				Von jetzt an unterscheiden sich Zweige und Markierungen ein wenig:
				<itemizedlist>
					<listitem>
						<para>
							Wenn Sie eine Arbeitskopie, welche eine Markierung darstellt
							ändern und versuchen, diese Änderungen zu übertragen wird
							TortoiseSVN Sie warnen! Dies deshalb, weil Markierungen
							sich <emphasis>nicht</emphasis> ändern sollen. Schliesslich
							verlässt sich jeder darauf, dass eine Markierung <literal>
							Version_1.0</literal> auch immer genau diese Version
							darstellt und sich nicht mehr ändert.
						</para>
						<para>
							Falls Sie dennoch einmal Änderungen an einer markierten
							Version vornehmen müssen, erstellen Sie zunächst einen
							neuen Zweig von dieser Markierung aus und übertragen die
							Änderungen auf diesen Zweig. Sobald dann alle notwendigen
							Änderungen vorgenommen wurden, können Sie von diesem
							neuen Zweig wieder eine Markierung erstellen, z.B.
							<filename>Version_1.0.1</filename>.
						</para>
					</listitem>
					<listitem>
						<para>
							Wenn Sie eine Arbeitskopie, welche auf einen Zweig gewechselt
							wurde ändern und diese Änderungen übertragen, so gehen
							diese Änderungen auf den Zweig und <emphasis>nicht</emphasis>
							auf den Hauptstamm (<filename>trunk</filename>). 
						</para>
					</listitem>
				</itemizedlist>
			</para>
		</sect2>
		<sect2 id="tsvn-DUG-merge-2">
			<title>Einen Zweig mit dem Hauptstamm zusammenführen</title>
			<indexterm>
				<primary>zusammenführen</primary>
			</indexterm>
			<indexterm>
				<primary>mischen</primary>
			</indexterm>
			<indexterm>
				<primary>merge</primary>
			</indexterm>
			<para>
				<figure id="tsvn-DUG-merge-dia-1">
					<title>Der Zusammenführen Dialog</title>
					<graphic fileref="images/Merge.png"/>
				</figure>
				Um Änderungen aus einem Zweig mit dem Hauptstamm zusammenzuführen 
				benötigen Sie zuerst eine Arbeitskopie des Hauptstamms.
				Wählen Sie dann
				<menuchoice>
					<guimenuitem>Zusammenführen...</guimenuitem>
				</menuchoice>
				aus dem Kontextmenu.
				<orderedlist>
					<listitem>
						<para>
							Im Feld <guilabel>Von:</guilabel>
							geben Sie die vollständige URL des Start-Zweiges welcher die
							Änderungen enthält ein. Sie können auch die 
							<guibutton>...</guibutton> 
							Schaltfläche verwenden um das Projektarchiv nach dem Zweig zu durchsuchen.
						</para>
					</listitem>
					<listitem>
						<para>
							Im Feld <guilabel>bis:</guilabel>
							geben Sie die vollständige URL des End-Zweiges welcher die
							Änderungen enthält ein. Sie können auch die 
							<guibutton>...</guibutton> 
							Schaltfläche verwenden um das Projektarchiv nach dem Zweig zu durchsuchen.
						</para>
					</listitem>
					<listitem>
						<para>
							Im Feld <guilabel>Von Revision</guilabel>geben Sie die
							Start-Revision ein. Dies ist die Revisionsnummer
							<emphasis>vor</emphasis> der Änderung welche Sie
							zusammenführen möchten. Zum Beispiel:
<screen>
Rev Log-Meldungen
39. Arbeite an MyBranch
38. Arbeite an trunk
37. Arbeite an MyBranch
36. Erstelle den Zweig MyBranch
35. Arbeite an trunk
34. Arbeite an trunk
         ...
</screen>
							Wenn Sie nun die Änderungen von MyBranch in den Hauptstamm
							(trunk) zurückführen möchten müssen Sie 36 in das <guilabel>
							Von Revision:</guilabel> Feld eingeben, und nicht etwa
							37 wie Sie vielleicht denken.
						</para>
						<para>
							Klicken Sie <guibutton>Suche</guibutton> wenn Sie in
							den Log-Meldungen nach der benötigten Revisionsnummer
							suchen möchten. Diese Revisionsnummer wird wahrscheinlich
							nie 0 sein!
						</para>
					</listitem>
					<listitem>
						<para>
							Im Feld <guilabel>Zu Revision</guilabel> geben Sie die 
							die Endrevision der Änderung(en) ein. Sie können auch
							einzelne Revisionen zusammenführen, dies muss nicht HEAD sein!
						</para>
					</listitem>
					<listitem>
						<para>
							Klicken Sie auf <guibutton>OK</guibutton> um den 
							Vorgang zu starten. Wenn Sie dann die Änderungen
							zum Projektarchiv übertragen wollen, erwähnen Sie in der
							Log-Meldung welche Revisionen Sie von welchem Zweig
							zusammengeführt haben! Auf diese Weise können Sie später nachlesen,
							welche Revisionen Sie bereits zusammengeführt haben und welche
							noch nicht. Dies ist notwendig, da ein nochmaliges
							Zusammenführen einer bereits zusammengeführten Revision zu einem
							Konflikt führt.
						</para>
					</listitem>
				</orderedlist>
				Der Vorgang ist nun abgeschlossen. Sie sollten nun ihre
				Arbeitskopie überprüfen, ob alles so ist wie erwartet. Das
				Zusammenführen ist normalerweise recht aufwendig und kompliziert.
				Zum Beispiel können Konflikte auftreten wenn der Zweig sich
				schon zu weit vom Hauptast entfernt hat.
			</para>
			<important>
				<para>
				Subversion kann nicht eine Datei mit einem Ordner zusammenführen und
				umgekehrt. Nur Ordner mit Ordner und Dateien mit Dateien können
				zusammengeführt werden. Wenn Sie auf eine Datei klicken und den 
        Zusammenführen Dialog aufrufen, dann müssen Sie eine URL zu einer 
        Datei im Dialog eingeben.
				</para>
			</important>
		</sect2>
	</sect1>
	<!-- ================================================================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-relocate">
		<title>Arbeitskopie umplazieren</title>
		<indexterm>
			<primary>umplazieren</primary>
		</indexterm>
		<indexterm>
			<primary>relocate</primary>
		</indexterm>
		<?dbhh topicname="HIDD_RELOCATE"?>
		<para>
			<figure id="tsvn-DUG-relocate-dia-1">
				<title>Der Umplazieren Dialog</title>
				<graphic fileref="images/Relocate.png"/>
			</figure>
			Sollte die URL Ihres Projektarchivs sich geändert haben (z.B. DNS-Eintrag
			des Servers hat sich geändert), so müssen Sie nicht erneut eine ganze
			Arbeitskopie aus dem Projektarchiv auschecken. Es reicht wenn Sie den
			Befehl
			<menuchoice>
				<guimenuitem>Umplazieren...</guimenuitem>
			</menuchoice>
			ausführen und die neue URL angeben. Dieser Befehl durchläuft alle
			"entries" Dateien im .svn Verzeichnis und trägt dort die neue URL ein.
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-repobrowser">
		<title>Der Projektarchiv Browser</title>
		<indexterm>
			<primary>repobrowser</primary>
		</indexterm>
		<?dbhh topicname="HIDD_REPOSITORY_BROWSER"?>
		<para>
		Vielleicht möchten Sie manchmal direkt im Projektarchiv Änderungen
		vornehmen, ohne eine Arbeitskopie zu haben oder gar auschecken zu
		müssen. In solchen Situationen kommt der Projektarchiv-Browser zum Einsatz.
		Was der Explorer und die überlagerten Icons für Ihre Arbeitskopie ist, 
		ist der Projektarchiv Browser fürs Projektarchiv.
			<figure id="tsvn-DUG-repobrowser-dia-1">
				<title>Der Projektarchiv Browser</title>
				<graphic fileref="images/Repobrowser.png"/>
			</figure>
		Im Projektarchiv Browser können Sie Befehle wie Kopieren,
		Verschieben, Umbenennen, Löschen, ... direkt im Projektarchiv ausführen.
		</para>
		<para>
		Ganz oben im Browserfenster können Sie die URL des Projektarchivs angeben
		und auch die Revision, welche Sie im Projektarchiv ansehen möchten.
		Eine ältere Revision im Projektarchiv ansehen ist vorallem dann sehr
		nützlich, wenn Sie eine alte, gelöschte Datei wiederherstellen möchten.
		Benutzen Sie dazu den Befehl
		<menuchoice>
			<guimenuitem>Kopieren nach...</guimenuitem>
		</menuchoice>
		und geben Sie im Dialog dann den vollständigen Pfad in Ihrer Arbeitskopie
		an, wo die gelöschte Datei wiederhergestellt werden soll.
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-settings">
		<title>TortoiseSVN's Einstellungen</title>
		<indexterm>
			<primary>Einstellungen</primary>
		</indexterm>
		<indexterm>
			<primary>settings</primary>
		</indexterm>
		<para>
			Um zusätzliche Hilfe für bestimmte Einstellungen zu erhalten lassen
			Sie den Mauszeiger eine Sekunde lang über den Eingabefeldern, Checkboxen, ...
			und es wird ein kleiner Tip erscheinen.
		</para>
		<sect2 id="tsvn-DUG-settings-main">
			<?dbhh topicname="HIDD_SETTINGSMAIN"?>
			<title>Der Einstellungsdialog, Hauptseite</title>
			<para>
				<figure id="tsvn-DUG-settings-dia-1">
					<title>Der Einstellungsdialog, Hauptseite</title>
					<graphic fileref="images/SettingsMain.png"/>
				</figure>
			Abgesehen von der bevorzugten Sprache erlaubt dieser Dialog es Ihnen,
			(fast) alle Einstellungen von TortoiseSVN zu ändern.
			<variablelist>
				<varlistentry>
					<term>Sprache</term>
					<listitem>
					<para>Wählt die Sprache für die Dialoge/Meldungen aus. Was
					haben Sie anderes erwartet?</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term>Ausschliessen</term>
					<listitem>
					<para>
					<indexterm>
						<primary>ausschliessen</primary>
					</indexterm>
					Ausgeschlossene, unversionierte Dateien werden nicht angezeigt
					in z.B. dem Übertragen Dialog. Ausserdem werden solche Dateien
					beim Importieren in ein Projektarchiv ignoriert.
					Schliessen Sie Dateien oder Ordner aus durch Angabe von
					Dateinamen oder Erweiterungen. Die einzelnen Muster werden
					durch Leerzeichen voneinander getrennt. Zum Beispiel
					<literal>bin obj *.bak *.~?? *.jar *.[Tt]mp</literal>. 
					Die ersten beiden Muster beziehen sich auf Ordner, die
					restlichen vier auf Dateien.
					</para>
					<para>
					Diese Auschluss-Muster beziehen sich auf alle Ihre Projekte.
					Sie werden nicht versioniert, d.h. andere Benutzer werden davon
					nichts mitbekommen. Im Gegensatz dazu können Sie jedoch auch
					die versionierte Eigenschaft svn:ignore verwenden, um Dateien
					und/oder Ordner von der Versionskontrolle auszuschliessen.
					Sie können die svn:ignore Eigenschaft setzen durch den
					<menuchoice>
						<guimenuitem>Ignorieren</guimenuitem>
					</menuchoice>
					Befehl. Nach dem Übertragen wird jeder Benutzer dieselbe
					svn:ignore Eigenschaft für das Projekt oder den Ordner
					haben wie Sie.
					</para>
					</listitem>
				</varlistentry>
### Translate ###

				<varlistentry>
					<term>Anzahl der angezeigten Log-Meldungen</term>
					<listitem>
					<para>Beschränkt die Anzahl der angezeigten Log-Meldungen welche
					TortoiseSVN vom Projektarchiv holt wenn Sie
					<menuchoice>
						<guimenuitem>Zeige Log</guimenuitem>
					</menuchoice>
					ausführen. Nützlich bei langsamen Verbindungen zum Projektarchiv.
					Sie können jederzeit alle Log-Meldungen mittels <guibutton>Hole Alle</guibutton>
					anzeigen lassen.
					</para>
					</listitem>
				</varlistentry>
			
				<varlistentry>
					<term>Bearbeiten</term>
					<listitem>
					<para>Öffnet die Subversion-Konfigurationsdatei im Standard-Texteditor.
					Einige Einstellungen können nicht mit TortoiseSVN vorgenommen werden
					sondern nur mittels Bearbeitung der Konfigurationsdatei.
					</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term>Kurzes Datum/Zeit Format in Log-Meldungen</term>
					<listitem>
					<para>Wenn die standarmässig angezeigten langen Datums/Zeitangaben
					zu viel Platz einnehmen können Sie hier angeben das kurze
					Format zu verwenden.
					</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term>Dateidatum auf "Datum der letzten Übertragung" setzen</term>
					<listitem>
					<para>
					Diese Einstellung zwingt TortoiseSVN das Dateidatum auf das 
					Datum der letzen Übertragung der Datei zu setzen bei einem
					Auschecken oder einer Aktualisierung. Ansonsten setzt 
					TortoiseSVN das aktuelle Datum.
					</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term>Fenster automatisch schliessen</term>
					<listitem>
					<para>
					TortoiseSVN wird das Fortschritts-Fenster automatisch schliessen
					wenn die Operation abgeschlossen ist.
					</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term>Prüfe auf Aktualisierung</term>
					<listitem>
					<para>Wenn gewählt wird TortoiseSVN einmal pro Woche
					überprüfen, ob eine neuere Version vorhanden ist.
					</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term>Minimale Log Grösse in Zeichen</term>
					<listitem>
					<para>
					Die mindestlänge einer Log-Meldung für eine Übertragung.
					Wenn Sie weniger Zeichen für die Log-Meldung (oder gar keine)
					eingeben, bleibt der <guibutton>OK</guibutton> Button deaktiviert.
					</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term>Log-Meldungen beim Abbruch einer Übertragung nicht löschen</term>
					<listitem>
					<para>
					Wenn aus irgendeinem Grund eine Übertragung abgebrochen wird
					wird die Log-Meldung gespeichert und beim erneuten Aufruf
					des Übertragungsdialogs automatisch wieder eingefügt.
					</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term>Zeige BugID/Issue-Nr. Box</term>
					<listitem>
					<para>
					Zeigt eine Textbox im Übertragungsdialog wo Sie eine Bug-ID
					oder Issue-Nummer für einen Bugtracker eingeben können.
					</para>
					</listitem>
				</varlistentry>

				<varlistentry>
					<term>Paste Log template in english</term>
					<listitem>
					<para>
					This only applies if you have selected another language
					than english for TortoiseSVN. In that case, when pasting
					the log template in the commit dialog, the status of each
					file is pasted in the selected language. Whith this option
					checked, the status is pasted in english.
					</para>
					</listitem>
				</varlistentry>
				
			</variablelist>
			</para>
		</sect2>
		<sect2 id="tsvn-DUG-settings-overlay">
		<?dbhh topicname="HIDD_SETTINGSOVERLAY"?>
			<title>Der Einstellungsdialog, Look And Feel Seite</title>
			<para>
				<figure id="tsvn-DUG-settings-dia-2">
					<title>Der Einstellungsdialog, Overlayseite</title>
					<graphic fileref="images/SettingsOverlay.png"/>
				</figure>
				Diese Seite stellt ein, wie die überlagerten Icons angezeigt werden
				sollen. Für den Fall, dass der Explorer zu langsam reagiert 
				deaktivieren Sie die Einstellung <literal>Zeige veränderte Ordner</literal>.
				Sie können auch alle überlagerten Icons deaktivieren, aber wo liegt der Spaß darin?
			</para>
			<para>
				Die <term>Ausschluss Pfade</term> sagen TortoiseSVN für welche
				Pfade die überlagerten Icons <emphasis>nicht</emphasis> gezeichnet
				werden sollen. Dies ist nützlich wenn Sie zum Beispiel sehr grosse
				Arbeitskopien haben, welche grosse externe Bibliotheken, welche Sie
				selbst nie ändern werden enthalten. Sie können dann diese Pfade
				ausschliessen. Zum Beispiel:
			</para>
			<para>
				<filename>f:\development\SVN\Subversion</filename> deaktiviert
				die überlagerten Icons <emphasis>nur</emphasis> für diesen speziellen
				Ordner. Sie können die Icons noch immer für alle Dateien und Ordner
				innerhalb sehen.
			</para>
			<para>
				<filename>f:\development\SVN\Subversion*</filename> deaktiviert die
				überlagerten Icons für <emphasis>alle</emphasis> Dateien und Ordner
				welcher Pfad mit <filename>f:\development\SVN\Subversion</filename>
				beginnt. Das bedeutet dass auch für alle Dateien und Ordner innerhalb
				keine überlagerten Icons angezeigt werden.
			</para>
			<para>
			Das gleiche gilt für die <term>Einschliess Pfade</term>. Nur dass für
			diese Pfade die Icons auch gezeichnet werden, wenn diese für den entsprechenden
			Laufwerks-Typ deaktiviert wurden.
			</para>
			<para>
				Ausserdem können Sie angeben, welche Befehle im 
				Hauptkontextmenu des Explorer angezeigt werden sollen und welche
				Sie lieber im Untermenu haben wollen.
			</para>
		</sect2>
		<sect2 id="tsvn-DUG-settings-network">
		<?dbhh topicname="HIDD_SETTINGSPROXY"?>
			<title>Der Einstellungsdialog, Netzwerkseite</title>
			<indexterm>
				<primary>Proxy Server</primary>
			</indexterm>
			<para>
				<figure id="tsvn-DUG-settings-dia-4">
					<title>Der Einstellungsdialog, Netzwerkseite</title>
					<graphic fileref="images/SettingsProxy.png"/>
				</figure>
				Hier können Sie Einstellungen für einen Proxyserver vornehmen,
				sofern Sie einen solchen überhaupt benutzen.
			</para>
			<para>
				Sie können hier auch angeben, welche Programm TortoiseSVN benutzen
				soll für eine sichere Verbindung zum Projektarchiv via SSH.
			</para>
		</sect2>
		<sect2 id="tsvn-DUG-settings-progs">
			<?dbhh topicname="HIDD_SETTINGSPROGS"?>
			<title>Der Einstellungsdialog, Diff/Merge Seite</title>
			<para>
				<figure id="tsvn-DUG-settings-dia-5">
					<title>Der Einstellungsdialog, Diff/Merge Seite</title>
					<graphic fileref="images/SettingsProgs.png"/>
				</figure>
### Translate ###
				Here you can define your own diff/merge programs that TortoiseSVN should use.
				The basic setting is to use the builtin TortoiseMerge which is installed alongside TortoiseSVN.
				<variablelist>
					<varlistentry>
						<term>Diff Program</term>
						<listitem>
							<para>
							An external diff program used for comparing different revisions of files.
							You can specify the following parameters to the path:
							<variablelist>
								<varlistentry>
									<term>%base</term>
									<listitem>the original file without your changes</listitem>
								</varlistentry>
								<varlistentry>
									<term>%mine</term>
									<listitem>your own file, with your changes</listitem>
								</varlistentry>
							</variablelist>
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Merge Program</term>
						<listitem>
							<para>
							An external merge program used to resolve conflicted files. You can specify the 
							following parameters to the path. The order of the parameters depends on the 
							merge program you use.
							<variablelist>
								<varlistentry>
									<term>%base</term>
									<listitem>the original file without your or the others changes</listitem>
								</varlistentry>
								<varlistentry>
									<term>%mine</term>
									<listitem> your own file, with your changes</listitem>
								</varlistentry>
								<varlistentry>
									<term>%theirs</term>
									<listitem> the file as it is in the repository</listitem>
								</varlistentry>
								<varlistentry>
									<term>%merged</term>
									<listitem> the conflicted file, the result of the merge operation</listitem>
								</varlistentry>
							</variablelist>
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Diff Viewer</term>
						<listitem>
							<para>
							A viewer program for GNU diff files (patch files). If you don't have one use NotePad. No Parameters.
							</para>
						</listitem>
					</varlistentry>
				</variablelist>
			</para>
			<para>
				<figure id="tsvn-DUG-settings-dia-6">
					<title>Der Einstellungsdialog, Diff/Merge Spezialdialog</title>
					<graphic fileref="images/SettingsProgsAdv.png"/>
				</figure>
				Sie können für jede Dateiendung ein eigenes Diff oder Merge-Programm angeben,
				wenn Sie möchten. So können Sie z.B. Photoshop als "Diff" Programm für .jpg Dateien
				festlegen :-)
			</para>
		</sect2>
	</sect1>
	<!-- ================================================================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-blame">
		<title>Wer hat welche Zeile geändert?</title>
		<indexterm>
			<primary>Annotieren</primary>
		</indexterm>
		<indexterm>
			<primary>Blame</primary>
		</indexterm>
		<?dbhh topicname="HIDD_BLAME"?>
		<para>
			<figure id="tsvn-DUG-blame-dia-1">
				<title>Der Annotieren Dialog</title>
				<graphic fileref="images/BlameDialog.png"/>
			</figure>
			Manchmal möchten Sie nicht nur erfahren, welche Zeilen sich zwischen
			verschiedenen Revisionen geändert haben sondern auch, wer genau für
			welche Zeile in einer Datei verantwortlich ist. Dazu gibt es den
			Befehl
			<menuchoice>
				<guimenuitem>Annotieren...</guimenuitem>.
			</menuchoice>,
			manchmal auch <firstterm>Beschuldigen</firstterm> genannt.
		</para>
		<para>
			Dieser Befehl listet für jede Zeile einer Datei den Author und die
			Revision auf, in welcher dieser Zeile zum letzten Male geändert wurde.
		</para>
		<para>
			Wenn Sie nur an Änderungen in neuen Revisionen interessiert sind, können
			Sie die Startrevision für Annotieren festlegen.
			Setzen Sie diesen Wert auf <literal>1</literal>,
			wenn Sie für <emphasis>jede</emphasis> Revision annotieren wollen.
		</para>
		<para>
			Sobald Sie auf <guibutton>OK</guibutton> klicken beginnt TortoiseSVN
			mit der Analyse der Daten dieser Datei. Beachten Sie bitte: dies kann
			mehrere Minuten dauern, je nach nachdem wie schnell Ihre Verbindung
			zum Projektarchiv ist. Sobald der TortoiseSVN mit der Analyse fertig ist
			wird der standard Texteditor gestartet und die das Ergebnis der Analyse
			angezeigt.
		</para>
		<para>
			Das Beispiel zeigt die ersten dreissig Zeilen der Datei
			<filename>/Subversion/include/svn_io.h</filename> der Revision 7566
			des Subversion Projektes. Für jede Zeile wird gezeigt:
			<literal>Zeilennummer</literal>, 
			<literal>Revision der letzen Änderung</literal>, 
			<literal>Datum der letzten Änderung</literal>, der  
			<literal>Author</literal> und natürlich
			<literal>die eigentliche Zeile der Datei</literal>.
<screen>
line  rev    date              author     content

  0  4127 03:03:39, 15.12.2002 rooneg     /**
  1  4127 03:03:39, 15.12.2002 rooneg      * @copyright
  2  1224 21:24:10, 08.02.2002 kfogel      * ====================================================================
  3  4233 02:28:10, 03.01.2003 blair       * Copyright (c) 2000-2003 CollabNet.  All rights reserved.
  4     1 06:24:14, 31.08.2001 svn         *
  5     1 06:24:14, 31.08.2001 svn         * This software is licensed as described in the file COPYING, which
  6     1 06:24:14, 31.08.2001 svn         * you should have received as part of this distribution.  The terms
  7     1 06:24:14, 31.08.2001 svn         * are also available at http://subversion.tigris.org/license-1.html.
  8     1 06:24:14, 31.08.2001 svn         * If newer versions of this license are posted there, you may use a
  9     1 06:24:14, 31.08.2001 svn         * newer version instead, at your option.
 10     1 06:24:14, 31.08.2001 svn         *
 11     1 06:24:14, 31.08.2001 svn         * This software consists of voluntary contributions made by many
 12     1 06:24:14, 31.08.2001 svn         * individuals.  For exact contribution history, see the revision
 13     1 06:24:14, 31.08.2001 svn         * history and logs, available at http://subversion.tigris.org/.
 14     1 06:24:14, 31.08.2001 svn         * ====================================================================
 15  4127 03:03:39, 15.12.2002 rooneg      * @endcopyright
 16  4127 03:03:39, 15.12.2002 rooneg      *
 17  4127 03:03:39, 15.12.2002 rooneg      * @file svn_io.h
 18  4127 03:03:39, 15.12.2002 rooneg      * @brief general Subversion I/O definitions

 19     1 06:24:14, 31.08.2001 svn         */
 20     1 06:24:14, 31.08.2001 svn
 21     1 06:24:14, 31.08.2001 svn        /* ==================================================================== */
 22     1 06:24:14, 31.08.2001 svn
 23     1 06:24:14, 31.08.2001 svn
 24     1 06:24:14, 31.08.2001 svn        #ifndef SVN_IO_H
 25     1 06:24:14, 31.08.2001 svn        #define SVN_IO_H

 26     1 06:24:14, 31.08.2001 svn
 27     1 06:24:14, 31.08.2001 svn        #include &lt;apr.h&gt;
 28     1 06:24:14, 31.08.2001 svn        #include &lt;apr_pools.h&gt;
 29     1 06:24:14, 31.08.2001 svn        #include &lt;apr_file_io.h&gt;
 30   303 03:26:32, 25.10.2001 cmpilato   #include &lt;apr_thread_proc.h&gt;
</screen>
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-donate">
		<title>Letzter Schritt</title>
		<para>
			Wenn Sie TortoiseSVN mögen und es oft benutzen, unterstützen Sie bitte
			die Entwickler!
		</para>
		<para>
			Sie können uns auf viele Weise helfen: Sie können uns Patches schicken
			und damit bei der Entwicklung direkt mithelfen, oder Sie können uns
			bei unserer Arbeit motivieren.
		</para>
		<para>
			Während wir an TortoiseSVN arbeiten hören wir gerne Musik. Und weil wir
			viele viele Stunden an TortoiseSVN arbeiten, benötigen wir immer wieder
			neue Musik. Aus diesem Grund haben wir im Internet Seiten eingerichtet,
			von wo aus Sie uns Musik-CD's und auch mal eine DVD schenken können:
			<itemizedlist>
				<listitem>
					<para>
						Die Wunschliste von Stefan ist 
						<ulink url="http://www.amazon.com/o/registry/17DKTOSXX1KJK">hier</ulink>
						(English) oder 
						<ulink url="http://www.amazon.de/exec/obidos/wishlist/26JA3LXZXY4TB/">hier</ulink>
						(Deutsch).
					</para>
				</listitem>
				<listitem>
					<para>
						Lübbe hat ebenfalls eine 
						<ulink url="href=http://amazon.com/gp/registry/13DTTC8JF4UD5">englische (Amazon.com)</ulink>
						und eine
						<ulink url="href=http://www.amazon.de/exec/obidos/wishlist/3IKWLV2U0TVUA/">deutsche (Amazon.de)</ulink>
						Wunschliste.
					</para>
				</listitem>
			</itemizedlist>
			Bitte schauen Sie sich auch die Liste der Personen an, die das Projekt durch
			z.B. Übersertzungen unterstützt haben.
		</para>
	</sect1>
</chapter>
