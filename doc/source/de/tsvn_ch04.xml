<chapter id="tsvn-DUG">
	<title>Hilfe für die tägliche Arbeit</title>
	<simplesect>
		<para>
			Dieses Kapitel beschreibt den täglichen Umgang mit TortoiseSVN.
			Es ist <emphasis>nicht</emphasis> als Einführung in 
			Versionskontrollsysteme gedacht, und auch nicht als Einführung
			in Subversion (SVN). Dies ist mehr ein Nachschlagewerk wenn Sie
			nicht mehr genau wissen wie eine Funktion ausgeführt wird, sie aber
			zumindest wissen was Sie tun wollen.
		</para>
		<para>
			Falls Sie eine Anleitung für Versionskontrolle mit Subversion
			benötigen, empfehlen wir das fantastische Buch
			<ulink url="http://svnbook.red-bean.com/">
				<citetitle>Subversion: The Definitive Guide</citetitle>
			</ulink>.
		</para>
		<para>
			An diesem Dokument wird ständig gearbeitet, wie auch an TortoiseSVN
			und Subversion immer weitergearbeitet wird. Falls Sie Fehler 
			feststellen, melden Sie diese an die Mailing-Liste damit wir die
			Dokumentation aktualisieren können. Einige der Screenshots in 
			diesem Dokument zeigen wahrscheinlich nicht den aktuellsten Stand
			der Software. Seien Sie bitte nachsichtig. Wir arbeiten an
			TortoiseSVN und der Dokumentation während unserer Freizeit.
		</para>
		<para>
			<itemizedlist>
				<listitem>
					<para>
					Sie sollten TortoiseSVN bereits installiert haben
					</para>
				</listitem>
				<listitem>
					<para>
					Sie kennen sich aus mit Versionskontrollsystemen
					</para>
				</listitem>
				<listitem>
					<para>
					Sie kennen die Grundlagen von Subversion
					</para>
				</listitem>
				<listitem>
					<para>
					Sie haben einen Server installiert und/oder haben Zugriff
					auf ein Subversion Projektarchiv.
					</para>
				</listitem>
			</itemizedlist>
		</para>
	</simplesect>
	<!-- ================================================================= -->
	<!-- ======================== SECTION 0 ============================== -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-general">
		<title>Handhabung von TortoiseSVN</title>
		<indexterm><primary>Kontextmenu</primary></indexterm>
		<para>
			<figure id="tsvn-DUG-context-dir-control">
				<title>Kontext-Menu für einen Ordner unter Versionskontrolle</title>
				<graphic fileref="images/ContextMenuDirControl.png"/>
			</figure>
		Alle Befehle von TortoiseSVN werden über das Kontext-Menu des Windows 
		Exploerers aufgerufen. Die meisten sind direkt sichtbar, wenn Sie mit
		einem <action>Recht-Klick</action> auf eine Datei oder Ordner klicken.
		Die vorhandenen Befehle hängen davon ab ob Sie auf eine Datei oder einen
		Ordner geklickt haben oder ob der übergeordnete Ordner unter 
		Versionskontrolle steht oder nicht.
		</para>
		<para>
		<indexterm><primary>Drag-Handler</primary></indexterm>
		<indexterm><primary>drag-n-drop</primary></indexterm>
		Andere Befehle sind als Drag-Handler vorhanden. Wenn Sie Dateien
		oder Ordner <action>Rechts-Ziehen</action> innerhalb einer Arbeitskopie
		oder wenn Sie eine nicht versionskontrollierte Datei in eine Arbeitskopie
		<action>Rechts-Ziehen</action>.
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ======================== SECTION 1 ============================== -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-import">
		<title>Daten in ein Projektarchiv importieren</title>
		<indexterm><primary>importieren</primary></indexterm>
		<indexterm><primary>Projektarchiv</primary></indexterm>
		<?dbhh topicname="HIDD_IMPORT"?>
		<para>
		
		</para>
		<sect2 id="tsvn-DUG-import-1">
			<title>Projektarchiv Struktur</title>
			<para>
			Bevor Sie Daten in das Projektarchiv importieren sollten Sie sich 
			Gedanken darüber machen wie Sie Ihre Daten organisieren wollen.
			Wenn Sie eines der empfohlenen Layouts verwenden werden Sie es später
			viel viel einfacher haben.
			</para>
			<para>
			Es gibt ein paar empfohlene Standards um die Daten innerhalb eines
			Projektarchivs zu organisieren. Die meisten Leute erstellen einen
			<filename>trunk</filename> Ordner welcher den Hauptast (Stamm)
			der Entwicklung enthält, einen <filename>branches</filename> Ordner
			welcher Sonder-Entwicklungszweige enthält und einen <filename>tags
			</filename> Ordner, welcher markierte Zustände enthält. Wenn ein
			Projektarchiv nur ein einziges Projekt enthält ist das folgende Layout
			zu empfehlen:
			</para>
			<screen>
/trunk
/branches
/tags
			</screen>
			<para>
			Falls ein Projektarchiv jedoch mehrere Projekte enthält, kann das
			Layout durch Verzweigungen (branch) erstellt werden:
			</para>
			<screen>
/trunk/paint
/trunk/calc
/branches/paint
/branches/calc
/tags/paint
/tags/calc
			</screen>
			<para>&hellip;oder per Projekt:</para>
			<screen>
/paint/trunk
/paint/branches
/paint/tags
/calc/trunk
/calc/branches
/calc/tags
			</screen>
			<para>
			Natürlich können Sie diese Empfehlungen auch ignorieren. Es steht
			Ihnen frei, ein Layout zu wählen welches am besten für Sie 
			oder Ihr Team geeignet ist. Beachten Sie auch, dass was immer
			für eine Wahl Sie treffen diese nicht fix ist. Sie können das
			Layout später immer noch reorganisieren. Weil Zweige (branches) und
			Markierungen (tags) gewöhnliche Ordner in Subversion sind können
			Sie diese ganz einfach mit TortoiseSVN umbenennen oder verschieben
			wie Sie wollen.
			</para>
			<para>
			Falls Sie noch keine Ordnerstruktur in Ihrem Projektarchiv angelegt
			haben sollten Sie dies jetzt tun:
			<orderedlist>
					<listitem>
						<para>Erstellen Sie einen leeren Ordner auf Ihrer 
						Festplatte
						</para>
					</listitem>
					<listitem>
						<para>Erstellen Sie in diesem Ordner die gewünschte
						Ordnerstruktur &mdash; kopieren Sie noch keine Dateien
						hinein!
						</para>
					</listitem>
					<listitem>
						<para>Importieren Sie diese Struktur in das Projektarchiv
						durch <action>Rechts-Klick</action> auf den obersten Ordner und Klick
						auf <guimenuitem>Importieren...</guimenuitem>
						</para>
					</listitem>
				</orderedlist>
			</para>
		</sect2>
		<sect2 id="tsvn-DUG-import-2">
			<title>Importieren</title>
			<indexterm><primary>Temporäre Dateien</primary></indexterm>
			<para>
			Bevor Sie ein Projekt in das Projektarchiv importieren sollten Sie:
			<orderedlist>
					<listitem>
						<para>
						Alle Dateien entfernen/löschen welche nicht unbedingt
						für das Projekt notwendig sind (z.B. temporäre Dateien,
						Dateien welche vom Kompiler erzeugt werden wie *.obj,
						kompilierte EXE Dateien, ...)
						</para>
					</listitem>
					<listitem>
						<para>
						die Dateien und Ordner optimal anordnen. Obwohl es
						auch später noch immer möglich ist die Dateien und
						Ordner umzubenenen oder zu verschieben ist es doch
						empfehlenswert eine saubere Struktur schon beim
						Importieren zu haben.
						</para>
					</listitem>
				</orderedlist>
			</para>
			<para>
			Wählen Sie nun den <emphasis>übergeordneten</emphasis> Ordner Ihrer
			Ordnerstruktur im Windows Explorer und öffnen Sie mit einem
			<action>Rechts-Klick</action> das Kontext-Menu. Wählen Sie den
			Befehl <guimenuitem>Importieren...</guimenuitem> worauf der 
			folgende Dialog erscheint:
				<figure id="tsvn-DUG-import-dia-1">
					<title>Der Import Dialog</title>
					<graphic fileref="images/Import.png"/>
				</figure>
			</para>
			<para>
			Geben Sie in diesem Dialog die URL Ihres Projektarchivs ein in das Sie
			das Projekt importieren möchten.
			</para>
			<para>
			Die Import-Meldung ist gedacht als Log-Meldung. Da Sie normalerweise
			ganz zu beginn eines Projektes importieren, hat TortoiseSVN schon
			die Meldung "erster Import" für Sie ausgefüllt. Sie können diese
			Meldung jedoch nach belieben ändern.
			</para>
			<para>
				<note>Dateien, welche auf das Muster der temporären Dateien passen
				werden <emphasis>nicht</emphasis> importiert.
				</note>
			</para>
			<para>
			Sobald Sie auf den OK-Knopf klicken beginnt TortoiseSVN die Daten
			in das Projektarchiv zu importieren. Beachten Sie bitte, dass dadurch
			Ihre Daten <emphasis>nicht</emphasis> unter Versionskontrolle
			gestellt werden! Um eine Arbeitskopie zu erhalten, bei welcher die
			Daten unter Versionskontrolle sind müssen sie diese Daten frisch
			aus dem Projektarchiv auschecken.
			</para>
		</sect2>
	</sect1>
	<!-- ================================================================= -->
	<!-- ======================== SECTION 2 ============================== -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-checkout">
		<title>Auschecken einer Arbeitskopie</title>
		<indexterm><primary>auschecken</primary></indexterm>
		<indexterm><primary>checkout</primary></indexterm>
		<?dbhh topicname="HIDD_CHECKOUT"?>
		<para>
		Um eine Arbeitskopie zu erhalten müssen Sie zunächst eine solche aus dem
		Subversion Projektarchiv auschecken.
		</para>
		<para>
		Wählen Sie einen Ordner im Windows Explorer, wohin Sie ihre Arbeitskopie
		haben möchten. Öffnen Sie dann mittels <action>Rechts-Klick</action> das
		Kontext-Menu und wählen Sie den Befehl <guimenuitem>Auschecken...
		</guimenuitem>, was Sie zu folgendem Dialog führt:
			<figure id="tsvn-DUG-checkout-dia-1">
				<title>Der Auscheck-Dialog</title>
				<graphic fileref="images/Checkout.png"/>
			</figure>
		Falls der Ordnername den Sie in diesem Dialog angeben noch nicht
		vorhanden ist, wird dieser erstellt.
		</para>
		<note>
		Sie können nur in einen leeren Ordner auschecken. Wenn Sie in einen
		vorher importieren Ordner auschecken möchten wird Subversion eine
		Fehlermeldung ausgeben. Sie müssen die importierten Dateien entweder
		in einen neuen Ordner auschecken oder alle Dateien in dem vorher
		importieren Ordner zuerst löschen.
		</note>
		<para>
		Wir empfehlen Ihnen, jeweils nur den <filename>trunk</filename>-Teil
		des Projektarchivs auszuchecken. Falls Sie den übergeordneten Pfad
		auschecken erhalten Sie den kompletten Dateibaum des Projektarchivs! So
		können Sie sehr schnell Ihre Festplatte füllen, da Sie z.B. für jede
		Markierung in <filename>tags</filename> eine separate Kopie der
		Daten erhalten!
		</para>
		<tip>
			<title>Exportieren</title>
			<indexterm><primary>exportieren</primary></indexterm>
			<para>
			Es kommt vor dass Sie eine Kopie Ihres Projektes möchten, aber
			ohne die administrativen Ordner (<filename>.svn</filename>), zum
			Beispiel weil Sie das Projekt zippen möchten. Statt dass Sie nun
			eine Kopie von Ihrer Arbeitskopie erstellen und dann von Hand
			alle <filename>.svn</filename> Ordner löschen können Sie den
			Befehl <guimenuitem>Exportieren...</guimenuitem> verwenden. Wenn
			Sie diesen Befehl ausführen werden Sie nach einem Ort gefragt wo
			Sie die Daten speichern möchten, und Sie erhalten dann eine
			"saubere" Kopie Ihrer Daten, ohne die <filename>.svn</filename>
			Ordner.
			</para>
		</tip>
	</sect1>
	<!-- ================================================================= -->
	<!-- ======================== SECTION 3 ============================== -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-wcstatus">
		<title>Status Informationen</title>
		<indexterm><primary>Status</primary></indexterm>
		<para>
		Während Sie an Ihrem Projekt arbeiten müssen Sie oft wissen, welche
		Dateien geänder wurden, welche Sie neu hinzugefügt haben oder welche
		Sie gelöscht haben, oder auch welche Dateien von anderen geändert
		und zum Projektarchiv übertragen wurden.
		</para>
		<sect2 id="tsvn-DUG-wcstatus-1">
			<title>Überlagerte Icons</title>
			<indexterm><primary>overlay</primary></indexterm>
			<para>
				<figure id="tsvn-DUG-wcstatus-dia-1">
					<title>Exploreransicht mit Icon Overlays</title>
					<graphic fileref="images/Overlays.png"/>
				</figure>
			Nun da Sie eine frisch ausgescheckte Arbeitskopie von einem Subversion
			Projektarchiv haben zeigt Ihnen der Explorer diese Dateien und Ordner
			mit leicht geänderten Icons an. Dies ist mit ein Grund weshalb
			TortoiseSVN so populär ist. TortoiseSVN fügt jedem Datei/Ordnericon
			ein kleines überlagertes Icon hinzu. Abhängig vom Subversion Status
			wird ein unterschiedliches Icon überlagert angezeigt.
			<graphic fileref="images/InSubVersionIcon.png"/>Eine frisch ausgecheckte
			Arbeitskopie hat nur überlagerte Icons mit grünem Haken. 
			Dies bedeutet dass der Subversion Status <literal>normal</literal>
			ist.
			<graphic fileref="images/ModifiedIcon.png"/>
			Sobald Sie eine Datei ändern, ändert sich auch der Status der
			Datei auf <literal>verändert</literal> und das überlagerte Icon
			ändert sich zu einem roten Auszufezeichen. Auf diese Weise können
			Sie mit einem Blick feststellen, welche Dateien Sie geändert
			haben und noch nicht in das Projektarchiv übertragen worden sind.
			<graphic fileref="images/ConflictIcon.png"/>
			Falls während einer Aktualisierung ein <literal>Konflikt</literal>
			auftrat, so werden solche Dateien mit einem gelben Ausrufezeichen
			markiert.
			<graphic fileref="images/AddedIcon.png"/> 
			Das Pluszeichen bedeutet, dass eine Datei oder ein Ordner neu
			<literal>hinzugefügt</literal> wurde zur Versionskontrolle.
			<graphic fileref="images/DeletedIcon.png"/> 
			Dieses überlagerte Icon zeigt, dass Dateien oder Ordner <literal>
			gelöscht</literal> wurden aus der Versionskontrolle.
			</para>
			<para>
			Die Ordner-Icons haben ebenfalls überlagerte Icons. Standardmässig
			zeigen diese aber nur an, ob ein Ordner unter Versionskontrolle ist
			oder nicht. Aber Sie können dieses Verhalten ändern in den
			Einstellungen so dass das Ordner-Icon den Status der 
			darunterliegenden Dateien anzeigt. Da dies recht viel Zeit und
			viele Dateizugriffe erfordert kann diese Funktion den Explorer
			ausbremsen und ist deshalb für langsamere Rechner oder sehr
			grosse Arbeitskopien nicht zu empfehlen.
			</para>
			<para>
			Mit dieser Einstellung zeigt jeder Ordner den Status der Dateien
			darunter, wobei <literal>in Konflikt</literal> höchste Priorität
			hat, dann <literal>Hinzugefügt</literal>, <literal>gelöscht</literal>,
			<literal>verändert</literal> und schlussendlich <literal>normal</literal>.
			<tip>
				<title>Langsame Overlayanzeige</title>
				<para>
				Sie werden feststellen, dass sobald Sie die Icon Overlays rekursiv
				anzeigen lassen der Explorer recht langsam wird. Dies hängt
				vorallem davon ab wie gross Ihre Arbeitskopie ist, resp. wieviele
				Dateien Sie unter Versionskontrolle haben und davon wieviel RAM
				Speicher Sie in Ihrem Rechner haben.
				Normalerweise ist der Explorer nur beim ersten Mal wo Sie einen
				solchen Ordner anzeigen sehr langsam. Wenn Sie denselben
				Ordner später nochmals anzeigen so hilft ein interner Caching-
				Algorithmus und der Festplattencache von Windows die Anzeige
				zu beschleunigen.
				</para>
				</tip>
			</para>
			<para>
			TortoiseSVN zeigt nicht wie <application>TortoiseCVS</application> 
			überlagerte Icons für Dateien an, welche nicht unter Versionskontrolle
			stehen. Wir tun dies nicht weil die Anzahl von überlagerten Icons
			Systemweit limitiert sind und wir nicht andere Programme dadurch
			blockieren wollen.
			</para>
		</sect2>
		<sect2 id="tsvn-DUG-wcstatus-2">
			<title>Zustand des Projektarchivs</title>
			<indexterm><primary>Status</primary></indexterm>
			<para>
				<figure id="tsvn-DUG-wcstatus-dia-2">
					<title>Auf Änderungen überprüfen</title>
					<graphic fileref="images/RepoStatus.png"/>
				</figure>
			Oft ist es nützlich zu wissen, welche Dateien von anderen bereits
			geändert und im Projektarchiv gespeichert wurden. Dazu gibt es
			den Befehl <guimenuitem>Auf Änderungen überprüfen</guimenuitem>.
			Dieser Dialog zeigt Ihnen alle Dateien, welche entweder von Ihnen
			lokal und/oder von anderen im Projektarchiv geändert wurden. So
			können Sie schon vor einer Aktualisierung feststellen, ob es 
			eventuell Konflikte geben kann.
			</para>
			<para>
			Aus dem Kontex-Menu des Dialogs heraus können Sie die Änderungen
			anzeigen (Diff), sowohl die Änderungen die Sie lokal gemacht haben
			als auch die Änderungen von anderen im Projektarchiv. TortoiseSVN
			lädt automatisch die entsprechende Datei aus dem Projektarchiv, um
			Ihnen die Änderungen zeigen zu können.
			</para>
			<tip>
				<title>Weitere Möglichkeiten</title>
				<para>
				Der <guimenuitem>Auf Änderungen überprüfen</guimenuitem> 
				Dialog ist vielleicht nicht die beste Wahl wenn Sie gerade
				keine Netzwerkverbindung zu Ihrem Projektarchiv haben. In diesem
				Falle können sie die lokalen Änderungen auch mit dem
				<guimenuitem>Übertragen</guimenuitem> Dialog ansehen. Dieser
				Dialog zeigt Ihnen eine ähnliche Liste der geänderten Dateien,
				jedoch ohne das Projektarchiv zu kontaktieren und benötigt deshalb
				auch keine Netzwerkverbindung. Sie brauche die Daten auch
				nicht zu übertragen, nur weil Sie diesen Dialog benötigten &mdash;
				klicken Sie einfach auf <command>Abbrechen</command> statt auf
				<guibutton>Ok</guibutton>.
				</para>
			</tip>
		</sect2>
	</sect1>
	<!-- ================================================================= -->
	<!-- ======================== SECTION 4 ============================== -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-update">
		<title>Aktualisieren der Arbeitskopie mit Änderungen von anderen</title>
		<indexterm><primary>aktualisieren</primary></indexterm>
		<indexterm><primary>update</primary></indexterm>
		<para>
			<figure id="tsvn-DUG-update-dia-1">
				<title>Aktualisierung läuft im Fortschritss-Dialog</title>
				<graphic fileref="images/UpdateProgress.png"/>
			</figure>
			<figure id="tsvn-DUG-update-dia-2">
				<title>Aktualisierung fertig im Fortschritts-Dialog</title>
				<graphic fileref="images/UpdateFinished.png"/>
			</figure>
		Änderungen von anderen sollten Sie regelmässig in Ihre eigene 
		Arbeitskopie einfügen. Änderungen von anderen in die eigene Arbeitskopie
		einfügen wird auch <literal>Aktualisieren</literal> genannt. Sie können
		einzelne Dateien, mehrere Dateien, ganze Ordner oder gleich die 
		komplette Arbeitskopie aktualisieren. Wählen Sie einfach die Dateien
		oder Ordner aus, welche Sie aktualisieren möchten und öffnen Sie dann
		das Kontext-Menu durch einen <action>Rechts-Klick</action>. Im 
		Kontextmenu wählen Sie dann den Befehl <guimenuitem>Aktualisieren</guimenuitem>
		aus und eine Dialogbox wird erscheinen welche Ihnen den Fortschritt
		der Aktualisierung anzeigt. Änderungen von anderen werden in Ihre
		Arbeitskopie eingefügt, wobei Ihre eigenen Änderungen selbstverständlich
		beibehalten werden. Das Projektarchiv selbst wird  durch eine Aktualisierung
    <emphasis>nicht</emphasis> verändert.
		</para>
		<para>
		Falls Sie einen <literal>Konflikt</literal> während einer Aktualisierung
		erhalten (Dies kann passieren wenn jemand anders dieselbe Stelle in
		einer Datei geändert hat wie Sie und diese Änderungen nicht zusammenpassen)
		dann zeigt der Fortschritts-Dialog diese Dateien rot markiert an. Ein
		<action>Doppelklick</action> auf diese roten Einträge öffnet ein
		sogenanntes <literal>Merge</literal>-Tool, mit welchem Sie solche
		Konflikte ganz einfach von Hand auflösen können.
		</para>
		<para>
		TortoiseSVN ermöglicht es Ihnen auch, eine Arbeitskopie auf eine ganz
		bestimmte Revision zu aktualisieren und nicht nur immer auf die neueste
		Revision. Dieser Befehl heisst <guimenuitem>Aktualisieren zu Revision...
		</guimenuitem> und öffnet zuerst einen Dialog, wo Sie die Revisionsnummer
		eingeben können, auf welche die Arbeitskopie aktualisiert werden soll.
		</para>
		<caution>
		Wenn Sie eine Datei oder Ordner auf eine bestimmte Revision aktualisieren,
		werden Sie <literal>out of date</literal> Fehlermeldungen erhalten sobald
		Sie versuchen, diese Dateien oder Ordner zu übertragen.
		Wenn Sie Änderungen an Dateien rückgängig machen wollen, dann
		müssen Sie entweder den Befehl <menuchoice><guimenuitem>Änderungen dieser
		Revision rückgängig machen</guimenuitem></menuchoice> im Log-Dialog oder
		den Befehl <menuchoice><guimenuitem>Zusammenführen...</guimenuitem></menuchoice>
		verwenden.
		</caution>
		<para>
		Der Befehl <guimenuitem>Aktualisieren zu Revision...</guimenuitem> 
		ermöglicht es Ihnen, Ihre Arbeitskopie auf einen früheren Stand
		zu bringen. Ist z.B. Ihre Arbeitskopie auf Revision 100, aber Sie möchten
		nachsehen wie das Projekt in Revision 50 ausgesehen hat so aktualisieren
		Sie ganz einfach die Arbeitskopie auf Revision 50.
		</para>
		<tip>
			<title>Mehrere Dateien/Ordner</title>
			<para>
		Wenn Sie mehrere Dateien und Ordner im Explorer auswählen und dann
		<guimenuitem>Aktualisieren...</guimenuitem> ausführen, so werden
		alle Dateien und Ordner auf <emphasis>dieselbe</emphasis> Revision
		aktualisiert, sogar dann wenn zwischen den einzelnen Aktualisierungen
		jemand anders Änderungen zum Projektarchiv übertragen hat.
		</para>
		</tip>
	</sect1>
	<!-- ================================================================= -->
	<!-- ======================== SECTION 5 ============================== -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-conflicts">
		<title>Konflikte Auflösen</title>
		<indexterm><primary>Konflikt</primary></indexterm>
		<para>
		Manchmal werden Sie einen <literal>Konflikt</literal> erhalten wenn
		Sie Ihre Arbeitskopie aktualisieren. Ein Konflikt tritt dann auf
		wenn mehrere Personen die gleiche(n) Stelle(n) in derselben Datei
		verändert haben. Da Subversion nichts über Ihr Projekt weiss, überlässt
		es solche Fälle Ihnen, den Konflikt aufzulösen. Wann immer ein
		Konflikt auftritt können Sie die entsprechende Datei öffnen und nach
		Zeilen suchen welche beginnen mit:
		<literal>&lt;&lt;&lt;&lt;&lt;&lt;&lt;
		</literal>. Die Zeile in Konflikt ist so markiert:
<screen>
&lt;&lt;&lt;&lt;&lt;&lt;&lt; Dateiname
    Ihre Änderungen
=======
    Zeilen mit dem Projektarchiv zusammengeführt
&gt;&gt;&gt;&gt;&gt;&gt;&gt; Revision
</screen>
		Ausserdem wird für jede Datei in Konflikt drei weitere Dateien erstellt:
		<variablelist>
				<varlistentry>
					<term>filename.ext.working</term>
					<listitem>
						<para>
						Dies ist die Datei, so wie Sie war bevor Sie
						Ihre Arbeitskopie aktualisierten. Das heisst es ist 
						Ihre eigene Originaldatei, inklusive der Änderungen 
						welche Sie selbst vorgenommen haben.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>filename.merge-left.rOLDREV</term>
					<listitem>
						<para>
						Dies ist die Datei wie Sie ursprünglich war, ohne
						jegliche Änderungen, auch ohne den Änderungen welche
						Sie selbst an der Datei vorgenommen haben.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>filename.merge-right.rNEWREV</term>
					<listitem>
						<para>
						Dies ist die Datei, wie sie im Projektarchiv gerade
						aktuell ist, d.h. diese Datei hat die Änderungen von
						den anderen Mitarbeitern bereits integriert, jedoch
						nocht nicht die Ihren.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
		Wobei <literal>*</literal> für eine zufällige Zahl steht, welche
		Subversion wählt. OLDREV ist die Revisionsnummer der Datei bei
		ihrer letzten Aktualisierung, und NEWREV ist die neueste Revisionsnummer
		des Projektarchivs.
		</para>
		<para>
		Sie können nun entweder ein Merge-Tool benutzen, welches Sie durch
		den Befehl <guimenuitem>Konflikteditor</guimenuitem> aufrufen können
		oder Sie können die Datei mit einem normalen Texteditor ändern und
		den Konflikt auf diese Weise auflösen.
		</para>
		<para>
		Anschliessend müssen Sie Subversion noch mitteilen, dass Sie den
		Konflikt aufgelöst haben. Dies geschieht mit dem Befehl <guimenuitem>
		Konflikt aufgelöst</guimenuitem>. Bitte beachten Sie dass dieser
		Befehl <emphasis>nicht</emphasis> den Konflikt selbst löst, sondern
		nur Subversion mitteilt dass Sie selbst den Konflikt bereits gelöst
		haben. Der Befehl macht eigentlich nichts weiter als die drei
		zusätzlich erstellten Dateien <filename>filename.ext.working
		</filename> und <filename>filename.ext.merge-*.r*</filename> zu löschen.
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ======================== SECTION 5 ============================== -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-commit">
		<title>Änderungen in das Projektarchiv übertragen</title>
		<indexterm><primary>übertragen</primary></indexterm>
		<indexterm><primary>commit</primary></indexterm>
		<?dbhh topicname="HIDD_LOGPROMPT"?>
		<para>
		Änderungen an Dateien im Projektarchiv abzuspeichern wird auch 
		<literal>Übertragen</literal> der Änderungen genannt.
		Vor dem Übertragen jedoch sollten Sie sicherstellen, dass Ihre
		Arbeitskopie auch auf dem neuesten Stand ist, d.h. Sie sollten den
		Befehl <guimenuitem>Aktualisieren...</guimenuitem> ausführen.
		</para>
		<para>
		Wenn Ihre Arbeitskopie auf dem neuesten Stand ist und keine Konflikte
		vorhanden sind können Sie Ihre Änderungen übertragen. Wählen Sie
		die Dateien/Ordner aus welche Sie übertragen wollen und wählen Sie
		den Befehl <guimenuitem>Übertragen...</guimenuitem> im Kontextmenu
		aus. Der folgenden Dialog erscheint:
			<figure id="tsvn-DUG-commit-dia-1">
				<title>Der Übertragen Dialog</title>
				<graphic fileref="images/Commit.png"/>
			</figure>
		</para>
		<para>
		Der Dialog zeigt alle Dateien auf, welche verändert wurden, 
		einschliesslich der Dateien die Sie hinzugefügt oder gelöscht haben.
		Auch Dateien, welche noch nicht unter Versionskontrolle stehen werden
		hier angezeigt. Wenn Sie bestimmte Dateien (noch) nicht übertragen
		wollen wählen Sie diese einfach ab. Dateien welche noch nicht unter
		Versionskontrolle stehen können Sie durch auswählen vor dem Übertragen
		hinzufügen lassen.
		<figure id="tsvn-DUG-commit-dia-2">
			<title>Das Kontext-Menu des Übertragen-Dialogs</title>
			<graphic fileref="images/CommitContextMenu.png"/>
		</figure>
		<tip>
				<title>Zu viele Dateien werden angezeigt</title>
				<para>
				Falls Sie das Gefühl haben dass TortoiseSVN Ihnen viel zu viele
				Dateien im Übertragungsdialog anzeigt welche nicht unter
				Versionskontrolle stehen (z.B. vom Kompiler erzeugte Dateien
				oder Backupdateien vom Editor) haben Sie mehrere Möglichkeiten
				dies einzugrenzen. Sie können:
				<itemizedlist>
					<listitem>
						<para>
						diese Dateien in die Maske der temporären Dateien
						aufnehmen im Eigenschaftsdialog. Dies hat Einfluss auf
						<emphasis>alle</emphasis> Arbeitskopien gleichzeitig.
						</para>
					</listitem>
					<listitem>
						<para>
						Fügen Sie diese Dateien zur Liste der ignorierten
						Dateien hinzu mit dem Befehl <guimenuitem>Zur 
						Ignoriertenliste hinzufügen</guimenuitem>. Dadurch
						werden diese Dateien in die Ordner-Eigenschaft <literal>
						svn:ignore</literal> aufgenommen, welche Sie mittels
						des normalen Eigenschaftsdialog des Explorers (auf der
						Subversion-Seite) ansehen und ändern können.
						Dies hat nur Einfluss auf denselben Ordner in der
						Arbeitskopie, wo Sie diesen Befehl ausführen.
						</para>
					</listitem>
				</itemizedlist>
				</para>
			</tip>
		</para>
		<para>
		Durch einen <action>Doppelklick</action> auf irgendeine Datei im
		Übertragungsdialog wird das Diff-Programm gestartet so dass Sie die
		Änderungen welche Sie vorgenommen haben genauer ansehen können.
		</para>
		<para>
		Wenn Sie schlussendlich auf <guibutton>OK</guibutton> klicken wird die
		Übertragung gestartet.
		<figure id="tsvn-DUG-commit-dia-3">
			<title>Eine laufende Übertragung im Fortschrittsdialog</title>
			<graphic fileref="images/CommitProgress.png"/>
		</figure>
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ======================== SECTION 6 ============================== -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-adding">
		<title>Neue Dateien und Ordner hinzufügen</title>
		<indexterm><primary>hinzufügen</primary></indexterm>
		<indexterm><primary>add</primary></indexterm>
		<?dbhh topicname="HIDD_ADD"?>
		<para>
			<figure id="tsvn-DUG-adding-dia-1">
				<title>Kontextmenu für unkontrollierte Dateien</title>
				<graphic fileref="images/ContextMenuFileNoControl.png"/>
			</figure>
		Wenn Sie neue Dateien und/oder Ordner während Ihrer Arbeit erstellen
		müssen Sie diese auch zur Versionskontrolle hinzufügen. Wählen Sie
		diese Dateien und/oder Ordner aus und wählen Sie dann den Befehl
		<guimenuitem>Hinzufügen...</guimenuitem> im Kontextmenu.
		</para>
		<para>
		Nachdem Sie die Dateien/Ordner zur Versionskontrolle hinzugefügt haben
		erscheinen diese mit einem Pluszeichen als überlagertes Icon im
		Explorer, was bedeutet dass diese bei der nächsten Übertragung
		in das Projektarchiv mit aufgenommen werden. Beachten Sie dass das
		Hinzufügen alleine die Dateien/Ordner <emphasis>nicht</emphasis>
		im Projektarchiv speichert.
		</para>
		<para>
			<tip>
				<title>Hinzufügen ist rekursiv!</title>
				<para>
				Wenn Sie einen Ordner zur Versionskontrolle hinzufügen, dann
				fügt TortoiseSVN auch automatisch alle Dateien und Unterordner
				innerhalb dieses Ordners hinzu. Also seien Sie vorsichtig und
				stellen Sie sicher, dass Sie nicht ungewollt temporäre
				Dateien hinzufügen wie z.B. *.obj Dateien des Kompilers.
			</para>
			</tip>
		</para>
		<para>
		Wenn Sie Dateien von ausserhalb Ihrer Arbeitskopie zu Ihrer Arbeitskopie
		hinzufügen möchten können Sie auch den drag&ndash;and&ndash;drop
		Handler verwenden:
		<orderedlist>
				<listitem>
					<para>Wählen Sie die Dateien aus welche Sie hinzufügen
					möchten.
					</para>
				</listitem>
				<listitem>
					<para>
					<action>Ziehen</action> Sie diese Dateien mit gedrückter
					rechter Maustaste an den neuen Ort innerhalb Ihrer
					Arbeitskopie.
					</para>
				</listitem>
				<listitem>
					<para>
					Lassen Sie die rechte Maustaste los
					</para>
				</listitem>
				<listitem>
					<para>
					Im erscheinenden Popupmenu wählen Sie <guimenuitem>Dateien
					zu Subversion hier hinzufügen</guimenuitem>. Die Dateien
					werden dann in die Arbeitskopie kopiert und zur 
					Versionskontrolle hinzugefügt.
					</para>
				</listitem>
			</orderedlist>
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ======================== SECTION 7 ============================== -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-renaming">
		<title>Löschen, Umbenennen und Verschieben</title>
		<indexterm><primary>löschen</primary></indexterm>
		<indexterm><primary>umbenennen</primary></indexterm>
		<indexterm><primary>verschieben</primary></indexterm>
		<indexterm><primary>delete</primary></indexterm>
		<indexterm><primary>remove</primary></indexterm>
		<indexterm><primary>rename</primary></indexterm>
		<indexterm><primary>move</primary></indexterm>
		<?dbhh topicname="HIDD_RENAME"?>
		<para>
		Im Gegensatz zu CVS erlaubt es Subversion, Dateien und Ordner
		umzubenennen oder zu verschieben. Deshalb gibt es Befehle im Kontextmenu
		für diese Operationen.
			<figure id="tsvn-DUG-renaming-dia-1">
				<title>Kontextmenu für kontrollierte Dateien</title>
				<graphic fileref="images/ContextMenuFileControl.png"/>
			</figure>
		</para>
		<para>
		Wenn Sie eine Datei/Ordner mit TortoiseSVN löschen, wird diese aus
		der Arbeitskopie gelöscht und als gelöscht markiert. Solange Sie dieses
		<literal>Löschen</literal> noch nicht zum Projektarchiv übertragen haben
		können Sie die Datei/Ordner mit dem <guimenuitem>Rückgängig</guimenuitem> 
    Befehl auf dem übergeordneten Ordner wieder zurückholen.
		</para>
		<para>
		Um Dateien innerhalb einer Arbeitskopie zu verschieben, benutzen Sie
		den drag&ndash;and&ndash;drop Handler:		
		<orderedlist>
			<listitem>
				<para>
				Wählen Sie die Dateien aus welche Sie verschieben möchten.
				</para>
			</listitem>
			<listitem>
				<para>
				<action>Ziehen</action> Sie die Dateien mit gedrückter
				rechter Maustaste an den neuen Ort.
				</para>
			</listitem>
			<listitem>
				<para>
				Lassen Sie die rechte Maustaste los.
				</para>
			</listitem>
			<listitem>
				<para>
				Wählen Sie im erscheinenden Popupmenu den Befehl <guimenuitem>
				Verschiebe Datei(en) in Subversion hierher</guimenuitem>
				</para>
			</listitem>
		</orderedlist>
		Falls Sie eine Datei mit dem Explorer auf normale Weise löschen und
		nicht mit TortoiseSVN, dann zeigt Ihnen der Übertragungsdialog diese
		Datei in der Liste an und ermöglicht es Ihnen, diese Datei auch aus
		der Versionskontrolle zu löschen.
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ======================== SECTION 8 ============================== -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-revert">
		<title>Änderungen Rückgängig machen</title>
		<indexterm><primary>rückgängig</primary></indexterm>
		<indexterm><primary>revert</primary></indexterm>
		<indexterm><primary>undo</primary></indexterm>
		<para>
		Wenn Sie Änderungen, welche Sie an Dateien vorgenommen haben wieder
		rückgängig machen wollen, wählen Sie diese Datei aus und wählen
		dann den Befehl <guimenuitem>Rückgängig...</guimenuitem> aus dem
		Kontextmenu aus. Stellen Sie jedoch sicher, dass Sie diese Änderungen
		wirklich rückgängig machen wollen!
		</para>
		<para>
		Wenn Sie irrtümlich eine Datei gelöscht haben und diese wieder zurück
		haben wollen, dann können Sie den <guimenuitem>Rückgängig...</guimenuitem>
		Befehl auf dem übergeordneten Ordner ausführen. Dies bringt alle
		gelöschten Dateien seit der letzten Aktualisierung wieder zurück, macht
		aber auch alle Änderungen an Dateien rückgängig!
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ======================== SECTION 9 ============================== -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-propertypage">
		<title>Lesen/Schreiben von Informationen über Dateien/Ordner</title>
		<indexterm><primary>Eigenschaften</primary></indexterm>
		<indexterm><primary>properties</primary></indexterm>
		<para>
			<figure id="tsvn-DUG-propertypage-dia-1">
				<title>Subversion Eigenschaftsseite</title>
				<graphic fileref="images/Properties.png"/>
			</figure>
		Manchmal ist es notwendig, detailliertere Informationen über eine
		Datei oder Ordner zu haben als mit den überlagerten Icons möglich ist.
		Sie können diese zusätzlichen Informationen über den Eigenschaftsdialog
		des Explorers anzeigen. Wählen Sie dazu die Datei oder den Ordner
		aus, öffnen Sie das Kontextmenu mit der rechten Maustaste und wählen
		Sie den Eintrag <guimenuitem>Eigenschaften</guimenuitem> aus.
		(Beachten Sie: dies ist der normale Eintrag im Kontextmenu des
		Explorers und <emphasis>nicht</emphasis> der Eintrag im TortoiseSVN
		Untermenü!). Im darauffolgenden Eigenschaften-Dialog wählen Sie dann
		die Seite <literal>TortoiseSVN</literal> aus.
		</para>
		<para>
		Auf dieser Subversion Seite können Sie alle wichtigen Informationen
		über Dateien/Ordner unter Versionskontrolle ansehen und die speziellen
		Subversion-Eigenschaften lesen und schreiben.
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ======================== SECTION 10 ============================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-showlog">
		<title>Log Dialog</title>
		<indexterm><primary>Log</primary></indexterm>
		<?dbhh topicname="HIDD_LOGMESSAGE"?>
		<para>
		Für jede Änderung, welche sie machen und zum Projektarchiv übertragen
		müssen Sie eine Log-Meldung eingeben, welche die Änderung beschreibt.
		Damit können Sie später herausfinden, welche Änderungen wer wann
		gemacht hat. Auf diese Weise haben Sie eine detaillierte Aufzeichnung
		über den Fortschritt Ihres Projektes.
		</para>
		<para>
		Der Log-Dialog lädt alle diese Log-Meldungen aus dem Projektarchiv und
		zeigt Ihnen diese, einschliesslich einer Liste der Dateien welche
		in jeder Übertragung verändert wurden. Aber das ist noch nicht alles
		&mdash; der Log-Dialog stellt auch viele Funktionen zur Verfügung mit
		denen Sie noch mehr und noch detailliertere Informationen über die
		Projektgeschichte herausfinden können.
		</para>
		<sect2 id="tsvn-DUG-showlog-1">
			<title>Den Log-Dialog starten</title>
			<para>
				<figure id="tsvn-DUG-showlog-1-dia-1">
					<title>Der Log-Dialog</title>
					<graphic fileref="images/LogMessages.png"/>
				</figure>

			Es gibt mehrere Orte, von denen Sie den Log-Dialog starten können:
			<itemizedlist>
					<listitem>
						<para>Aus dem TortoiseSVN Kontextmenu.
				</para>
					</listitem>
					<listitem>
						<para>Aus der Eigenschaftsseite</para>
					</listitem>
					<listitem>
						<para>
						Aus dem Fortschritts-Dialog, nachdem eine Aktualisierung
						beendet wurde. Dann jedoch zeigt der Log-Dialog nur
						die Einträge, welche seit Ihrer letzten Aktualisierung
						gemacht wurden.
						</para>
					</listitem>
				</itemizedlist>
			</para>
		</sect2>
		<sect2 id="tsvn-DUG-showlog-2">
			<title>Zusätzliche Informationen erhalten</title>
			<para>
				<figure id="tsvn-DUG-showlog-2-dia-1">
					<title>Log-Dialog mit Kontextmenu</title>
					<graphic fileref="images/LogContextMenu.png"/>
				</figure>
				<figure id="tsvn-DUG-showlog-2-dia-2">
					<title>Log-Dialog mit Kontextmenu</title>
					<graphic fileref="images/LogContextMenu2.png"/>
				</figure>
			Der Log Dialog hat ein Kontextmenu, welches Ihnen erlaubt:
			
			<itemizedlist>
				<listitem>
					<para>
					Ein Diff-Programm zu starten um Ihnen die Änderungen
					zu zeigen welche gemacht wurden seit der gewählten
					Revision. Nur möglich wenn der Log Dialog für eine
					einzelne Datei gezeigt wird.
					</para>
				</listitem>
				<listitem>
					<para>
					Die Datei zu speichern, wie sie in der gewählten
					Revision ausgesehen hat. Nur möglich wenn der Log
					Dialog für eine einzelne Datei gezeigt wird.
					</para>
				</listitem>
				<listitem>
					<para>
					Einen Zweig oder eine Markierung für die gewählte
					Revision zu erstellen. Dies ist nützlich für den Fall
					dass sie vergessen haben eine bestimmte Version Ihres
					Projektes zu markieren und Sie seitdem bereits weitere
					Änderungen in das Projektarchiv übertragen haben.
					</para>
				</listitem>
				<listitem>
					<para>
					Änderungen, welche Sie in einer bestimmten Revision
					gemacht haben rückgängig zu machen. Die Änderungen
					werden in Ihrer Arbeitskopie rückgängig gemacht, das
					Projektarchiv selbst bleibt unverändert.
					</para>
				</listitem>
				<listitem>
					<para>
					Ein externes Unified-Diff Anzeigeprogramm zu starten,
					um die Änderungen einer Revision zu sehen.
					</para>
				</listitem>
				<listitem>
					<para>
					Einen Unified-Diff von zwischen zwei gewählten
					Revisionen anzuzeigen. Damit können Sie herausfinden,
					was genau sich zwischen zwei Zeitpunkten an Ihrem
					Projekt geändert hat.
					</para>
				</listitem>
				<listitem>
					<para>
					Ihre Arbeitskopie auf eine bestimmte Revision zu
					aktualisieren. Nützlich wenn Sie möchten dass Ihre
					Arbeitskopie einen Zustand in der Vergangenheit beschreibt.
					</para>
				</listitem>
			</itemizedlist>
			</para>
		</sect2>
		<sect2 id="tsvn-DUG-showlog-3">
			<title>îdern der Log-Meldung und des Authors</title>
			<para>
			Manchmal ist es notwendig, eine Log-Meldung nachträglich zu ändern.
			Sei es weil die Meldung Rechtschreibfehler enthält oder weil Sie
			die Meldung mit mehr Informationen erweitern müssen oder aus
			anderen Gründen Oder Sie müssen den Author der Revision ändern,
			weil Sie vielleicht vergessen haben eine Authentifizierung für
			Übertragungen auf dem Server einzurichten oder...
			</para>
			<para>
			Subversion lässt Sie beides, Log-Meldungen und den Author einer 
			Revision, ändern. Aber da solche Änderungen nicht wieder rückgängig
			gemacht werden können (diese Änderungen werden nicht aufgezeichnet)
			ist diese Funktion standardmässig deaktiviert. Um diese Funktion
			zu aktivieren, müssen Sie einen pre-revprop-change und einen
			post-revprop-change hook auf dem Server einrichten. Bitte lesen
			Sie dazu das entsprechende Kapitel im Subversion-Buch, wie das
			gemacht wird.
			</para>
			<para>
			Sobald Sie den Server mit den erwähnten Hooks eingerichtet haben
			können Sie sowohl den Author als auch die Log-Meldung einer 
			jeden Revision nachträglich ändern. Um dies mit TortoiseSVN zu tun
			müssen Sie entweder in die <emphasis>Author</emphasis> oder die
			<emphasis>Log-Meldung</emphasis> Spalte der gewünschten Revision
			im Log-Dialog klicken, während Sie die SHIFT-Taste gedrückt halten.
			Wenn Sie die SHIFT-Taste nicht gedrückt halten oder auf eine andere
			Spalte doppelklicken wird die Standardaktion für doppelklicks
			ausgeführt (Anzeige der Änderungen dieser Revision).
			</para>
			<warning>
			Da die Revisions-Properties (z.B. das svn:log Property für Log-Meldungen) 
			in Subversion nicht aufgezeichnet werden überschreiben Änderungen 
			den alten Wert für <emphasis>immer</emphasis>.
			</warning>
		</sect2>
	</sect1>
	<!-- ================================================================= -->
	<!-- ======================== SECTION 11 ============================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-branchtag">
		<title>Verzweigen / Markieren</title>
		<indexterm><primary>verzweigen</primary></indexterm>
		<indexterm><primary>markieren</primary></indexterm>
		<indexterm><primary>branch</primary></indexterm>
		<indexterm><primary>tag</primary></indexterm>
		<?dbhh topicname="HIDD_COPY"?>
		<?dbhh topicname="HIDD_SWITCH"?>
		<?dbhh topicname="HIDD_MERGE"?>
		<para>
		Eine der Funktionen von Versionskontrollsystemen ist die Möglichkeit
		bestimmte isolierte Änderungen auf einer separaten Entwicklungslinie
		zu machen. Solche Linien werden <literal>Zweige</literal> genannt.
		Zweige werden üblicherweise dazu benutzt, um neue Funktionen auszutesten
		ohne dadurch die normale Entwicklung am Projekt zu stören. Sobald dann
		eine solche neue Funktion stabil genug ist wird der Zweig mit dem
		Hauptstamm (<filename>trunk</filename>) zusammengeführt.
		</para>
		<para>
		Eine andere wichtige Funktion ist die Möglichkeit, bestimmte Zustände
		zu Markieren (z.B. eine Relese-Version), damit es jederzeit möglich ist
		diesen bestimmten Zustand jederzeit wieder herstellen zu können. Dieser
		Vorgang wird <literal>markieren</literal> genannt.
		</para>
		<para>
		Subversion kennt keinen speziellen Befehl für das Verzweigen oder
		Markieren. Subversion benutzt dafür stattdessen sogenannte 
		<literal>billige Kopien</literal>. Diese funktionieren ähnlich wie
		Links, d.h. es wird keine richtige Kopie erstellt sondern nur eine
		Verknüpfung auf eine bestimmte Revision.
		</para>
		<para>
		Wenn Sie beim Importieren die empfohlene Ordnerstruktur gewählt haben
		ist ein Verzweigen oder Markieren sehr einfach:
		<figure id="tsvn-DUG-branchtag-dia-1">
			<title>Der Verzweigen/Markieren Dialog</title>
			<graphic fileref="images/Copy.png"/>
		</figure>
		Wählen Sie den übergeordneten Ordner Ihrer Arbeitskopie und wählen
		Sie den Befehl <guimenuitem>Verzweigen/Markieren...</guimenuitem> im
		Kontextmenu. Geben Sie die URL des Projektarchivs ein, aber ändern Sie den
		Pfad von <filename>trunk</filename> in <filename>branches/Name_des_Zweigs
		</filename> um. Für Markierungen ändern Sie die URL in <filename>
		tags/Name_der_Markierung</filename> um. Wobei <filename>Name_der_Markierung
		</filename> z.B. <filename>Version_1.01</filename> ist.

<screen>
    C:/SVNRepository/trunk/ProjectName/...
    C:/SVNRepository/trunk/AnotherProject/...
    C:/SVNRepository/branches/ProjectName_SpecialDebugBuildBasedOn_v1.09/
    C:/SVNRepository/tags/ProjectName_v1.10
</screen>

		Wenn Sie nun <guibutton>OK</guibutton> klicken erstellt TortoiseSVN eine
		Verknüpfung von Ihrem gewählten Ordner und der aktuellen Revision
		im Zielordner des Projektarchivs. Es werden (noch) keine Änderungen an Ihrer
		Arbeitskopie vorgenommen.
		</para>
		<para>
		Nur im Falle, dass Sie bereits lokale Änderungen an Ihrer Arbeitskopie
		gemacht haben, welche Sie noch nicht übertragen haben wird TortoiseSVN
		diese ebenfalls mit dem Erstellen der Verknüpfung übertragen. Ansonsten
		wird wirklich nur eine Verknüpfung erstellt.
		</para>
		<para>
		Von jetzt an unterscheiden sich Zweige und Markierungen ein wenig:
		<itemizedlist>
			<listitem>
				<para>
				Wenn Sie eine Arbeitskopie, welche eine Markierung darstellt
				ändern und versuchen, diese Änderungen zu übertragen wird
				TortoiseSVN Sie warnen! Dies deshalb, weil Markierungen
				sich <emphasis>nicht</emphasis> ändern sollen. Schliesslich
				verlässt sich jeder darauf, dass eine Markierung <literal>
				Version_1.0</literal> auch immer genau diese Version
				darstellt und sich nicht mehr ändert.
				</para>
				<para>
				Falls Sie dennoch einmal Änderungen an einer markierten
				Version vornehmen müssen, erstellen Sie zunächst einen
				neuen Zweig von dieser Markierung aus und übertragen die
				Änderungen auf diesen Zweig. Sobald dann alle notwendigen
				Änderungen vorgenommen wurden, können Sie von diesem
				neuen Zweig wieder eine Markierung erstellen, z.B.
				<filename>Version_1.0.1</filename>.
				</para>
			</listitem>
			<listitem>
				<para>
				Wenn Sie eine Arbeitskopie, welche auf einen Zweig gewechselt
				wurde ändern und diese Änderungen übertragen, so gehen
				diese Änderungen auf den Zweig und <emphasis>nicht</emphasis>
				auf den Hauptstamm (<filename>trunk</filename>). 
				</para>
			</listitem>
		</itemizedlist>
		</para>
		<sect2 id="tsvn-DUG-switch-1">
			<title>Auschecken oder Wechseln Zu...</title>
			<para>
			...das ist hier (nicht wirklich) die Frage. Während beim Auschecken
			eine neue Arbeitskopie erstellt wird (z.B. des neu estellten Zweiges)
			verändert der Befehl <guimenuitem>Wechseln zu...</guimenuitem> Ihre
			bestenhende Arbeitskopie so dass diese genau wie auf dem erstellten
			Zweig aussieht. Dabei werden nur die Unterschiede zwischen Ihrer
			bestehenden Arbeitskopie und dem Zweig des Projektarchivs übertragen,
			was natürlich günstig für die Netzwerkauslastung und Ihre Geduld ist.
			</para>
			<para>
			Um nun auf dem frisch erstellten Zweig zu arbeiten haben Sie wie
			schon erwähnt zwei Möglichkeiten. Sie können:
			<itemizedlist>
				<listitem>
					<para>
					Führen Sie den Befehl <guimenuitem>Auschecken</guimenuitem>
					aus. Damit erstellen Sie eine separate Arbeitskopie
					für den Entwicklungszweig.
					</para>
				</listitem>
				<listitem>
					<para>
					Wechseln Sie Ihre Arbeitskopie auf den neuen Zweig. Dazu
					wählen Sie den obersten Ordner Ihrer Arbeitskopie und
					wählen dann den Befehl <guimenuitem>Wechseln zu ...</guimenuitem>
					aus dem Kontextmenu aus.
					</para>
					<para>
					Geben Sie im folgenden Dialog dann die URL des Zweiges an
					welchen Sie vorher erstellt haben. Lassen Sie die Checkbos
					<literal>neueste Revision</literal> aktiv und klicken Sie
					auf <guibutton>OK</guibutton>.
					</para>
				</listitem>
			</itemizedlist>
			<figure id="tsvn-DUG-switch-dia-1">
				<title>The Switch Dialog</title>
				<graphic fileref="images/Switch.png"/>
			</figure>	
			</para>
		</sect2>
		<sect2 id="tsvn-DUG-merge-2">
			<title>Einen Zweig mit dem Hauptstamm zusammenführen</title>
			<indexterm><primary>zusammenführen</primary></indexterm>
			<indexterm><primary>mischen</primary></indexterm>
			<indexterm><primary>merge</primary></indexterm>
			<para>
				<figure id="tsvn-DUG-merge-dia-1">
					<title>Der Zusammenführen Dialog</title>
					<graphic fileref="images/Merge.png"/>
				</figure>
				Um Änderungen aus einem Zweig mit dem Hauptstamm zusammenzuführen 
				benötigen Sie zuerst eine Arbeitskopie des Hauptstamms.
				Wählen Sie dann <menuchoice><guimenuitem>Zusammenführen...</guimenuitem>
				</menuchoice> aus dem Kontextmenu.
				<orderedlist>
					<listitem>
						<para>
						Im Feld <guilabel>Aktuellen Zweig zusammenführen mit:</guilabel>
						geben Sie die vollständige URL des Zweiges welcher die
						Änderungen enthält ein. Sie können auch die 
            <guibutton>...</guibutton> 
            Schaltfläche verwenden um das Projektarchiv nach dem Zweig zu durchsuchen.
						</para>
					</listitem>
					<listitem>
						<para>
						Im Feld <guilabel>Von Revision</guilabel>geben Sie die
						Start-Revision ein. Dies ist die Revisionsnummer
						<emphasis>vor</emphasis> der Änderung welche Sie
						zusammenführen möchten. Zum Beispiel:
						<screen>
Rev Log-Meldungen
39. Arbeite an MyBranch
38. Arbeite an trunk
37. Arbeite an MyBranch
36. Erstelle den Zweig MyBranch
35. Arbeite an trunk
34. Arbeite an trunk
         ...
						</screen>
						Wenn Sie nun die Änderungen von MyBranch in den Hauptstamm
						(trunk) zurückführen möchten müssen Sie 36 in das <guilabel>
						Von Revision:</guilabel> Feld eingeben, und nicht etwa
						37 wie Sie vielleicht denken.
						</para>
						<para>
						Klicken Sie <guibutton>Suche</guibutton> wenn Sie in
						den Log-Meldungen nach der benötigten Revisionsnummer
						suchen möchten. Diese Revisionsnummer wird wahrscheinlich
						nie 0 sein!
						</para>
					</listitem>
					<listitem>
						<para>
						Im Feld <guilabel>Zu Revision</guilabel> geben Sie die 
						die Endrevision der Änderung(en) ein. Sie können auch
						einzelne Revisionen zusammenführen, dies muss nicht HEAD sein!
						</para>
					</listitem>
					<listitem>
						<para>
						Klicken Sie auf <guibutton>OK</guibutton> um den 
						Vorgang zu starten. Wenn Sie dann die Änderungen
						zum Projektarchiv übertragen wollen, erwähnen Sie in der
						Log-Meldung welche Revisionen Sie von welchem Zweig
						zusammengeführt haben! Auf diese Weise können Sie später nachlesen,
						welche Revisionen Sie bereits zusammengeführt haben und welche
						noch nicht. Dies ist notwendig, da ein nochmaliges
						Zusammenführen einer bereits zusammengeführten Revision zu einem
						Konflikt führt.
					</para>
					</listitem>
				</orderedlist>
				Der Vorgang ist nun abgeschlossen. Sie sollten nun ihre
				Arbeitskopie überprüfen, ob alles so ist wie erwartet. Das
				Zusammenführen ist normalerweise recht aufwendig und kompliziert.
				Zum Beispiel können Konflikte auftreten wenn der Zweig sich
				schon zu weit vom Hauptast entfernt hat.
				<important>
				<para>
				Subversion kann nicht eine Datei mit einem Ordner zusammenführen und
				umgekehrt. Nur Ordner mit Ordner und Dateien mit Dateien können
				zusammengeführt werden. Wenn Sie auf eine Datei klicken und den 
        Zusammenführen Dialog aufrufen, dann müssen Sie eine URL zu einer 
        Datei im Dialog eingeben.
				</para>
				</important>
			</para>
		</sect2>
	</sect1>
	<!-- ================================================================= -->
	<!-- ======================== SECTION 12 ============================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-relocate">
		<title>Arbeitskopie umplazieren</title>
		<indexterm><primary>umplazieren</primary></indexterm>
		<indexterm><primary>relocate</primary></indexterm>
		<?dbhh topicname="HIDD_RELOCATE"?>
		<para>
			<figure id="tsvn-DUG-relocate-dia-1">
				<title>Der Umplazieren Dialog</title>
				<graphic fileref="images/Relocate.png"/>
			</figure>
		Sollte die URL Ihres Projektarchivs sich geändert haben (z.B. DNS-Eintrag
		des Servers hat sich geändert), so müssen Sie nicht erneut eine ganze
		Arbeitskopie aus dem Projektarchiv auschecken. Es reicht wenn Sie den
		Befehl <guimenuitem>Umplazieren...</guimenuitem> ausführen und die
		neue URL angeben.
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ======================== SECTION 13 ============================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-settings">
		<title>TortoiseSVN's Einstellungen</title>
		<indexterm><primary>Einstellungen</primary></indexterm>
		<indexterm><primary>settings</primary></indexterm>
		<?dbhh topicname="HIDD_SETTINGSMAIN"?>
		<?dbhh topicname="HIDD_SETTINGSMENU"?>
		<?dbhh topicname="HIDD_SETTINGSOVERLAY"?>
		<?dbhh topicname="HIDD_SETTINGSPROXY"?>
		<?dbhh topicname="HIDD_SETTINGSPROGS"?>
		<sect2 id="tsvn-DUG-settings-main">
			<title>Der Einstellungsdialog, Hauptseite</title>
			<para>
				<figure id="tsvn-DUG-settings-dia-1">
					<title>Der Einstellungsdialog, Hauptseite</title>
					<graphic fileref="images/SettingsMain.png"/>
				</figure>

		Abgesehen von der bevorzugten Sprache erlaubt dieser Dialog es Ihnen,
		(fast) alle Einstellungen von TortoiseSVN zu ändern.
		</para>
		<para>
		Um zusätzliche Hilfe für bestimmte Einstellungen zu erhalten lassen
		Sie den Mauszeiger eine Sekunde lang über den Eingabefeldern, Checkboxen, ...
		und es wird ein kleiner Tip erscheinen.
		</para>
		</sect2>
		<sect2 id="tsvn-DUG-settings-overlay">
			<title>Der Einstellungsdialog, Overlayseite</title>
			<para>
				<figure id="tsvn-DUG-settings-dia-2">
					<title>Der Einstellungsdialog, Overlayseite</title>
					<graphic fileref="images/SettingsOverlay.png"/>
				</figure>
				
			Diese Seite stellt ein, wie die überlagerten Icons angezeigt werden
			sollen. Für den Fall, dass der Explorer zu langsam reagiert 
			deaktivieren Sie die Einstellung <literal>Zeige veränderte Ordner</literal>.
			</para>
		</sect2>
		<sect2 id="tsvn-DUG-settings-menu">
			<title>Der Einstellungsdialog, Kontextmenuseite</title>
			<para>
				<figure id="tsvn-DUG-settings-dia-3">
					<title>Der Einstellungsdialog, Kontextmenuseite</title>
					<graphic fileref="images/SettingsMenu.png"/>
				</figure>
			Auf dieser Seite können Sie angeben, welche Befehle im 
			Hauptkontextmenu des Explorer angezeigt werden sollen und welche
			Sie lieber im Untermenu haben wollen.
			</para>
		</sect2>
		<sect2 id="tsvn-DUG-settings-network">
			<title>Der Einstellungsdialog, Netzwerkseite</title>
			<indexterm><primary>Proxy-Server</primary></indexterm>
			<para>
				<figure id="tsvn-DUG-settings-dia-4">
					<title>Der Einstellungsdialog, Netzwerkseite</title>
					<graphic fileref="images/SettingsProxy.png"/>
				</figure>
			Hier können Sie Einstellungen für einen Proxyserver vornehmen,
			sofern Sie einen solchen überhaupt benutzen.
			</para>
			<para>
			Sie können hier auch angeben, welche Programm TortoiseSVN benutzen
			soll für eine sichere Verbindung zum Projektarchiv via SSH.
			</para>
		</sect2>
		<sect2 id="tsvn-DUG-settings-progs">
			<title>Der Einstellungsdialog, Diff/Merge Seite</title>
			<para>
				<figure id="tsvn-DUG-settings-dia-5">
					<title>Der Einstellungsdialog, Diff/Merge Seite</title>
					<graphic fileref="images/SettingsProgs.png"/>
				</figure>
		Setzen Sie hier die Diff/Merge Programme fest welche TortoiseSVN benutzen
		soll. Wenn Sie die Felder leer lassen, wird TortoiseMerge benutzt.
		</para>
		<para>
			<figure id="tsvn-DUG-settings-dia-6">
				<title>Der Einstellungsdialog, Diff/Merge Spezialdialog</title>
				<graphic fileref="images/SettingsProgsAdv.png"/>
			</figure>
		Sie können für jede Dateiendung ein eigenes Merge-Programm angeben, wenn
		Sie möchten.
		</para>
		</sect2>
	</sect1>
	<!-- ================================================================= -->
	<!-- ======================== SECTION 14 ============================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-blame">
		<title>Wer hat welche Zeile geändert?</title>
		<indexterm><primary>Blame</primary></indexterm>
		<?dbhh topicname="HIDD_BLAME"?>
		<para>
			<figure id="tsvn-DUG-blame-dia-1">
				<title>Der Blame Dialog</title>
				<graphic fileref="images/BlameDialog.png"/>
			</figure>
		Manchmal möchten Sie nicht nur erfahren, welche Zeilen sich zwischen
		verschiedenen Revisionen geändert haben sondern auch, wer genau für
		welche Zeile in einer Datei verantwortlich ist. Dazu gibt es den
		Befehl <guimenuitem>Blame...</guimenuitem>.
		</para>
		<para>
		Dieser Befehl listet für jede Zeile einer Datei den Author und die
		Revision auf, in welcher dieser Zeile zum letzten Male geändert wurde.
		</para>
		<para>
		Sobald Sie auf <guibutton>OK</guibutton> klicken beginnt TortoiseSVN
		mit der Analyse der Daten dieser Datei. Beachten Sie bitte: dies kann
		mehrere Minuten dauern, je nach nachdem wie schnell Ihre Verbindung
		zum Projektarchiv ist. Sobald der TortoiseSVN mit der Analyse fertig ist
		wird der standard Texteditor gestartet und die das Ergebnis der Analyse
		angezeigt.
		</para>
		<para>
		Das Beispiel zeigt die ersten dreissig Zeilen der Datei
		<filename>/Subversion/include/svn_io.h</filename> der Revision 7566
		des Subversion Projektes. Für jede Zeile wird gezeigt:
		<literal>Zeilennummer</literal>, 
		<literal>Revision der letzen Änderung</literal>, 
		<literal>Datum der letzten Änderung</literal>, der  
		<literal>Author</literal> und natürlich
		<literal>die eigentliche Zeile der Datei</literal>.
<screen>
line   rev    date                 author     content 

     0   4127 03:03:39, 15.12.2002 rooneg     /** 
     1   4127 03:03:39, 15.12.2002 rooneg      * @copyright 
     2   1224 21:24:10, 08.02.2002 kfogel      * ==================================================================== 
     3   4233 02:28:10, 03.01.2003 blair       * Copyright (c) 2000-2003 CollabNet.  All rights reserved. 
     4      1 06:24:14, 31.08.2001 svn         * 
     5      1 06:24:14, 31.08.2001 svn         * This software is licensed as described in the file COPYING, which 
     6      1 06:24:14, 31.08.2001 svn         * you should have received as part of this distribution.  The terms 
     7      1 06:24:14, 31.08.2001 svn         * are also available at http://subversion.tigris.org/license-1.html. 
     8      1 06:24:14, 31.08.2001 svn         * If newer versions of this license are posted there, you may use a 
     9      1 06:24:14, 31.08.2001 svn         * newer version instead, at your option. 
    10      1 06:24:14, 31.08.2001 svn         * 
    11      1 06:24:14, 31.08.2001 svn         * This software consists of voluntary contributions made by many 
    12      1 06:24:14, 31.08.2001 svn         * individuals.  For exact contribution history, see the revision 
    13      1 06:24:14, 31.08.2001 svn         * history and logs, available at http://subversion.tigris.org/. 
    14      1 06:24:14, 31.08.2001 svn         * ==================================================================== 
    15   4127 03:03:39, 15.12.2002 rooneg      * @endcopyright 
    16   4127 03:03:39, 15.12.2002 rooneg      * 
    17   4127 03:03:39, 15.12.2002 rooneg      * @file svn_io.h 
    18   4127 03:03:39, 15.12.2002 rooneg      * @brief general Subversion I/O definitions 
    19      1 06:24:14, 31.08.2001 svn         */ 
    20      1 06:24:14, 31.08.2001 svn         
    21      1 06:24:14, 31.08.2001 svn        /* ==================================================================== */ 
    22      1 06:24:14, 31.08.2001 svn         
    23      1 06:24:14, 31.08.2001 svn         
    24      1 06:24:14, 31.08.2001 svn        #ifndef SVN_IO_H 
    25      1 06:24:14, 31.08.2001 svn        #define SVN_IO_H 
    26      1 06:24:14, 31.08.2001 svn         
    27      1 06:24:14, 31.08.2001 svn        #include &lt;apr.h&gt;
    28      1 06:24:14, 31.08.2001 svn        #include &lt;apr_pools.h&gt;
    29      1 06:24:14, 31.08.2001 svn        #include &lt;apr_file_io.h&gt;
    30    303 03:26:32, 25.10.2001 cmpilato   #include &lt;apr_thread_proc.h&gt;
</screen>
		</para>
	</sect1>
	<!-- ================================================================= -->
	<!-- ======================== SECTION 15 ============================= -->
	<!-- ================================================================= -->
	<sect1 id="tsvn-DUG-donate">
		<title>Letzter Schritt</title>
		<para>
		Wenn Sie TortoiseSVN mögen und es oft benutzen, unterstützen Sie bitte
		die Entwickler!
		</para>
		<para>
		Sie können uns auf viele Weise helfen: Sie können uns Patches schicken
		und damit bei der Entwicklung direkt mithelfen, oder Sie können uns
		bei unserer Arbeit motivieren.
		</para>
		<para>
		Während wir an TortoiseSVN arbeiten hören wir gerne Musik. Und weil wir
		viele viele Stunden an TortoiseSVN arbeiten, benötigen wir immer wieder
		neue Musik. Aus diesem Grund haben wir im Internet Seiten eingerichtet,
		von wo aus Sie uns Musik-CD's und auch mal eine DVD schenken können:
		<itemizedlist>
			<listitem>
				<para>Die Wunschliste von Stefan ist 
					<ulink url="http://www.amazon.com/o/registry/17DKTOSXX1KJK">
						hier</ulink> (English) oder 
					<ulink url="http://www.amazon.de/exec/obidos/wishlist/26JA3LXZXY4TB/">
					hier</ulink> (Deutsch).
				</para>
			</listitem>
			<listitem>
				<para>Lübbe hat ebenfalls eine 
					<ulink url="href=http://amazon.com/gp/registry/13DTTC8JF4UD5">englische (Amazon.com)</ulink> und eine
					<ulink url="href=http://www.amazon.de/exec/obidos/wishlist/3IKWLV2U0TVUA/">deutsche (Amazon.de)</ulink> Wunschliste.
				</para>
			</listitem>
		</itemizedlist>
		</para>
	</sect1>
</chapter>
